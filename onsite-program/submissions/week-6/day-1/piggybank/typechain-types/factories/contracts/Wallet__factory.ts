/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Wallet, WalletInterface } from "../../contracts/Wallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum Wallet.AccountType",
        name: "_accountType",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "INVALID_ACCOUNT_TYPE",
    type: "error",
  },
  {
    inputs: [],
    name: "_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accountType",
    outputs: [
      {
        internalType: "enum Wallet.AccountType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "walletId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610ce4380380610ce4833981810160405281019061003291906102ea565b6000600281111561004657610045610359565b5b81600281111561005957610058610359565b5b03610090576040517f56ee43a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600090816100e0919061059f565b5080600260006101000a81548160ff0219169083600281111561010657610105610359565b5b021790555082600381905550505050610671565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6101418161012e565b811461014c57600080fd5b50565b60008151905061015e81610138565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101b78261016e565b810181811067ffffffffffffffff821117156101d6576101d561017f565b5b80604052505050565b60006101e961011a565b90506101f582826101ae565b919050565b600067ffffffffffffffff8211156102155761021461017f565b5b61021e8261016e565b9050602081019050919050565b60005b8381101561024957808201518184015260208101905061022e565b60008484015250505050565b6000610268610263846101fa565b6101df565b90508281526020810184848401111561028457610283610169565b5b61028f84828561022b565b509392505050565b600082601f8301126102ac576102ab610164565b5b81516102bc848260208601610255565b91505092915050565b600381106102d257600080fd5b50565b6000815190506102e4816102c5565b92915050565b60008060006060848603121561030357610302610124565b5b60006103118682870161014f565b935050602084015167ffffffffffffffff81111561033257610331610129565b5b61033e86828701610297565b925050604061034f868287016102d5565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806103da57607f821691505b6020821081036103ed576103ec610393565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026104557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610418565b61045f8683610418565b95508019841693508086168417925050509392505050565b6000819050919050565b600061049c6104976104928461012e565b610477565b61012e565b9050919050565b6000819050919050565b6104b683610481565b6104ca6104c2826104a3565b848454610425565b825550505050565b600090565b6104df6104d2565b6104ea8184846104ad565b505050565b5b8181101561050e576105036000826104d7565b6001810190506104f0565b5050565b601f82111561055357610524816103f3565b61052d84610408565b8101602085101561053c578190505b61055061054885610408565b8301826104ef565b50505b505050565b600082821c905092915050565b600061057660001984600802610558565b1980831691505092915050565b600061058f8383610565565b9150826002028217905092915050565b6105a882610388565b67ffffffffffffffff8111156105c1576105c061017f565b5b6105cb82546103c2565b6105d6828285610512565b600060209050601f83116001811461060957600084156105f7578287015190505b6106018582610583565b865550610669565b601f198416610617866103f3565b60005b8281101561063f5784890151825560018201915060208501945060208101905061061a565b8683101561065c5784890151610658601f891682610565565b8355505b6001600288020188555050505b505050505050565b610664806106806000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806347e7ef241461005c57806395eec3c91461008c578063b69ef8a8146100aa578063c162ba2f146100c8578063d28d8852146100e6575b600080fd5b610076600480360381019061007191906102f6565b610104565b6040516100839190610351565b60405180910390f35b6100946101b0565b6040516100a191906103e3565b60405180910390f35b6100b26101c3565b6040516100bf919061040d565b60405180910390f35b6100d06101c9565b6040516100dd919061040d565b60405180910390f35b6100ee6101cf565b6040516100fb91906104b8565b60405180910390f35b60008083905060008173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb30866040518363ffffffff1660e01b81526004016101479291906104e9565b6020604051808303816000875af1158015610166573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018a919061053e565b9050836001600082825461019e919061059a565b92505081905550809250505092915050565b600260009054906101000a900460ff1681565b60015481565b60035481565b600080546101dc906105fd565b80601f0160208091040260200160405190810160405280929190818152602001828054610208906105fd565b80156102555780601f1061022a57610100808354040283529160200191610255565b820191906000526020600020905b81548152906001019060200180831161023857829003601f168201915b505050505081565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061028d82610262565b9050919050565b61029d81610282565b81146102a857600080fd5b50565b6000813590506102ba81610294565b92915050565b6000819050919050565b6102d3816102c0565b81146102de57600080fd5b50565b6000813590506102f0816102ca565b92915050565b6000806040838503121561030d5761030c61025d565b5b600061031b858286016102ab565b925050602061032c858286016102e1565b9150509250929050565b60008115159050919050565b61034b81610336565b82525050565b60006020820190506103666000830184610342565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106103ac576103ab61036c565b5b50565b60008190506103bd8261039b565b919050565b60006103cd826103af565b9050919050565b6103dd816103c2565b82525050565b60006020820190506103f860008301846103d4565b92915050565b610407816102c0565b82525050565b600060208201905061042260008301846103fe565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610462578082015181840152602081019050610447565b60008484015250505050565b6000601f19601f8301169050919050565b600061048a82610428565b6104948185610433565b93506104a4818560208601610444565b6104ad8161046e565b840191505092915050565b600060208201905081810360008301526104d2818461047f565b905092915050565b6104e381610282565b82525050565b60006040820190506104fe60008301856104da565b61050b60208301846103fe565b9392505050565b61051b81610336565b811461052657600080fd5b50565b60008151905061053881610512565b92915050565b6000602082840312156105545761055361025d565b5b600061056284828501610529565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105a5826102c0565b91506105b0836102c0565b92508282019050808211156105c8576105c761056b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061061557607f821691505b602082108103610628576106276105ce565b5b5091905056fea26469706673582212204ae304f599b80bc00a263585d8b7a384b0b7f65478249e187c1bda98875daa8b64736f6c634300081c0033";

type WalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Wallet__factory extends ContractFactory {
  constructor(...args: WalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    id: BigNumberish,
    name: string,
    _accountType: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(id, name, _accountType, overrides || {});
  }
  override deploy(
    id: BigNumberish,
    name: string,
    _accountType: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(id, name, _accountType, overrides || {}) as Promise<
      Wallet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Wallet__factory {
    return super.connect(runner) as Wallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WalletInterface {
    return new Interface(_abi) as WalletInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Wallet {
    return new Contract(address, _abi, runner) as unknown as Wallet;
  }
}
