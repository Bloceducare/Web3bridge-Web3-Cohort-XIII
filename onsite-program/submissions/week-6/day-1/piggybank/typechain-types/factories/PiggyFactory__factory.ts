/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { PiggyFactory, PiggyFactoryInterface } from "../PiggyFactory";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum Wallet.AccountType",
        name: "accountType",
        type: "uint8",
      },
    ],
    name: "createWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getAllUserWallets",
    outputs: [
      {
        internalType: "contract Wallet[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b9e8061005f6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80632e252a5b1461003b5780635721a2fd14610057575b600080fd5b6100556004803603810190610050919061049b565b610087565b005b610071600480360381019061006c9190610555565b610242565b60405161007e9190610690565b60405180910390f35b60006001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546100d591906106eb565b83836040516100e39061030f565b6100ef93929190610824565b604051809103906000f08015801561010b573d6000803e3d6000fd5b509050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546101fa91906106eb565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561030357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116102b9575b50505050509050919050565b6103068061086383390190565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103838261033a565b810181811067ffffffffffffffff821117156103a2576103a161034b565b5b80604052505050565b60006103b561031c565b90506103c1828261037a565b919050565b600067ffffffffffffffff8211156103e1576103e061034b565b5b6103ea8261033a565b9050602081019050919050565b82818337600083830152505050565b6000610419610414846103c6565b6103ab565b90508281526020810184848401111561043557610434610335565b5b6104408482856103f7565b509392505050565b600082601f83011261045d5761045c610330565b5b813561046d848260208601610406565b91505092915050565b6003811061048357600080fd5b50565b60008135905061049581610476565b92915050565b600080604083850312156104b2576104b1610326565b5b600083013567ffffffffffffffff8111156104d0576104cf61032b565b5b6104dc85828601610448565b92505060206104ed85828601610486565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610522826104f7565b9050919050565b61053281610517565b811461053d57600080fd5b50565b60008135905061054f81610529565b92915050565b60006020828403121561056b5761056a610326565b5b600061057984828501610540565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b60006105d36105ce6105c9846104f7565b6105ae565b6104f7565b9050919050565b60006105e5826105b8565b9050919050565b60006105f7826105da565b9050919050565b610607816105ec565b82525050565b600061061983836105fe565b60208301905092915050565b6000602082019050919050565b600061063d82610582565b610647818561058d565b93506106528361059e565b8060005b8381101561068357815161066a888261060d565b975061067583610625565b925050600181019050610656565b5085935050505092915050565b600060208201905081810360008301526106aa8184610632565b905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006106f6826106b2565b9150610701836106b2565b9250828201905080821115610719576107186106bc565b5b92915050565b610728816106b2565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561076857808201518184015260208101905061074d565b60008484015250505050565b600061077f8261072e565b6107898185610739565b935061079981856020860161074a565b6107a28161033a565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106107ed576107ec6107ad565b5b50565b60008190506107fe826107dc565b919050565b600061080e826107f0565b9050919050565b61081e81610803565b82525050565b6000606082019050610839600083018661071f565b818103602083015261084b8185610774565b905061085a6040830184610815565b94935050505056fe608060405234801561001057600080fd5b506040516103063803806103068339818101604052810190610032919061024a565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506102b9565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6100a18161008e565b81146100ac57600080fd5b50565b6000815190506100be81610098565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610117826100ce565b810181811067ffffffffffffffff82111715610136576101356100df565b5b80604052505050565b600061014961007a565b9050610155828261010e565b919050565b600067ffffffffffffffff821115610175576101746100df565b5b61017e826100ce565b9050602081019050919050565b60005b838110156101a957808201518184015260208101905061018e565b60008484015250505050565b60006101c86101c38461015a565b61013f565b9050828152602081018484840111156101e4576101e36100c9565b5b6101ef84828561018b565b509392505050565b600082601f83011261020c5761020b6100c4565b5b815161021c8482602086016101b5565b91505092915050565b6003811061023257600080fd5b50565b60008151905061024481610225565b92915050565b60008060006060848603121561026357610262610084565b5b6000610271868287016100af565b935050602084015167ffffffffffffffff81111561029257610291610089565b5b61029e868287016101f7565b92505060406102af86828701610235565b9150509250925092565b603f806102c76000396000f3fe6080604052600080fdfea264697066735822122021ec9833edb9011664143173d5a18d29b49468683dec00ed2fe0e3fdc90f940264736f6c634300081c0033a2646970667358221220e52ce4efda773de5196d6d8ee31e6d9b36c2f4d90dcecdc87ae3654246b2531364736f6c634300081c0033";

type PiggyFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PiggyFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PiggyFactory__factory extends ContractFactory {
  constructor(...args: PiggyFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PiggyFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PiggyFactory__factory {
    return super.connect(runner) as PiggyFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PiggyFactoryInterface {
    return new Interface(_abi) as PiggyFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PiggyFactory {
    return new Contract(address, _abi, runner) as unknown as PiggyFactory;
  }
}
