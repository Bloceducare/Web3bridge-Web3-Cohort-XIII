/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../common";
import type { PiggyBank, PiggyBankInterface } from "../../contracts/PiggyBank";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockDuration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_factoryAdmin",
        type: "address",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryAdmin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lockPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040516115eb3803806115eb833981810160405281019061002591906103af565b61003f67e42dbd883c706c7960c01b61031360201b60201c565b61005967a54a285c3d0be96460c01b61031360201b60201c565b846000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100b367decb19ac6af4662b60c01b61031360201b60201c565b83600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061010e67e592ae856dbcbb2e60c01b61031360201b60201c565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061016967e7a2de9ec188204a60c01b61031360201b60201c565b81426101759190610459565b60028190555061019567d28dfff7dfb7317b60c01b61031360201b60201c565b6101af67f47eb143e90e472860c01b61031360201b60201c565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036102cd576101fd67ff33ccb41438ed3d60c01b61031360201b60201c565b610217674e49f1194f21dd1860c01b61031360201b60201c565b6102316799561394e18f726360c01b61031360201b60201c565b61024b67c886ffa0b1fbec6560c01b61031360201b60201c565b82341461028d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610284906104ea565b60405180910390fd5b6102a7673a7a2a0b46819b3c60c01b61031360201b60201c565b6102c167ceb6c4f2433acc3c60c01b61031360201b60201c565b34600481905550610309565b6102e767a3e175936d486ff560c01b61031360201b60201c565b61030167d291b510c5b362fb60c01b61031360201b60201c565b826004819055505b505050505061050a565b50565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103468261031b565b9050919050565b6103568161033b565b811461036157600080fd5b50565b6000815190506103738161034d565b92915050565b6000819050919050565b61038c81610379565b811461039757600080fd5b50565b6000815190506103a981610383565b92915050565b600080600080600060a086880312156103cb576103ca610316565b5b60006103d988828901610364565b95505060206103ea88828901610364565b94505060406103fb8882890161039a565b935050606061040c8882890161039a565b925050608061041d88828901610364565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061046482610379565b915061046f83610379565b92508282019050808211156104875761048661042a565b5b92915050565b600082825260208201905092915050565b7f496e636f7272656374204554482073656e740000000000000000000000000000600082015250565b60006104d460128361048d565b91506104df8261049e565b602082019050919050565b60006020820190508181036000830152610503816104c7565b9050919050565b6110d2806105196000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b146101185780639d76ea5814610143578063b6b55f251461016e578063c80ec5221461018a5761007b565b806312065fe01461008057806317d8ec7f146100ab5780633ccfd60b146100d65780633fd8b02f146100ed575b600080fd5b34801561008c57600080fd5b506100956101b5565b6040516100a29190610c4a565b60405180910390f35b3480156100b757600080fd5b506100c06101fb565b6040516100cd9190610ca6565b60405180910390f35b3480156100e257600080fd5b506100eb610221565b005b3480156100f957600080fd5b50610102610951565b60405161010f9190610c4a565b60405180910390f35b34801561012457600080fd5b5061012d610957565b60405161013a9190610ca6565b60405180910390f35b34801561014f57600080fd5b5061015861097b565b6040516101659190610ca6565b60405180910390f35b61018860048036038101906101839190610cf2565b6109a1565b005b34801561019657600080fd5b5061019f610c1b565b6040516101ac9190610d3a565b60405180910390f35b60006101cb6731e47348052fdc3960c01b610c2e565b6101df674004f01d20c11b0d60c01b610c2e565b6101f36767823d9c11603e6f60c01b610c2e565b600454905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610235671ae69cff812dc96460c01b610c2e565b610249678097ad8571a18d5a60c01b610c2e565b61025d67f41697a2c604419c60c01b610c2e565b610271670247ec0f0ec7158e60c01b610c2e565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f690610db2565b60405180910390fd5b6103136711e3e6a68f6b1d7d60c01b610c2e565b61032767414e59987b05026160c01b610c2e565b61033b67f7ce37bc5ec09e9660c01b610c2e565b61034e6691e400922fbc7760c01b610c2e565b600360149054906101000a900460ff161561039e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161039590610e1e565b60405180910390fd5b6103b26755bb9b7f58a105a360c01b610c2e565b6103c66741b10e943172f0f560c01b610c2e565b6001600360146101000a81548160ff0219169083151502179055506103f567633db3e93a07477360c01b610c2e565b61040967dc8e7e6891249e3660c01b610c2e565b600061041f67c16de69b797e63b360c01b610c2e565b610433674716ef420cf9499560c01b610c2e565b6000600454905061044e67dba1699d1f02caf160c01b610c2e565b6104626753419a035d20a3e060c01b610c2e565b6002544210156104da57610480671e9f31392f412e3c60c01b610c2e565b61049467bbf3d70b1567b88460c01b610c2e565b606460036004546104a59190610e6d565b6104af9190610ede565b91506104c5676431ced42941237160c01b610c2e565b816004546104d39190610f0f565b90506104ef565b6104ee67df8bbdc113dd105d60c01b610c2e565b5b61050367f19f758700735d5960c01b610c2e565b600060048190555061051f671b5fdcb1a19c54d360c01b610c2e565b6105336736e50ae2735b8ebe60c01b610c2e565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361070d5761059d67599eba0ed9fdef6360c01b610c2e565b6105b1670e41a84b2fea787760c01b610c2e565b6105c56724fca81ea32e303e60c01b610c2e565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f1935050505015801561062b573d6000803e3d6000fd5b5061064067da9250b62e52bcc760c01b610c2e565b610654670d66bb2165039d6660c01b610c2e565b60008211156106f35761067167d29bea1f2e59823f60c01b610c2e565b610685672ed8c9350f4ae08660c01b610c2e565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156106ed573d6000803e3d6000fd5b50610708565b61070767c7d61289612a6fed60c01b610c2e565b5b61094d565b61072167d9fd8f5b9bc0d51160c01b610c2e565b61073567682cfdbdada1221360c01b610c2e565b610749674a8353a3542c960e60c01b610c2e565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610784673c3bd016ced3b26660c01b610c2e565b610798671ac28b206270921660c01b610c2e565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016107f3929190610f43565b6020604051808303816000875af1158015610812573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108369190610f98565b5061084b67ab448b79d02dc4b760c01b610c2e565b61085f67ce40b2c497cf793e60c01b610c2e565b60008311156109365761087c67092bbcdb14508eea60c01b610c2e565b610890675f937140315b547560c01b610c2e565b8073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856040518363ffffffff1660e01b81526004016108ed929190610f43565b6020604051808303816000875af115801561090c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109309190610f98565b5061094b565b61094a67facb7f00cefa68a360c01b610c2e565b5b505b5050565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6109b567beea3c5d6959844f60c01b610c2e565b6109c96774bcb5e9f99fdf8a60c01b610c2e565b6109dd673e28f3c298421fcc60c01b610c2e565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610b0b57610a476746d2bfe6afc6395d60c01b610c2e565b610a5b67a647ecffed0d38c660c01b610c2e565b610a6f67728b3e63964c8f4c60c01b610c2e565b610a8367796aaa55950cf14860c01b610c2e565b803414610ac5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abc90611011565b60405180910390fd5b610ad967bb8b8b34572ca47360c01b610c2e565b610aed67013594465ecc85bf60c01b610c2e565b3460046000828254610aff9190611031565b92505081905550610c18565b610b1f673c46f2537c45acc160c01b610c2e565b610b33676aca467e41360d5760c01b610c2e565b610b47677b038ff3221a149f60c01b610c2e565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610ba693929190611065565b6020604051808303816000875af1158015610bc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be99190610f98565b50610bfe6761655b1a2cd44a3c60c01b610c2e565b8060046000828254610c109190611031565b925050819055505b50565b600360149054906101000a900460ff1681565b50565b6000819050919050565b610c4481610c31565b82525050565b6000602082019050610c5f6000830184610c3b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c9082610c65565b9050919050565b610ca081610c85565b82525050565b6000602082019050610cbb6000830184610c97565b92915050565b600080fd5b610ccf81610c31565b8114610cda57600080fd5b50565b600081359050610cec81610cc6565b92915050565b600060208284031215610d0857610d07610cc1565b5b6000610d1684828501610cdd565b91505092915050565b60008115159050919050565b610d3481610d1f565b82525050565b6000602082019050610d4f6000830184610d2b565b92915050565b600082825260208201905092915050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b6000610d9c600983610d55565b9150610da782610d66565b602082019050919050565b60006020820190508181036000830152610dcb81610d8f565b9050919050565b7f416c72656164792077697468647261776e000000000000000000000000000000600082015250565b6000610e08601183610d55565b9150610e1382610dd2565b602082019050919050565b60006020820190508181036000830152610e3781610dfb565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e7882610c31565b9150610e8383610c31565b9250828202610e9181610c31565b91508282048414831517610ea857610ea7610e3e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ee982610c31565b9150610ef483610c31565b925082610f0457610f03610eaf565b5b828204905092915050565b6000610f1a82610c31565b9150610f2583610c31565b9250828203905081811115610f3d57610f3c610e3e565b5b92915050565b6000604082019050610f586000830185610c97565b610f656020830184610c3b565b9392505050565b610f7581610d1f565b8114610f8057600080fd5b50565b600081519050610f9281610f6c565b92915050565b600060208284031215610fae57610fad610cc1565b5b6000610fbc84828501610f83565b91505092915050565b7f496e636f7272656374204554482073656e740000000000000000000000000000600082015250565b6000610ffb601283610d55565b915061100682610fc5565b602082019050919050565b6000602082019050818103600083015261102a81610fee565b9050919050565b600061103c82610c31565b915061104783610c31565b925082820190508082111561105f5761105e610e3e565b5b92915050565b600060608201905061107a6000830186610c97565b6110876020830185610c97565b6110946040830184610c3b565b94935050505056fea26469706673582212200941012ab8465c8ba33c15fe0366d6d87ae3cf2abc2e27eac1a147369520d4a664736f6c634300081c0033";

type PiggyBankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PiggyBankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PiggyBank__factory extends ContractFactory {
  constructor(...args: PiggyBankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _tokenAddress: AddressLike,
    _amount: BigNumberish,
    _lockDuration: BigNumberish,
    _factoryAdmin: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _owner,
      _tokenAddress,
      _amount,
      _lockDuration,
      _factoryAdmin,
      overrides || {}
    );
  }
  override deploy(
    _owner: AddressLike,
    _tokenAddress: AddressLike,
    _amount: BigNumberish,
    _lockDuration: BigNumberish,
    _factoryAdmin: AddressLike,
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _owner,
      _tokenAddress,
      _amount,
      _lockDuration,
      _factoryAdmin,
      overrides || {}
    ) as Promise<
      PiggyBank & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PiggyBank__factory {
    return super.connect(runner) as PiggyBank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PiggyBankInterface {
    return new Interface(_abi) as PiggyBankInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PiggyBank {
    return new Contract(address, _abi, runner) as unknown as PiggyBank;
  }
}
