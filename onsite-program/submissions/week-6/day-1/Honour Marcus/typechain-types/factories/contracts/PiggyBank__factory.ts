/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { PiggyBank, PiggyBankInterface } from "../../contracts/PiggyBank";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "address",
        name: "_factoryOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "lockEndTime",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "planId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "earlyWithdrawal",
        type: "bool",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lockPeriod",
        type: "uint256",
      },
    ],
    name: "depositETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_lockPeriod",
        type: "uint256",
      },
    ],
    name: "depositToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "plans",
    outputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lockPeriod",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "withdrawn",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_planId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516119143803806119148339818101604052810190610032919061022b565b81600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c919061027a565b60405180910390fd5b6100b48161010460201b60201c565b506001808190555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610295565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f8826101cd565b9050919050565b610208816101ed565b811461021357600080fd5b50565b600081519050610225816101ff565b92915050565b60008060408385031215610242576102416101c8565b5b600061025085828601610216565b925050602061026185828601610216565b9150509250929050565b610274816101ed565b82525050565b600060208201905061028f600083018461026b565b92915050565b611670806102a46000396000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010757806399c6d2de14610132578063b16206161461015b578063f2fde38b1461019c5761007b565b80632e1a7d4d146100805780634273601c146100a95780635358fbda146100d4578063715018a6146100f0575b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a29190610f6e565b6101c5565b005b3480156100b557600080fd5b506100be610652565b6040516100cb9190610fdc565b60405180910390f35b6100ee60048036038101906100e99190610f6e565b610678565b005b3480156100fc57600080fd5b50610105610921565b005b34801561011357600080fd5b5061011c610935565b6040516101299190610fdc565b60405180910390f35b34801561013e57600080fd5b5061015960048036038101906101549190611023565b61095e565b005b34801561016757600080fd5b50610182600480360381019061017d9190610f6e565b610c98565b6040516101939594939291906110a0565b60405180910390f35b3480156101a857600080fd5b506101c360048036038101906101be91906110f3565b610d0b565b005b6101cd610935565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461023a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102319061117d565b60405180910390fd5b610242610d91565b6002805490508110610289576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610280906111e9565b60405180910390fd5b60006002828154811061029f5761029e611209565b5b906000526020600020906005020190508060040160009054906101000a900460ff1615610301576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f890611284565b60405180910390fd5b6000808260010154905082600201544210156103495760646003846001015461032a91906112d3565b6103349190611344565b91508183600101546103469190611375565b90505b60018360040160006101000a81548160ff021916908315150217905550600073ffffffffffffffffffffffffffffffffffffffff168360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361047d57600082111561043157600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015801561042f573d6000803e3d6000fd5b505b3373ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610477573d6000803e3d6000fd5b506105f0565b600082111561054c578260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016105079291906113a9565b6020604051808303816000875af1158015610526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054a91906113fe565b505b8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016105ab9291906113a9565b6020604051808303816000875af11580156105ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105ee91906113fe565b505b833373ffffffffffffffffffffffffffffffffffffffff167fb97e775637eca8401af330efee0810af7079bafae27761741e09caa14db8d272836000861160405161063c92919061142b565b60405180910390a350505061064f610dd7565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610680610935565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e49061117d565b60405180910390fd5b60003411610730576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610727906114a0565b60405180910390fd5b60005b6002805490508110156107b4576002818154811061075457610753611209565b5b90600052602060002090600502016003015482036107a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079e9061150c565b60405180910390fd5b8080600101915050610733565b50600081426107c3919061152c565b905060026040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200134815260200183815260200184815260200160001515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550505060016002805490506108ca9190611375565b3373ffffffffffffffffffffffffffffffffffffffff167f6a7b4b4de67d42edc5a43dd8bb598338e29e72e277cef089c6ad4ffe3aa610606000348560405161091593929190611560565b60405180910390a35050565b610929610de0565b6109336000610e67565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610966610935565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ca9061117d565b60405180910390fd5b6109db610d91565b60008211610a1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a15906115e3565b60405180910390fd5b60005b600280549050811015610aa25760028181548110610a4257610a41611209565b5b9060005260206000209060050201600301548203610a95576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8c9061150c565b60405180910390fd5b8080600101915050610a21565b508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401610ae093929190611603565b6020604051808303816000875af1158015610aff573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2391906113fe565b5060008142610b32919061152c565b905060026040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200183815260200184815260200160001515815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548160ff02191690831515021790555050506001600280549050610c389190611375565b3373ffffffffffffffffffffffffffffffffffffffff167f6a7b4b4de67d42edc5a43dd8bb598338e29e72e277cef089c6ad4ffe3aa61060868685604051610c8293929190611560565b60405180910390a350610c93610dd7565b505050565b60028181548110610ca857600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040160009054906101000a900460ff16905085565b610d13610de0565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610d855760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610d7c9190610fdc565b60405180910390fd5b610d8e81610e67565b50565b600260015403610dcd576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b60018081905550565b610de8610f2b565b73ffffffffffffffffffffffffffffffffffffffff16610e06610935565b73ffffffffffffffffffffffffffffffffffffffff1614610e6557610e29610f2b565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610e5c9190610fdc565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600080fd5b6000819050919050565b610f4b81610f38565b8114610f5657600080fd5b50565b600081359050610f6881610f42565b92915050565b600060208284031215610f8457610f83610f33565b5b6000610f9284828501610f59565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610fc682610f9b565b9050919050565b610fd681610fbb565b82525050565b6000602082019050610ff16000830184610fcd565b92915050565b61100081610fbb565b811461100b57600080fd5b50565b60008135905061101d81610ff7565b92915050565b60008060006060848603121561103c5761103b610f33565b5b600061104a8682870161100e565b935050602061105b86828701610f59565b925050604061106c86828701610f59565b9150509250925092565b61107f81610f38565b82525050565b60008115159050919050565b61109a81611085565b82525050565b600060a0820190506110b56000830188610fcd565b6110c26020830187611076565b6110cf6040830186611076565b6110dc6060830185611076565b6110e96080830184611091565b9695505050505050565b60006020828403121561110957611108610f33565b5b60006111178482850161100e565b91505092915050565b600082825260208201905092915050565b7f4e6f7420796f757220506967677942616e6b0000000000000000000000000000600082015250565b6000611167601283611120565b915061117282611131565b602082019050919050565b600060208201905081810360008301526111968161115a565b9050919050565b7f496e76616c696420706c616e0000000000000000000000000000000000000000600082015250565b60006111d3600c83611120565b91506111de8261119d565b602082019050919050565b60006020820190508181036000830152611202816111c6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f416c72656164792077697468647261776e000000000000000000000000000000600082015250565b600061126e601183611120565b915061127982611238565b602082019050919050565b6000602082019050818103600083015261129d81611261565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112de82610f38565b91506112e983610f38565b92508282026112f781610f38565b9150828204841483151761130e5761130d6112a4565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061134f82610f38565b915061135a83610f38565b92508261136a57611369611315565b5b828204905092915050565b600061138082610f38565b915061138b83610f38565b92508282039050818111156113a3576113a26112a4565b5b92915050565b60006040820190506113be6000830185610fcd565b6113cb6020830184611076565b9392505050565b6113db81611085565b81146113e657600080fd5b50565b6000815190506113f8816113d2565b92915050565b60006020828403121561141457611413610f33565b5b6000611422848285016113e9565b91505092915050565b60006040820190506114406000830185611076565b61144d6020830184611091565b9392505050565b7f4e6f204554482073656e74000000000000000000000000000000000000000000600082015250565b600061148a600b83611120565b915061149582611454565b602082019050919050565b600060208201905081810360008301526114b98161147d565b9050919050565b7f4c6f636b20706572696f64206d75737420626520756e69717565000000000000600082015250565b60006114f6601a83611120565b9150611501826114c0565b602082019050919050565b60006020820190508181036000830152611525816114e9565b9050919050565b600061153782610f38565b915061154283610f38565b925082820190508082111561155a576115596112a4565b5b92915050565b60006060820190506115756000830186610fcd565b6115826020830185611076565b61158f6040830184611076565b949350505050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b60006115cd600e83611120565b91506115d882611597565b602082019050919050565b600060208201905081810360008301526115fc816115c0565b9050919050565b60006060820190506116186000830186610fcd565b6116256020830185610fcd565b6116326040830184611076565b94935050505056fea264697066735822122059c2a5d782a627719d917af4f93d55bb6e12636741b7f65f6a49d8829fea55f364736f6c634300081e0033";

type PiggyBankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PiggyBankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PiggyBank__factory extends ContractFactory {
  constructor(...args: PiggyBankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _user: AddressLike,
    _factoryOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_user, _factoryOwner, overrides || {});
  }
  override deploy(
    _user: AddressLike,
    _factoryOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_user, _factoryOwner, overrides || {}) as Promise<
      PiggyBank & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PiggyBank__factory {
    return super.connect(runner) as PiggyBank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PiggyBankInterface {
    return new Interface(_abi) as PiggyBankInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PiggyBank {
    return new Contract(address, _abi, runner) as unknown as PiggyBank;
  }
}
