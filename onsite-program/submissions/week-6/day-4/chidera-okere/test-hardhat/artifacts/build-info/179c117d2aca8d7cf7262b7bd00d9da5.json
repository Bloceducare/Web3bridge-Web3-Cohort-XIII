{"id":"179c117d2aca8d7cf7262b7bd00d9da5","_format":"hh-sol-build-info-1","solcVersion":"0.8.28","solcLongVersion":"0.8.28+commit.7893614a","input":{"language":"Solidity","sources":{"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// solhint-disable-next-line interface-starts-with-i\ninterface VRFCoordinatorV2Interface {\n  /**\n   * @notice Get configuration relevant for making requests\n   * @return minimumRequestConfirmations global min for request confirmations\n   * @return maxGasLimit global max for request gas limit\n   * @return s_provingKeyHashes list of registered key hashes\n   */\n  function getRequestConfig() external view returns (uint16, uint32, bytes32[] memory);\n\n  /**\n   * @notice Request a set of random words.\n   * @param keyHash - Corresponds to a particular oracle job which uses\n   * that key for generating the VRF proof. Different keyHash's have different gas price\n   * ceilings, so you can select a specific one to bound your maximum per request cost.\n   * @param subId  - The ID of the VRF subscription. Must be funded\n   * with the minimum subscription balance required for the selected keyHash.\n   * @param minimumRequestConfirmations - How many blocks you'd like the\n   * oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n   * for why you may want to request more. The acceptable range is\n   * [minimumRequestBlockConfirmations, 200].\n   * @param callbackGasLimit - How much gas you'd like to receive in your\n   * fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n   * may be slightly less than this amount because of gas used calling the function\n   * (argument decoding etc.), so you may need to request slightly more than you expect\n   * to have inside fulfillRandomWords. The acceptable range is\n   * [0, maxGasLimit]\n   * @param numWords - The number of uint256 random values you'd like to receive\n   * in your fulfillRandomWords callback. Note these numbers are expanded in a\n   * secure way by the VRFCoordinator from a single random value supplied by the oracle.\n   * @return requestId - A unique identifier of the request. Can be used to match\n   * a request to a response in fulfillRandomWords.\n   */\n  function requestRandomWords(\n    bytes32 keyHash,\n    uint64 subId,\n    uint16 minimumRequestConfirmations,\n    uint32 callbackGasLimit,\n    uint32 numWords\n  ) external returns (uint256 requestId);\n\n  /**\n   * @notice Create a VRF subscription.\n   * @return subId - A unique subscription id.\n   * @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n   * @dev Note to fund the subscription, use transferAndCall. For example\n   * @dev  LINKTOKEN.transferAndCall(\n   * @dev    address(COORDINATOR),\n   * @dev    amount,\n   * @dev    abi.encode(subId));\n   */\n  function createSubscription() external returns (uint64 subId);\n\n  /**\n   * @notice Get a VRF subscription.\n   * @param subId - ID of the subscription\n   * @return balance - LINK balance of the subscription in juels.\n   * @return reqCount - number of requests for this subscription, determines fee tier.\n   * @return owner - owner of the subscription.\n   * @return consumers - list of consumer address which are able to use this subscription.\n   */\n  function getSubscription(\n    uint64 subId\n  ) external view returns (uint96 balance, uint64 reqCount, address owner, address[] memory consumers);\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @param newOwner - proposed new owner of the subscription\n   */\n  function requestSubscriptionOwnerTransfer(uint64 subId, address newOwner) external;\n\n  /**\n   * @notice Request subscription owner transfer.\n   * @param subId - ID of the subscription\n   * @dev will revert if original owner of subId has\n   * not requested that msg.sender become the new owner.\n   */\n  function acceptSubscriptionOwnerTransfer(uint64 subId) external;\n\n  /**\n   * @notice Add a consumer to a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - New consumer which can use the subscription\n   */\n  function addConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Remove a consumer from a VRF subscription.\n   * @param subId - ID of the subscription\n   * @param consumer - Consumer to remove from the subscription\n   */\n  function removeConsumer(uint64 subId, address consumer) external;\n\n  /**\n   * @notice Cancel a subscription\n   * @param subId - ID of the subscription\n   * @param to - Where to send the remaining LINK to\n   */\n  function cancelSubscription(uint64 subId, address to) external;\n\n  /*\n   * @notice Check to see if there exists a request commitment consumers\n   * for all consumers and keyhashes for a given sub.\n   * @param subId - ID of the subscription\n   * @return true if there exists at least one unfulfilled request for the subscription, false\n   * otherwise.\n   */\n  function pendingRequestExists(uint64 subId) external view returns (bool);\n}\n"},"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\n/** ****************************************************************************\n * @notice Interface for contracts using VRF randomness\n * *****************************************************************************\n * @dev PURPOSE\n *\n * @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n * @dev to Vera the verifier in such a way that Vera can be sure he's not\n * @dev making his output up to suit himself. Reggie provides Vera a public key\n * @dev to which he knows the secret key. Each time Vera provides a seed to\n * @dev Reggie, he gives back a value which is computed completely\n * @dev deterministically from the seed and the secret key.\n *\n * @dev Reggie provides a proof by which Vera can verify that the output was\n * @dev correctly computed once Reggie tells it to her, but without that proof,\n * @dev the output is indistinguishable to her from a uniform random sample\n * @dev from the output space.\n *\n * @dev The purpose of this contract is to make it easy for unrelated contracts\n * @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n * @dev simple access to a verifiable source of randomness. It ensures 2 things:\n * @dev 1. The fulfillment came from the VRFCoordinator\n * @dev 2. The consumer contract implements fulfillRandomWords.\n * *****************************************************************************\n * @dev USAGE\n *\n * @dev Calling contracts must inherit from VRFConsumerBase, and can\n * @dev initialize VRFConsumerBase's attributes in their constructor as\n * @dev shown:\n *\n * @dev   contract VRFConsumer {\n * @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n * @dev       VRFConsumerBase(_vrfCoordinator) public {\n * @dev         <initialization with other arguments goes here>\n * @dev       }\n * @dev   }\n *\n * @dev The oracle will have given you an ID for the VRF keypair they have\n * @dev committed to (let's call it keyHash). Create subscription, fund it\n * @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n * @dev subscription management functions).\n * @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n * @dev callbackGasLimit, numWords),\n * @dev see (VRFCoordinatorInterface for a description of the arguments).\n *\n * @dev Once the VRFCoordinator has received and validated the oracle's response\n * @dev to your request, it will call your contract's fulfillRandomWords method.\n *\n * @dev The randomness argument to fulfillRandomWords is a set of random words\n * @dev generated from your requestId and the blockHash of the request.\n *\n * @dev If your contract could have concurrent requests open, you can use the\n * @dev requestId returned from requestRandomWords to track which response is associated\n * @dev with which randomness request.\n * @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n * @dev if your contract could have multiple requests in flight simultaneously.\n *\n * @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n * @dev differ.\n *\n * *****************************************************************************\n * @dev SECURITY CONSIDERATIONS\n *\n * @dev A method with the ability to call your fulfillRandomness method directly\n * @dev could spoof a VRF response with any random value, so it's critical that\n * @dev it cannot be directly called by anything other than this base contract\n * @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n *\n * @dev For your users to trust that your contract's random behavior is free\n * @dev from malicious interference, it's best if you can write it so that all\n * @dev behaviors implied by a VRF response are executed *during* your\n * @dev fulfillRandomness method. If your contract must store the response (or\n * @dev anything derived from it) and use it later, you must ensure that any\n * @dev user-significant behavior which depends on that stored value cannot be\n * @dev manipulated by a subsequent VRF request.\n *\n * @dev Similarly, both miners and the VRF oracle itself have some influence\n * @dev over the order in which VRF responses appear on the blockchain, so if\n * @dev your contract could have multiple VRF requests in flight simultaneously,\n * @dev you must ensure that the order in which the VRF responses arrive cannot\n * @dev be used to manipulate your contract's user-significant behavior.\n *\n * @dev Since the block hash of the block which contains the requestRandomness\n * @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n * @dev miner could, in principle, fork the blockchain to evict the block\n * @dev containing the request, forcing the request to be included in a\n * @dev different block with a different hash, and therefore a different input\n * @dev to the VRF. However, such an attack would incur a substantial economic\n * @dev cost. This cost scales with the number of blocks the VRF oracle waits\n * @dev until it calls responds to a request. It is for this reason that\n * @dev that you can signal to an oracle you'd like them to wait longer before\n * @dev responding to the request (however this is not enforced in the contract\n * @dev and so remains effective only in the case of unmodified oracle software).\n */\nabstract contract VRFConsumerBaseV2 {\n  error OnlyCoordinatorCanFulfill(address have, address want);\n  // solhint-disable-next-line chainlink-solidity/prefix-immutable-variables-with-i\n  address private immutable vrfCoordinator;\n\n  /**\n   * @param _vrfCoordinator address of VRFCoordinator contract\n   */\n  constructor(address _vrfCoordinator) {\n    vrfCoordinator = _vrfCoordinator;\n  }\n\n  /**\n   * @notice fulfillRandomness handles the VRF response. Your contract must\n   * @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n   * @notice principles to keep in mind when implementing your fulfillRandomness\n   * @notice method.\n   *\n   * @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n   * @dev signature, and will call it once it has verified the proof\n   * @dev associated with the randomness. (It is triggered via a call to\n   * @dev rawFulfillRandomness, below.)\n   *\n   * @param requestId The Id initially returned by requestRandomness\n   * @param randomWords the VRF output expanded to the requested number of words\n   */\n  // solhint-disable-next-line chainlink-solidity/prefix-internal-functions-with-underscore\n  function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal virtual;\n\n  // rawFulfillRandomness is called by VRFCoordinator when it receives a valid VRF\n  // proof. rawFulfillRandomness then calls fulfillRandomness, after validating\n  // the origin of the call\n  function rawFulfillRandomWords(uint256 requestId, uint256[] memory randomWords) external {\n    if (msg.sender != vrfCoordinator) {\n      revert OnlyCoordinatorCanFulfill(msg.sender, vrfCoordinator);\n    }\n    fulfillRandomWords(requestId, randomWords);\n  }\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /// @inheritdoc IERC1155\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /// @inheritdoc IERC1155\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC1155\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /// @inheritdoc IERC1155\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /// @inheritdoc IERC1155\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165, ERC165} from \"../../../utils/introspection/ERC165.sol\";\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\n\n/**\n * @dev Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n */\nabstract contract ERC1155Holder is ERC165, IERC1155Receiver {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/utils/ERC721Holder.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\n\n/**\n * @dev Implementation of the {IERC721Receiver} interface.\n *\n * Accepts all token transfers.\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or\n * {IERC721-setApprovalForAll}.\n */\nabstract contract ERC721Holder is IERC721Receiver {\n    /**\n     * @dev See {IERC721Receiver-onERC721Received}.\n     *\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes[] storage arr, uint256 pos) internal pure returns (StorageSlot.BytesSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytesSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(string[] storage arr, uint256 pos) internal pure returns (StorageSlot.StringSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getStringSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes[] memory arr, uint256 pos) internal pure returns (bytes memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(string[] memory arr, uint256 pos) internal pure returns (string memory res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(string[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/Gameitem.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\n\ncontract GameItem is ERC1155 {\n    constructor() ERC1155(\"https://game.example/api/item/{id}.json\") {\n        // Mint 1000 items with ID 1 to deployer\n        _mint(msg.sender, 1, 1000, \"\");\n    }\n}"},"contracts/GameNFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract GameNFT is ERC721 {\n    uint256 private tokenId;\n\n    constructor() ERC721(\"Game NFT\", \"GNFT\") {\n        // Mint 100 NFTs to the deployer\n        for (uint256 i = 0; i < 100; i++) {\n            _mint(msg.sender, tokenId);\n            tokenId++;\n        }\n    }\n}"},"contracts/Gametoken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract GameToken is ERC20 {\n    constructor() ERC20(\"Game Token\", \"GT\") {\n        _mint(msg.sender, 1000000 * 10 ** 18); // Mint 1M tokens\n    }\n}"},"contracts/LootBox.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\nimport \"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\";\nimport \"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\";\n\ncontract LootBox is VRFConsumerBaseV2, ERC1155Holder, ERC721Holder, Ownable, ReentrancyGuard {\n    \n    VRFCoordinatorV2Interface COORDINATOR;\n    uint64 subscriptionId;\n    address vrfCoordinator = 0x9DdfaCa8183c41ad55329BdeeD9F6A8d53168B1B; // Sepolia\n    bytes32 keyHash = 0x787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae;\n    uint32 callbackGasLimit = 200000; // Increased for safety\n    uint16 requestConfirmations = 3;\n    uint32 numWords = 1;\n\n    // Reward structures\n    struct RewardTier {\n        uint256 weight;\n        uint256 minAmount;\n        uint256 maxAmount;\n        bool active;\n    }\n\n    struct TokenContracts {\n        IERC20 erc20Token;\n        IERC721 erc721Token;\n        IERC1155 erc1155Token;\n        uint256 erc1155TokenId;\n    }\n\n    TokenContracts public tokens;\n    \n    // Loot box price\n    uint256 public boxPrice = 0.01 ether;\n    \n    // Reward tiers: ERC20, ERC1155, ERC721\n    RewardTier[] public rewardTiers;\n    uint256 public totalWeight;\n    \n    // Inventory tracking\n    mapping(uint256 => uint256) public availableERC721Tokens; // tokenId => available\n    uint256 public availableERC721Count;\n    \n    // VRF request tracking\n    struct PendingRequest {\n        address user;\n        uint256 timestamp;\n        bool fulfilled;\n    }\n    mapping(uint256 => PendingRequest) public pendingRequests;\n    \n    // Events\n    event BoxOpened(address indexed user, uint256 requestId);\n    event RewardAssigned(address indexed user, string rewardType, uint256 amount, uint256 tokenId);\n    event FundsWithdrawn(address indexed owner, uint256 amount);\n    event RewardTierUpdated(uint256 indexed tierId, uint256 weight, uint256 minAmount, uint256 maxAmount);\n    event TokenContractsUpdated(address erc20, address erc721, address erc1155, uint256 erc1155TokenId);\n    event InventoryReplenished(string tokenType, uint256 amount);\n    \n    // Custom errors\n    error InsufficientPayment();\n    error InsufficientInventory();\n    error InvalidRequest();\n    error TransferFailed();\n    error InvalidTierConfiguration();\n\n    constructor(\n        uint64 _subscriptionId,\n        address _erc20Token,\n        address _erc721Token,\n        address _erc1155Token,\n        uint256 _erc1155TokenId\n    ) VRFConsumerBaseV2(vrfCoordinator) Ownable(msg.sender) {\n        COORDINATOR = VRFCoordinatorV2Interface(vrfCoordinator);\n        subscriptionId = _subscriptionId;\n        \n        tokens = TokenContracts({\n            erc20Token: IERC20(_erc20Token),\n            erc721Token: IERC721(_erc721Token),\n            erc1155Token: IERC1155(_erc1155Token),\n            erc1155TokenId: _erc1155TokenId\n        });\n\n        // Initialize default reward tiers\n        _initializeRewardTiers();\n    }\n\n    function _initializeRewardTiers() private {\n        // ERC20 tier - 50% chance, 50-200 tokens\n        rewardTiers.push(RewardTier({\n            weight: 50,\n            minAmount: 50 * 10**18,\n            maxAmount: 200 * 10**18,\n            active: true\n        }));\n        \n        // ERC1155 tier - 30% chance, 1-10 items\n        rewardTiers.push(RewardTier({\n            weight: 30,\n            minAmount: 1,\n            maxAmount: 10,\n            active: true\n        }));\n        \n        // ERC721 tier - 20% chance, 1 NFT\n        rewardTiers.push(RewardTier({\n            weight: 20,\n            minAmount: 1,\n            maxAmount: 1,\n            active: true\n        }));\n        \n        _recalculateTotalWeight();\n    }\n\n    function openBox() external payable nonReentrant {\n        if (msg.value < boxPrice) revert InsufficientPayment();\n        \n        // Check if we have any rewards available\n        if (!_hasAvailableRewards()) revert InsufficientInventory();\n        \n        uint256 requestId = COORDINATOR.requestRandomWords(\n            keyHash,\n            subscriptionId,\n            requestConfirmations,\n            callbackGasLimit,\n            numWords\n        );\n        \n        pendingRequests[requestId] = PendingRequest({\n            user: msg.sender,\n            timestamp: block.timestamp,\n            fulfilled: false\n        });\n        \n        emit BoxOpened(msg.sender, requestId);\n        \n        // Refund excess payment\n        if (msg.value > boxPrice) {\n            payable(msg.sender).transfer(msg.value - boxPrice);\n        }\n    }\n\n    function fulfillRandomWords(uint256 requestId, uint256[] memory randomWords) internal override {\n        PendingRequest storage request = pendingRequests[requestId];\n        if (request.user == address(0) || request.fulfilled) revert InvalidRequest();\n        \n        request.fulfilled = true;\n        address user = request.user;\n        \n        // Determine reward tier\n        uint256 randomValue = randomWords[0] % totalWeight;\n        uint256 cumulativeWeight = 0;\n        \n        for (uint256 i = 0; i < rewardTiers.length; i++) {\n            if (!rewardTiers[i].active) continue;\n            \n            cumulativeWeight += rewardTiers[i].weight;\n            if (randomValue < cumulativeWeight) {\n                _distributeReward(user, i, randomWords[0]);\n                break;\n            }\n        }\n    }\n\n    function _distributeReward(address user, uint256 tierId, uint256 randomSeed) private {\n        RewardTier storage tier = rewardTiers[tierId];\n        uint256 amount = tier.minAmount;\n        \n        if (tier.maxAmount > tier.minAmount) {\n            amount += (randomSeed % (tier.maxAmount - tier.minAmount + 1));\n        }\n        \n        if (tierId == 0) {\n            // ERC20 reward\n            _distributeERC20(user, amount);\n            emit RewardAssigned(user, \"ERC20\", amount, 0);\n        } else if (tierId == 1) {\n            // ERC1155 reward\n            _distributeERC1155(user, amount);\n            emit RewardAssigned(user, \"ERC1155\", amount, tokens.erc1155TokenId);\n        } else if (tierId == 2) {\n            // ERC721 reward\n            uint256 tokenId = _distributeERC721(user, randomSeed);\n            emit RewardAssigned(user, \"ERC721\", 1, tokenId);\n        }\n    }\n\n    function _distributeERC20(address user, uint256 amount) private {\n        uint256 balance = tokens.erc20Token.balanceOf(address(this));\n        if (balance < amount) revert InsufficientInventory();\n        \n        bool success = tokens.erc20Token.transfer(user, amount);\n        if (!success) revert TransferFailed();\n    }\n\n    function _distributeERC1155(address user, uint256 amount) private {\n        uint256 balance = tokens.erc1155Token.balanceOf(address(this), tokens.erc1155TokenId);\n        if (balance < amount) revert InsufficientInventory();\n        \n        tokens.erc1155Token.safeTransferFrom(address(this), user, tokens.erc1155TokenId, amount, \"\");\n    }\n\n    function _distributeERC721(address user, uint256 randomSeed) private returns (uint256) {\n        if (availableERC721Count == 0) revert InsufficientInventory();\n        \n        // Find a random available token\n        uint256 randomIndex = randomSeed % availableERC721Count;\n        uint256 currentIndex = 0;\n        uint256 selectedTokenId = 0;\n        \n        for (uint256 tokenId = 0; tokenId < 1000; tokenId++) { // Assuming max 1000 NFTs\n            if (availableERC721Tokens[tokenId] > 0) {\n                if (currentIndex == randomIndex) {\n                    selectedTokenId = tokenId;\n                    break;\n                }\n                currentIndex++;\n            }\n        }\n        \n        // Transfer the NFT\n        tokens.erc721Token.safeTransferFrom(address(this), user, selectedTokenId);\n        \n        // Update inventory\n        availableERC721Tokens[selectedTokenId] = 0;\n        availableERC721Count--;\n        \n        return selectedTokenId;\n    }\n\n    function _hasAvailableRewards() private view returns (bool) {\n        // Check ERC20\n        if (rewardTiers[0].active && tokens.erc20Token.balanceOf(address(this)) >= rewardTiers[0].minAmount) {\n            return true;\n        }\n        \n        // Check ERC1155\n        if (rewardTiers[1].active && tokens.erc1155Token.balanceOf(address(this), tokens.erc1155TokenId) >= rewardTiers[1].minAmount) {\n            return true;\n        }\n        \n        // Check ERC721\n        if (rewardTiers[2].active && availableERC721Count > 0) {\n            return true;\n        }\n        \n        return false;\n    }\n\n    // Admin functions\n    function updateRewardTier(uint256 tierId, uint256 weight, uint256 minAmount, uint256 maxAmount, bool active) external onlyOwner {\n        if (tierId >= rewardTiers.length) revert InvalidTierConfiguration();\n        if (maxAmount < minAmount) revert InvalidTierConfiguration();\n        \n        rewardTiers[tierId] = RewardTier({\n            weight: weight,\n            minAmount: minAmount,\n            maxAmount: maxAmount,\n            active: active\n        });\n        \n        _recalculateTotalWeight();\n        emit RewardTierUpdated(tierId, weight, minAmount, maxAmount);\n    }\n\n    function updateTokenContracts(address _erc20, address _erc721, address _erc1155, uint256 _erc1155TokenId) external onlyOwner {\n        tokens.erc20Token = IERC20(_erc20);\n        tokens.erc721Token = IERC721(_erc721);\n        tokens.erc1155Token = IERC1155(_erc1155);\n        tokens.erc1155TokenId = _erc1155TokenId;\n        \n        emit TokenContractsUpdated(_erc20, _erc721, _erc1155, _erc1155TokenId);\n    }\n\n    function updateBoxPrice(uint256 newPrice) external onlyOwner {\n        boxPrice = newPrice;\n    }\n\n    function replenishERC721Inventory(uint256[] calldata tokenIds) external onlyOwner {\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            uint256 tokenId = tokenIds[i];\n            if (tokens.erc721Token.ownerOf(tokenId) == address(this) && availableERC721Tokens[tokenId] == 0) {\n                availableERC721Tokens[tokenId] = 1;\n                availableERC721Count++;\n            }\n        }\n        emit InventoryReplenished(\"ERC721\", tokenIds.length);\n    }\n\n    function _recalculateTotalWeight() private {\n        totalWeight = 0;\n        for (uint256 i = 0; i < rewardTiers.length; i++) {\n            if (rewardTiers[i].active) {\n                totalWeight += rewardTiers[i].weight;\n            }\n        }\n    }\n\n    // Emergency functions\n    function emergencyWithdrawTokens(address token, uint256 amount) external onlyOwner {\n        IERC20(token).transfer(owner(), amount);\n    }\n\n    function emergencyWithdrawNFT(address nftContract, uint256 tokenId) external onlyOwner {\n        IERC721(nftContract).safeTransferFrom(address(this), owner(), tokenId);\n    }\n\n    function withdraw() external onlyOwner nonReentrant {\n        uint256 amount = address(this).balance;\n        payable(owner()).transfer(amount);\n        emit FundsWithdrawn(owner(), amount);\n    }\n\n    // View functions\n    function getRewardTier(uint256 tierId) external view returns (RewardTier memory) {\n        return rewardTiers[tierId];\n    }\n\n    function getPendingRequest(uint256 requestId) external view returns (PendingRequest memory) {\n        return pendingRequests[requestId];\n    }\n\n    function getInventoryStatus() external view returns (uint256 erc20Balance, uint256 erc1155Balance, uint256 erc721Count) {\n        erc20Balance = tokens.erc20Token.balanceOf(address(this));\n        erc1155Balance = tokens.erc1155Token.balanceOf(address(this), tokens.erc1155TokenId);\n        erc721Count = availableERC721Count;\n    }\n\n    receive() external payable {}\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"evmVersion":"paris","outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","exportedSymbols":{"VRFConsumerBaseV2":[57]},"id":58,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:0"},{"abstract":true,"baseContracts":[],"canonicalName":"VRFConsumerBaseV2","contractDependencies":[],"contractKind":"contract","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"57:5275:0","text":"****************************************************************************\n @notice Interface for contracts using VRF randomness\n *****************************************************************************\n @dev PURPOSE\n @dev Reggie the Random Oracle (not his real job) wants to provide randomness\n @dev to Vera the verifier in such a way that Vera can be sure he's not\n @dev making his output up to suit himself. Reggie provides Vera a public key\n @dev to which he knows the secret key. Each time Vera provides a seed to\n @dev Reggie, he gives back a value which is computed completely\n @dev deterministically from the seed and the secret key.\n @dev Reggie provides a proof by which Vera can verify that the output was\n @dev correctly computed once Reggie tells it to her, but without that proof,\n @dev the output is indistinguishable to her from a uniform random sample\n @dev from the output space.\n @dev The purpose of this contract is to make it easy for unrelated contracts\n @dev to talk to Vera the verifier about the work Reggie is doing, to provide\n @dev simple access to a verifiable source of randomness. It ensures 2 things:\n @dev 1. The fulfillment came from the VRFCoordinator\n @dev 2. The consumer contract implements fulfillRandomWords.\n *****************************************************************************\n @dev USAGE\n @dev Calling contracts must inherit from VRFConsumerBase, and can\n @dev initialize VRFConsumerBase's attributes in their constructor as\n @dev shown:\n @dev   contract VRFConsumer {\n @dev     constructor(<other arguments>, address _vrfCoordinator, address _link)\n @dev       VRFConsumerBase(_vrfCoordinator) public {\n @dev         <initialization with other arguments goes here>\n @dev       }\n @dev   }\n @dev The oracle will have given you an ID for the VRF keypair they have\n @dev committed to (let's call it keyHash). Create subscription, fund it\n @dev and your consumer contract as a consumer of it (see VRFCoordinatorInterface\n @dev subscription management functions).\n @dev Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,\n @dev callbackGasLimit, numWords),\n @dev see (VRFCoordinatorInterface for a description of the arguments).\n @dev Once the VRFCoordinator has received and validated the oracle's response\n @dev to your request, it will call your contract's fulfillRandomWords method.\n @dev The randomness argument to fulfillRandomWords is a set of random words\n @dev generated from your requestId and the blockHash of the request.\n @dev If your contract could have concurrent requests open, you can use the\n @dev requestId returned from requestRandomWords to track which response is associated\n @dev with which randomness request.\n @dev See \"SECURITY CONSIDERATIONS\" for principles to keep in mind,\n @dev if your contract could have multiple requests in flight simultaneously.\n @dev Colliding `requestId`s are cryptographically impossible as long as seeds\n @dev differ.\n *****************************************************************************\n @dev SECURITY CONSIDERATIONS\n @dev A method with the ability to call your fulfillRandomness method directly\n @dev could spoof a VRF response with any random value, so it's critical that\n @dev it cannot be directly called by anything other than this base contract\n @dev (specifically, by the VRFConsumerBase.rawFulfillRandomness method).\n @dev For your users to trust that your contract's random behavior is free\n @dev from malicious interference, it's best if you can write it so that all\n @dev behaviors implied by a VRF response are executed *during* your\n @dev fulfillRandomness method. If your contract must store the response (or\n @dev anything derived from it) and use it later, you must ensure that any\n @dev user-significant behavior which depends on that stored value cannot be\n @dev manipulated by a subsequent VRF request.\n @dev Similarly, both miners and the VRF oracle itself have some influence\n @dev over the order in which VRF responses appear on the blockchain, so if\n @dev your contract could have multiple VRF requests in flight simultaneously,\n @dev you must ensure that the order in which the VRF responses arrive cannot\n @dev be used to manipulate your contract's user-significant behavior.\n @dev Since the block hash of the block which contains the requestRandomness\n @dev call is mixed into the input to the VRF *last*, a sufficiently powerful\n @dev miner could, in principle, fork the blockchain to evict the block\n @dev containing the request, forcing the request to be included in a\n @dev different block with a different hash, and therefore a different input\n @dev to the VRF. However, such an attack would incur a substantial economic\n @dev cost. This cost scales with the number of blocks the VRF oracle waits\n @dev until it calls responds to a request. It is for this reason that\n @dev that you can signal to an oracle you'd like them to wait longer before\n @dev responding to the request (however this is not enforced in the contract\n @dev and so remains effective only in the case of unmodified oracle software)."},"fullyImplemented":false,"id":57,"linearizedBaseContracts":[57],"name":"VRFConsumerBaseV2","nameLocation":"5351:17:0","nodeType":"ContractDefinition","nodes":[{"errorSelector":"1cf993f4","id":8,"name":"OnlyCoordinatorCanFulfill","nameLocation":"5379:25:0","nodeType":"ErrorDefinition","parameters":{"id":7,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"mutability":"mutable","name":"have","nameLocation":"5413:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5405:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"5405:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"want","nameLocation":"5427:4:0","nodeType":"VariableDeclaration","scope":8,"src":"5419:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5,"name":"address","nodeType":"ElementaryTypeName","src":"5419:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5404:28:0"},"src":"5373:60:0"},{"constant":false,"id":10,"mutability":"immutable","name":"vrfCoordinator","nameLocation":"5546:14:0","nodeType":"VariableDeclaration","scope":57,"src":"5520:40:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9,"name":"address","nodeType":"ElementaryTypeName","src":"5520:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"body":{"id":20,"nodeType":"Block","src":"5677:43:0","statements":[{"expression":{"id":18,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":16,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"5683:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":17,"name":"_vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"5700:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5683:32:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":19,"nodeType":"ExpressionStatement","src":"5683:32:0"}]},"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"5565:72:0","text":" @param _vrfCoordinator address of VRFCoordinator contract"},"id":21,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"_vrfCoordinator","nameLocation":"5660:15:0","nodeType":"VariableDeclaration","scope":21,"src":"5652:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5651:25:0"},"returnParameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"5677:0:0"},"scope":57,"src":"5640:80:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"documentation":{"id":22,"nodeType":"StructuredDocumentation","src":"5724:686:0","text":" @notice fulfillRandomness handles the VRF response. Your contract must\n @notice implement it. See \"SECURITY CONSIDERATIONS\" above for important\n @notice principles to keep in mind when implementing your fulfillRandomness\n @notice method.\n @dev VRFConsumerBaseV2 expects its subcontracts to have a method with this\n @dev signature, and will call it once it has verified the proof\n @dev associated with the randomness. (It is triggered via a call to\n @dev rawFulfillRandomness, below.)\n @param requestId The Id initially returned by requestRandomness\n @param randomWords the VRF output expanded to the requested number of words"},"id":30,"implemented":false,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"6514:18:0","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"requestId","nameLocation":"6541:9:0","nodeType":"VariableDeclaration","scope":30,"src":"6533:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":23,"name":"uint256","nodeType":"ElementaryTypeName","src":"6533:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":27,"mutability":"mutable","name":"randomWords","nameLocation":"6569:11:0","nodeType":"VariableDeclaration","scope":30,"src":"6552:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"6552:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":26,"nodeType":"ArrayTypeName","src":"6552:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6532:49:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"6598:0:0"},"scope":57,"src":"6505:94:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":55,"nodeType":"Block","src":"6883:167:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":38,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6893:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":39,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6897:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6893:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":40,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6907:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6893:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":49,"nodeType":"IfStatement","src":"6889:109:0","trueBody":{"id":48,"nodeType":"Block","src":"6923:75:0","statements":[{"errorCall":{"arguments":[{"expression":{"id":43,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6964:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":44,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6968:6:0","memberName":"sender","nodeType":"MemberAccess","src":"6964:10:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":45,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"6976:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":42,"name":"OnlyCoordinatorCanFulfill","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"6938:25:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6938:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":47,"nodeType":"RevertStatement","src":"6931:60:0"}]}},{"expression":{"arguments":[{"id":51,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32,"src":"7022:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":52,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":35,"src":"7033:11:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":50,"name":"fulfillRandomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"7003:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (uint256,uint256[] memory)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7003:42:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":54,"nodeType":"ExpressionStatement","src":"7003:42:0"}]},"functionSelector":"1fe543e3","id":56,"implemented":true,"kind":"function","modifiers":[],"name":"rawFulfillRandomWords","nameLocation":"6803:21:0","nodeType":"FunctionDefinition","parameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32,"mutability":"mutable","name":"requestId","nameLocation":"6833:9:0","nodeType":"VariableDeclaration","scope":56,"src":"6825:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"6825:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"randomWords","nameLocation":"6861:11:0","nodeType":"VariableDeclaration","scope":56,"src":"6844:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":33,"name":"uint256","nodeType":"ElementaryTypeName","src":"6844:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":34,"nodeType":"ArrayTypeName","src":"6844:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6824:49:0"},"returnParameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"6883:0:0"},"scope":57,"src":"6794:256:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":58,"src":"5333:1719:0","usedErrors":[8],"usedEvents":[]}],"src":"32:7021:0"},"id":0},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"ast":{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","exportedSymbols":{"VRFCoordinatorV2Interface":[153]},"id":154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":59,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"VRFCoordinatorV2Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":153,"linearizedBaseContracts":[153],"name":"VRFCoordinatorV2Interface","nameLocation":"120:25:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"150:267:1","text":" @notice Get configuration relevant for making requests\n @return minimumRequestConfirmations global min for request confirmations\n @return maxGasLimit global max for request gas limit\n @return s_provingKeyHashes list of registered key hashes"},"functionSelector":"00012291","id":70,"implemented":false,"kind":"function","modifiers":[],"name":"getRequestConfig","nameLocation":"429:16:1","nodeType":"FunctionDefinition","parameters":{"id":61,"nodeType":"ParameterList","parameters":[],"src":"445:2:1"},"returnParameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"471:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":62,"name":"uint16","nodeType":"ElementaryTypeName","src":"471:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"479:6:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":64,"name":"uint32","nodeType":"ElementaryTypeName","src":"479:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":70,"src":"487:16:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":66,"name":"bytes32","nodeType":"ElementaryTypeName","src":"487:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":67,"nodeType":"ArrayTypeName","src":"487:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"470:34:1"},"scope":153,"src":"420:85:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":71,"nodeType":"StructuredDocumentation","src":"509:1511:1","text":" @notice Request a set of random words.\n @param keyHash - Corresponds to a particular oracle job which uses\n that key for generating the VRF proof. Different keyHash's have different gas price\n ceilings, so you can select a specific one to bound your maximum per request cost.\n @param subId  - The ID of the VRF subscription. Must be funded\n with the minimum subscription balance required for the selected keyHash.\n @param minimumRequestConfirmations - How many blocks you'd like the\n oracle to wait before responding to the request. See SECURITY CONSIDERATIONS\n for why you may want to request more. The acceptable range is\n [minimumRequestBlockConfirmations, 200].\n @param callbackGasLimit - How much gas you'd like to receive in your\n fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords\n may be slightly less than this amount because of gas used calling the function\n (argument decoding etc.), so you may need to request slightly more than you expect\n to have inside fulfillRandomWords. The acceptable range is\n [0, maxGasLimit]\n @param numWords - The number of uint256 random values you'd like to receive\n in your fulfillRandomWords callback. Note these numbers are expanded in a\n secure way by the VRFCoordinator from a single random value supplied by the oracle.\n @return requestId - A unique identifier of the request. Can be used to match\n a request to a response in fulfillRandomWords."},"functionSelector":"5d3b1d30","id":86,"implemented":false,"kind":"function","modifiers":[],"name":"requestRandomWords","nameLocation":"2032:18:1","nodeType":"FunctionDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"keyHash","nameLocation":"2064:7:1","nodeType":"VariableDeclaration","scope":86,"src":"2056:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":72,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2056:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":75,"mutability":"mutable","name":"subId","nameLocation":"2084:5:1","nodeType":"VariableDeclaration","scope":86,"src":"2077:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":74,"name":"uint64","nodeType":"ElementaryTypeName","src":"2077:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":77,"mutability":"mutable","name":"minimumRequestConfirmations","nameLocation":"2102:27:1","nodeType":"VariableDeclaration","scope":86,"src":"2095:34:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":76,"name":"uint16","nodeType":"ElementaryTypeName","src":"2095:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":79,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"2142:16:1","nodeType":"VariableDeclaration","scope":86,"src":"2135:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":78,"name":"uint32","nodeType":"ElementaryTypeName","src":"2135:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":81,"mutability":"mutable","name":"numWords","nameLocation":"2171:8:1","nodeType":"VariableDeclaration","scope":86,"src":"2164:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":80,"name":"uint32","nodeType":"ElementaryTypeName","src":"2164:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2050:133:1"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"requestId","nameLocation":"2210:9:1","nodeType":"VariableDeclaration","scope":86,"src":"2202:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":83,"name":"uint256","nodeType":"ElementaryTypeName","src":"2202:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2201:19:1"},"scope":153,"src":"2023:198:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":87,"nodeType":"StructuredDocumentation","src":"2225:384:1","text":" @notice Create a VRF subscription.\n @return subId - A unique subscription id.\n @dev You can manage the consumer set dynamically with addConsumer/removeConsumer.\n @dev Note to fund the subscription, use transferAndCall. For example\n @dev  LINKTOKEN.transferAndCall(\n @dev    address(COORDINATOR),\n @dev    amount,\n @dev    abi.encode(subId));"},"functionSelector":"a21a23e4","id":92,"implemented":false,"kind":"function","modifiers":[],"name":"createSubscription","nameLocation":"2621:18:1","nodeType":"FunctionDefinition","parameters":{"id":88,"nodeType":"ParameterList","parameters":[],"src":"2639:2:1"},"returnParameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"mutability":"mutable","name":"subId","nameLocation":"2667:5:1","nodeType":"VariableDeclaration","scope":92,"src":"2660:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":89,"name":"uint64","nodeType":"ElementaryTypeName","src":"2660:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"2659:14:1"},"scope":153,"src":"2612:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"2678:381:1","text":" @notice Get a VRF subscription.\n @param subId - ID of the subscription\n @return balance - LINK balance of the subscription in juels.\n @return reqCount - number of requests for this subscription, determines fee tier.\n @return owner - owner of the subscription.\n @return consumers - list of consumer address which are able to use this subscription."},"functionSelector":"a47c7696","id":107,"implemented":false,"kind":"function","modifiers":[],"name":"getSubscription","nameLocation":"3071:15:1","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"subId","nameLocation":"3099:5:1","nodeType":"VariableDeclaration","scope":107,"src":"3092:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":94,"name":"uint64","nodeType":"ElementaryTypeName","src":"3092:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3086:22:1"},"returnParameters":{"id":106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"mutability":"mutable","name":"balance","nameLocation":"3139:7:1","nodeType":"VariableDeclaration","scope":107,"src":"3132:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":97,"name":"uint96","nodeType":"ElementaryTypeName","src":"3132:6:1","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":100,"mutability":"mutable","name":"reqCount","nameLocation":"3155:8:1","nodeType":"VariableDeclaration","scope":107,"src":"3148:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":99,"name":"uint64","nodeType":"ElementaryTypeName","src":"3148:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":102,"mutability":"mutable","name":"owner","nameLocation":"3173:5:1","nodeType":"VariableDeclaration","scope":107,"src":"3165:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":101,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"consumers","nameLocation":"3197:9:1","nodeType":"VariableDeclaration","scope":107,"src":"3180:26:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":103,"name":"address","nodeType":"ElementaryTypeName","src":"3180:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ArrayTypeName","src":"3180:9:1","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3131:76:1"},"scope":153,"src":"3062:146:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":108,"nodeType":"StructuredDocumentation","src":"3212:164:1","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @param newOwner - proposed new owner of the subscription"},"functionSelector":"04c357cb","id":115,"implemented":false,"kind":"function","modifiers":[],"name":"requestSubscriptionOwnerTransfer","nameLocation":"3388:32:1","nodeType":"FunctionDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":110,"mutability":"mutable","name":"subId","nameLocation":"3428:5:1","nodeType":"VariableDeclaration","scope":115,"src":"3421:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":109,"name":"uint64","nodeType":"ElementaryTypeName","src":"3421:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":112,"mutability":"mutable","name":"newOwner","nameLocation":"3443:8:1","nodeType":"VariableDeclaration","scope":115,"src":"3435:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"3435:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3420:32:1"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[],"src":"3461:0:1"},"scope":153,"src":"3379:83:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3466:212:1","text":" @notice Request subscription owner transfer.\n @param subId - ID of the subscription\n @dev will revert if original owner of subId has\n not requested that msg.sender become the new owner."},"functionSelector":"82359740","id":121,"implemented":false,"kind":"function","modifiers":[],"name":"acceptSubscriptionOwnerTransfer","nameLocation":"3690:31:1","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"subId","nameLocation":"3729:5:1","nodeType":"VariableDeclaration","scope":121,"src":"3722:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":117,"name":"uint64","nodeType":"ElementaryTypeName","src":"3722:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3721:14:1"},"returnParameters":{"id":120,"nodeType":"ParameterList","parameters":[],"src":"3744:0:1"},"scope":153,"src":"3681:64:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":122,"nodeType":"StructuredDocumentation","src":"3749:170:1","text":" @notice Add a consumer to a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - New consumer which can use the subscription"},"functionSelector":"7341c10c","id":129,"implemented":false,"kind":"function","modifiers":[],"name":"addConsumer","nameLocation":"3931:11:1","nodeType":"FunctionDefinition","parameters":{"id":127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"subId","nameLocation":"3950:5:1","nodeType":"VariableDeclaration","scope":129,"src":"3943:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":123,"name":"uint64","nodeType":"ElementaryTypeName","src":"3943:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":126,"mutability":"mutable","name":"consumer","nameLocation":"3965:8:1","nodeType":"VariableDeclaration","scope":129,"src":"3957:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"3957:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3942:32:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[],"src":"3983:0:1"},"scope":153,"src":"3922:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3988:172:1","text":" @notice Remove a consumer from a VRF subscription.\n @param subId - ID of the subscription\n @param consumer - Consumer to remove from the subscription"},"functionSelector":"9f87fad7","id":137,"implemented":false,"kind":"function","modifiers":[],"name":"removeConsumer","nameLocation":"4172:14:1","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"subId","nameLocation":"4194:5:1","nodeType":"VariableDeclaration","scope":137,"src":"4187:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":131,"name":"uint64","nodeType":"ElementaryTypeName","src":"4187:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"consumer","nameLocation":"4209:8:1","nodeType":"VariableDeclaration","scope":137,"src":"4201:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4201:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4186:32:1"},"returnParameters":{"id":136,"nodeType":"ParameterList","parameters":[],"src":"4227:0:1"},"scope":153,"src":"4163:65:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":138,"nodeType":"StructuredDocumentation","src":"4232:140:1","text":" @notice Cancel a subscription\n @param subId - ID of the subscription\n @param to - Where to send the remaining LINK to"},"functionSelector":"d7ae1d30","id":145,"implemented":false,"kind":"function","modifiers":[],"name":"cancelSubscription","nameLocation":"4384:18:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":140,"mutability":"mutable","name":"subId","nameLocation":"4410:5:1","nodeType":"VariableDeclaration","scope":145,"src":"4403:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":139,"name":"uint64","nodeType":"ElementaryTypeName","src":"4403:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":142,"mutability":"mutable","name":"to","nameLocation":"4425:2:1","nodeType":"VariableDeclaration","scope":145,"src":"4417:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":141,"name":"address","nodeType":"ElementaryTypeName","src":"4417:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4402:26:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"4437:0:1"},"scope":153,"src":"4375:63:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"e82ad7d4","id":152,"implemented":false,"kind":"function","modifiers":[],"name":"pendingRequestExists","nameLocation":"4743:20:1","nodeType":"FunctionDefinition","parameters":{"id":148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"subId","nameLocation":"4771:5:1","nodeType":"VariableDeclaration","scope":152,"src":"4764:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":146,"name":"uint64","nodeType":"ElementaryTypeName","src":"4764:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"4763:14:1"},"returnParameters":{"id":151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":152,"src":"4801:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":149,"name":"bool","nodeType":"ElementaryTypeName","src":"4801:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4800:6:1"},"scope":153,"src":"4734:73:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":154,"src":"110:4699:1","usedErrors":[],"usedEvents":[]}],"src":"32:4778:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[4654],"Ownable":[301]},"id":302,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":155,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":302,"sourceUnit":4655,"src":"128:45:2","symbolAliases":[{"foreign":{"id":156,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"136:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":159,"name":"Context","nameLocations":["692:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"692:7:2"},"id":160,"nodeType":"InheritanceSpecifier","src":"692:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":158,"nodeType":"StructuredDocumentation","src":"175:487:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":301,"linearizedBaseContracts":[301,4654],"name":"Ownable","nameLocation":"681:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":162,"mutability":"mutable","name":"_owner","nameLocation":"722:6:2","nodeType":"VariableDeclaration","scope":301,"src":"706:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"735:85:2","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":167,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:2","nodeType":"ErrorDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"account","nameLocation":"866:7:2","nodeType":"VariableDeclaration","scope":167,"src":"858:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:2"},"src":"825:50:2"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"881:82:2","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":172,"name":"OwnableInvalidOwner","nameLocation":"974:19:2","nodeType":"ErrorDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"owner","nameLocation":"1002:5:2","nodeType":"VariableDeclaration","scope":172,"src":"994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:2"},"src":"968:41:2"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":178,"name":"OwnershipTransferred","nameLocation":"1021:20:2","nodeType":"EventDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:2","nodeType":"VariableDeclaration","scope":178,"src":"1042:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":176,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:2","nodeType":"VariableDeclaration","scope":178,"src":"1073:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:2"},"src":"1015:84:2"},{"body":{"id":203,"nodeType":"Block","src":"1259:153:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":184,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"1273:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:2","typeDescriptions":{}}},"id":188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":198,"nodeType":"IfStatement","src":"1269:95:2","trueBody":{"id":197,"nodeType":"Block","src":"1301:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":191,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:2","typeDescriptions":{}}},"id":194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":190,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"1322:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":196,"nodeType":"RevertStatement","src":"1315:38:2"}]}},{"expression":{"arguments":[{"id":200,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"1392:12:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":199,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"1373:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"1373:32:2"}]},"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1105:115:2","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":204,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:2","nodeType":"VariableDeclaration","scope":204,"src":"1237:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:2"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"1259:0:2"},"scope":301,"src":"1225:187:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":211,"nodeType":"Block","src":"1521:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":207,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":238,"src":"1531:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":209,"nodeType":"ExpressionStatement","src":"1531:13:2"},{"id":210,"nodeType":"PlaceholderStatement","src":"1554:1:2"}]},"documentation":{"id":205,"nodeType":"StructuredDocumentation","src":"1418:77:2","text":" @dev Throws if called by any account other than the owner."},"id":212,"name":"onlyOwner","nameLocation":"1509:9:2","nodeType":"ModifierDefinition","parameters":{"id":206,"nodeType":"ParameterList","parameters":[],"src":"1518:2:2"},"src":"1500:62:2","virtual":false,"visibility":"internal"},{"body":{"id":220,"nodeType":"Block","src":"1693:30:2","statements":[{"expression":{"id":218,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"1710:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":217,"id":219,"nodeType":"Return","src":"1703:13:2"}]},"documentation":{"id":213,"nodeType":"StructuredDocumentation","src":"1568:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":221,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:2","nodeType":"FunctionDefinition","parameters":{"id":214,"nodeType":"ParameterList","parameters":[],"src":"1652:2:2"},"returnParameters":{"id":217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":221,"src":"1684:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:2"},"scope":301,"src":"1638:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":237,"nodeType":"Block","src":"1841:117:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":225,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"1855:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":227,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"1866:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":236,"nodeType":"IfStatement","src":"1851:101:2","trueBody":{"id":235,"nodeType":"Block","src":"1880:72:2","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":231,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"1928:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":230,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"1901:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":234,"nodeType":"RevertStatement","src":"1894:47:2"}]}}]},"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"1729:62:2","text":" @dev Throws if the sender is not the owner."},"id":238,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:2","nodeType":"FunctionDefinition","parameters":{"id":223,"nodeType":"ParameterList","parameters":[],"src":"1816:2:2"},"returnParameters":{"id":224,"nodeType":"ParameterList","parameters":[],"src":"1841:0:2"},"scope":301,"src":"1796:162:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":251,"nodeType":"Block","src":"2347:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":245,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:2","typeDescriptions":{}}},"id":248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":244,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2357:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":250,"nodeType":"ExpressionStatement","src":"2357:30:2"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"1964:324:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":252,"implemented":true,"kind":"function","modifiers":[{"id":242,"kind":"modifierInvocation","modifierName":{"id":241,"name":"onlyOwner","nameLocations":["2337:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"2337:9:2"},"nodeType":"ModifierInvocation","src":"2337:9:2"}],"name":"renounceOwnership","nameLocation":"2302:17:2","nodeType":"FunctionDefinition","parameters":{"id":240,"nodeType":"ParameterList","parameters":[],"src":"2319:2:2"},"returnParameters":{"id":243,"nodeType":"ParameterList","parameters":[],"src":"2347:0:2"},"scope":301,"src":"2293:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":279,"nodeType":"Block","src":"2613:145:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":260,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2627:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:2","typeDescriptions":{}}},"id":264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":274,"nodeType":"IfStatement","src":"2623:91:2","trueBody":{"id":273,"nodeType":"Block","src":"2651:63:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":267,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:2","typeDescriptions":{}}},"id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":266,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"2672:19:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":272,"nodeType":"RevertStatement","src":"2665:38:2"}]}},{"expression":{"arguments":[{"id":276,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2742:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":275,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2723:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":278,"nodeType":"ExpressionStatement","src":"2723:28:2"}]},"documentation":{"id":253,"nodeType":"StructuredDocumentation","src":"2400:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":280,"implemented":true,"kind":"function","modifiers":[{"id":258,"kind":"modifierInvocation","modifierName":{"id":257,"name":"onlyOwner","nameLocations":["2603:9:2"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"2603:9:2"},"nodeType":"ModifierInvocation","src":"2603:9:2"}],"name":"transferOwnership","nameLocation":"2552:17:2","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":255,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:2","nodeType":"VariableDeclaration","scope":280,"src":"2570:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":254,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:2"},"returnParameters":{"id":259,"nodeType":"ParameterList","parameters":[],"src":"2613:0:2"},"scope":301,"src":"2543:215:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":299,"nodeType":"Block","src":"2975:124:2","statements":[{"assignments":[287],"declarations":[{"constant":false,"id":287,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:2","nodeType":"VariableDeclaration","scope":299,"src":"2985:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":286,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":289,"initialValue":{"id":288,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3004:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:2"},{"expression":{"id":292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":290,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3020:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":291,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3029:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":293,"nodeType":"ExpressionStatement","src":"3020:17:2"},{"eventCall":{"arguments":[{"id":295,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"3073:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":296,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"3083:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":294,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"3052:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":298,"nodeType":"EmitStatement","src":"3047:45:2"}]},"documentation":{"id":281,"nodeType":"StructuredDocumentation","src":"2764:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":300,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:2","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":283,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:2","nodeType":"VariableDeclaration","scope":300,"src":"2940:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:2"},"returnParameters":{"id":285,"nodeType":"ParameterList","parameters":[],"src":"2975:0:2"},"scope":301,"src":"2912:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":302,"src":"663:2438:2","usedErrors":[167,172],"usedEvents":[178]}],"src":"102:3000:2"},"id":2},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[438],"IERC20Errors":[343],"IERC721Errors":[391]},"id":439,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":303,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"138:141:3","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":343,"linearizedBaseContracts":[343],"name":"IERC20Errors","nameLocation":"290:12:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":305,"nodeType":"StructuredDocumentation","src":"309:309:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":313,"name":"ERC20InsufficientBalance","nameLocation":"629:24:3","nodeType":"ErrorDefinition","parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":307,"mutability":"mutable","name":"sender","nameLocation":"662:6:3","nodeType":"VariableDeclaration","scope":313,"src":"654:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":306,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":309,"mutability":"mutable","name":"balance","nameLocation":"678:7:3","nodeType":"VariableDeclaration","scope":313,"src":"670:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":308,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"needed","nameLocation":"695:6:3","nodeType":"VariableDeclaration","scope":313,"src":"687:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:3"},"src":"623:80:3"},{"documentation":{"id":314,"nodeType":"StructuredDocumentation","src":"709:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":318,"name":"ERC20InvalidSender","nameLocation":"872:18:3","nodeType":"ErrorDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":316,"mutability":"mutable","name":"sender","nameLocation":"899:6:3","nodeType":"VariableDeclaration","scope":318,"src":"891:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":315,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:3"},"src":"866:41:3"},{"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"913:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":323,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:3","nodeType":"ErrorDefinition","parameters":{"id":322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:3","nodeType":"VariableDeclaration","scope":323,"src":"1104:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:3"},"src":"1077:45:3"},{"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"1128:345:3","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":332,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:3","nodeType":"ErrorDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"spender","nameLocation":"1519:7:3","nodeType":"VariableDeclaration","scope":332,"src":"1511:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:3","nodeType":"VariableDeclaration","scope":332,"src":"1528:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"needed","nameLocation":"1555:6:3","nodeType":"VariableDeclaration","scope":332,"src":"1547:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:3"},"src":"1478:85:3"},{"documentation":{"id":333,"nodeType":"StructuredDocumentation","src":"1569:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":337,"name":"ERC20InvalidApprover","nameLocation":"1754:20:3","nodeType":"ErrorDefinition","parameters":{"id":336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":335,"mutability":"mutable","name":"approver","nameLocation":"1783:8:3","nodeType":"VariableDeclaration","scope":337,"src":"1775:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":334,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:3"},"src":"1748:45:3"},{"documentation":{"id":338,"nodeType":"StructuredDocumentation","src":"1799:195:3","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":342,"name":"ERC20InvalidSpender","nameLocation":"2005:19:3","nodeType":"ErrorDefinition","parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"spender","nameLocation":"2033:7:3","nodeType":"VariableDeclaration","scope":342,"src":"2025:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:3"},"src":"1999:43:3"}],"scope":439,"src":"280:1764:3","usedErrors":[313,318,323,332,337,342],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":344,"nodeType":"StructuredDocumentation","src":"2046:143:3","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":391,"linearizedBaseContracts":[391],"name":"IERC721Errors","nameLocation":"2200:13:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":345,"nodeType":"StructuredDocumentation","src":"2220:219:3","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":349,"name":"ERC721InvalidOwner","nameLocation":"2450:18:3","nodeType":"ErrorDefinition","parameters":{"id":348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":347,"mutability":"mutable","name":"owner","nameLocation":"2477:5:3","nodeType":"VariableDeclaration","scope":349,"src":"2469:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":346,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:3"},"src":"2444:40:3"},{"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"2490:132:3","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":354,"name":"ERC721NonexistentToken","nameLocation":"2633:22:3","nodeType":"ErrorDefinition","parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:3","nodeType":"VariableDeclaration","scope":354,"src":"2656:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:3"},"src":"2627:46:3"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2679:289:3","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":363,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:3","nodeType":"ErrorDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"sender","nameLocation":"3008:6:3","nodeType":"VariableDeclaration","scope":363,"src":"3000:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":356,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:3","nodeType":"VariableDeclaration","scope":363,"src":"3016:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":358,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":361,"mutability":"mutable","name":"owner","nameLocation":"3041:5:3","nodeType":"VariableDeclaration","scope":363,"src":"3033:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":360,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:3"},"src":"2973:75:3"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"3054:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":368,"name":"ERC721InvalidSender","nameLocation":"3217:19:3","nodeType":"ErrorDefinition","parameters":{"id":367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"sender","nameLocation":"3245:6:3","nodeType":"VariableDeclaration","scope":368,"src":"3237:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":365,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:3"},"src":"3211:42:3"},{"documentation":{"id":369,"nodeType":"StructuredDocumentation","src":"3259:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":373,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:3","nodeType":"ErrorDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":371,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:3","nodeType":"VariableDeclaration","scope":373,"src":"3451:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":370,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:3"},"src":"3423:46:3"},{"documentation":{"id":374,"nodeType":"StructuredDocumentation","src":"3475:247:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":380,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:3","nodeType":"ErrorDefinition","parameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"operator","nameLocation":"3768:8:3","nodeType":"VariableDeclaration","scope":380,"src":"3760:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":378,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:3","nodeType":"VariableDeclaration","scope":380,"src":"3778:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:3"},"src":"3727:68:3"},{"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"3801:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":385,"name":"ERC721InvalidApprover","nameLocation":"3986:21:3","nodeType":"ErrorDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"approver","nameLocation":"4016:8:3","nodeType":"VariableDeclaration","scope":385,"src":"4008:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":382,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:3"},"src":"3980:46:3"},{"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"4032:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":390,"name":"ERC721InvalidOperator","nameLocation":"4240:21:3","nodeType":"ErrorDefinition","parameters":{"id":389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"operator","nameLocation":"4270:8:3","nodeType":"VariableDeclaration","scope":390,"src":"4262:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":387,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:3"},"src":"4234:46:3"}],"scope":439,"src":"2190:2092:3","usedErrors":[349,354,363,368,373,380,385,390],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"4284:145:3","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":438,"linearizedBaseContracts":[438],"name":"IERC1155Errors","nameLocation":"4440:14:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":393,"nodeType":"StructuredDocumentation","src":"4461:361:3","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":403,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:3","nodeType":"ErrorDefinition","parameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"sender","nameLocation":"4868:6:3","nodeType":"VariableDeclaration","scope":403,"src":"4860:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":394,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":397,"mutability":"mutable","name":"balance","nameLocation":"4884:7:3","nodeType":"VariableDeclaration","scope":403,"src":"4876:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":399,"mutability":"mutable","name":"needed","nameLocation":"4901:6:3","nodeType":"VariableDeclaration","scope":403,"src":"4893:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":398,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":401,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:3","nodeType":"VariableDeclaration","scope":403,"src":"4909:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":400,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:3"},"src":"4827:99:3"},{"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"4932:152:3","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":408,"name":"ERC1155InvalidSender","nameLocation":"5095:20:3","nodeType":"ErrorDefinition","parameters":{"id":407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"sender","nameLocation":"5124:6:3","nodeType":"VariableDeclaration","scope":408,"src":"5116:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":405,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:3"},"src":"5089:43:3"},{"documentation":{"id":409,"nodeType":"StructuredDocumentation","src":"5138:159:3","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":413,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:3","nodeType":"ErrorDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:3","nodeType":"VariableDeclaration","scope":413,"src":"5331:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:3"},"src":"5302:47:3"},{"documentation":{"id":414,"nodeType":"StructuredDocumentation","src":"5355:256:3","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":420,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:3","nodeType":"ErrorDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"operator","nameLocation":"5659:8:3","nodeType":"VariableDeclaration","scope":420,"src":"5651:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":415,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"owner","nameLocation":"5677:5:3","nodeType":"VariableDeclaration","scope":420,"src":"5669:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:3"},"src":"5616:68:3"},{"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"5690:174:3","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":425,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:3","nodeType":"ErrorDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"approver","nameLocation":"5906:8:3","nodeType":"VariableDeclaration","scope":425,"src":"5898:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:3"},"src":"5869:47:3"},{"documentation":{"id":426,"nodeType":"StructuredDocumentation","src":"5922:197:3","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":430,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:3","nodeType":"ErrorDefinition","parameters":{"id":429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":428,"mutability":"mutable","name":"operator","nameLocation":"6161:8:3","nodeType":"VariableDeclaration","scope":430,"src":"6153:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":427,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:3"},"src":"6124:47:3"},{"documentation":{"id":431,"nodeType":"StructuredDocumentation","src":"6177:280:3","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":437,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:3","nodeType":"ErrorDefinition","parameters":{"id":436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":433,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:3","nodeType":"VariableDeclaration","scope":437,"src":"6494:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":435,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:3","nodeType":"VariableDeclaration","scope":437,"src":"6513:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":434,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:3"},"src":"6462:73:3"}],"scope":439,"src":"4430:2107:3","usedErrors":[403,408,413,420,425,430,437],"usedEvents":[]}],"src":"112:6426:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[4592],"Context":[4654],"ERC1155":[1355],"ERC1155Utils":[1771],"ERC165":[6455],"IERC1155":[1478],"IERC1155Errors":[438],"IERC1155MetadataURI":[1536],"IERC165":[6467]},"id":1356,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":440,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":442,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1356,"sourceUnit":1479,"src":"135:40:4","symbolAliases":[{"foreign":{"id":441,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"143:8:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":444,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1356,"sourceUnit":1537,"src":"176:73:4","symbolAliases":[{"foreign":{"id":443,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"184:19:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":446,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1356,"sourceUnit":1772,"src":"250:54:4","symbolAliases":[{"foreign":{"id":445,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"258:12:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":448,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1356,"sourceUnit":4655,"src":"305:48:4","symbolAliases":[{"foreign":{"id":447,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"313:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":451,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1356,"sourceUnit":6456,"src":"354:69:4","symbolAliases":[{"foreign":{"id":449,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"362:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":450,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"371:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":453,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1356,"sourceUnit":4593,"src":"424:46:4","symbolAliases":[{"foreign":{"id":452,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4592,"src":"432:6:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":455,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1356,"sourceUnit":439,"src":"471:67:4","symbolAliases":[{"foreign":{"id":454,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"479:14:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":457,"name":"Context","nameLocations":["754:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"754:7:4"},"id":458,"nodeType":"InheritanceSpecifier","src":"754:7:4"},{"baseName":{"id":459,"name":"ERC165","nameLocations":["763:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":6455,"src":"763:6:4"},"id":460,"nodeType":"InheritanceSpecifier","src":"763:6:4"},{"baseName":{"id":461,"name":"IERC1155","nameLocations":["771:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":1478,"src":"771:8:4"},"id":462,"nodeType":"InheritanceSpecifier","src":"771:8:4"},{"baseName":{"id":463,"name":"IERC1155MetadataURI","nameLocations":["781:19:4"],"nodeType":"IdentifierPath","referencedDeclaration":1536,"src":"781:19:4"},"id":464,"nodeType":"InheritanceSpecifier","src":"781:19:4"},{"baseName":{"id":465,"name":"IERC1155Errors","nameLocations":["802:14:4"],"nodeType":"IdentifierPath","referencedDeclaration":438,"src":"802:14:4"},"id":466,"nodeType":"InheritanceSpecifier","src":"802:14:4"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":456,"nodeType":"StructuredDocumentation","src":"540:184:4","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1355,"linearizedBaseContracts":[1355,438,1536,1478,6455,6467,4654],"name":"ERC1155","nameLocation":"743:7:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":470,"libraryName":{"id":467,"name":"Arrays","nameLocations":["829:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":4592,"src":"829:6:4"},"nodeType":"UsingForDirective","src":"823:27:4","typeName":{"baseType":{"id":468,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":469,"nodeType":"ArrayTypeName","src":"840:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":474,"libraryName":{"id":471,"name":"Arrays","nameLocations":["861:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":4592,"src":"861:6:4"},"nodeType":"UsingForDirective","src":"855:27:4","typeName":{"baseType":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":473,"nodeType":"ArrayTypeName","src":"872:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":480,"mutability":"mutable","name":"_balances","nameLocation":"955:9:4","nodeType":"VariableDeclaration","scope":1355,"src":"888:76:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":479,"keyName":"id","keyNameLocation":"904:2:4","keyType":{"id":475,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":478,"keyName":"account","keyNameLocation":"926:7:4","keyType":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":477,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":486,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:4","nodeType":"VariableDeclaration","scope":1355,"src":"971:88:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":485,"keyName":"account","keyNameLocation":"987:7:4","keyType":{"id":481,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":484,"keyName":"operator","keyNameLocation":"1014:8:4","keyType":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":483,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":488,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:4","nodeType":"VariableDeclaration","scope":1355,"src":"1180:19:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":487,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":498,"nodeType":"Block","src":"1281:30:4","statements":[{"expression":{"arguments":[{"id":495,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":491,"src":"1299:4:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":494,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1116,"src":"1291:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":497,"nodeType":"ExpressionStatement","src":"1291:13:4"}]},"documentation":{"id":489,"nodeType":"StructuredDocumentation","src":"1206:38:4","text":" @dev See {_setURI}."},"id":499,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:4","nodeType":"VariableDeclaration","scope":499,"src":"1261:18:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":490,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:4"},"returnParameters":{"id":493,"nodeType":"ParameterList","parameters":[],"src":"1281:0:4"},"scope":1355,"src":"1249:62:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[6454,6466],"body":{"id":529,"nodeType":"Block","src":"1453:197:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":510,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"1482:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":512,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"1502:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1478_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1478_$","typeString":"type(contract IERC1155)"}],"id":511,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1497:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1497:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1478","typeString":"type(contract IERC1155)"}},"id":514,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1512:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1497:26:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1482:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":516,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"1539:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":518,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"1559:19:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1536_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1536_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":517,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1554:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1554:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1536","typeString":"type(contract IERC1155MetadataURI)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1580:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1554:37:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1539:52:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1482:109:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":525,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"1631:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":523,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1607:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1355_$","typeString":"type(contract super ERC1155)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1613:17:4","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":6454,"src":"1607:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1607:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1482:161:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":509,"id":528,"nodeType":"Return","src":"1463:180:4"}]},"documentation":{"id":500,"nodeType":"StructuredDocumentation","src":"1317:23:4","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":530,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1354:17:4","nodeType":"FunctionDefinition","overrides":{"id":506,"nodeType":"OverrideSpecifier","overrides":[{"id":504,"name":"ERC165","nameLocations":["1421:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":6455,"src":"1421:6:4"},{"id":505,"name":"IERC165","nameLocations":["1429:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":6467,"src":"1429:7:4"}],"src":"1412:25:4"},"parameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":502,"mutability":"mutable","name":"interfaceId","nameLocation":"1379:11:4","nodeType":"VariableDeclaration","scope":530,"src":"1372:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":501,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1372:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1371:20:4"},"returnParameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":530,"src":"1447:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":507,"name":"bool","nodeType":"ElementaryTypeName","src":"1447:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1446:6:4"},"scope":1355,"src":"1345:305:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1535],"body":{"id":540,"nodeType":"Block","src":"2124:28:4","statements":[{"expression":{"id":538,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"2141:4:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":537,"id":539,"nodeType":"Return","src":"2134:11:4"}]},"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"1656:388:4","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":541,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2058:3:4","nodeType":"FunctionDefinition","parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"2062:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":532,"name":"uint256","nodeType":"ElementaryTypeName","src":"2062:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2061:18:4"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"2109:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":535,"name":"string","nodeType":"ElementaryTypeName","src":"2109:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2108:15:4"},"scope":1355,"src":"2049:103:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1416],"body":{"id":557,"nodeType":"Block","src":"2273:46:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":551,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"2290:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":553,"indexExpression":{"id":552,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":546,"src":"2300:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2290:13:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":555,"indexExpression":{"id":554,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"2304:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2290:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":550,"id":556,"nodeType":"Return","src":"2283:29:4"}]},"documentation":{"id":542,"nodeType":"StructuredDocumentation","src":"2158:24:4","text":"@inheritdoc IERC1155"},"functionSelector":"00fdd58e","id":558,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2196:9:4","nodeType":"FunctionDefinition","parameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":544,"mutability":"mutable","name":"account","nameLocation":"2214:7:4","nodeType":"VariableDeclaration","scope":558,"src":"2206:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":543,"name":"address","nodeType":"ElementaryTypeName","src":"2206:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":546,"mutability":"mutable","name":"id","nameLocation":"2231:2:4","nodeType":"VariableDeclaration","scope":558,"src":"2223:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":545,"name":"uint256","nodeType":"ElementaryTypeName","src":"2223:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2205:29:4"},"returnParameters":{"id":550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":558,"src":"2264:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":548,"name":"uint256","nodeType":"ElementaryTypeName","src":"2264:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:9:4"},"scope":1355,"src":"2187:132:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1429],"body":{"id":627,"nodeType":"Block","src":"2618:410:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":571,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2632:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2641:6:4","memberName":"length","nodeType":"MemberAccess","src":"2632:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":573,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"2651:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2655:6:4","memberName":"length","nodeType":"MemberAccess","src":"2651:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2632:29:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":584,"nodeType":"IfStatement","src":"2628:121:4","trueBody":{"id":583,"nodeType":"Block","src":"2663:86:4","statements":[{"errorCall":{"arguments":[{"expression":{"id":577,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"2710:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2714:6:4","memberName":"length","nodeType":"MemberAccess","src":"2710:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":579,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2722:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2731:6:4","memberName":"length","nodeType":"MemberAccess","src":"2722:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":576,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"2684:25:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2684:54:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":582,"nodeType":"RevertStatement","src":"2677:61:4"}]}},{"assignments":[589],"declarations":[{"constant":false,"id":589,"mutability":"mutable","name":"batchBalances","nameLocation":"2776:13:4","nodeType":"VariableDeclaration","scope":627,"src":"2759:30:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":587,"name":"uint256","nodeType":"ElementaryTypeName","src":"2759:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":588,"nodeType":"ArrayTypeName","src":"2759:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":596,"initialValue":{"arguments":[{"expression":{"id":593,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2806:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2815:6:4","memberName":"length","nodeType":"MemberAccess","src":"2806:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2792:13:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":590,"name":"uint256","nodeType":"ElementaryTypeName","src":"2796:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":591,"nodeType":"ArrayTypeName","src":"2796:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":595,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2792:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2759:63:4"},{"body":{"id":623,"nodeType":"Block","src":"2879:112:4","statements":[{"expression":{"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":608,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"2893:13:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":610,"indexExpression":{"id":609,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"2907:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2893:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":614,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"2950:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":612,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2922:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2931:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4484,"src":"2922:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2922:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":618,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"2977:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":616,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":565,"src":"2954:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2958:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4510,"src":"2954:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2954:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":611,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":558,"src":"2912:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2893:87:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":622,"nodeType":"ExpressionStatement","src":"2893:87:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":601,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"2853:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":602,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"2857:8:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2866:6:4","memberName":"length","nodeType":"MemberAccess","src":"2857:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2853:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"initializationExpression":{"assignments":[598],"declarations":[{"constant":false,"id":598,"mutability":"mutable","name":"i","nameLocation":"2846:1:4","nodeType":"VariableDeclaration","scope":624,"src":"2838:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"2838:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":600,"initialValue":{"hexValue":"30","id":599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2850:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2838:13:4"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2874:3:4","subExpression":{"id":605,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"2876:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":607,"nodeType":"ExpressionStatement","src":"2874:3:4"},"nodeType":"ForStatement","src":"2833:158:4"},{"expression":{"id":625,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"3008:13:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":570,"id":626,"nodeType":"Return","src":"3001:20:4"}]},"documentation":{"id":559,"nodeType":"StructuredDocumentation","src":"2325:146:4","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":628,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2485:14:4","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":562,"mutability":"mutable","name":"accounts","nameLocation":"2526:8:4","nodeType":"VariableDeclaration","scope":628,"src":"2509:25:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":560,"name":"address","nodeType":"ElementaryTypeName","src":"2509:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":561,"nodeType":"ArrayTypeName","src":"2509:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":565,"mutability":"mutable","name":"ids","nameLocation":"2561:3:4","nodeType":"VariableDeclaration","scope":628,"src":"2544:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":563,"name":"uint256","nodeType":"ElementaryTypeName","src":"2544:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":564,"nodeType":"ArrayTypeName","src":"2544:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2499:71:4"},"returnParameters":{"id":570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":628,"src":"2600:16:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":567,"name":"uint256","nodeType":"ElementaryTypeName","src":"2600:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":568,"nodeType":"ArrayTypeName","src":"2600:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2599:18:4"},"scope":1355,"src":"2476:552:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1437],"body":{"id":643,"nodeType":"Block","src":"3138:69:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":637,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"3167:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3167:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":639,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"3181:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":640,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":633,"src":"3191:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":636,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"3148:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3148:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"3148:52:4"}]},"documentation":{"id":629,"nodeType":"StructuredDocumentation","src":"3034:24:4","text":"@inheritdoc IERC1155"},"functionSelector":"a22cb465","id":644,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3072:17:4","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":631,"mutability":"mutable","name":"operator","nameLocation":"3098:8:4","nodeType":"VariableDeclaration","scope":644,"src":"3090:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"3090:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":633,"mutability":"mutable","name":"approved","nameLocation":"3113:8:4","nodeType":"VariableDeclaration","scope":644,"src":"3108:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":632,"name":"bool","nodeType":"ElementaryTypeName","src":"3108:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3089:33:4"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[],"src":"3138:0:4"},"scope":1355,"src":"3063:144:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1447],"body":{"id":660,"nodeType":"Block","src":"3338:61:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":654,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"3355:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":656,"indexExpression":{"id":655,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":647,"src":"3374:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":658,"indexExpression":{"id":657,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"3383:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3355:37:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":653,"id":659,"nodeType":"Return","src":"3348:44:4"}]},"documentation":{"id":645,"nodeType":"StructuredDocumentation","src":"3213:24:4","text":"@inheritdoc IERC1155"},"functionSelector":"e985e9c5","id":661,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3251:16:4","nodeType":"FunctionDefinition","parameters":{"id":650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":647,"mutability":"mutable","name":"account","nameLocation":"3276:7:4","nodeType":"VariableDeclaration","scope":661,"src":"3268:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":646,"name":"address","nodeType":"ElementaryTypeName","src":"3268:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":649,"mutability":"mutable","name":"operator","nameLocation":"3293:8:4","nodeType":"VariableDeclaration","scope":661,"src":"3285:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":648,"name":"address","nodeType":"ElementaryTypeName","src":"3285:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3267:35:4"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":661,"src":"3332:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":651,"name":"bool","nodeType":"ElementaryTypeName","src":"3332:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3331:6:4"},"scope":1355,"src":"3242:157:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1461],"body":{"id":704,"nodeType":"Block","src":"3547:238:4","statements":[{"assignments":[676],"declarations":[{"constant":false,"id":676,"mutability":"mutable","name":"sender","nameLocation":"3565:6:4","nodeType":"VariableDeclaration","scope":704,"src":"3557:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"3557:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":679,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":677,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"3574:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3574:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3557:29:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":680,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3600:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":681,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"3608:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3600:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3618:31:4","subExpression":{"arguments":[{"id":684,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3636:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":685,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"3642:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":683,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"3619:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3619:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3600:49:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":695,"nodeType":"IfStatement","src":"3596:129:4","trueBody":{"id":694,"nodeType":"Block","src":"3651:74:4","statements":[{"errorCall":{"arguments":[{"id":690,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"3701:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":691,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3709:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":689,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"3672:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":693,"nodeType":"RevertStatement","src":"3665:49:4"}]}},{"expression":{"arguments":[{"id":697,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":664,"src":"3752:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":698,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"3758:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":699,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":668,"src":"3762:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":670,"src":"3766:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":701,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":672,"src":"3773:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":696,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1050,"src":"3734:17:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3734:44:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":703,"nodeType":"ExpressionStatement","src":"3734:44:4"}]},"documentation":{"id":662,"nodeType":"StructuredDocumentation","src":"3405:24:4","text":"@inheritdoc IERC1155"},"functionSelector":"f242432a","id":705,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3443:16:4","nodeType":"FunctionDefinition","parameters":{"id":673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":664,"mutability":"mutable","name":"from","nameLocation":"3468:4:4","nodeType":"VariableDeclaration","scope":705,"src":"3460:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"3460:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":666,"mutability":"mutable","name":"to","nameLocation":"3482:2:4","nodeType":"VariableDeclaration","scope":705,"src":"3474:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":665,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":668,"mutability":"mutable","name":"id","nameLocation":"3494:2:4","nodeType":"VariableDeclaration","scope":705,"src":"3486:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":667,"name":"uint256","nodeType":"ElementaryTypeName","src":"3486:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":670,"mutability":"mutable","name":"value","nameLocation":"3506:5:4","nodeType":"VariableDeclaration","scope":705,"src":"3498:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"3498:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":672,"mutability":"mutable","name":"data","nameLocation":"3526:4:4","nodeType":"VariableDeclaration","scope":705,"src":"3513:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":671,"name":"bytes","nodeType":"ElementaryTypeName","src":"3513:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3459:72:4"},"returnParameters":{"id":674,"nodeType":"ParameterList","parameters":[],"src":"3547:0:4"},"scope":1355,"src":"3434:351:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1477],"body":{"id":750,"nodeType":"Block","src":"4004:245:4","statements":[{"assignments":[722],"declarations":[{"constant":false,"id":722,"mutability":"mutable","name":"sender","nameLocation":"4022:6:4","nodeType":"VariableDeclaration","scope":750,"src":"4014:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":721,"name":"address","nodeType":"ElementaryTypeName","src":"4014:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":725,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":723,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"4031:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4031:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4014:29:4"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":726,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"4057:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":727,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"4065:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4057:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4075:31:4","subExpression":{"arguments":[{"id":730,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"4093:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":731,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"4099:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":729,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":661,"src":"4076:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4076:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4057:49:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":741,"nodeType":"IfStatement","src":"4053:129:4","trueBody":{"id":740,"nodeType":"Block","src":"4108:74:4","statements":[{"errorCall":{"arguments":[{"id":736,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":722,"src":"4158:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":737,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"4166:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":735,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":420,"src":"4129:28:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$_t_error_$","typeString":"function (address,address) pure returns (error)"}},"id":738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4129:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":739,"nodeType":"RevertStatement","src":"4122:49:4"}]}},{"expression":{"arguments":[{"id":743,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":708,"src":"4214:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":744,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":710,"src":"4220:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":745,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":713,"src":"4224:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":746,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":716,"src":"4229:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":747,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":718,"src":"4237:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":742,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"4191:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":749,"nodeType":"ExpressionStatement","src":"4191:51:4"}]},"documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"3791:24:4","text":"@inheritdoc IERC1155"},"functionSelector":"2eb2c2d6","id":751,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"3829:21:4","nodeType":"FunctionDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"mutability":"mutable","name":"from","nameLocation":"3868:4:4","nodeType":"VariableDeclaration","scope":751,"src":"3860:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":707,"name":"address","nodeType":"ElementaryTypeName","src":"3860:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":710,"mutability":"mutable","name":"to","nameLocation":"3890:2:4","nodeType":"VariableDeclaration","scope":751,"src":"3882:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"3882:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":713,"mutability":"mutable","name":"ids","nameLocation":"3919:3:4","nodeType":"VariableDeclaration","scope":751,"src":"3902:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":711,"name":"uint256","nodeType":"ElementaryTypeName","src":"3902:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":712,"nodeType":"ArrayTypeName","src":"3902:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":716,"mutability":"mutable","name":"values","nameLocation":"3949:6:4","nodeType":"VariableDeclaration","scope":751,"src":"3932:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":714,"name":"uint256","nodeType":"ElementaryTypeName","src":"3932:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":715,"nodeType":"ArrayTypeName","src":"3932:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":718,"mutability":"mutable","name":"data","nameLocation":"3978:4:4","nodeType":"VariableDeclaration","scope":751,"src":"3965:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":717,"name":"bytes","nodeType":"ElementaryTypeName","src":"3965:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3850:138:4"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"4004:0:4"},"scope":1355,"src":"3820:429:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":903,"nodeType":"Block","src":"5057:1174:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":765,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"5071:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5075:6:4","memberName":"length","nodeType":"MemberAccess","src":"5071:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":767,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"5085:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5092:6:4","memberName":"length","nodeType":"MemberAccess","src":"5085:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5071:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":778,"nodeType":"IfStatement","src":"5067:117:4","trueBody":{"id":777,"nodeType":"Block","src":"5100:84:4","statements":[{"errorCall":{"arguments":[{"expression":{"id":771,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"5147:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5151:6:4","memberName":"length","nodeType":"MemberAccess","src":"5147:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":773,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"5159:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5166:6:4","memberName":"length","nodeType":"MemberAccess","src":"5159:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":770,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"5121:25:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5121:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":776,"nodeType":"RevertStatement","src":"5114:59:4"}]}},{"assignments":[780],"declarations":[{"constant":false,"id":780,"mutability":"mutable","name":"operator","nameLocation":"5202:8:4","nodeType":"VariableDeclaration","scope":903,"src":"5194:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"5194:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":783,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":781,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"5213:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5213:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5194:31:4"},{"body":{"id":864,"nodeType":"Block","src":"5277:650:4","statements":[{"assignments":[796],"declarations":[{"constant":false,"id":796,"mutability":"mutable","name":"id","nameLocation":"5299:2:4","nodeType":"VariableDeclaration","scope":864,"src":"5291:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"5291:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[{"id":799,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"5327:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":797,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"5304:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5308:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4510,"src":"5304:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5304:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5291:38:4"},{"assignments":[803],"declarations":[{"constant":false,"id":803,"mutability":"mutable","name":"value","nameLocation":"5351:5:4","nodeType":"VariableDeclaration","scope":864,"src":"5343:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":802,"name":"uint256","nodeType":"ElementaryTypeName","src":"5343:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":808,"initialValue":{"arguments":[{"id":806,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"5385:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":804,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"5359:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5366:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4510,"src":"5359:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5359:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5343:44:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":809,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"5406:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5422:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5414:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":810,"name":"address","nodeType":"ElementaryTypeName","src":"5414:7:4","typeDescriptions":{}}},"id":813,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5414:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5406:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":847,"nodeType":"IfStatement","src":"5402:420:4","trueBody":{"id":846,"nodeType":"Block","src":"5426:396:4","statements":[{"assignments":[816],"declarations":[{"constant":false,"id":816,"mutability":"mutable","name":"fromBalance","nameLocation":"5452:11:4","nodeType":"VariableDeclaration","scope":846,"src":"5444:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":815,"name":"uint256","nodeType":"ElementaryTypeName","src":"5444:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":822,"initialValue":{"baseExpression":{"baseExpression":{"id":817,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"5466:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":819,"indexExpression":{"id":818,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"5476:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5466:13:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":821,"indexExpression":{"id":820,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"5480:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5466:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5444:41:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":823,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"5507:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":824,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5521:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5507:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":834,"nodeType":"IfStatement","src":"5503:129:4","trueBody":{"id":833,"nodeType":"Block","src":"5528:104:4","statements":[{"errorCall":{"arguments":[{"id":827,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"5584:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":828,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"5590:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5603:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":830,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"5610:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":826,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":403,"src":"5557:26:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256,uint256) pure returns (error)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5557:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":832,"nodeType":"RevertStatement","src":"5550:63:4"}]}},{"id":845,"nodeType":"UncheckedBlock","src":"5649:159:4","statements":[{"expression":{"id":843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":835,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"5748:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":838,"indexExpression":{"id":836,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"5758:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5748:13:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":839,"indexExpression":{"id":837,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"5762:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5748:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":840,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":816,"src":"5770:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5784:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5770:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5748:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":844,"nodeType":"ExpressionStatement","src":"5748:41:4"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":848,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"5840:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5854:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5846:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"5846:7:4","typeDescriptions":{}}},"id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5846:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5840:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":863,"nodeType":"IfStatement","src":"5836:81:4","trueBody":{"id":862,"nodeType":"Block","src":"5858:59:4","statements":[{"expression":{"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":854,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":480,"src":"5876:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":857,"indexExpression":{"id":855,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"5886:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5876:13:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":858,"indexExpression":{"id":856,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"5890:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5876:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":803,"src":"5897:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5876:26:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":861,"nodeType":"ExpressionStatement","src":"5876:26:4"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":788,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"5256:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":789,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"5260:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5264:6:4","memberName":"length","nodeType":"MemberAccess","src":"5260:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5256:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":865,"initializationExpression":{"assignments":[785],"declarations":[{"constant":false,"id":785,"mutability":"mutable","name":"i","nameLocation":"5249:1:4","nodeType":"VariableDeclaration","scope":865,"src":"5241:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":784,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":787,"initialValue":{"hexValue":"30","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5253:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5241:13:4"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5272:3:4","subExpression":{"id":792,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":785,"src":"5274:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":794,"nodeType":"ExpressionStatement","src":"5272:3:4"},"nodeType":"ForStatement","src":"5236:691:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":869,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":866,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"5941:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5945:6:4","memberName":"length","nodeType":"MemberAccess","src":"5941:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5955:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5941:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":901,"nodeType":"Block","src":"6149:76:4","statements":[{"eventCall":{"arguments":[{"id":894,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"6182:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":895,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"6192:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":896,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"6198:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":897,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"6202:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":898,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"6207:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":893,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"6168:13:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6168:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":900,"nodeType":"EmitStatement","src":"6163:51:4"}]},"id":902,"nodeType":"IfStatement","src":"5937:288:4","trueBody":{"id":892,"nodeType":"Block","src":"5958:185:4","statements":[{"assignments":[871],"declarations":[{"constant":false,"id":871,"mutability":"mutable","name":"id","nameLocation":"5980:2:4","nodeType":"VariableDeclaration","scope":892,"src":"5972:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":870,"name":"uint256","nodeType":"ElementaryTypeName","src":"5972:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":876,"initialValue":{"arguments":[{"hexValue":"30","id":874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6008:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":872,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"5985:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5989:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4510,"src":"5985:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5985:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5972:38:4"},{"assignments":[878],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"value","nameLocation":"6032:5:4","nodeType":"VariableDeclaration","scope":892,"src":"6024:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":877,"name":"uint256","nodeType":"ElementaryTypeName","src":"6024:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":883,"initialValue":{"arguments":[{"hexValue":"30","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6066:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":879,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":762,"src":"6040:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6047:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4510,"src":"6040:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6040:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6024:44:4"},{"eventCall":{"arguments":[{"id":885,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"6102:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":886,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"6112:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":887,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":756,"src":"6118:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":888,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":871,"src":"6122:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"6126:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":884,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1375,"src":"6087:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6087:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":891,"nodeType":"EmitStatement","src":"6082:50:4"}]}}]},"documentation":{"id":752,"nodeType":"StructuredDocumentation","src":"4255:690:4","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":904,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"4959:7:4","nodeType":"FunctionDefinition","parameters":{"id":763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":754,"mutability":"mutable","name":"from","nameLocation":"4975:4:4","nodeType":"VariableDeclaration","scope":904,"src":"4967:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":753,"name":"address","nodeType":"ElementaryTypeName","src":"4967:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":756,"mutability":"mutable","name":"to","nameLocation":"4989:2:4","nodeType":"VariableDeclaration","scope":904,"src":"4981:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"4981:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"ids","nameLocation":"5010:3:4","nodeType":"VariableDeclaration","scope":904,"src":"4993:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":757,"name":"uint256","nodeType":"ElementaryTypeName","src":"4993:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":758,"nodeType":"ArrayTypeName","src":"4993:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":762,"mutability":"mutable","name":"values","nameLocation":"5032:6:4","nodeType":"VariableDeclaration","scope":904,"src":"5015:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":760,"name":"uint256","nodeType":"ElementaryTypeName","src":"5015:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":761,"nodeType":"ArrayTypeName","src":"5015:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"4966:73:4"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[],"src":"5057:0:4"},"scope":1355,"src":"4950:1281:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":983,"nodeType":"Block","src":"7001:509:4","statements":[{"expression":{"arguments":[{"id":921,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"7019:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":922,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"7025:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":923,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7029:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":924,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"7034:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":920,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"7011:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7011:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":926,"nodeType":"ExpressionStatement","src":"7011:30:4"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":927,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"7055:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7069:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7061:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"7061:7:4","typeDescriptions":{}}},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7061:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7055:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":982,"nodeType":"IfStatement","src":"7051:453:4","trueBody":{"id":981,"nodeType":"Block","src":"7073:431:4","statements":[{"assignments":[934],"declarations":[{"constant":false,"id":934,"mutability":"mutable","name":"operator","nameLocation":"7095:8:4","nodeType":"VariableDeclaration","scope":981,"src":"7087:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":933,"name":"address","nodeType":"ElementaryTypeName","src":"7087:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":937,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":935,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"7106:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":936,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7106:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7087:31:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":938,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7136:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7140:6:4","memberName":"length","nodeType":"MemberAccess","src":"7136:10:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7150:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7136:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":979,"nodeType":"Block","src":"7382:112:4","statements":[{"expression":{"arguments":[{"id":971,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"7441:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":972,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"7451:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":973,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"7457:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7461:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":975,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"7466:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":976,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"7474:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":968,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"7400:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1771_$","typeString":"type(library ERC1155Utils)"}},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7413:27:4","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1770,"src":"7400:40:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7400:79:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":978,"nodeType":"ExpressionStatement","src":"7400:79:4"}]},"id":980,"nodeType":"IfStatement","src":"7132:362:4","trueBody":{"id":967,"nodeType":"Block","src":"7153:223:4","statements":[{"assignments":[943],"declarations":[{"constant":false,"id":943,"mutability":"mutable","name":"id","nameLocation":"7179:2:4","nodeType":"VariableDeclaration","scope":967,"src":"7171:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":942,"name":"uint256","nodeType":"ElementaryTypeName","src":"7171:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":948,"initialValue":{"arguments":[{"hexValue":"30","id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7207:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":944,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"7184:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7188:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4510,"src":"7184:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7184:25:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7171:38:4"},{"assignments":[950],"declarations":[{"constant":false,"id":950,"mutability":"mutable","name":"value","nameLocation":"7235:5:4","nodeType":"VariableDeclaration","scope":967,"src":"7227:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"7227:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":955,"initialValue":{"arguments":[{"hexValue":"30","id":953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7269:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":951,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"7243:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7250:18:4","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":4510,"src":"7243:25:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7243:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7227:44:4"},{"expression":{"arguments":[{"id":959,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":934,"src":"7325:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":960,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"7335:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":961,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"7341:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":962,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"7345:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"7349:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":964,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":917,"src":"7356:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":956,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1771,"src":"7289:12:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1771_$","typeString":"type(library ERC1155Utils)"}},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7302:22:4","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1696,"src":"7289:35:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7289:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":966,"nodeType":"ExpressionStatement","src":"7289:72:4"}]}}]}}]},"documentation":{"id":905,"nodeType":"StructuredDocumentation","src":"6237:568:4","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":984,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"6819:26:4","nodeType":"FunctionDefinition","parameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":907,"mutability":"mutable","name":"from","nameLocation":"6863:4:4","nodeType":"VariableDeclaration","scope":984,"src":"6855:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":906,"name":"address","nodeType":"ElementaryTypeName","src":"6855:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"to","nameLocation":"6885:2:4","nodeType":"VariableDeclaration","scope":984,"src":"6877:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":908,"name":"address","nodeType":"ElementaryTypeName","src":"6877:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"ids","nameLocation":"6914:3:4","nodeType":"VariableDeclaration","scope":984,"src":"6897:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"6897:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":911,"nodeType":"ArrayTypeName","src":"6897:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":915,"mutability":"mutable","name":"values","nameLocation":"6944:6:4","nodeType":"VariableDeclaration","scope":984,"src":"6927:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":914,"nodeType":"ArrayTypeName","src":"6927:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":917,"mutability":"mutable","name":"data","nameLocation":"6973:4:4","nodeType":"VariableDeclaration","scope":984,"src":"6960:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":916,"name":"bytes","nodeType":"ElementaryTypeName","src":"6960:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6845:138:4"},"returnParameters":{"id":919,"nodeType":"ParameterList","parameters":[],"src":"7001:0:4"},"scope":1355,"src":"6810:700:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1049,"nodeType":"Block","src":"8075:355:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":998,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"8089:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8103:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8095:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"8095:7:4","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8095:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8089:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1012,"nodeType":"IfStatement","src":"8085:88:4","trueBody":{"id":1011,"nodeType":"Block","src":"8107:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8159:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8151:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"8151:7:4","typeDescriptions":{}}},"id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8151:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1004,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"8128:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8128:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1010,"nodeType":"RevertStatement","src":"8121:41:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1013,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"8186:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8202:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1015,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8194:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"8194:7:4","typeDescriptions":{}}},"id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8194:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8186:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1027,"nodeType":"IfStatement","src":"8182:88:4","trueBody":{"id":1026,"nodeType":"Block","src":"8206:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8256:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8248:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1020,"name":"address","nodeType":"ElementaryTypeName","src":"8248:7:4","typeDescriptions":{}}},"id":1023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8248:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1019,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"8227:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8227:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1025,"nodeType":"RevertStatement","src":"8220:39:4"}]}},{"assignments":[1032,1035],"declarations":[{"constant":false,"id":1032,"mutability":"mutable","name":"ids","nameLocation":"8297:3:4","nodeType":"VariableDeclaration","scope":1049,"src":"8280:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"8280:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1031,"nodeType":"ArrayTypeName","src":"8280:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"values","nameLocation":"8319:6:4","nodeType":"VariableDeclaration","scope":1049,"src":"8302:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"8302:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1034,"nodeType":"ArrayTypeName","src":"8302:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1040,"initialValue":{"arguments":[{"id":1037,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":991,"src":"8348:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"8352:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1036,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"8329:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8329:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8279:79:4"},{"expression":{"arguments":[{"id":1042,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":987,"src":"8395:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1043,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":989,"src":"8401:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1044,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1032,"src":"8405:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1045,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"8410:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1046,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":995,"src":"8418:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1041,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"8368:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8368:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1048,"nodeType":"ExpressionStatement","src":"8368:55:4"}]},"documentation":{"id":985,"nodeType":"StructuredDocumentation","src":"7516:446:4","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1050,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"7976:17:4","nodeType":"FunctionDefinition","parameters":{"id":996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":987,"mutability":"mutable","name":"from","nameLocation":"8002:4:4","nodeType":"VariableDeclaration","scope":1050,"src":"7994:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":986,"name":"address","nodeType":"ElementaryTypeName","src":"7994:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":989,"mutability":"mutable","name":"to","nameLocation":"8016:2:4","nodeType":"VariableDeclaration","scope":1050,"src":"8008:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":988,"name":"address","nodeType":"ElementaryTypeName","src":"8008:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":991,"mutability":"mutable","name":"id","nameLocation":"8028:2:4","nodeType":"VariableDeclaration","scope":1050,"src":"8020:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":990,"name":"uint256","nodeType":"ElementaryTypeName","src":"8020:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"value","nameLocation":"8040:5:4","nodeType":"VariableDeclaration","scope":1050,"src":"8032:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"8032:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"data","nameLocation":"8060:4:4","nodeType":"VariableDeclaration","scope":1050,"src":"8047:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":994,"name":"bytes","nodeType":"ElementaryTypeName","src":"8047:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7993:72:4"},"returnParameters":{"id":997,"nodeType":"ParameterList","parameters":[],"src":"8075:0:4"},"scope":1355,"src":"7967:463:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1104,"nodeType":"Block","src":"9010:266:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1066,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"9024:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9038:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9030:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"9030:7:4","typeDescriptions":{}}},"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9030:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9024:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1080,"nodeType":"IfStatement","src":"9020:88:4","trueBody":{"id":1079,"nodeType":"Block","src":"9042:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9094:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9086:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:4","typeDescriptions":{}}},"id":1076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9086:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1072,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"9063:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9063:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1078,"nodeType":"RevertStatement","src":"9056:41:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1081,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"9121:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9137:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9129:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"9129:7:4","typeDescriptions":{}}},"id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9129:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9121:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1095,"nodeType":"IfStatement","src":"9117:88:4","trueBody":{"id":1094,"nodeType":"Block","src":"9141:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9191:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9183:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"9183:7:4","typeDescriptions":{}}},"id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9183:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1087,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"9162:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9162:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1093,"nodeType":"RevertStatement","src":"9155:39:4"}]}},{"expression":{"arguments":[{"id":1097,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1053,"src":"9241:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1098,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"9247:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1099,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"9251:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1100,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"9256:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1101,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1063,"src":"9264:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1096,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"9214:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9214:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1103,"nodeType":"ExpressionStatement","src":"9214:55:4"}]},"documentation":{"id":1051,"nodeType":"StructuredDocumentation","src":"8436:390:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":1105,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"8840:22:4","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1053,"mutability":"mutable","name":"from","nameLocation":"8880:4:4","nodeType":"VariableDeclaration","scope":1105,"src":"8872:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"8872:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"to","nameLocation":"8902:2:4","nodeType":"VariableDeclaration","scope":1105,"src":"8894:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"8894:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1058,"mutability":"mutable","name":"ids","nameLocation":"8931:3:4","nodeType":"VariableDeclaration","scope":1105,"src":"8914:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1056,"name":"uint256","nodeType":"ElementaryTypeName","src":"8914:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1057,"nodeType":"ArrayTypeName","src":"8914:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"values","nameLocation":"8961:6:4","nodeType":"VariableDeclaration","scope":1105,"src":"8944:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"8944:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1060,"nodeType":"ArrayTypeName","src":"8944:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"data","nameLocation":"8990:4:4","nodeType":"VariableDeclaration","scope":1105,"src":"8977:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1062,"name":"bytes","nodeType":"ElementaryTypeName","src":"8977:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8862:138:4"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[],"src":"9010:0:4"},"scope":1355,"src":"8831:445:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1115,"nodeType":"Block","src":"10154:30:4","statements":[{"expression":{"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1111,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"10164:4:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1112,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"10171:6:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10164:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1114,"nodeType":"ExpressionStatement","src":"10164:13:4"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"9282:811:4","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":1116,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10107:7:4","nodeType":"FunctionDefinition","parameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"newuri","nameLocation":"10129:6:4","nodeType":"VariableDeclaration","scope":1116,"src":"10115:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1107,"name":"string","nodeType":"ElementaryTypeName","src":"10115:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10114:22:4"},"returnParameters":{"id":1110,"nodeType":"ParameterList","parameters":[],"src":"10154:0:4"},"scope":1355,"src":"10098:86:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1167,"nodeType":"Block","src":"10644:264:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1128,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"10658:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10672:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10664:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1129,"name":"address","nodeType":"ElementaryTypeName","src":"10664:7:4","typeDescriptions":{}}},"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10664:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10658:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1142,"nodeType":"IfStatement","src":"10654:88:4","trueBody":{"id":1141,"nodeType":"Block","src":"10676:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10728:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10720:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"10720:7:4","typeDescriptions":{}}},"id":1138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10720:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1134,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"10697:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10697:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1140,"nodeType":"RevertStatement","src":"10690:41:4"}]}},{"assignments":[1147,1150],"declarations":[{"constant":false,"id":1147,"mutability":"mutable","name":"ids","nameLocation":"10769:3:4","nodeType":"VariableDeclaration","scope":1167,"src":"10752:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1145,"name":"uint256","nodeType":"ElementaryTypeName","src":"10752:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1146,"nodeType":"ArrayTypeName","src":"10752:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1150,"mutability":"mutable","name":"values","nameLocation":"10791:6:4","nodeType":"VariableDeclaration","scope":1167,"src":"10774:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"10774:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1149,"nodeType":"ArrayTypeName","src":"10774:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1155,"initialValue":{"arguments":[{"id":1152,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1121,"src":"10820:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1153,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1123,"src":"10824:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1151,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"10801:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10801:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10751:79:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10875:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10867:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"10867:7:4","typeDescriptions":{}}},"id":1160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10867:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1161,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1119,"src":"10879:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1162,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"10883:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1163,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1150,"src":"10888:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1164,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1125,"src":"10896:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1156,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"10840:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10840:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"ExpressionStatement","src":"10840:61:4"}]},"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"10190:367:4","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1168,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10571:5:4","nodeType":"FunctionDefinition","parameters":{"id":1126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"to","nameLocation":"10585:2:4","nodeType":"VariableDeclaration","scope":1168,"src":"10577:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"10577:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1121,"mutability":"mutable","name":"id","nameLocation":"10597:2:4","nodeType":"VariableDeclaration","scope":1168,"src":"10589:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"10589:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1123,"mutability":"mutable","name":"value","nameLocation":"10609:5:4","nodeType":"VariableDeclaration","scope":1168,"src":"10601:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1122,"name":"uint256","nodeType":"ElementaryTypeName","src":"10601:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1125,"mutability":"mutable","name":"data","nameLocation":"10629:4:4","nodeType":"VariableDeclaration","scope":1168,"src":"10616:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1124,"name":"bytes","nodeType":"ElementaryTypeName","src":"10616:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10576:58:4"},"returnParameters":{"id":1127,"nodeType":"ParameterList","parameters":[],"src":"10644:0:4"},"scope":1355,"src":"10562:346:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1208,"nodeType":"Block","src":"11446:175:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1182,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"11460:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11474:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11466:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1183,"name":"address","nodeType":"ElementaryTypeName","src":"11466:7:4","typeDescriptions":{}}},"id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11466:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11460:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1196,"nodeType":"IfStatement","src":"11456:88:4","trueBody":{"id":1195,"nodeType":"Block","src":"11478:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11530:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11522:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"11522:7:4","typeDescriptions":{}}},"id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11522:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1188,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"11499:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11499:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1194,"nodeType":"RevertStatement","src":"11492:41:4"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11588:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11580:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"11580:7:4","typeDescriptions":{}}},"id":1201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11580:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1202,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1171,"src":"11592:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1203,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"11596:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1204,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"11601:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1205,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1179,"src":"11609:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1197,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"11553:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11553:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1207,"nodeType":"ExpressionStatement","src":"11553:61:4"}]},"documentation":{"id":1169,"nodeType":"StructuredDocumentation","src":"10914:420:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1209,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11348:10:4","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1171,"mutability":"mutable","name":"to","nameLocation":"11367:2:4","nodeType":"VariableDeclaration","scope":1209,"src":"11359:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1170,"name":"address","nodeType":"ElementaryTypeName","src":"11359:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1174,"mutability":"mutable","name":"ids","nameLocation":"11388:3:4","nodeType":"VariableDeclaration","scope":1209,"src":"11371:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1172,"name":"uint256","nodeType":"ElementaryTypeName","src":"11371:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1173,"nodeType":"ArrayTypeName","src":"11371:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"values","nameLocation":"11410:6:4","nodeType":"VariableDeclaration","scope":1209,"src":"11393:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1175,"name":"uint256","nodeType":"ElementaryTypeName","src":"11393:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1176,"nodeType":"ArrayTypeName","src":"11393:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"data","nameLocation":"11431:4:4","nodeType":"VariableDeclaration","scope":1209,"src":"11418:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1178,"name":"bytes","nodeType":"ElementaryTypeName","src":"11418:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11358:78:4"},"returnParameters":{"id":1181,"nodeType":"ParameterList","parameters":[],"src":"11446:0:4"},"scope":1355,"src":"11339:282:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1258,"nodeType":"Block","src":"11980:264:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1219,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"11994:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12010:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12002:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1220,"name":"address","nodeType":"ElementaryTypeName","src":"12002:7:4","typeDescriptions":{}}},"id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12002:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11994:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1233,"nodeType":"IfStatement","src":"11990:88:4","trueBody":{"id":1232,"nodeType":"Block","src":"12014:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12064:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12056:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1226,"name":"address","nodeType":"ElementaryTypeName","src":"12056:7:4","typeDescriptions":{}}},"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12056:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1225,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"12035:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12035:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1231,"nodeType":"RevertStatement","src":"12028:39:4"}]}},{"assignments":[1238,1241],"declarations":[{"constant":false,"id":1238,"mutability":"mutable","name":"ids","nameLocation":"12105:3:4","nodeType":"VariableDeclaration","scope":1258,"src":"12088:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1236,"name":"uint256","nodeType":"ElementaryTypeName","src":"12088:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1237,"nodeType":"ArrayTypeName","src":"12088:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1241,"mutability":"mutable","name":"values","nameLocation":"12127:6:4","nodeType":"VariableDeclaration","scope":1258,"src":"12110:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1239,"name":"uint256","nodeType":"ElementaryTypeName","src":"12110:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1240,"nodeType":"ArrayTypeName","src":"12110:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1246,"initialValue":{"arguments":[{"id":1243,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"12156:2:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1216,"src":"12160:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1242,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"12137:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12137:29:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12087:79:4"},{"expression":{"arguments":[{"id":1248,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"12203:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12217:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12209:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1249,"name":"address","nodeType":"ElementaryTypeName","src":"12209:7:4","typeDescriptions":{}}},"id":1252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12209:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1253,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1238,"src":"12221:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1254,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"12226:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12234:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1247,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"12176:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12176:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1257,"nodeType":"ExpressionStatement","src":"12176:61:4"}]},"documentation":{"id":1210,"nodeType":"StructuredDocumentation","src":"11627:283:4","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1259,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11924:5:4","nodeType":"FunctionDefinition","parameters":{"id":1217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1212,"mutability":"mutable","name":"from","nameLocation":"11938:4:4","nodeType":"VariableDeclaration","scope":1259,"src":"11930:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1211,"name":"address","nodeType":"ElementaryTypeName","src":"11930:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1214,"mutability":"mutable","name":"id","nameLocation":"11952:2:4","nodeType":"VariableDeclaration","scope":1259,"src":"11944:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1213,"name":"uint256","nodeType":"ElementaryTypeName","src":"11944:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1216,"mutability":"mutable","name":"value","nameLocation":"11964:5:4","nodeType":"VariableDeclaration","scope":1259,"src":"11956:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1215,"name":"uint256","nodeType":"ElementaryTypeName","src":"11956:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11929:41:4"},"returnParameters":{"id":1218,"nodeType":"ParameterList","parameters":[],"src":"11980:0:4"},"scope":1355,"src":"11915:329:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1297,"nodeType":"Block","src":"12690:175:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1271,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"12704:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12720:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12712:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1272,"name":"address","nodeType":"ElementaryTypeName","src":"12712:7:4","typeDescriptions":{}}},"id":1275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12712:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12704:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1285,"nodeType":"IfStatement","src":"12700:88:4","trueBody":{"id":1284,"nodeType":"Block","src":"12724:64:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12774:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12766:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"12766:7:4","typeDescriptions":{}}},"id":1281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12766:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1277,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"12745:20:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12745:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1283,"nodeType":"RevertStatement","src":"12738:39:4"}]}},{"expression":{"arguments":[{"id":1287,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1262,"src":"12824:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12838:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12830:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1288,"name":"address","nodeType":"ElementaryTypeName","src":"12830:7:4","typeDescriptions":{}}},"id":1291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12830:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1292,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"12842:3:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1293,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1268,"src":"12847:6:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12855:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1286,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"12797:26:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12797:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1296,"nodeType":"ExpressionStatement","src":"12797:61:4"}]},"documentation":{"id":1260,"nodeType":"StructuredDocumentation","src":"12250:345:4","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1298,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12609:10:4","nodeType":"FunctionDefinition","parameters":{"id":1269,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1262,"mutability":"mutable","name":"from","nameLocation":"12628:4:4","nodeType":"VariableDeclaration","scope":1298,"src":"12620:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1261,"name":"address","nodeType":"ElementaryTypeName","src":"12620:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"ids","nameLocation":"12651:3:4","nodeType":"VariableDeclaration","scope":1298,"src":"12634:20:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1263,"name":"uint256","nodeType":"ElementaryTypeName","src":"12634:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1264,"nodeType":"ArrayTypeName","src":"12634:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1268,"mutability":"mutable","name":"values","nameLocation":"12673:6:4","nodeType":"VariableDeclaration","scope":1298,"src":"12656:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1266,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1267,"nodeType":"ArrayTypeName","src":"12656:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12619:61:4"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[],"src":"12690:0:4"},"scope":1355,"src":"12600:265:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1337,"nodeType":"Block","src":"13177:222:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1308,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"13191:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13211:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13203:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"13203:7:4","typeDescriptions":{}}},"id":1312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13203:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13191:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1322,"nodeType":"IfStatement","src":"13187:94:4","trueBody":{"id":1321,"nodeType":"Block","src":"13215:66:4","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13267:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13259:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1315,"name":"address","nodeType":"ElementaryTypeName","src":"13259:7:4","typeDescriptions":{}}},"id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13259:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1314,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"13236:22:4","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13236:34:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1320,"nodeType":"RevertStatement","src":"13229:41:4"}]}},{"expression":{"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1323,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":486,"src":"13290:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1326,"indexExpression":{"id":1324,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"13309:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13290:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1327,"indexExpression":{"id":1325,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"13316:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13290:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1328,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"13328:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13290:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1330,"nodeType":"ExpressionStatement","src":"13290:46:4"},{"eventCall":{"arguments":[{"id":1332,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"13366:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1333,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1303,"src":"13373:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1334,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1305,"src":"13383:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1331,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1399,"src":"13351:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13351:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1336,"nodeType":"EmitStatement","src":"13346:46:4"}]},"documentation":{"id":1299,"nodeType":"StructuredDocumentation","src":"12871:208:4","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1338,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13093:18:4","nodeType":"FunctionDefinition","parameters":{"id":1306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1301,"mutability":"mutable","name":"owner","nameLocation":"13120:5:4","nodeType":"VariableDeclaration","scope":1338,"src":"13112:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1300,"name":"address","nodeType":"ElementaryTypeName","src":"13112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1303,"mutability":"mutable","name":"operator","nameLocation":"13135:8:4","nodeType":"VariableDeclaration","scope":1338,"src":"13127:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"13127:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1305,"mutability":"mutable","name":"approved","nameLocation":"13150:8:4","nodeType":"VariableDeclaration","scope":1338,"src":"13145:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1304,"name":"bool","nodeType":"ElementaryTypeName","src":"13145:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13111:48:4"},"returnParameters":{"id":1307,"nodeType":"ParameterList","parameters":[],"src":"13177:0:4"},"scope":1355,"src":"13084:315:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1353,"nodeType":"Block","src":"13673:664:4","statements":[{"AST":{"nativeSrc":"13708:623:4","nodeType":"YulBlock","src":"13708:623:4","statements":[{"nativeSrc":"13766:21:4","nodeType":"YulAssignment","src":"13766:21:4","value":{"arguments":[{"kind":"number","nativeSrc":"13782:4:4","nodeType":"YulLiteral","src":"13782:4:4","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"13776:5:4","nodeType":"YulIdentifier","src":"13776:5:4"},"nativeSrc":"13776:11:4","nodeType":"YulFunctionCall","src":"13776:11:4"},"variableNames":[{"name":"array1","nativeSrc":"13766:6:4","nodeType":"YulIdentifier","src":"13766:6:4"}]},{"expression":{"arguments":[{"name":"array1","nativeSrc":"13844:6:4","nodeType":"YulIdentifier","src":"13844:6:4"},{"kind":"number","nativeSrc":"13852:1:4","nodeType":"YulLiteral","src":"13852:1:4","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"13837:6:4","nodeType":"YulIdentifier","src":"13837:6:4"},"nativeSrc":"13837:17:4","nodeType":"YulFunctionCall","src":"13837:17:4"},"nativeSrc":"13837:17:4","nodeType":"YulExpressionStatement","src":"13837:17:4"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nativeSrc":"13975:6:4","nodeType":"YulIdentifier","src":"13975:6:4"},{"kind":"number","nativeSrc":"13983:4:4","nodeType":"YulLiteral","src":"13983:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13971:3:4","nodeType":"YulIdentifier","src":"13971:3:4"},"nativeSrc":"13971:17:4","nodeType":"YulFunctionCall","src":"13971:17:4"},{"name":"element1","nativeSrc":"13990:8:4","nodeType":"YulIdentifier","src":"13990:8:4"}],"functionName":{"name":"mstore","nativeSrc":"13964:6:4","nodeType":"YulIdentifier","src":"13964:6:4"},"nativeSrc":"13964:35:4","nodeType":"YulFunctionCall","src":"13964:35:4"},"nativeSrc":"13964:35:4","nodeType":"YulExpressionStatement","src":"13964:35:4"},{"nativeSrc":"14090:27:4","nodeType":"YulAssignment","src":"14090:27:4","value":{"arguments":[{"name":"array1","nativeSrc":"14104:6:4","nodeType":"YulIdentifier","src":"14104:6:4"},{"kind":"number","nativeSrc":"14112:4:4","nodeType":"YulLiteral","src":"14112:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"14100:3:4","nodeType":"YulIdentifier","src":"14100:3:4"},"nativeSrc":"14100:17:4","nodeType":"YulFunctionCall","src":"14100:17:4"},"variableNames":[{"name":"array2","nativeSrc":"14090:6:4","nodeType":"YulIdentifier","src":"14090:6:4"}]},{"expression":{"arguments":[{"name":"array2","nativeSrc":"14137:6:4","nodeType":"YulIdentifier","src":"14137:6:4"},{"kind":"number","nativeSrc":"14145:1:4","nodeType":"YulLiteral","src":"14145:1:4","type":"","value":"1"}],"functionName":{"name":"mstore","nativeSrc":"14130:6:4","nodeType":"YulIdentifier","src":"14130:6:4"},"nativeSrc":"14130:17:4","nodeType":"YulFunctionCall","src":"14130:17:4"},"nativeSrc":"14130:17:4","nodeType":"YulExpressionStatement","src":"14130:17:4"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nativeSrc":"14171:6:4","nodeType":"YulIdentifier","src":"14171:6:4"},{"kind":"number","nativeSrc":"14179:4:4","nodeType":"YulLiteral","src":"14179:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14167:3:4","nodeType":"YulIdentifier","src":"14167:3:4"},"nativeSrc":"14167:17:4","nodeType":"YulFunctionCall","src":"14167:17:4"},{"name":"element2","nativeSrc":"14186:8:4","nodeType":"YulIdentifier","src":"14186:8:4"}],"functionName":{"name":"mstore","nativeSrc":"14160:6:4","nodeType":"YulIdentifier","src":"14160:6:4"},"nativeSrc":"14160:35:4","nodeType":"YulFunctionCall","src":"14160:35:4"},"nativeSrc":"14160:35:4","nodeType":"YulExpressionStatement","src":"14160:35:4"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14297:4:4","nodeType":"YulLiteral","src":"14297:4:4","type":"","value":"0x40"},{"arguments":[{"name":"array2","nativeSrc":"14307:6:4","nodeType":"YulIdentifier","src":"14307:6:4"},{"kind":"number","nativeSrc":"14315:4:4","nodeType":"YulLiteral","src":"14315:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"14303:3:4","nodeType":"YulIdentifier","src":"14303:3:4"},"nativeSrc":"14303:17:4","nodeType":"YulFunctionCall","src":"14303:17:4"}],"functionName":{"name":"mstore","nativeSrc":"14290:6:4","nodeType":"YulIdentifier","src":"14290:6:4"},"nativeSrc":"14290:31:4","nodeType":"YulFunctionCall","src":"14290:31:4"},"nativeSrc":"14290:31:4","nodeType":"YulExpressionStatement","src":"14290:31:4"}]},"evmVersion":"paris","externalReferences":[{"declaration":1347,"isOffset":false,"isSlot":false,"src":"13766:6:4","valueSize":1},{"declaration":1347,"isOffset":false,"isSlot":false,"src":"13844:6:4","valueSize":1},{"declaration":1347,"isOffset":false,"isSlot":false,"src":"13975:6:4","valueSize":1},{"declaration":1347,"isOffset":false,"isSlot":false,"src":"14104:6:4","valueSize":1},{"declaration":1350,"isOffset":false,"isSlot":false,"src":"14090:6:4","valueSize":1},{"declaration":1350,"isOffset":false,"isSlot":false,"src":"14137:6:4","valueSize":1},{"declaration":1350,"isOffset":false,"isSlot":false,"src":"14171:6:4","valueSize":1},{"declaration":1350,"isOffset":false,"isSlot":false,"src":"14307:6:4","valueSize":1},{"declaration":1341,"isOffset":false,"isSlot":false,"src":"13990:8:4","valueSize":1},{"declaration":1343,"isOffset":false,"isSlot":false,"src":"14186:8:4","valueSize":1}],"flags":["memory-safe"],"id":1352,"nodeType":"InlineAssembly","src":"13683:648:4"}]},"documentation":{"id":1339,"nodeType":"StructuredDocumentation","src":"13405:105:4","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13524:18:4","nodeType":"FunctionDefinition","parameters":{"id":1344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1341,"mutability":"mutable","name":"element1","nameLocation":"13560:8:4","nodeType":"VariableDeclaration","scope":1354,"src":"13552:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1340,"name":"uint256","nodeType":"ElementaryTypeName","src":"13552:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1343,"mutability":"mutable","name":"element2","nameLocation":"13586:8:4","nodeType":"VariableDeclaration","scope":1354,"src":"13578:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1342,"name":"uint256","nodeType":"ElementaryTypeName","src":"13578:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13542:58:4"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"array1","nameLocation":"13640:6:4","nodeType":"VariableDeclaration","scope":1354,"src":"13623:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1345,"name":"uint256","nodeType":"ElementaryTypeName","src":"13623:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1346,"nodeType":"ArrayTypeName","src":"13623:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1350,"mutability":"mutable","name":"array2","nameLocation":"13665:6:4","nodeType":"VariableDeclaration","scope":1354,"src":"13648:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1348,"name":"uint256","nodeType":"ElementaryTypeName","src":"13648:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1349,"nodeType":"ArrayTypeName","src":"13648:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13622:50:4"},"scope":1355,"src":"13515:822:4","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1356,"src":"725:13614:4","usedErrors":[403,408,413,420,425,430,437],"usedEvents":[1375,1390,1399,1406]}],"src":"109:14231:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1478],"IERC165":[6467]},"id":1479,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1357,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"110:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1359,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1479,"sourceUnit":6468,"src":"136:62:5","symbolAliases":[{"foreign":{"id":1358,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"144:7:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1361,"name":"IERC165","nameLocations":["359:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":6467,"src":"359:7:5"},"id":1362,"nodeType":"InheritanceSpecifier","src":"359:7:5"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1360,"nodeType":"StructuredDocumentation","src":"200:136:5","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1478,"linearizedBaseContracts":[1478,6467],"name":"IERC1155","nameLocation":"347:8:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1363,"nodeType":"StructuredDocumentation","src":"373:125:5","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1375,"name":"TransferSingle","nameLocation":"509:14:5","nodeType":"EventDefinition","parameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:5","nodeType":"VariableDeclaration","scope":1375,"src":"524:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:5","nodeType":"VariableDeclaration","scope":1375,"src":"550:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1366,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1369,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:5","nodeType":"VariableDeclaration","scope":1375,"src":"572:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1368,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1371,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:5","nodeType":"VariableDeclaration","scope":1375,"src":"592:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1373,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:5","nodeType":"VariableDeclaration","scope":1375,"src":"604:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1372,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:5"},"src":"503:116:5"},{"anonymous":false,"documentation":{"id":1376,"nodeType":"StructuredDocumentation","src":"625:144:5","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1390,"name":"TransferBatch","nameLocation":"780:13:5","nodeType":"EventDefinition","parameters":{"id":1389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1378,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:5","nodeType":"VariableDeclaration","scope":1390,"src":"803:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1377,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1380,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:5","nodeType":"VariableDeclaration","scope":1390,"src":"837:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1382,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:5","nodeType":"VariableDeclaration","scope":1390,"src":"867:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1385,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:5","nodeType":"VariableDeclaration","scope":1390,"src":"895:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1384,"nodeType":"ArrayTypeName","src":"895:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1388,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:5","nodeType":"VariableDeclaration","scope":1390,"src":"918:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1386,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1387,"nodeType":"ArrayTypeName","src":"918:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:5"},"src":"774:167:5"},{"anonymous":false,"documentation":{"id":1391,"nodeType":"StructuredDocumentation","src":"947:147:5","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1399,"name":"ApprovalForAll","nameLocation":"1105:14:5","nodeType":"EventDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1393,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:5","nodeType":"VariableDeclaration","scope":1399,"src":"1120:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1392,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1395,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:5","nodeType":"VariableDeclaration","scope":1399,"src":"1145:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1394,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1397,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:5","nodeType":"VariableDeclaration","scope":1399,"src":"1171:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1396,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:5"},"src":"1099:87:5"},{"anonymous":false,"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"1192:343:5","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1406,"name":"URI","nameLocation":"1546:3:5","nodeType":"EventDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:5","nodeType":"VariableDeclaration","scope":1406,"src":"1550:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1401,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1404,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:5","nodeType":"VariableDeclaration","scope":1406,"src":"1564:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:5"},"src":"1540:44:5"},{"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"1590:90:5","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1416,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:5","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"account","nameLocation":"1712:7:5","nodeType":"VariableDeclaration","scope":1416,"src":"1704:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"id","nameLocation":"1729:2:5","nodeType":"VariableDeclaration","scope":1416,"src":"1721:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:5"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1416,"src":"1756:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1413,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:5"},"scope":1478,"src":"1685:80:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1417,"nodeType":"StructuredDocumentation","src":"1771:188:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1429,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:5","nodeType":"FunctionDefinition","parameters":{"id":1424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1420,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:5","nodeType":"VariableDeclaration","scope":1429,"src":"1997:27:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1418,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1419,"nodeType":"ArrayTypeName","src":"1997:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1423,"mutability":"mutable","name":"ids","nameLocation":"2053:3:5","nodeType":"VariableDeclaration","scope":1429,"src":"2034:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1421,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1422,"nodeType":"ArrayTypeName","src":"2034:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:5"},"returnParameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1429,"src":"2086:16:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1425,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1426,"nodeType":"ArrayTypeName","src":"2086:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:5"},"scope":1478,"src":"1964:140:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1430,"nodeType":"StructuredDocumentation","src":"2110:254:5","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1437,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:5","nodeType":"FunctionDefinition","parameters":{"id":1435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1432,"mutability":"mutable","name":"operator","nameLocation":"2404:8:5","nodeType":"VariableDeclaration","scope":1437,"src":"2396:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1431,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1434,"mutability":"mutable","name":"approved","nameLocation":"2419:8:5","nodeType":"VariableDeclaration","scope":1437,"src":"2414:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1433,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:5"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[],"src":"2437:0:5"},"scope":1478,"src":"2369:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"2444:135:5","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1447,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:5","nodeType":"FunctionDefinition","parameters":{"id":1443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"account","nameLocation":"2618:7:5","nodeType":"VariableDeclaration","scope":1447,"src":"2610:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1442,"mutability":"mutable","name":"operator","nameLocation":"2635:8:5","nodeType":"VariableDeclaration","scope":1447,"src":"2627:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1441,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:5"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1447,"src":"2668:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1444,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:5"},"scope":1478,"src":"2584:90:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1448,"nodeType":"StructuredDocumentation","src":"2680:927:5","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1461,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3621:16:5","nodeType":"FunctionDefinition","parameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"from","nameLocation":"3646:4:5","nodeType":"VariableDeclaration","scope":1461,"src":"3638:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1449,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1452,"mutability":"mutable","name":"to","nameLocation":"3660:2:5","nodeType":"VariableDeclaration","scope":1461,"src":"3652:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"id","nameLocation":"3672:2:5","nodeType":"VariableDeclaration","scope":1461,"src":"3664:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1456,"mutability":"mutable","name":"value","nameLocation":"3684:5:5","nodeType":"VariableDeclaration","scope":1461,"src":"3676:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"data","nameLocation":"3706:4:5","nodeType":"VariableDeclaration","scope":1461,"src":"3691:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1457,"name":"bytes","nodeType":"ElementaryTypeName","src":"3691:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3637:74:5"},"returnParameters":{"id":1460,"nodeType":"ParameterList","parameters":[],"src":"3720:0:5"},"scope":1478,"src":"3612:109:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"3727:831:5","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1477,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4572:21:5","nodeType":"FunctionDefinition","parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"from","nameLocation":"4611:4:5","nodeType":"VariableDeclaration","scope":1477,"src":"4603:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"to","nameLocation":"4633:2:5","nodeType":"VariableDeclaration","scope":1477,"src":"4625:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1469,"mutability":"mutable","name":"ids","nameLocation":"4664:3:5","nodeType":"VariableDeclaration","scope":1477,"src":"4645:22:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1467,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1468,"nodeType":"ArrayTypeName","src":"4645:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"values","nameLocation":"4696:6:5","nodeType":"VariableDeclaration","scope":1477,"src":"4677:25:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1470,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1471,"nodeType":"ArrayTypeName","src":"4677:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"data","nameLocation":"4727:4:5","nodeType":"VariableDeclaration","scope":1477,"src":"4712:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1473,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4593:144:5"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[],"src":"4746:0:5"},"scope":1478,"src":"4563:184:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1479,"src":"337:4412:5","usedErrors":[],"usedEvents":[1375,1390,1399,1406]}],"src":"110:4640:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1520],"IERC165":[6467]},"id":1521,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1480,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"118:24:6"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1482,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1521,"sourceUnit":6468,"src":"144:62:6","symbolAliases":[{"foreign":{"id":1481,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"152:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1484,"name":"IERC165","nameLocations":["357:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":6467,"src":"357:7:6"},"id":1485,"nodeType":"InheritanceSpecifier","src":"357:7:6"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1483,"nodeType":"StructuredDocumentation","src":"208:118:6","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1520,"linearizedBaseContracts":[1520,6467],"name":"IERC1155Receiver","nameLocation":"337:16:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1486,"nodeType":"StructuredDocumentation","src":"371:827:6","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1501,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:6","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"operator","nameLocation":"1247:8:6","nodeType":"VariableDeclaration","scope":1501,"src":"1239:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1487,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"from","nameLocation":"1273:4:6","nodeType":"VariableDeclaration","scope":1501,"src":"1265:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1489,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1492,"mutability":"mutable","name":"id","nameLocation":"1295:2:6","nodeType":"VariableDeclaration","scope":1501,"src":"1287:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1491,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1494,"mutability":"mutable","name":"value","nameLocation":"1315:5:6","nodeType":"VariableDeclaration","scope":1501,"src":"1307:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1493,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1496,"mutability":"mutable","name":"data","nameLocation":"1345:4:6","nodeType":"VariableDeclaration","scope":1501,"src":"1330:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1495,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:6"},"returnParameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1501,"src":"1374:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1498,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:6"},"scope":1520,"src":"1203:179:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"1388:995:6","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1519,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:6","nodeType":"FunctionDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"mutability":"mutable","name":"operator","nameLocation":"2437:8:6","nodeType":"VariableDeclaration","scope":1519,"src":"2429:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1503,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1506,"mutability":"mutable","name":"from","nameLocation":"2463:4:6","nodeType":"VariableDeclaration","scope":1519,"src":"2455:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1505,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1509,"mutability":"mutable","name":"ids","nameLocation":"2496:3:6","nodeType":"VariableDeclaration","scope":1519,"src":"2477:22:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1508,"nodeType":"ArrayTypeName","src":"2477:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1512,"mutability":"mutable","name":"values","nameLocation":"2528:6:6","nodeType":"VariableDeclaration","scope":1519,"src":"2509:25:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1510,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1511,"nodeType":"ArrayTypeName","src":"2509:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1514,"mutability":"mutable","name":"data","nameLocation":"2559:4:6","nodeType":"VariableDeclaration","scope":1519,"src":"2544:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1513,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:6"},"returnParameters":{"id":1518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1519,"src":"2588:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1516,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:6"},"scope":1520,"src":"2388:208:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1521,"src":"327:2271:6","usedErrors":[],"usedEvents":[]}],"src":"118:2481:6"},"id":6},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1478],"IERC1155MetadataURI":[1536]},"id":1537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1522,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"132:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1524,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":1479,"src":"158:41:7","symbolAliases":[{"foreign":{"id":1523,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"166:8:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1526,"name":"IERC1155","nameLocations":["399:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":1478,"src":"399:8:7"},"id":1527,"nodeType":"InheritanceSpecifier","src":"399:8:7"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"201:164:7","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1536,"linearizedBaseContracts":[1536,1478,6467],"name":"IERC1155MetadataURI","nameLocation":"376:19:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1528,"nodeType":"StructuredDocumentation","src":"414:192:7","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1535,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:7","nodeType":"FunctionDefinition","parameters":{"id":1531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1530,"mutability":"mutable","name":"id","nameLocation":"632:2:7","nodeType":"VariableDeclaration","scope":1535,"src":"624:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:7"},"returnParameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1533,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1535,"src":"659:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1532,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:7"},"scope":1536,"src":"611:63:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1537,"src":"366:310:7","usedErrors":[],"usedEvents":[1375,1390,1399,1406]}],"src":"132:545:7"},"id":7},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol","exportedSymbols":{"ERC1155Holder":[1617],"ERC165":[6455],"IERC1155Receiver":[1520],"IERC165":[6467]},"id":1618,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1538,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"121:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../../utils/introspection/ERC165.sol","id":1541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1618,"sourceUnit":6456,"src":"147:72:8","symbolAliases":[{"foreign":{"id":1539,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"155:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1540,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"164:6:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1618,"sourceUnit":1521,"src":"220:57:8","symbolAliases":[{"foreign":{"id":1542,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"228:16:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1545,"name":"ERC165","nameLocations":["558:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":6455,"src":"558:6:8"},"id":1546,"nodeType":"InheritanceSpecifier","src":"558:6:8"},{"baseName":{"id":1547,"name":"IERC1155Receiver","nameLocations":["566:16:8"],"nodeType":"IdentifierPath","referencedDeclaration":1520,"src":"566:16:8"},"id":1548,"nodeType":"InheritanceSpecifier","src":"566:16:8"}],"canonicalName":"ERC1155Holder","contractDependencies":[],"contractKind":"contract","documentation":{"id":1544,"nodeType":"StructuredDocumentation","src":"279:243:8","text":" @dev Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck."},"fullyImplemented":true,"id":1617,"linearizedBaseContracts":[1617,1520,6455,6467],"name":"ERC1155Holder","nameLocation":"541:13:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[6454,6466],"body":{"id":1571,"nodeType":"Block","src":"725:113:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1559,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"742:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1561,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"762:16:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1520_$","typeString":"type(contract IERC1155Receiver)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1520_$","typeString":"type(contract IERC1155Receiver)"}],"id":1560,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"757:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"757:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155Receiver_$1520","typeString":"type(contract IERC1155Receiver)"}},"id":1563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"780:11:8","memberName":"interfaceId","nodeType":"MemberAccess","src":"757:34:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"742:49:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1567,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"819:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1565,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"795:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155Holder_$1617_$","typeString":"type(contract super ERC1155Holder)"}},"id":1566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"801:17:8","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":6454,"src":"795:23:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"795:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"742:89:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1558,"id":1570,"nodeType":"Return","src":"735:96:8"}]},"documentation":{"id":1549,"nodeType":"StructuredDocumentation","src":"589:23:8","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":1572,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"626:17:8","nodeType":"FunctionDefinition","overrides":{"id":1555,"nodeType":"OverrideSpecifier","overrides":[{"id":1553,"name":"ERC165","nameLocations":["693:6:8"],"nodeType":"IdentifierPath","referencedDeclaration":6455,"src":"693:6:8"},{"id":1554,"name":"IERC165","nameLocations":["701:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":6467,"src":"701:7:8"}],"src":"684:25:8"},"parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"interfaceId","nameLocation":"651:11:8","nodeType":"VariableDeclaration","scope":1572,"src":"644:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1550,"name":"bytes4","nodeType":"ElementaryTypeName","src":"644:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"643:20:8"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1572,"src":"719:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1556,"name":"bool","nodeType":"ElementaryTypeName","src":"719:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"718:6:8"},"scope":1617,"src":"617:221:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1501],"body":{"id":1592,"nodeType":"Block","src":"1008:55:8","statements":[{"expression":{"expression":{"expression":{"id":1588,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1025:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1155Holder_$1617","typeString":"contract ERC1155Holder"}},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1030:17:8","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1593,"src":"1025:22:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1048:8:8","memberName":"selector","nodeType":"MemberAccess","src":"1025:31:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1587,"id":1591,"nodeType":"Return","src":"1018:38:8"}]},"functionSelector":"f23a6e61","id":1593,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"853:17:8","nodeType":"FunctionDefinition","overrides":{"id":1584,"nodeType":"OverrideSpecifier","overrides":[],"src":"982:8:8"},"parameters":{"id":1583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1593,"src":"880:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"880:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1593,"src":"897:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1575,"name":"address","nodeType":"ElementaryTypeName","src":"897:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1593,"src":"914:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1580,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1593,"src":"931:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1579,"name":"uint256","nodeType":"ElementaryTypeName","src":"931:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1593,"src":"948:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1581,"name":"bytes","nodeType":"ElementaryTypeName","src":"948:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"870:96:8"},"returnParameters":{"id":1587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1593,"src":"1000:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1585,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1000:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"999:8:8"},"scope":1617,"src":"844:219:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1519],"body":{"id":1615,"nodeType":"Block","src":"1256:60:8","statements":[{"expression":{"expression":{"expression":{"id":1611,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1273:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_ERC1155Holder_$1617","typeString":"contract ERC1155Holder"}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1278:22:8","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1616,"src":"1273:27:8","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1301:8:8","memberName":"selector","nodeType":"MemberAccess","src":"1273:36:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":1610,"id":1614,"nodeType":"Return","src":"1266:43:8"}]},"functionSelector":"bc197c81","id":1616,"implemented":true,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"1078:22:8","nodeType":"FunctionDefinition","overrides":{"id":1607,"nodeType":"OverrideSpecifier","overrides":[],"src":"1230:8:8"},"parameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1616,"src":"1110:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1594,"name":"address","nodeType":"ElementaryTypeName","src":"1110:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1616,"src":"1127:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"1127:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1616,"src":"1144:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1598,"name":"uint256","nodeType":"ElementaryTypeName","src":"1144:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1599,"nodeType":"ArrayTypeName","src":"1144:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1616,"src":"1170:16:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1601,"name":"uint256","nodeType":"ElementaryTypeName","src":"1170:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1602,"nodeType":"ArrayTypeName","src":"1170:9:8","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1616,"src":"1196:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1604,"name":"bytes","nodeType":"ElementaryTypeName","src":"1196:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1100:114:8"},"returnParameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1616,"src":"1248:6:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1608,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1248:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1247:8:8"},"scope":1617,"src":"1069:247:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1618,"src":"523:795:8","usedErrors":[],"usedEvents":[]}],"src":"121:1198:8"},"id":8},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1771],"IERC1155Errors":[438],"IERC1155Receiver":[1520]},"id":1772,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1619,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1621,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1772,"sourceUnit":1521,"src":"146:57:9","symbolAliases":[{"foreign":{"id":1620,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"154:16:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1623,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1772,"sourceUnit":439,"src":"204:70:9","symbolAliases":[{"foreign":{"id":1622,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"212:14:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1624,"nodeType":"StructuredDocumentation","src":"276:162:9","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1771,"linearizedBaseContracts":[1771],"name":"ERC1155Utils","nameLocation":"447:12:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1695,"nodeType":"Block","src":"1191:776:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1640,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"1205:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:4:9","memberName":"code","nodeType":"MemberAccess","src":"1205:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1213:6:9","memberName":"length","nodeType":"MemberAccess","src":"1205:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1205:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1694,"nodeType":"IfStatement","src":"1201:760:9","trueBody":{"id":1693,"nodeType":"Block","src":"1225:736:9","statements":[{"clauses":[{"block":{"id":1671,"nodeType":"Block","src":"1341:221:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1658,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1656,"src":"1363:8:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1659,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"1375:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1520_$","typeString":"type(contract IERC1155Receiver)"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1392:17:9","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1501,"src":"1375:34:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:9","memberName":"selector","nodeType":"MemberAccess","src":"1375:43:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1363:55:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1670,"nodeType":"IfStatement","src":"1359:189:9","trueBody":{"id":1669,"nodeType":"Block","src":"1420:128:9","statements":[{"errorCall":{"arguments":[{"id":1666,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"1526:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1663,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"1488:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$438_$","typeString":"type(contract IERC1155Errors)"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":413,"src":"1488:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1668,"nodeType":"RevertStatement","src":"1481:48:9"}]}}]},"errorName":"","id":1672,"nodeType":"TryCatchClause","parameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"response","nameLocation":"1331:8:9","nodeType":"VariableDeclaration","scope":1672,"src":"1324:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1655,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1324:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1323:17:9"},"src":"1315:247:9"},{"block":{"id":1690,"nodeType":"Block","src":"1591:360:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1676,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1674,"src":"1613:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:9","memberName":"length","nodeType":"MemberAccess","src":"1613:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1613:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1688,"nodeType":"Block","src":"1784:153:9","statements":[{"AST":{"nativeSrc":"1831:88:9","nodeType":"YulBlock","src":"1831:88:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1868:6:9","nodeType":"YulIdentifier","src":"1868:6:9"},{"kind":"number","nativeSrc":"1876:4:9","nodeType":"YulLiteral","src":"1876:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1864:3:9","nodeType":"YulIdentifier","src":"1864:3:9"},"nativeSrc":"1864:17:9","nodeType":"YulFunctionCall","src":"1864:17:9"},{"arguments":[{"name":"reason","nativeSrc":"1889:6:9","nodeType":"YulIdentifier","src":"1889:6:9"}],"functionName":{"name":"mload","nativeSrc":"1883:5:9","nodeType":"YulIdentifier","src":"1883:5:9"},"nativeSrc":"1883:13:9","nodeType":"YulFunctionCall","src":"1883:13:9"}],"functionName":{"name":"revert","nativeSrc":"1857:6:9","nodeType":"YulIdentifier","src":"1857:6:9"},"nativeSrc":"1857:40:9","nodeType":"YulFunctionCall","src":"1857:40:9"},"nativeSrc":"1857:40:9","nodeType":"YulExpressionStatement","src":"1857:40:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1674,"isOffset":false,"isSlot":false,"src":"1868:6:9","valueSize":1},{"declaration":1674,"isOffset":false,"isSlot":false,"src":"1889:6:9","valueSize":1}],"flags":["memory-safe"],"id":1687,"nodeType":"InlineAssembly","src":"1806:113:9"}]},"id":1689,"nodeType":"IfStatement","src":"1609:328:9","trueBody":{"id":1686,"nodeType":"Block","src":"1633:145:9","statements":[{"errorCall":{"arguments":[{"id":1683,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"1756:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1680,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"1718:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$438_$","typeString":"type(contract IERC1155Errors)"}},"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":413,"src":"1718:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1685,"nodeType":"RevertStatement","src":"1711:48:9"}]}}]},"errorName":"","id":1691,"nodeType":"TryCatchClause","parameters":{"id":1675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1674,"mutability":"mutable","name":"reason","nameLocation":"1583:6:9","nodeType":"VariableDeclaration","scope":1691,"src":"1570:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1673,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1569:21:9"},"src":"1563:388:9"}],"externalCall":{"arguments":[{"id":1649,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1627,"src":"1282:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1650,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1629,"src":"1292:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1651,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"1298:2:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"1302:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1653,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"1309:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1646,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1631,"src":"1260:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1645,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"1243:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1520_$","typeString":"type(contract IERC1155Receiver)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1520","typeString":"contract IERC1155Receiver"}},"id":1648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1264:17:9","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1501,"src":"1243:38:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:71:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1692,"nodeType":"TryStatement","src":"1239:712:9"}]}}]},"documentation":{"id":1625,"nodeType":"StructuredDocumentation","src":"466:535:9","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1696,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1015:22:9","nodeType":"FunctionDefinition","parameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1627,"mutability":"mutable","name":"operator","nameLocation":"1055:8:9","nodeType":"VariableDeclaration","scope":1696,"src":"1047:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1626,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1629,"mutability":"mutable","name":"from","nameLocation":"1081:4:9","nodeType":"VariableDeclaration","scope":1696,"src":"1073:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1628,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1631,"mutability":"mutable","name":"to","nameLocation":"1103:2:9","nodeType":"VariableDeclaration","scope":1696,"src":"1095:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1630,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1633,"mutability":"mutable","name":"id","nameLocation":"1123:2:9","nodeType":"VariableDeclaration","scope":1696,"src":"1115:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1632,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"value","nameLocation":"1143:5:9","nodeType":"VariableDeclaration","scope":1696,"src":"1135:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1634,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1637,"mutability":"mutable","name":"data","nameLocation":"1171:4:9","nodeType":"VariableDeclaration","scope":1696,"src":"1158:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1636,"name":"bytes","nodeType":"ElementaryTypeName","src":"1158:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1037:144:9"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[],"src":"1191:0:9"},"scope":1771,"src":"1006:961:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1769,"nodeType":"Block","src":"2733:818:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1714,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"2747:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:4:9","memberName":"code","nodeType":"MemberAccess","src":"2747:7:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2755:6:9","memberName":"length","nodeType":"MemberAccess","src":"2747:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2764:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2747:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1768,"nodeType":"IfStatement","src":"2743:802:9","trueBody":{"id":1767,"nodeType":"Block","src":"2767:778:9","statements":[{"clauses":[{"block":{"id":1745,"nodeType":"Block","src":"2920:226:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1732,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"2942:8:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1733,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"2954:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1520_$","typeString":"type(contract IERC1155Receiver)"}},"id":1734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2971:22:9","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1519,"src":"2954:39:9","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2994:8:9","memberName":"selector","nodeType":"MemberAccess","src":"2954:48:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2942:60:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1744,"nodeType":"IfStatement","src":"2938:194:9","trueBody":{"id":1743,"nodeType":"Block","src":"3004:128:9","statements":[{"errorCall":{"arguments":[{"id":1740,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"3110:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1737,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"3072:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$438_$","typeString":"type(contract IERC1155Errors)"}},"id":1739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3087:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":413,"src":"3072:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3072:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1742,"nodeType":"RevertStatement","src":"3065:48:9"}]}}]},"errorName":"","id":1746,"nodeType":"TryCatchClause","parameters":{"id":1731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1730,"mutability":"mutable","name":"response","nameLocation":"2897:8:9","nodeType":"VariableDeclaration","scope":1746,"src":"2890:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1729,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2890:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2872:47:9"},"src":"2864:282:9"},{"block":{"id":1764,"nodeType":"Block","src":"3175:360:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1750,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1748,"src":"3197:6:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3204:6:9","memberName":"length","nodeType":"MemberAccess","src":"3197:13:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3214:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3197:18:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1762,"nodeType":"Block","src":"3368:153:9","statements":[{"AST":{"nativeSrc":"3415:88:9","nodeType":"YulBlock","src":"3415:88:9","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"3452:6:9","nodeType":"YulIdentifier","src":"3452:6:9"},{"kind":"number","nativeSrc":"3460:4:9","nodeType":"YulLiteral","src":"3460:4:9","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3448:3:9","nodeType":"YulIdentifier","src":"3448:3:9"},"nativeSrc":"3448:17:9","nodeType":"YulFunctionCall","src":"3448:17:9"},{"arguments":[{"name":"reason","nativeSrc":"3473:6:9","nodeType":"YulIdentifier","src":"3473:6:9"}],"functionName":{"name":"mload","nativeSrc":"3467:5:9","nodeType":"YulIdentifier","src":"3467:5:9"},"nativeSrc":"3467:13:9","nodeType":"YulFunctionCall","src":"3467:13:9"}],"functionName":{"name":"revert","nativeSrc":"3441:6:9","nodeType":"YulIdentifier","src":"3441:6:9"},"nativeSrc":"3441:40:9","nodeType":"YulFunctionCall","src":"3441:40:9"},"nativeSrc":"3441:40:9","nodeType":"YulExpressionStatement","src":"3441:40:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1748,"isOffset":false,"isSlot":false,"src":"3452:6:9","valueSize":1},{"declaration":1748,"isOffset":false,"isSlot":false,"src":"3473:6:9","valueSize":1}],"flags":["memory-safe"],"id":1761,"nodeType":"InlineAssembly","src":"3390:113:9"}]},"id":1763,"nodeType":"IfStatement","src":"3193:328:9","trueBody":{"id":1760,"nodeType":"Block","src":"3217:145:9","statements":[{"errorCall":{"arguments":[{"id":1757,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"3340:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1754,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"3302:14:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$438_$","typeString":"type(contract IERC1155Errors)"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3317:22:9","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":413,"src":"3302:37:9","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3302:41:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1759,"nodeType":"RevertStatement","src":"3295:48:9"}]}}]},"errorName":"","id":1765,"nodeType":"TryCatchClause","parameters":{"id":1749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1748,"mutability":"mutable","name":"reason","nameLocation":"3167:6:9","nodeType":"VariableDeclaration","scope":1765,"src":"3154:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1747,"name":"bytes","nodeType":"ElementaryTypeName","src":"3154:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3153:21:9"},"src":"3147:388:9"}],"externalCall":{"arguments":[{"id":1723,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2829:8:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1724,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1701,"src":"2839:4:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1725,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1706,"src":"2845:3:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1726,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"2850:6:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1727,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1711,"src":"2858:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1720,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1703,"src":"2802:2:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1719,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"2785:16:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1520_$","typeString":"type(contract IERC1155Receiver)"}},"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1520","typeString":"contract IERC1155Receiver"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2806:22:9","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1519,"src":"2785:43:9","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2785:78:9","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1766,"nodeType":"TryStatement","src":"2781:754:9"}]}}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"1973:545:9","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1770,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2532:27:9","nodeType":"FunctionDefinition","parameters":{"id":1712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"operator","nameLocation":"2577:8:9","nodeType":"VariableDeclaration","scope":1770,"src":"2569:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1698,"name":"address","nodeType":"ElementaryTypeName","src":"2569:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1701,"mutability":"mutable","name":"from","nameLocation":"2603:4:9","nodeType":"VariableDeclaration","scope":1770,"src":"2595:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1700,"name":"address","nodeType":"ElementaryTypeName","src":"2595:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1703,"mutability":"mutable","name":"to","nameLocation":"2625:2:9","nodeType":"VariableDeclaration","scope":1770,"src":"2617:10:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1702,"name":"address","nodeType":"ElementaryTypeName","src":"2617:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1706,"mutability":"mutable","name":"ids","nameLocation":"2654:3:9","nodeType":"VariableDeclaration","scope":1770,"src":"2637:20:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1704,"name":"uint256","nodeType":"ElementaryTypeName","src":"2637:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1705,"nodeType":"ArrayTypeName","src":"2637:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1709,"mutability":"mutable","name":"values","nameLocation":"2684:6:9","nodeType":"VariableDeclaration","scope":1770,"src":"2667:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"2667:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1708,"nodeType":"ArrayTypeName","src":"2667:9:9","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1711,"mutability":"mutable","name":"data","nameLocation":"2713:4:9","nodeType":"VariableDeclaration","scope":1770,"src":"2700:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1710,"name":"bytes","nodeType":"ElementaryTypeName","src":"2700:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2559:164:9"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[],"src":"2733:0:9"},"scope":1771,"src":"2523:1028:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1772,"src":"439:3114:9","usedErrors":[],"usedEvents":[]}],"src":"120:3434:9"},"id":9},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[4654],"ERC20":[2286],"IERC20":[2364],"IERC20Errors":[343],"IERC20Metadata":[2390]},"id":2287,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1773,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":1775,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2287,"sourceUnit":2365,"src":"131:36:10","symbolAliases":[{"foreign":{"id":1774,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"139:6:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":1777,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2287,"sourceUnit":2391,"src":"168:63:10","symbolAliases":[{"foreign":{"id":1776,"name":"IERC20Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"176:14:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1779,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2287,"sourceUnit":4655,"src":"232:48:10","symbolAliases":[{"foreign":{"id":1778,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"240:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1781,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2287,"sourceUnit":439,"src":"281:65:10","symbolAliases":[{"foreign":{"id":1780,"name":"IERC20Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":343,"src":"289:12:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1783,"name":"Context","nameLocations":["1133:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"1133:7:10"},"id":1784,"nodeType":"InheritanceSpecifier","src":"1133:7:10"},{"baseName":{"id":1785,"name":"IERC20","nameLocations":["1142:6:10"],"nodeType":"IdentifierPath","referencedDeclaration":2364,"src":"1142:6:10"},"id":1786,"nodeType":"InheritanceSpecifier","src":"1142:6:10"},{"baseName":{"id":1787,"name":"IERC20Metadata","nameLocations":["1150:14:10"],"nodeType":"IdentifierPath","referencedDeclaration":2390,"src":"1150:14:10"},"id":1788,"nodeType":"InheritanceSpecifier","src":"1150:14:10"},{"baseName":{"id":1789,"name":"IERC20Errors","nameLocations":["1166:12:10"],"nodeType":"IdentifierPath","referencedDeclaration":343,"src":"1166:12:10"},"id":1790,"nodeType":"InheritanceSpecifier","src":"1166:12:10"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":1782,"nodeType":"StructuredDocumentation","src":"348:757:10","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."},"fullyImplemented":true,"id":2286,"linearizedBaseContracts":[2286,343,2390,2364,4654],"name":"ERC20","nameLocation":"1124:5:10","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1794,"mutability":"mutable","name":"_balances","nameLocation":"1229:9:10","nodeType":"VariableDeclaration","scope":2286,"src":"1185:53:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1793,"keyName":"account","keyNameLocation":"1201:7:10","keyType":{"id":1791,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1185:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1212:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1800,"mutability":"mutable","name":"_allowances","nameLocation":"1317:11:10","nodeType":"VariableDeclaration","scope":2286,"src":"1245:83:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":1799,"keyName":"account","keyNameLocation":"1261:7:10","keyType":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"1253:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1245:63:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1798,"keyName":"spender","keyNameLocation":"1288:7:10","keyType":{"id":1796,"name":"address","nodeType":"ElementaryTypeName","src":"1280:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1272:35:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":1802,"mutability":"mutable","name":"_totalSupply","nameLocation":"1351:12:10","nodeType":"VariableDeclaration","scope":2286,"src":"1335:28:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"1335:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":1804,"mutability":"mutable","name":"_name","nameLocation":"1385:5:10","nodeType":"VariableDeclaration","scope":2286,"src":"1370:20:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1803,"name":"string","nodeType":"ElementaryTypeName","src":"1370:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1806,"mutability":"mutable","name":"_symbol","nameLocation":"1411:7:10","nodeType":"VariableDeclaration","scope":2286,"src":"1396:22:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1805,"name":"string","nodeType":"ElementaryTypeName","src":"1396:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":1822,"nodeType":"Block","src":"1638:57:10","statements":[{"expression":{"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1814,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"1648:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1815,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"1656:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1648:13:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1817,"nodeType":"ExpressionStatement","src":"1648:13:10"},{"expression":{"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1818,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"1671:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1819,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1811,"src":"1681:7:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1671:17:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1821,"nodeType":"ExpressionStatement","src":"1671:17:10"}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"1425:152:10","text":" @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."},"id":1823,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"name_","nameLocation":"1608:5:10","nodeType":"VariableDeclaration","scope":1823,"src":"1594:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1808,"name":"string","nodeType":"ElementaryTypeName","src":"1594:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1811,"mutability":"mutable","name":"symbol_","nameLocation":"1629:7:10","nodeType":"VariableDeclaration","scope":1823,"src":"1615:21:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1810,"name":"string","nodeType":"ElementaryTypeName","src":"1615:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1593:44:10"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[],"src":"1638:0:10"},"scope":2286,"src":"1582:113:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[2377],"body":{"id":1831,"nodeType":"Block","src":"1820:29:10","statements":[{"expression":{"id":1829,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1804,"src":"1837:5:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1828,"id":1830,"nodeType":"Return","src":"1830:12:10"}]},"documentation":{"id":1824,"nodeType":"StructuredDocumentation","src":"1701:54:10","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1832,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"1769:4:10","nodeType":"FunctionDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[],"src":"1773:2:10"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1832,"src":"1805:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1826,"name":"string","nodeType":"ElementaryTypeName","src":"1805:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1804:15:10"},"scope":2286,"src":"1760:89:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2383],"body":{"id":1840,"nodeType":"Block","src":"2024:31:10","statements":[{"expression":{"id":1838,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1806,"src":"2041:7:10","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1837,"id":1839,"nodeType":"Return","src":"2034:14:10"}]},"documentation":{"id":1833,"nodeType":"StructuredDocumentation","src":"1855:102:10","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":1841,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"1971:6:10","nodeType":"FunctionDefinition","parameters":{"id":1834,"nodeType":"ParameterList","parameters":[],"src":"1977:2:10"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1836,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1841,"src":"2009:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1835,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2008:15:10"},"scope":2286,"src":"1962:93:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2389],"body":{"id":1849,"nodeType":"Block","src":"2744:26:10","statements":[{"expression":{"hexValue":"3138","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2761:2:10","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":1846,"id":1848,"nodeType":"Return","src":"2754:9:10"}]},"documentation":{"id":1842,"nodeType":"StructuredDocumentation","src":"2061:622:10","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":1850,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"2697:8:10","nodeType":"FunctionDefinition","parameters":{"id":1843,"nodeType":"ParameterList","parameters":[],"src":"2705:2:10"},"returnParameters":{"id":1846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1845,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1850,"src":"2737:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1844,"name":"uint8","nodeType":"ElementaryTypeName","src":"2737:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"2736:7:10"},"scope":2286,"src":"2688:82:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2313],"body":{"id":1858,"nodeType":"Block","src":"2864:36:10","statements":[{"expression":{"id":1856,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"2881:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1855,"id":1857,"nodeType":"Return","src":"2874:19:10"}]},"documentation":{"id":1851,"nodeType":"StructuredDocumentation","src":"2776:22:10","text":"@inheritdoc IERC20"},"functionSelector":"18160ddd","id":1859,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"2812:11:10","nodeType":"FunctionDefinition","parameters":{"id":1852,"nodeType":"ParameterList","parameters":[],"src":"2823:2:10"},"returnParameters":{"id":1855,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1854,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1859,"src":"2855:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1853,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:9:10"},"scope":2286,"src":"2803:97:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2321],"body":{"id":1871,"nodeType":"Block","src":"3007:42:10","statements":[{"expression":{"baseExpression":{"id":1867,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"3024:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1869,"indexExpression":{"id":1868,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1862,"src":"3034:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3024:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1866,"id":1870,"nodeType":"Return","src":"3017:25:10"}]},"documentation":{"id":1860,"nodeType":"StructuredDocumentation","src":"2906:22:10","text":"@inheritdoc IERC20"},"functionSelector":"70a08231","id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2942:9:10","nodeType":"FunctionDefinition","parameters":{"id":1863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1862,"mutability":"mutable","name":"account","nameLocation":"2960:7:10","nodeType":"VariableDeclaration","scope":1872,"src":"2952:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1861,"name":"address","nodeType":"ElementaryTypeName","src":"2952:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2951:17:10"},"returnParameters":{"id":1866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"2998:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1864,"name":"uint256","nodeType":"ElementaryTypeName","src":"2998:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2997:9:10"},"scope":2286,"src":"2933:116:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2331],"body":{"id":1895,"nodeType":"Block","src":"3319:103:10","statements":[{"assignments":[1883],"declarations":[{"constant":false,"id":1883,"mutability":"mutable","name":"owner","nameLocation":"3337:5:10","nodeType":"VariableDeclaration","scope":1895,"src":"3329:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1882,"name":"address","nodeType":"ElementaryTypeName","src":"3329:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1886,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1884,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"3345:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3345:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3329:28:10"},{"expression":{"arguments":[{"id":1888,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"3377:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"3384:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1890,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"3388:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1887,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"3367:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3367:27:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1892,"nodeType":"ExpressionStatement","src":"3367:27:10"},{"expression":{"hexValue":"74727565","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3411:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1881,"id":1894,"nodeType":"Return","src":"3404:11:10"}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"3055:184:10","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."},"functionSelector":"a9059cbb","id":1896,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3253:8:10","nodeType":"FunctionDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"to","nameLocation":"3270:2:10","nodeType":"VariableDeclaration","scope":1896,"src":"3262:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"3262:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"value","nameLocation":"3282:5:10","nodeType":"VariableDeclaration","scope":1896,"src":"3274:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1876,"name":"uint256","nodeType":"ElementaryTypeName","src":"3274:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3261:27:10"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1896,"src":"3313:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1879,"name":"bool","nodeType":"ElementaryTypeName","src":"3313:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3312:6:10"},"scope":2286,"src":"3244:178:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2341],"body":{"id":1912,"nodeType":"Block","src":"3544:51:10","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1906,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"3561:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1908,"indexExpression":{"id":1907,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"3573:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1910,"indexExpression":{"id":1909,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1901,"src":"3580:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3561:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1905,"id":1911,"nodeType":"Return","src":"3554:34:10"}]},"documentation":{"id":1897,"nodeType":"StructuredDocumentation","src":"3428:22:10","text":"@inheritdoc IERC20"},"functionSelector":"dd62ed3e","id":1913,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3464:9:10","nodeType":"FunctionDefinition","parameters":{"id":1902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1899,"mutability":"mutable","name":"owner","nameLocation":"3482:5:10","nodeType":"VariableDeclaration","scope":1913,"src":"3474:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1898,"name":"address","nodeType":"ElementaryTypeName","src":"3474:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1901,"mutability":"mutable","name":"spender","nameLocation":"3497:7:10","nodeType":"VariableDeclaration","scope":1913,"src":"3489:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1900,"name":"address","nodeType":"ElementaryTypeName","src":"3489:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3473:32:10"},"returnParameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1913,"src":"3535:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"3535:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3534:9:10"},"scope":2286,"src":"3455:140:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2351],"body":{"id":1936,"nodeType":"Block","src":"3981:107:10","statements":[{"assignments":[1924],"declarations":[{"constant":false,"id":1924,"mutability":"mutable","name":"owner","nameLocation":"3999:5:10","nodeType":"VariableDeclaration","scope":1936,"src":"3991:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1923,"name":"address","nodeType":"ElementaryTypeName","src":"3991:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1927,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1925,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"4007:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3991:28:10"},{"expression":{"arguments":[{"id":1929,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"4038:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1930,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1916,"src":"4045:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1918,"src":"4054:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1928,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2177,2237],"referencedDeclaration":2177,"src":"4029:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4029:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1933,"nodeType":"ExpressionStatement","src":"4029:31:10"},{"expression":{"hexValue":"74727565","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4077:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1922,"id":1935,"nodeType":"Return","src":"4070:11:10"}]},"documentation":{"id":1914,"nodeType":"StructuredDocumentation","src":"3601:296:10","text":" @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":1937,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3911:7:10","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1916,"mutability":"mutable","name":"spender","nameLocation":"3927:7:10","nodeType":"VariableDeclaration","scope":1937,"src":"3919:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1915,"name":"address","nodeType":"ElementaryTypeName","src":"3919:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1918,"mutability":"mutable","name":"value","nameLocation":"3944:5:10","nodeType":"VariableDeclaration","scope":1937,"src":"3936:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"3936:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3918:32:10"},"returnParameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1921,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1937,"src":"3975:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1920,"name":"bool","nodeType":"ElementaryTypeName","src":"3975:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3974:6:10"},"scope":2286,"src":"3902:186:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2363],"body":{"id":1968,"nodeType":"Block","src":"4773:151:10","statements":[{"assignments":[1950],"declarations":[{"constant":false,"id":1950,"mutability":"mutable","name":"spender","nameLocation":"4791:7:10","nodeType":"VariableDeclaration","scope":1968,"src":"4783:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1949,"name":"address","nodeType":"ElementaryTypeName","src":"4783:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1953,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1951,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"4801:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4801:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4783:30:10"},{"expression":{"arguments":[{"id":1955,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"4839:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1956,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"4845:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1957,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"4854:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1954,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"4823:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1959,"nodeType":"ExpressionStatement","src":"4823:37:10"},{"expression":{"arguments":[{"id":1961,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"4880:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1962,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1942,"src":"4886:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1944,"src":"4890:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1960,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2016,"src":"4870:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4870:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1965,"nodeType":"ExpressionStatement","src":"4870:26:10"},{"expression":{"hexValue":"74727565","id":1966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4913:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":1948,"id":1967,"nodeType":"Return","src":"4906:11:10"}]},"documentation":{"id":1938,"nodeType":"StructuredDocumentation","src":"4094:581:10","text":" @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."},"functionSelector":"23b872dd","id":1969,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4689:12:10","nodeType":"FunctionDefinition","parameters":{"id":1945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1940,"mutability":"mutable","name":"from","nameLocation":"4710:4:10","nodeType":"VariableDeclaration","scope":1969,"src":"4702:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1939,"name":"address","nodeType":"ElementaryTypeName","src":"4702:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1942,"mutability":"mutable","name":"to","nameLocation":"4724:2:10","nodeType":"VariableDeclaration","scope":1969,"src":"4716:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1941,"name":"address","nodeType":"ElementaryTypeName","src":"4716:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1944,"mutability":"mutable","name":"value","nameLocation":"4736:5:10","nodeType":"VariableDeclaration","scope":1969,"src":"4728:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1943,"name":"uint256","nodeType":"ElementaryTypeName","src":"4728:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:41:10"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1969,"src":"4767:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1946,"name":"bool","nodeType":"ElementaryTypeName","src":"4767:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4766:6:10"},"scope":2286,"src":"4680:244:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2015,"nodeType":"Block","src":"5366:231:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5380:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5396:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5388:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1980,"name":"address","nodeType":"ElementaryTypeName","src":"5388:7:10","typeDescriptions":{}}},"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5388:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5380:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1993,"nodeType":"IfStatement","src":"5376:86:10","trueBody":{"id":1992,"nodeType":"Block","src":"5400:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5448:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1987,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5440:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1986,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:10","typeDescriptions":{}}},"id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5440:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1985,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5421:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5421:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1991,"nodeType":"RevertStatement","src":"5414:37:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1994,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"5475:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5489:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5481:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1995,"name":"address","nodeType":"ElementaryTypeName","src":"5481:7:10","typeDescriptions":{}}},"id":1998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5475:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2008,"nodeType":"IfStatement","src":"5471:86:10","trueBody":{"id":2007,"nodeType":"Block","src":"5493:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5543:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5535:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2001,"name":"address","nodeType":"ElementaryTypeName","src":"5535:7:10","typeDescriptions":{}}},"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2000,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"5514:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5514:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2006,"nodeType":"RevertStatement","src":"5507:39:10"}]}},{"expression":{"arguments":[{"id":2010,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1972,"src":"5574:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2011,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1974,"src":"5580:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1976,"src":"5584:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2009,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"5566:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5566:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2014,"nodeType":"ExpressionStatement","src":"5566:24:10"}]},"documentation":{"id":1970,"nodeType":"StructuredDocumentation","src":"4930:362:10","text":" @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2016,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"5306:9:10","nodeType":"FunctionDefinition","parameters":{"id":1977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1972,"mutability":"mutable","name":"from","nameLocation":"5324:4:10","nodeType":"VariableDeclaration","scope":2016,"src":"5316:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1971,"name":"address","nodeType":"ElementaryTypeName","src":"5316:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1974,"mutability":"mutable","name":"to","nameLocation":"5338:2:10","nodeType":"VariableDeclaration","scope":2016,"src":"5330:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1973,"name":"address","nodeType":"ElementaryTypeName","src":"5330:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1976,"mutability":"mutable","name":"value","nameLocation":"5350:5:10","nodeType":"VariableDeclaration","scope":2016,"src":"5342:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1975,"name":"uint256","nodeType":"ElementaryTypeName","src":"5342:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5315:41:10"},"returnParameters":{"id":1978,"nodeType":"ParameterList","parameters":[],"src":"5366:0:10"},"scope":2286,"src":"5297:300:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2092,"nodeType":"Block","src":"5987:1032:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2026,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"6001:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6017:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6009:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2027,"name":"address","nodeType":"ElementaryTypeName","src":"6009:7:10","typeDescriptions":{}}},"id":2030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6001:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2063,"nodeType":"Block","src":"6175:362:10","statements":[{"assignments":[2038],"declarations":[{"constant":false,"id":2038,"mutability":"mutable","name":"fromBalance","nameLocation":"6197:11:10","nodeType":"VariableDeclaration","scope":2063,"src":"6189:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2037,"name":"uint256","nodeType":"ElementaryTypeName","src":"6189:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2042,"initialValue":{"baseExpression":{"id":2039,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"6211:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2041,"indexExpression":{"id":2040,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"6221:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6211:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6189:37:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2043,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"6244:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"6258:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6244:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2053,"nodeType":"IfStatement","src":"6240:115:10","trueBody":{"id":2052,"nodeType":"Block","src":"6265:90:10","statements":[{"errorCall":{"arguments":[{"id":2047,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"6315:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2048,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"6321:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2049,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"6334:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2046,"name":"ERC20InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"6290:24:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6290:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2051,"nodeType":"RevertStatement","src":"6283:57:10"}]}},{"id":2062,"nodeType":"UncheckedBlock","src":"6368:159:10","statements":[{"expression":{"id":2060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2054,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"6475:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2056,"indexExpression":{"id":2055,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"6485:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6475:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2057,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"6493:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2058,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"6507:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6493:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:37:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2061,"nodeType":"ExpressionStatement","src":"6475:37:10"}]}]},"id":2064,"nodeType":"IfStatement","src":"5997:540:10","trueBody":{"id":2036,"nodeType":"Block","src":"6021:148:10","statements":[{"expression":{"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2032,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"6137:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2033,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"6153:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6137:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2035,"nodeType":"ExpressionStatement","src":"6137:21:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2065,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"6551:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6565:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6557:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2066,"name":"address","nodeType":"ElementaryTypeName","src":"6557:7:10","typeDescriptions":{}}},"id":2069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6557:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6551:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2084,"nodeType":"Block","src":"6766:206:10","statements":[{"id":2083,"nodeType":"UncheckedBlock","src":"6780:182:10","statements":[{"expression":{"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2077,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1794,"src":"6925:9:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2079,"indexExpression":{"id":2078,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"6935:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6925:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"6942:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6925:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2082,"nodeType":"ExpressionStatement","src":"6925:22:10"}]}]},"id":2085,"nodeType":"IfStatement","src":"6547:425:10","trueBody":{"id":2076,"nodeType":"Block","src":"6569:191:10","statements":[{"id":2075,"nodeType":"UncheckedBlock","src":"6583:167:10","statements":[{"expression":{"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2071,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1802,"src":"6714:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":2072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"6730:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6714:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2074,"nodeType":"ExpressionStatement","src":"6714:21:10"}]}]}},{"eventCall":{"arguments":[{"id":2087,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"6996:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2088,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"7002:2:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"7006:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2086,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2298,"src":"6987:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6987:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2091,"nodeType":"EmitStatement","src":"6982:30:10"}]},"documentation":{"id":2017,"nodeType":"StructuredDocumentation","src":"5603:304:10","text":" @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."},"id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5921:7:10","nodeType":"FunctionDefinition","parameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"from","nameLocation":"5937:4:10","nodeType":"VariableDeclaration","scope":2093,"src":"5929:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2018,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"to","nameLocation":"5951:2:10","nodeType":"VariableDeclaration","scope":2093,"src":"5943:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2020,"name":"address","nodeType":"ElementaryTypeName","src":"5943:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2023,"mutability":"mutable","name":"value","nameLocation":"5963:5:10","nodeType":"VariableDeclaration","scope":2093,"src":"5955:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2022,"name":"uint256","nodeType":"ElementaryTypeName","src":"5955:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5928:41:10"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[],"src":"5987:0:10"},"scope":2286,"src":"5912:1107:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2125,"nodeType":"Block","src":"7418:152:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2101,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"7432:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7451:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7443:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2102,"name":"address","nodeType":"ElementaryTypeName","src":"7443:7:10","typeDescriptions":{}}},"id":2105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7443:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7432:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2115,"nodeType":"IfStatement","src":"7428:91:10","trueBody":{"id":2114,"nodeType":"Block","src":"7455:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7505:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7497:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2108,"name":"address","nodeType":"ElementaryTypeName","src":"7497:7:10","typeDescriptions":{}}},"id":2111,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7497:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2107,"name":"ERC20InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"7476:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7476:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2113,"nodeType":"RevertStatement","src":"7469:39:10"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7544:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7536:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2117,"name":"address","nodeType":"ElementaryTypeName","src":"7536:7:10","typeDescriptions":{}}},"id":2120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7536:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2121,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"7548:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"7557:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2116,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"7528:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7528:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2124,"nodeType":"ExpressionStatement","src":"7528:35:10"}]},"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"7025:332:10","text":" @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."},"id":2126,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"7371:5:10","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"account","nameLocation":"7385:7:10","nodeType":"VariableDeclaration","scope":2126,"src":"7377:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2095,"name":"address","nodeType":"ElementaryTypeName","src":"7377:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"value","nameLocation":"7402:5:10","nodeType":"VariableDeclaration","scope":2126,"src":"7394:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"7394:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7376:32:10"},"returnParameters":{"id":2100,"nodeType":"ParameterList","parameters":[],"src":"7418:0:10"},"scope":2286,"src":"7362:208:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2158,"nodeType":"Block","src":"7944:150:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2134,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"7958:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7977:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2136,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7969:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2135,"name":"address","nodeType":"ElementaryTypeName","src":"7969:7:10","typeDescriptions":{}}},"id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7969:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7958:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2148,"nodeType":"IfStatement","src":"7954:89:10","trueBody":{"id":2147,"nodeType":"Block","src":"7981:62:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8029:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8021:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2141,"name":"address","nodeType":"ElementaryTypeName","src":"8021:7:10","typeDescriptions":{}}},"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8021:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2140,"name":"ERC20InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"8002:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8002:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2146,"nodeType":"RevertStatement","src":"7995:37:10"}]}},{"expression":{"arguments":[{"id":2150,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"8060:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8077:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8069:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2151,"name":"address","nodeType":"ElementaryTypeName","src":"8069:7:10","typeDescriptions":{}}},"id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8069:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"8081:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2149,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2093,"src":"8052:7:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2157,"nodeType":"ExpressionStatement","src":"8052:35:10"}]},"documentation":{"id":2127,"nodeType":"StructuredDocumentation","src":"7576:307:10","text":" @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"},"id":2159,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"7897:5:10","nodeType":"FunctionDefinition","parameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"account","nameLocation":"7911:7:10","nodeType":"VariableDeclaration","scope":2159,"src":"7903:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2128,"name":"address","nodeType":"ElementaryTypeName","src":"7903:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2131,"mutability":"mutable","name":"value","nameLocation":"7928:5:10","nodeType":"VariableDeclaration","scope":2159,"src":"7920:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"7920:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7902:32:10"},"returnParameters":{"id":2133,"nodeType":"ParameterList","parameters":[],"src":"7944:0:10"},"scope":2286,"src":"7888:206:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2176,"nodeType":"Block","src":"8704:54:10","statements":[{"expression":{"arguments":[{"id":2170,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2162,"src":"8723:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2171,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2164,"src":"8730:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2172,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"8739:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":2173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8746:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2169,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2177,2237],"referencedDeclaration":2237,"src":"8714:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8714:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2175,"nodeType":"ExpressionStatement","src":"8714:37:10"}]},"documentation":{"id":2160,"nodeType":"StructuredDocumentation","src":"8100:525:10","text":" @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2177,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"8639:8:10","nodeType":"FunctionDefinition","parameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2162,"mutability":"mutable","name":"owner","nameLocation":"8656:5:10","nodeType":"VariableDeclaration","scope":2177,"src":"8648:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2161,"name":"address","nodeType":"ElementaryTypeName","src":"8648:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2164,"mutability":"mutable","name":"spender","nameLocation":"8671:7:10","nodeType":"VariableDeclaration","scope":2177,"src":"8663:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2163,"name":"address","nodeType":"ElementaryTypeName","src":"8663:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2166,"mutability":"mutable","name":"value","nameLocation":"8688:5:10","nodeType":"VariableDeclaration","scope":2177,"src":"8680:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"8680:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8647:47:10"},"returnParameters":{"id":2168,"nodeType":"ParameterList","parameters":[],"src":"8704:0:10"},"scope":2286,"src":"8630:128:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2236,"nodeType":"Block","src":"9703:334:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2189,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"9717:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9726:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2190,"name":"address","nodeType":"ElementaryTypeName","src":"9726:7:10","typeDescriptions":{}}},"id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9726:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9717:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2203,"nodeType":"IfStatement","src":"9713:89:10","trueBody":{"id":2202,"nodeType":"Block","src":"9738:64:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9788:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2196,"name":"address","nodeType":"ElementaryTypeName","src":"9780:7:10","typeDescriptions":{}}},"id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2195,"name":"ERC20InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"9759:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9759:32:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2201,"nodeType":"RevertStatement","src":"9752:39:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2204,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"9815:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9834:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9826:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2205,"name":"address","nodeType":"ElementaryTypeName","src":"9826:7:10","typeDescriptions":{}}},"id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9826:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9815:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2218,"nodeType":"IfStatement","src":"9811:90:10","trueBody":{"id":2217,"nodeType":"Block","src":"9838:63:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9887:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9879:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2211,"name":"address","nodeType":"ElementaryTypeName","src":"9879:7:10","typeDescriptions":{}}},"id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9879:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2210,"name":"ERC20InvalidSpender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"9859:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9859:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2216,"nodeType":"RevertStatement","src":"9852:38:10"}]}},{"expression":{"id":2225,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2219,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1800,"src":"9910:11:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":2222,"indexExpression":{"id":2220,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"9922:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:18:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2223,"indexExpression":{"id":2221,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"9929:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9910:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"9940:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9910:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2226,"nodeType":"ExpressionStatement","src":"9910:35:10"},{"condition":{"id":2227,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"9959:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2235,"nodeType":"IfStatement","src":"9955:76:10","trueBody":{"id":2234,"nodeType":"Block","src":"9970:61:10","statements":[{"eventCall":{"arguments":[{"id":2229,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2180,"src":"9998:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2230,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"10005:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"10014:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2228,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2307,"src":"9989:8:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9989:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2233,"nodeType":"EmitStatement","src":"9984:36:10"}]}}]},"documentation":{"id":2178,"nodeType":"StructuredDocumentation","src":"8764:836:10","text":" @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."},"id":2237,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"9614:8:10","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2180,"mutability":"mutable","name":"owner","nameLocation":"9631:5:10","nodeType":"VariableDeclaration","scope":2237,"src":"9623:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2179,"name":"address","nodeType":"ElementaryTypeName","src":"9623:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2182,"mutability":"mutable","name":"spender","nameLocation":"9646:7:10","nodeType":"VariableDeclaration","scope":2237,"src":"9638:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2181,"name":"address","nodeType":"ElementaryTypeName","src":"9638:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"value","nameLocation":"9663:5:10","nodeType":"VariableDeclaration","scope":2237,"src":"9655:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"9655:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"emitEvent","nameLocation":"9675:9:10","nodeType":"VariableDeclaration","scope":2237,"src":"9670:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2185,"name":"bool","nodeType":"ElementaryTypeName","src":"9670:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9622:63:10"},"returnParameters":{"id":2188,"nodeType":"ParameterList","parameters":[],"src":"9703:0:10"},"scope":2286,"src":"9605:432:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2284,"nodeType":"Block","src":"10408:387:10","statements":[{"assignments":[2248],"declarations":[{"constant":false,"id":2248,"mutability":"mutable","name":"currentAllowance","nameLocation":"10426:16:10","nodeType":"VariableDeclaration","scope":2284,"src":"10418:24:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"10418:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2253,"initialValue":{"arguments":[{"id":2250,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"10455:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2251,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"10462:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2249,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1913,"src":"10445:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":2252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10445:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10418:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2254,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"10484:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"arguments":[{"id":2257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10508:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"10508:7:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2255,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10503:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10503:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10517:3:10","memberName":"max","nodeType":"MemberAccess","src":"10503:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10484:36:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2283,"nodeType":"IfStatement","src":"10480:309:10","trueBody":{"id":2282,"nodeType":"Block","src":"10522:267:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2261,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"10540:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10559:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10540:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2271,"nodeType":"IfStatement","src":"10536:130:10","trueBody":{"id":2270,"nodeType":"Block","src":"10566:100:10","statements":[{"errorCall":{"arguments":[{"id":2265,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"10618:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2266,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"10627:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10645:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2264,"name":"ERC20InsufficientAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"10591:26:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256,uint256) pure returns (error)"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10591:60:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2269,"nodeType":"RevertStatement","src":"10584:67:10"}]}},{"id":2281,"nodeType":"UncheckedBlock","src":"10679:100:10","statements":[{"expression":{"arguments":[{"id":2273,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2240,"src":"10716:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2274,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2242,"src":"10723:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2275,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"10732:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"10751:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10732:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":2278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10758:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2272,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2177,2237],"referencedDeclaration":2237,"src":"10707:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,bool)"}},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10707:57:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2280,"nodeType":"ExpressionStatement","src":"10707:57:10"}]}]}}]},"documentation":{"id":2238,"nodeType":"StructuredDocumentation","src":"10043:271:10","text":" @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."},"id":2285,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"10328:15:10","nodeType":"FunctionDefinition","parameters":{"id":2245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2240,"mutability":"mutable","name":"owner","nameLocation":"10352:5:10","nodeType":"VariableDeclaration","scope":2285,"src":"10344:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2239,"name":"address","nodeType":"ElementaryTypeName","src":"10344:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2242,"mutability":"mutable","name":"spender","nameLocation":"10367:7:10","nodeType":"VariableDeclaration","scope":2285,"src":"10359:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2241,"name":"address","nodeType":"ElementaryTypeName","src":"10359:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2244,"mutability":"mutable","name":"value","nameLocation":"10384:5:10","nodeType":"VariableDeclaration","scope":2285,"src":"10376:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"10376:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10343:47:10"},"returnParameters":{"id":2246,"nodeType":"ParameterList","parameters":[],"src":"10408:0:10"},"scope":2286,"src":"10319:476:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":2287,"src":"1106:9691:10","usedErrors":[313,318,323,332,337,342],"usedEvents":[2298,2307]}],"src":"105:10693:10"},"id":10},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[2364]},"id":2365,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2288,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"106:25:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":2289,"nodeType":"StructuredDocumentation","src":"133:71:11","text":" @dev Interface of the ERC-20 standard as defined in the ERC."},"fullyImplemented":false,"id":2364,"linearizedBaseContracts":[2364],"name":"IERC20","nameLocation":"215:6:11","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2290,"nodeType":"StructuredDocumentation","src":"228:158:11","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2298,"name":"Transfer","nameLocation":"397:8:11","nodeType":"EventDefinition","parameters":{"id":2297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2292,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"422:4:11","nodeType":"VariableDeclaration","scope":2298,"src":"406:20:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"406:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2294,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"444:2:11","nodeType":"VariableDeclaration","scope":2298,"src":"428:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2293,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2296,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"456:5:11","nodeType":"VariableDeclaration","scope":2298,"src":"448:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2295,"name":"uint256","nodeType":"ElementaryTypeName","src":"448:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"405:57:11"},"src":"391:72:11"},{"anonymous":false,"documentation":{"id":2299,"nodeType":"StructuredDocumentation","src":"469:148:11","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2307,"name":"Approval","nameLocation":"628:8:11","nodeType":"EventDefinition","parameters":{"id":2306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2301,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"653:5:11","nodeType":"VariableDeclaration","scope":2307,"src":"637:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2300,"name":"address","nodeType":"ElementaryTypeName","src":"637:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2303,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"676:7:11","nodeType":"VariableDeclaration","scope":2307,"src":"660:23:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2302,"name":"address","nodeType":"ElementaryTypeName","src":"660:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2305,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"693:5:11","nodeType":"VariableDeclaration","scope":2307,"src":"685:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2304,"name":"uint256","nodeType":"ElementaryTypeName","src":"685:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"636:63:11"},"src":"622:78:11"},{"documentation":{"id":2308,"nodeType":"StructuredDocumentation","src":"706:65:11","text":" @dev Returns the value of tokens in existence."},"functionSelector":"18160ddd","id":2313,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"785:11:11","nodeType":"FunctionDefinition","parameters":{"id":2309,"nodeType":"ParameterList","parameters":[],"src":"796:2:11"},"returnParameters":{"id":2312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2311,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2313,"src":"822:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2310,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:9:11"},"scope":2364,"src":"776:55:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2314,"nodeType":"StructuredDocumentation","src":"837:71:11","text":" @dev Returns the value of tokens owned by `account`."},"functionSelector":"70a08231","id":2321,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"922:9:11","nodeType":"FunctionDefinition","parameters":{"id":2317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2316,"mutability":"mutable","name":"account","nameLocation":"940:7:11","nodeType":"VariableDeclaration","scope":2321,"src":"932:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2315,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:17:11"},"returnParameters":{"id":2320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2321,"src":"972:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"972:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"971:9:11"},"scope":2364,"src":"913:68:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2322,"nodeType":"StructuredDocumentation","src":"987:213:11","text":" @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":2331,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1214:8:11","nodeType":"FunctionDefinition","parameters":{"id":2327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2324,"mutability":"mutable","name":"to","nameLocation":"1231:2:11","nodeType":"VariableDeclaration","scope":2331,"src":"1223:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2323,"name":"address","nodeType":"ElementaryTypeName","src":"1223:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2326,"mutability":"mutable","name":"value","nameLocation":"1243:5:11","nodeType":"VariableDeclaration","scope":2331,"src":"1235:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2325,"name":"uint256","nodeType":"ElementaryTypeName","src":"1235:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1222:27:11"},"returnParameters":{"id":2330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2329,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2331,"src":"1268:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2328,"name":"bool","nodeType":"ElementaryTypeName","src":"1268:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1267:6:11"},"scope":2364,"src":"1205:69:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2332,"nodeType":"StructuredDocumentation","src":"1280:264:11","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":2341,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1558:9:11","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2334,"mutability":"mutable","name":"owner","nameLocation":"1576:5:11","nodeType":"VariableDeclaration","scope":2341,"src":"1568:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2336,"mutability":"mutable","name":"spender","nameLocation":"1591:7:11","nodeType":"VariableDeclaration","scope":2341,"src":"1583:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2335,"name":"address","nodeType":"ElementaryTypeName","src":"1583:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1567:32:11"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2341,"src":"1623:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2338,"name":"uint256","nodeType":"ElementaryTypeName","src":"1623:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1622:9:11"},"scope":2364,"src":"1549:83:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2342,"nodeType":"StructuredDocumentation","src":"1638:667:11","text":" @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2351,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2319:7:11","nodeType":"FunctionDefinition","parameters":{"id":2347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"spender","nameLocation":"2335:7:11","nodeType":"VariableDeclaration","scope":2351,"src":"2327:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2343,"name":"address","nodeType":"ElementaryTypeName","src":"2327:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2346,"mutability":"mutable","name":"value","nameLocation":"2352:5:11","nodeType":"VariableDeclaration","scope":2351,"src":"2344:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2344:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2326:32:11"},"returnParameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2351,"src":"2377:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2348,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2376:6:11"},"scope":2364,"src":"2310:73:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2352,"nodeType":"StructuredDocumentation","src":"2389:297:11","text":" @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2363,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2700:12:11","nodeType":"FunctionDefinition","parameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2354,"mutability":"mutable","name":"from","nameLocation":"2721:4:11","nodeType":"VariableDeclaration","scope":2363,"src":"2713:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2353,"name":"address","nodeType":"ElementaryTypeName","src":"2713:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2356,"mutability":"mutable","name":"to","nameLocation":"2735:2:11","nodeType":"VariableDeclaration","scope":2363,"src":"2727:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2355,"name":"address","nodeType":"ElementaryTypeName","src":"2727:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2358,"mutability":"mutable","name":"value","nameLocation":"2747:5:11","nodeType":"VariableDeclaration","scope":2363,"src":"2739:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2357,"name":"uint256","nodeType":"ElementaryTypeName","src":"2739:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2712:41:11"},"returnParameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2363,"src":"2772:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2360,"name":"bool","nodeType":"ElementaryTypeName","src":"2772:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2771:6:11"},"scope":2364,"src":"2691:87:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2365,"src":"205:2575:11","usedErrors":[],"usedEvents":[2298,2307]}],"src":"106:2675:11"},"id":11},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[2364],"IERC20Metadata":[2390]},"id":2391,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2366,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"125:24:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":2368,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2391,"sourceUnit":2365,"src":"151:37:12","symbolAliases":[{"foreign":{"id":2367,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"159:6:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2370,"name":"IERC20","nameLocations":["306:6:12"],"nodeType":"IdentifierPath","referencedDeclaration":2364,"src":"306:6:12"},"id":2371,"nodeType":"InheritanceSpecifier","src":"306:6:12"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2369,"nodeType":"StructuredDocumentation","src":"190:87:12","text":" @dev Interface for the optional metadata functions from the ERC-20 standard."},"fullyImplemented":false,"id":2390,"linearizedBaseContracts":[2390,2364],"name":"IERC20Metadata","nameLocation":"288:14:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2372,"nodeType":"StructuredDocumentation","src":"319:54:12","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":2377,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"387:4:12","nodeType":"FunctionDefinition","parameters":{"id":2373,"nodeType":"ParameterList","parameters":[],"src":"391:2:12"},"returnParameters":{"id":2376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2377,"src":"417:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2374,"name":"string","nodeType":"ElementaryTypeName","src":"417:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"416:15:12"},"scope":2390,"src":"378:54:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2378,"nodeType":"StructuredDocumentation","src":"438:56:12","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":2383,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"508:6:12","nodeType":"FunctionDefinition","parameters":{"id":2379,"nodeType":"ParameterList","parameters":[],"src":"514:2:12"},"returnParameters":{"id":2382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2381,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2383,"src":"540:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2380,"name":"string","nodeType":"ElementaryTypeName","src":"540:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"539:15:12"},"scope":2390,"src":"499:56:12","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2384,"nodeType":"StructuredDocumentation","src":"561:65:12","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":2389,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"640:8:12","nodeType":"FunctionDefinition","parameters":{"id":2385,"nodeType":"ParameterList","parameters":[],"src":"648:2:12"},"returnParameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2389,"src":"674:5:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2386,"name":"uint8","nodeType":"ElementaryTypeName","src":"674:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"673:7:12"},"scope":2390,"src":"631:50:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2391,"src":"278:405:12","usedErrors":[],"usedEvents":[2298,2307]}],"src":"125:559:12"},"id":12},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[4654],"ERC165":[6455],"ERC721":[3347],"ERC721Utils":[3614],"IERC165":[6467],"IERC721":[3464],"IERC721Errors":[391],"IERC721Metadata":[3510],"Strings":[6431]},"id":3348,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2392,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:13"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":2394,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3348,"sourceUnit":3465,"src":"133:38:13","symbolAliases":[{"foreign":{"id":2393,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"141:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":2396,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3348,"sourceUnit":3511,"src":"172:65:13","symbolAliases":[{"foreign":{"id":2395,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"180:15:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":2398,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3348,"sourceUnit":3615,"src":"238:52:13","symbolAliases":[{"foreign":{"id":2397,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"246:11:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":2400,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3348,"sourceUnit":4655,"src":"291:48:13","symbolAliases":[{"foreign":{"id":2399,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4654,"src":"299:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":2402,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3348,"sourceUnit":6432,"src":"340:48:13","symbolAliases":[{"foreign":{"id":2401,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6431,"src":"348:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":2405,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3348,"sourceUnit":6456,"src":"389:69:13","symbolAliases":[{"foreign":{"id":2403,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"397:7:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2404,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6455,"src":"406:6:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":2407,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3348,"sourceUnit":439,"src":"459:66:13","symbolAliases":[{"foreign":{"id":2406,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"467:13:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2409,"name":"Context","nameLocations":["803:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":4654,"src":"803:7:13"},"id":2410,"nodeType":"InheritanceSpecifier","src":"803:7:13"},{"baseName":{"id":2411,"name":"ERC165","nameLocations":["812:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":6455,"src":"812:6:13"},"id":2412,"nodeType":"InheritanceSpecifier","src":"812:6:13"},{"baseName":{"id":2413,"name":"IERC721","nameLocations":["820:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":3464,"src":"820:7:13"},"id":2414,"nodeType":"InheritanceSpecifier","src":"820:7:13"},{"baseName":{"id":2415,"name":"IERC721Metadata","nameLocations":["829:15:13"],"nodeType":"IdentifierPath","referencedDeclaration":3510,"src":"829:15:13"},"id":2416,"nodeType":"InheritanceSpecifier","src":"829:15:13"},{"baseName":{"id":2417,"name":"IERC721Errors","nameLocations":["846:13:13"],"nodeType":"IdentifierPath","referencedDeclaration":391,"src":"846:13:13"},"id":2418,"nodeType":"InheritanceSpecifier","src":"846:13:13"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":2408,"nodeType":"StructuredDocumentation","src":"527:247:13","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":3347,"linearizedBaseContracts":[3347,391,3510,3464,6455,6467,4654],"name":"ERC721","nameLocation":"793:6:13","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2421,"libraryName":{"id":2419,"name":"Strings","nameLocations":["872:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":6431,"src":"872:7:13"},"nodeType":"UsingForDirective","src":"866:26:13","typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":2423,"mutability":"mutable","name":"_name","nameLocation":"931:5:13","nodeType":"VariableDeclaration","scope":3347,"src":"916:20:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2422,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2425,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:13","nodeType":"VariableDeclaration","scope":3347,"src":"963:22:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2424,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2429,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:13","nodeType":"VariableDeclaration","scope":3347,"src":"992:51:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2428,"keyName":"tokenId","keyNameLocation":"1008:7:13","keyType":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2427,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2433,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:13","nodeType":"VariableDeclaration","scope":3347,"src":"1050:51:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":2432,"keyName":"owner","keyNameLocation":"1066:5:13","keyType":{"id":2430,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":2437,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:13","nodeType":"VariableDeclaration","scope":3347,"src":"1108:59:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":2436,"keyName":"tokenId","keyNameLocation":"1124:7:13","keyType":{"id":2434,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2435,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":2443,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:13","nodeType":"VariableDeclaration","scope":3347,"src":"1174:86:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":2442,"keyName":"owner","keyNameLocation":"1190:5:13","keyType":{"id":2438,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2441,"keyName":"operator","keyNameLocation":"1215:8:13","keyType":{"id":2439,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":2440,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":2459,"nodeType":"Block","src":"1436:57:13","statements":[{"expression":{"id":2453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2451,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"1446:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2452,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2446,"src":"1454:5:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2454,"nodeType":"ExpressionStatement","src":"1446:13:13"},{"expression":{"id":2457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2455,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"1469:7:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2456,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"1479:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2458,"nodeType":"ExpressionStatement","src":"1469:17:13"}]},"documentation":{"id":2444,"nodeType":"StructuredDocumentation","src":"1267:108:13","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":2460,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2446,"mutability":"mutable","name":"name_","nameLocation":"1406:5:13","nodeType":"VariableDeclaration","scope":2460,"src":"1392:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2445,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2448,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:13","nodeType":"VariableDeclaration","scope":2460,"src":"1413:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2447,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:13"},"returnParameters":{"id":2450,"nodeType":"ParameterList","parameters":[],"src":"1436:0:13"},"scope":3347,"src":"1380:113:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[6454,6466],"body":{"id":2490,"nodeType":"Block","src":"1635:192:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2471,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"1664:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2473,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"1684:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$3464_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$3464_$","typeString":"type(contract IERC721)"}],"id":2472,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2474,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$3464","typeString":"type(contract IERC721)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:13","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2477,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"1720:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2479,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"1740:15:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3510_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$3510_$","typeString":"type(contract IERC721Metadata)"}],"id":2478,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$3510","typeString":"type(contract IERC721Metadata)"}},"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:13","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2486,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"1808:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":2484,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$3347_$","typeString":"type(contract super ERC721)"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:13","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":6454,"src":"1784:23:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2470,"id":2489,"nodeType":"Return","src":"1645:175:13"}]},"documentation":{"id":2461,"nodeType":"StructuredDocumentation","src":"1499:23:13","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":2491,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:13","nodeType":"FunctionDefinition","overrides":{"id":2467,"nodeType":"OverrideSpecifier","overrides":[{"id":2465,"name":"ERC165","nameLocations":["1603:6:13"],"nodeType":"IdentifierPath","referencedDeclaration":6455,"src":"1603:6:13"},{"id":2466,"name":"IERC165","nameLocations":["1611:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":6467,"src":"1611:7:13"}],"src":"1594:25:13"},"parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:13","nodeType":"VariableDeclaration","scope":2491,"src":"1554:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2462,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:13"},"returnParameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2491,"src":"1629:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2468,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:13"},"scope":3347,"src":"1527:300:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3389],"body":{"id":2518,"nodeType":"Block","src":"1933:136:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2499,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"1947:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2501,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2500,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:13","typeDescriptions":{}}},"id":2503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2513,"nodeType":"IfStatement","src":"1943:87:13","trueBody":{"id":2512,"nodeType":"Block","src":"1968:62:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2506,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:13","typeDescriptions":{}}},"id":2509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2505,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":349,"src":"1989:18:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2511,"nodeType":"RevertStatement","src":"1982:37:13"}]}},{"expression":{"baseExpression":{"id":2514,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"2046:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2516,"indexExpression":{"id":2515,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2494,"src":"2056:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2498,"id":2517,"nodeType":"Return","src":"2039:23:13"}]},"documentation":{"id":2492,"nodeType":"StructuredDocumentation","src":"1833:23:13","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":2519,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:13","nodeType":"FunctionDefinition","parameters":{"id":2495,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2494,"mutability":"mutable","name":"owner","nameLocation":"1888:5:13","nodeType":"VariableDeclaration","scope":2519,"src":"1880:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2493,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:13"},"returnParameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2519,"src":"1924:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:13"},"scope":3347,"src":"1861:208:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3397],"body":{"id":2531,"nodeType":"Block","src":"2175:46:13","statements":[{"expression":{"arguments":[{"id":2528,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2522,"src":"2206:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2527,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"2192:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2526,"id":2530,"nodeType":"Return","src":"2185:29:13"}]},"documentation":{"id":2520,"nodeType":"StructuredDocumentation","src":"2075:23:13","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":2532,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:13","nodeType":"FunctionDefinition","parameters":{"id":2523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2522,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:13","nodeType":"VariableDeclaration","scope":2532,"src":"2120:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2521,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:13"},"returnParameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2525,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2532,"src":"2166:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2524,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:13"},"scope":3347,"src":"2103:118:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3495],"body":{"id":2540,"nodeType":"Block","src":"2323:29:13","statements":[{"expression":{"id":2538,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2423,"src":"2340:5:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2537,"id":2539,"nodeType":"Return","src":"2333:12:13"}]},"documentation":{"id":2533,"nodeType":"StructuredDocumentation","src":"2227:31:13","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":2541,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:13","nodeType":"FunctionDefinition","parameters":{"id":2534,"nodeType":"ParameterList","parameters":[],"src":"2276:2:13"},"returnParameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2541,"src":"2308:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2535,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:13"},"scope":3347,"src":"2263:89:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3501],"body":{"id":2549,"nodeType":"Block","src":"2456:31:13","statements":[{"expression":{"id":2547,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"2473:7:13","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":2546,"id":2548,"nodeType":"Return","src":"2466:14:13"}]},"documentation":{"id":2542,"nodeType":"StructuredDocumentation","src":"2358:31:13","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":2550,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:13","nodeType":"FunctionDefinition","parameters":{"id":2543,"nodeType":"ParameterList","parameters":[],"src":"2409:2:13"},"returnParameters":{"id":2546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2550,"src":"2441:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2544,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:13"},"scope":3347,"src":"2394:93:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3509],"body":{"id":2585,"nodeType":"Block","src":"2608:176:13","statements":[{"expression":{"arguments":[{"id":2559,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"2632:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2558,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"2618:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2561,"nodeType":"ExpressionStatement","src":"2618:22:13"},{"assignments":[2563],"declarations":[{"constant":false,"id":2563,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:13","nodeType":"VariableDeclaration","scope":2585,"src":"2651:21:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2562,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2566,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":2564,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"2675:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:13"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2569,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"2708:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2568,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2567,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:13","typeDescriptions":{}}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:13","memberName":"length","nodeType":"MemberAccess","src":"2702:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:13","trueExpression":{"arguments":[{"id":2577,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2563,"src":"2744:7:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2578,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"2753:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:13","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":5143,"src":"2753:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2574,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:13","typeDescriptions":{}}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:13","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:13","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2557,"id":2584,"nodeType":"Return","src":"2695:82:13"}]},"documentation":{"id":2551,"nodeType":"StructuredDocumentation","src":"2493:31:13","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":2586,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:13","nodeType":"FunctionDefinition","parameters":{"id":2554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:13","nodeType":"VariableDeclaration","scope":2586,"src":"2547:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:13"},"returnParameters":{"id":2557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2556,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2586,"src":"2593:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2555,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:13"},"scope":3347,"src":"2529:255:13","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":2594,"nodeType":"Block","src":"3092:26:13","statements":[{"expression":{"hexValue":"","id":2592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":2591,"id":2593,"nodeType":"Return","src":"3102:9:13"}]},"documentation":{"id":2587,"nodeType":"StructuredDocumentation","src":"2790:231:13","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":2595,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:13","nodeType":"FunctionDefinition","parameters":{"id":2588,"nodeType":"ParameterList","parameters":[],"src":"3043:2:13"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2595,"src":"3077:13:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2589,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:13"},"scope":3347,"src":"3026:92:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[3437],"body":{"id":2610,"nodeType":"Block","src":"3213:52:13","statements":[{"expression":{"arguments":[{"id":2604,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"3232:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2605,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"3236:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2606,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"3245:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2603,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[3214,3280],"referencedDeclaration":3214,"src":"3223:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":2608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2609,"nodeType":"ExpressionStatement","src":"3223:35:13"}]},"documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"3124:23:13","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":2611,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:13","nodeType":"FunctionDefinition","parameters":{"id":2601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"to","nameLocation":"3177:2:13","nodeType":"VariableDeclaration","scope":2611,"src":"3169:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2597,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2600,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:13","nodeType":"VariableDeclaration","scope":2611,"src":"3181:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:13"},"returnParameters":{"id":2602,"nodeType":"ParameterList","parameters":[],"src":"3213:0:13"},"scope":3347,"src":"3152:113:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3453],"body":{"id":2627,"nodeType":"Block","src":"3375:78:13","statements":[{"expression":{"arguments":[{"id":2620,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"3399:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2619,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"3385:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2622,"nodeType":"ExpressionStatement","src":"3385:22:13"},{"expression":{"arguments":[{"id":2624,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2614,"src":"3438:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2623,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"3425:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2618,"id":2626,"nodeType":"Return","src":"3418:28:13"}]},"documentation":{"id":2612,"nodeType":"StructuredDocumentation","src":"3271:23:13","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":2628,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:13","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:13","nodeType":"VariableDeclaration","scope":2628,"src":"3320:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:13"},"returnParameters":{"id":2618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2617,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2628,"src":"3366:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2616,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:13"},"scope":3347,"src":"3299:154:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3445],"body":{"id":2643,"nodeType":"Block","src":"3562:69:13","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2637,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"3591:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2639,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2631,"src":"3605:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2640,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2633,"src":"3615:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2636,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"3572:18:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2642,"nodeType":"ExpressionStatement","src":"3572:52:13"}]},"documentation":{"id":2629,"nodeType":"StructuredDocumentation","src":"3459:23:13","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":2644,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:13","nodeType":"FunctionDefinition","parameters":{"id":2634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"operator","nameLocation":"3522:8:13","nodeType":"VariableDeclaration","scope":2644,"src":"3514:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2633,"mutability":"mutable","name":"approved","nameLocation":"3537:8:13","nodeType":"VariableDeclaration","scope":2644,"src":"3532:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2632,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:13"},"returnParameters":{"id":2635,"nodeType":"ParameterList","parameters":[],"src":"3562:0:13"},"scope":3347,"src":"3487:144:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3463],"body":{"id":2660,"nodeType":"Block","src":"3759:59:13","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2654,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"3776:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2656,"indexExpression":{"id":2655,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2647,"src":"3795:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2658,"indexExpression":{"id":2657,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2649,"src":"3802:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2653,"id":2659,"nodeType":"Return","src":"3769:42:13"}]},"documentation":{"id":2645,"nodeType":"StructuredDocumentation","src":"3637:23:13","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":2661,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:13","nodeType":"FunctionDefinition","parameters":{"id":2650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2647,"mutability":"mutable","name":"owner","nameLocation":"3699:5:13","nodeType":"VariableDeclaration","scope":2661,"src":"3691:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2646,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2649,"mutability":"mutable","name":"operator","nameLocation":"3714:8:13","nodeType":"VariableDeclaration","scope":2661,"src":"3706:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2648,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:13"},"returnParameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2661,"src":"3753:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2651,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:13"},"scope":3347,"src":"3665:153:13","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[3429],"body":{"id":2706,"nodeType":"Block","src":"3932:498:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2671,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"3946:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2672,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:13","typeDescriptions":{}}},"id":2675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2685,"nodeType":"IfStatement","src":"3942:87:13","trueBody":{"id":2684,"nodeType":"Block","src":"3964:65:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2678,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:13","typeDescriptions":{}}},"id":2681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2677,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"3985:21:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2683,"nodeType":"RevertStatement","src":"3978:40:13"}]}},{"assignments":[2687],"declarations":[{"constant":false,"id":2687,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:13","nodeType":"VariableDeclaration","scope":2706,"src":"4247:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2686,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2694,"initialValue":{"arguments":[{"id":2689,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"4279:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2690,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"4283:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":2691,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"4292:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2688,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"4271:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2695,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"4319:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2696,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"4336:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2705,"nodeType":"IfStatement","src":"4315:109:13","trueBody":{"id":2704,"nodeType":"Block","src":"4342:82:13","statements":[{"errorCall":{"arguments":[{"id":2699,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"4384:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2700,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"4390:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2701,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"4399:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2698,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"4363:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2703,"nodeType":"RevertStatement","src":"4356:57:13"}]}}]},"documentation":{"id":2662,"nodeType":"StructuredDocumentation","src":"3824:23:13","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":2707,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:13","nodeType":"FunctionDefinition","parameters":{"id":2669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2664,"mutability":"mutable","name":"from","nameLocation":"3882:4:13","nodeType":"VariableDeclaration","scope":2707,"src":"3874:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2663,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2666,"mutability":"mutable","name":"to","nameLocation":"3896:2:13","nodeType":"VariableDeclaration","scope":2707,"src":"3888:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2665,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2668,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:13","nodeType":"VariableDeclaration","scope":2707,"src":"3900:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2667,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:13"},"returnParameters":{"id":2670,"nodeType":"ParameterList","parameters":[],"src":"3932:0:13"},"scope":3347,"src":"3852:578:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[3419],"body":{"id":2724,"nodeType":"Block","src":"4540:56:13","statements":[{"expression":{"arguments":[{"id":2718,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"4567:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2719,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2712,"src":"4573:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2714,"src":"4577:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2717,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[2725,2755],"referencedDeclaration":2755,"src":"4550:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2723,"nodeType":"ExpressionStatement","src":"4550:39:13"}]},"documentation":{"id":2708,"nodeType":"StructuredDocumentation","src":"4436:23:13","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":2725,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:13","nodeType":"FunctionDefinition","parameters":{"id":2715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"from","nameLocation":"4498:4:13","nodeType":"VariableDeclaration","scope":2725,"src":"4490:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2709,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2712,"mutability":"mutable","name":"to","nameLocation":"4512:2:13","nodeType":"VariableDeclaration","scope":2725,"src":"4504:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2711,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2714,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:13","nodeType":"VariableDeclaration","scope":2725,"src":"4516:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2713,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:13"},"returnParameters":{"id":2716,"nodeType":"ParameterList","parameters":[],"src":"4540:0:13"},"scope":3347,"src":"4464:132:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[3409],"body":{"id":2754,"nodeType":"Block","src":"4733:130:13","statements":[{"expression":{"arguments":[{"id":2738,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"4756:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2739,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"4762:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2740,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"4766:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2737,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"4743:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2742,"nodeType":"ExpressionStatement","src":"4743:31:13"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2746,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"4818:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2748,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2728,"src":"4832:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2749,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2730,"src":"4838:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2750,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"4842:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2751,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2734,"src":"4851:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2743,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"4784:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3614_$","typeString":"type(library ERC721Utils)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:13","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3613,"src":"4784:33:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2753,"nodeType":"ExpressionStatement","src":"4784:72:13"}]},"documentation":{"id":2726,"nodeType":"StructuredDocumentation","src":"4602:23:13","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":2755,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:13","nodeType":"FunctionDefinition","parameters":{"id":2735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"from","nameLocation":"4664:4:13","nodeType":"VariableDeclaration","scope":2755,"src":"4656:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2727,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2730,"mutability":"mutable","name":"to","nameLocation":"4678:2:13","nodeType":"VariableDeclaration","scope":2755,"src":"4670:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2729,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2732,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:13","nodeType":"VariableDeclaration","scope":2755,"src":"4682:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2734,"mutability":"mutable","name":"data","nameLocation":"4712:4:13","nodeType":"VariableDeclaration","scope":2755,"src":"4699:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2733,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:13"},"returnParameters":{"id":2736,"nodeType":"ParameterList","parameters":[],"src":"4733:0:13"},"scope":3347,"src":"4630:233:13","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":2767,"nodeType":"Block","src":"5453:40:13","statements":[{"expression":{"baseExpression":{"id":2763,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"5470:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2765,"indexExpression":{"id":2764,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2758,"src":"5478:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2762,"id":2766,"nodeType":"Return","src":"5463:23:13"}]},"documentation":{"id":2756,"nodeType":"StructuredDocumentation","src":"4869:504:13","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":2768,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:13","nodeType":"FunctionDefinition","parameters":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2758,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:13","nodeType":"VariableDeclaration","scope":2768,"src":"5396:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:13"},"returnParameters":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2768,"src":"5444:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2760,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:13"},"scope":3347,"src":"5378:115:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2780,"nodeType":"Block","src":"5688:48:13","statements":[{"expression":{"baseExpression":{"id":2776,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"5705:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2778,"indexExpression":{"id":2777,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2771,"src":"5721:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2775,"id":2779,"nodeType":"Return","src":"5698:31:13"}]},"documentation":{"id":2769,"nodeType":"StructuredDocumentation","src":"5499:105:13","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":2781,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:13","nodeType":"FunctionDefinition","parameters":{"id":2772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:13","nodeType":"VariableDeclaration","scope":2781,"src":"5631:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2770,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:13"},"returnParameters":{"id":2775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2781,"src":"5679:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2773,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:13"},"scope":3347,"src":"5609:127:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2816,"nodeType":"Block","src":"6156:163:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2793,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"6185:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2794,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:13","typeDescriptions":{}}},"id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2799,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"6223:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2800,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"6232:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2803,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2784,"src":"6260:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2804,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"6267:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2802,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"6243:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2808,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2788,"src":"6292:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2807,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"6279:12:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2810,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"6304:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2813,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2792,"id":2815,"nodeType":"Return","src":"6166:146:13"}]},"documentation":{"id":2782,"nodeType":"StructuredDocumentation","src":"5742:300:13","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2817,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:13","nodeType":"FunctionDefinition","parameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"owner","nameLocation":"6078:5:13","nodeType":"VariableDeclaration","scope":2817,"src":"6070:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2783,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2786,"mutability":"mutable","name":"spender","nameLocation":"6093:7:13","nodeType":"VariableDeclaration","scope":2817,"src":"6085:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2785,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2788,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:13","nodeType":"VariableDeclaration","scope":2817,"src":"6102:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:13"},"returnParameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2817,"src":"6150:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2790,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:13"},"scope":3347,"src":"6047:272:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2853,"nodeType":"Block","src":"6848:271:13","statements":[{"condition":{"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:13","subExpression":{"arguments":[{"id":2828,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"6877:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2829,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"6884:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2830,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"6893:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2827,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"6863:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2852,"nodeType":"IfStatement","src":"6858:255:13","trueBody":{"id":2851,"nodeType":"Block","src":"6903:210:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2833,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"6921:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2834,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:13","typeDescriptions":{}}},"id":2837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2849,"nodeType":"Block","src":"7019:84:13","statements":[{"errorCall":{"arguments":[{"id":2845,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2822,"src":"7071:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2846,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"7080:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2844,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"7044:26:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$","typeString":"function (address,uint256) pure returns (error)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2848,"nodeType":"RevertStatement","src":"7037:51:13"}]},"id":2850,"nodeType":"IfStatement","src":"6917:186:13","trueBody":{"id":2843,"nodeType":"Block","src":"6942:71:13","statements":[{"errorCall":{"arguments":[{"id":2840,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2824,"src":"6990:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2839,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"6967:22:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":2841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2842,"nodeType":"RevertStatement","src":"6960:38:13"}]}}]}}]},"documentation":{"id":2818,"nodeType":"StructuredDocumentation","src":"6325:421:13","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2854,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:13","nodeType":"FunctionDefinition","parameters":{"id":2825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"owner","nameLocation":"6785:5:13","nodeType":"VariableDeclaration","scope":2854,"src":"6777:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2819,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2822,"mutability":"mutable","name":"spender","nameLocation":"6800:7:13","nodeType":"VariableDeclaration","scope":2854,"src":"6792:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2821,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2824,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:13","nodeType":"VariableDeclaration","scope":2854,"src":"6809:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2823,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:13"},"returnParameters":{"id":2826,"nodeType":"ParameterList","parameters":[],"src":"6848:0:13"},"scope":3347,"src":"6751:368:13","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2869,"nodeType":"Block","src":"7836:78:13","statements":[{"id":2868,"nodeType":"UncheckedBlock","src":"7846:62:13","statements":[{"expression":{"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2862,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"7870:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2864,"indexExpression":{"id":2863,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"7880:7:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2865,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"7892:5:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2867,"nodeType":"ExpressionStatement","src":"7870:27:13"}]}]},"documentation":{"id":2855,"nodeType":"StructuredDocumentation","src":"7125:631:13","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":2870,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:13","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"account","nameLocation":"7795:7:13","nodeType":"VariableDeclaration","scope":2870,"src":"7787:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2856,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2859,"mutability":"mutable","name":"value","nameLocation":"7812:5:13","nodeType":"VariableDeclaration","scope":2870,"src":"7804:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2858,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:13","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:13"},"returnParameters":{"id":2861,"nodeType":"ParameterList","parameters":[],"src":"7836:0:13"},"scope":3347,"src":"7761:153:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2959,"nodeType":"Block","src":"8602:700:13","statements":[{"assignments":[2883],"declarations":[{"constant":false,"id":2883,"mutability":"mutable","name":"from","nameLocation":"8620:4:13","nodeType":"VariableDeclaration","scope":2959,"src":"8612:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2882,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2887,"initialValue":{"arguments":[{"id":2885,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"8636:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2884,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"8627:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2888,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"8704:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2889,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:13","typeDescriptions":{}}},"id":2892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2901,"nodeType":"IfStatement","src":"8700:86:13","trueBody":{"id":2900,"nodeType":"Block","src":"8724:62:13","statements":[{"expression":{"arguments":[{"id":2895,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"8755:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2896,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"8761:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2897,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"8767:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2894,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"8738:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2899,"nodeType":"ExpressionStatement","src":"8738:37:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2902,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"8830:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2903,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:13","typeDescriptions":{}}},"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2929,"nodeType":"IfStatement","src":"8826:256:13","trueBody":{"id":2928,"nodeType":"Block","src":"8850:232:13","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2909,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:13","typeDescriptions":{}}},"id":2912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2913,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"8967:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2914,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:13","typeDescriptions":{}}},"id":2917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2908,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[3214,3280],"referencedDeclaration":3280,"src":"8946:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2920,"nodeType":"ExpressionStatement","src":"8946:48:13"},{"id":2927,"nodeType":"UncheckedBlock","src":"9009:63:13","statements":[{"expression":{"id":2925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2921,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"9037:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2923,"indexExpression":{"id":2922,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"9047:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2926,"nodeType":"ExpressionStatement","src":"9037:20:13"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2930,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"9096:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2931,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:13","typeDescriptions":{}}},"id":2934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2944,"nodeType":"IfStatement","src":"9092:107:13","trueBody":{"id":2943,"nodeType":"Block","src":"9114:85:13","statements":[{"id":2942,"nodeType":"UncheckedBlock","src":"9128:61:13","statements":[{"expression":{"id":2940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2936,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"9156:9:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2938,"indexExpression":{"id":2937,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"9166:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2941,"nodeType":"ExpressionStatement","src":"9156:18:13"}]}]}},{"expression":{"id":2949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2945,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"9209:7:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2947,"indexExpression":{"id":2946,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9217:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2948,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"9228:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2950,"nodeType":"ExpressionStatement","src":"9209:21:13"},{"eventCall":{"arguments":[{"id":2952,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"9255:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2953,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2873,"src":"9261:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2954,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"9265:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2951,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3363,"src":"9246:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2956,"nodeType":"EmitStatement","src":"9241:32:13"},{"expression":{"id":2957,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"9291:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2881,"id":2958,"nodeType":"Return","src":"9284:11:13"}]},"documentation":{"id":2871,"nodeType":"StructuredDocumentation","src":"7920:582:13","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":2960,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:13","nodeType":"FunctionDefinition","parameters":{"id":2878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"to","nameLocation":"8532:2:13","nodeType":"VariableDeclaration","scope":2960,"src":"8524:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2872,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2875,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:13","nodeType":"VariableDeclaration","scope":2960,"src":"8536:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2874,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2877,"mutability":"mutable","name":"auth","nameLocation":"8561:4:13","nodeType":"VariableDeclaration","scope":2960,"src":"8553:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2876,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:13"},"returnParameters":{"id":2881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2880,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2960,"src":"8593:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2879,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:13"},"scope":3347,"src":"8507:795:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3009,"nodeType":"Block","src":"9677:274:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2968,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"9691:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2969,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:13","typeDescriptions":{}}},"id":2972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2982,"nodeType":"IfStatement","src":"9687:87:13","trueBody":{"id":2981,"nodeType":"Block","src":"9709:65:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2975,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:13","typeDescriptions":{}}},"id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2974,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"9730:21:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2980,"nodeType":"RevertStatement","src":"9723:40:13"}]}},{"assignments":[2984],"declarations":[{"constant":false,"id":2984,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:13","nodeType":"VariableDeclaration","scope":3009,"src":"9783:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2983,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2993,"initialValue":{"arguments":[{"id":2986,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2963,"src":"9815:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2987,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"9819:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2988,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:13","typeDescriptions":{}}},"id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2985,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"9807:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2994,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2984,"src":"9853:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2995,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:13","typeDescriptions":{}}},"id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3008,"nodeType":"IfStatement","src":"9849:96:13","trueBody":{"id":3007,"nodeType":"Block","src":"9882:63:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3001,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:13","typeDescriptions":{}}},"id":3004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3000,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"9903:19:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3006,"nodeType":"RevertStatement","src":"9896:38:13"}]}}]},"documentation":{"id":2961,"nodeType":"StructuredDocumentation","src":"9308:311:13","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":3010,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:13","nodeType":"FunctionDefinition","parameters":{"id":2966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"to","nameLocation":"9647:2:13","nodeType":"VariableDeclaration","scope":3010,"src":"9639:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2962,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2965,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:13","nodeType":"VariableDeclaration","scope":3010,"src":"9651:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2964,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:13"},"returnParameters":{"id":2967,"nodeType":"ParameterList","parameters":[],"src":"9677:0:13"},"scope":3347,"src":"9624:327:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3024,"nodeType":"Block","src":"10359:43:13","statements":[{"expression":{"arguments":[{"id":3019,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3013,"src":"10379:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3020,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"10383:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3018,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[3025,3055],"referencedDeclaration":3055,"src":"10369:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3023,"nodeType":"ExpressionStatement","src":"10369:26:13"}]},"documentation":{"id":3011,"nodeType":"StructuredDocumentation","src":"9957:340:13","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":3025,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:13","nodeType":"FunctionDefinition","parameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3013,"mutability":"mutable","name":"to","nameLocation":"10329:2:13","nodeType":"VariableDeclaration","scope":3025,"src":"10321:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3012,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3015,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:13","nodeType":"VariableDeclaration","scope":3025,"src":"10333:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3014,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:13"},"returnParameters":{"id":3017,"nodeType":"ParameterList","parameters":[],"src":"10359:0:13"},"scope":3347,"src":"10302:100:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3054,"nodeType":"Block","src":"10707:123:13","statements":[{"expression":{"arguments":[{"id":3036,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"10723:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3037,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"10727:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3035,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"10717:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3039,"nodeType":"ExpressionStatement","src":"10717:18:13"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3043,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"10779:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3045,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:13","typeDescriptions":{}}},"id":3048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3049,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"10805:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3050,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"10809:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3051,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3032,"src":"10818:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3040,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"10745:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3614_$","typeString":"type(library ERC721Utils)"}},"id":3042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:13","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3613,"src":"10745:33:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3053,"nodeType":"ExpressionStatement","src":"10745:78:13"}]},"documentation":{"id":3026,"nodeType":"StructuredDocumentation","src":"10408:210:13","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":3055,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:13","nodeType":"FunctionDefinition","parameters":{"id":3033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"to","nameLocation":"10650:2:13","nodeType":"VariableDeclaration","scope":3055,"src":"10642:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3027,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3030,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:13","nodeType":"VariableDeclaration","scope":3055,"src":"10654:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3032,"mutability":"mutable","name":"data","nameLocation":"10684:4:13","nodeType":"VariableDeclaration","scope":3055,"src":"10671:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3031,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:13"},"returnParameters":{"id":3034,"nodeType":"ParameterList","parameters":[],"src":"10707:0:13"},"scope":3347,"src":"10623:207:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3087,"nodeType":"Block","src":"11197:186:13","statements":[{"assignments":[3062],"declarations":[{"constant":false,"id":3062,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:13","nodeType":"VariableDeclaration","scope":3087,"src":"11207:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3061,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3074,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":3066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3064,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:13","typeDescriptions":{}}},"id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3068,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"11251:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":3071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3069,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:13","typeDescriptions":{}}},"id":3072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3063,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"11231:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3075,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"11285:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3077,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3076,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:13","typeDescriptions":{}}},"id":3079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3086,"nodeType":"IfStatement","src":"11281:96:13","trueBody":{"id":3085,"nodeType":"Block","src":"11314:63:13","statements":[{"errorCall":{"arguments":[{"id":3082,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"11358:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3081,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"11335:22:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3084,"nodeType":"RevertStatement","src":"11328:38:13"}]}}]},"documentation":{"id":3056,"nodeType":"StructuredDocumentation","src":"10836:315:13","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":3088,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:13","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:13","nodeType":"VariableDeclaration","scope":3088,"src":"11171:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3057,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:13"},"returnParameters":{"id":3060,"nodeType":"ParameterList","parameters":[],"src":"11197:0:13"},"scope":3347,"src":"11156:227:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3147,"nodeType":"Block","src":"11778:389:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3098,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"11792:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3099,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:13","typeDescriptions":{}}},"id":3102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3112,"nodeType":"IfStatement","src":"11788:87:13","trueBody":{"id":3111,"nodeType":"Block","src":"11810:65:13","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":3107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3105,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:13","typeDescriptions":{}}},"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3104,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"11831:21:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3110,"nodeType":"RevertStatement","src":"11824:40:13"}]}},{"assignments":[3114],"declarations":[{"constant":false,"id":3114,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:13","nodeType":"VariableDeclaration","scope":3147,"src":"11884:21:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3113,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3123,"initialValue":{"arguments":[{"id":3116,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"11916:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3117,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"11920:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":3120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3118,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:13","typeDescriptions":{}}},"id":3121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3115,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"11908:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3124,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"11954:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3125,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:13","typeDescriptions":{}}},"id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3135,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"12056:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3136,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"12073:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3145,"nodeType":"IfStatement","src":"12052:109:13","trueBody":{"id":3144,"nodeType":"Block","src":"12079:82:13","statements":[{"errorCall":{"arguments":[{"id":3139,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"12121:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3140,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"12127:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3141,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"12136:13:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3138,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"12100:20:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$","typeString":"function (address,uint256,address) pure returns (error)"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3143,"nodeType":"RevertStatement","src":"12093:57:13"}]}},"id":3146,"nodeType":"IfStatement","src":"11950:211:13","trueBody":{"id":3134,"nodeType":"Block","src":"11983:63:13","statements":[{"errorCall":{"arguments":[{"id":3131,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3095,"src":"12027:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3130,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"12004:22:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3133,"nodeType":"RevertStatement","src":"11997:38:13"}]}}]},"documentation":{"id":3089,"nodeType":"StructuredDocumentation","src":"11389:313:13","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":3148,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:13","nodeType":"FunctionDefinition","parameters":{"id":3096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3091,"mutability":"mutable","name":"from","nameLocation":"11734:4:13","nodeType":"VariableDeclaration","scope":3148,"src":"11726:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3090,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"to","nameLocation":"11748:2:13","nodeType":"VariableDeclaration","scope":3148,"src":"11740:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3092,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3095,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:13","nodeType":"VariableDeclaration","scope":3148,"src":"11752:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:13"},"returnParameters":{"id":3097,"nodeType":"ParameterList","parameters":[],"src":"11778:0:13"},"scope":3347,"src":"11707:460:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3165,"nodeType":"Block","src":"13176:53:13","statements":[{"expression":{"arguments":[{"id":3159,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3151,"src":"13200:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3160,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3153,"src":"13206:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3161,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3155,"src":"13210:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":3162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":3158,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[3166,3196],"referencedDeclaration":3196,"src":"13186:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":3163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3164,"nodeType":"ExpressionStatement","src":"13186:36:13"}]},"documentation":{"id":3149,"nodeType":"StructuredDocumentation","src":"12173:923:13","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":3166,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:13","nodeType":"FunctionDefinition","parameters":{"id":3156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"from","nameLocation":"13132:4:13","nodeType":"VariableDeclaration","scope":3166,"src":"13124:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3150,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3153,"mutability":"mutable","name":"to","nameLocation":"13146:2:13","nodeType":"VariableDeclaration","scope":3166,"src":"13138:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3152,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3155,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:13","nodeType":"VariableDeclaration","scope":3166,"src":"13150:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3154,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:13"},"returnParameters":{"id":3157,"nodeType":"ParameterList","parameters":[],"src":"13176:0:13"},"scope":3347,"src":"13101:128:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3195,"nodeType":"Block","src":"13568:127:13","statements":[{"expression":{"arguments":[{"id":3179,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"13588:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3180,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"13594:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3181,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"13598:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3178,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"13578:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3183,"nodeType":"ExpressionStatement","src":"13578:28:13"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3187,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4636,"src":"13650:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3189,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3169,"src":"13664:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3190,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3171,"src":"13670:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3191,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3173,"src":"13674:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3192,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3175,"src":"13683:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3184,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"13616:11:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$3614_$","typeString":"type(library ERC721Utils)"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:13","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":3613,"src":"13616:33:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3194,"nodeType":"ExpressionStatement","src":"13616:72:13"}]},"documentation":{"id":3167,"nodeType":"StructuredDocumentation","src":"13235:226:13","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":3196,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:13","nodeType":"FunctionDefinition","parameters":{"id":3176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3169,"mutability":"mutable","name":"from","nameLocation":"13497:4:13","nodeType":"VariableDeclaration","scope":3196,"src":"13489:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3168,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3171,"mutability":"mutable","name":"to","nameLocation":"13511:2:13","nodeType":"VariableDeclaration","scope":3196,"src":"13503:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3170,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3173,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:13","nodeType":"VariableDeclaration","scope":3196,"src":"13515:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3172,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3175,"mutability":"mutable","name":"data","nameLocation":"13545:4:13","nodeType":"VariableDeclaration","scope":3196,"src":"13532:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3174,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:13"},"returnParameters":{"id":3177,"nodeType":"ParameterList","parameters":[],"src":"13568:0:13"},"scope":3347,"src":"13466:229:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3213,"nodeType":"Block","src":"14208:50:13","statements":[{"expression":{"arguments":[{"id":3207,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"14227:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3208,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"14231:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3209,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"14240:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":3210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3206,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[3214,3280],"referencedDeclaration":3280,"src":"14218:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3212,"nodeType":"ExpressionStatement","src":"14218:33:13"}]},"documentation":{"id":3197,"nodeType":"StructuredDocumentation","src":"13701:432:13","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":3214,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:13","nodeType":"FunctionDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"to","nameLocation":"14164:2:13","nodeType":"VariableDeclaration","scope":3214,"src":"14156:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3198,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3201,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:13","nodeType":"VariableDeclaration","scope":3214,"src":"14168:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3203,"mutability":"mutable","name":"auth","nameLocation":"14193:4:13","nodeType":"VariableDeclaration","scope":3214,"src":"14185:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3202,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:13"},"returnParameters":{"id":3205,"nodeType":"ParameterList","parameters":[],"src":"14208:0:13"},"scope":3347,"src":"14138:120:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3279,"nodeType":"Block","src":"14534:568:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3226,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"14600:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3227,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"14613:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3228,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:13","typeDescriptions":{}}},"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3272,"nodeType":"IfStatement","src":"14596:460:13","trueBody":{"id":3271,"nodeType":"Block","src":"14633:423:13","statements":[{"assignments":[3235],"declarations":[{"constant":false,"id":3235,"mutability":"mutable","name":"owner","nameLocation":"14655:5:13","nodeType":"VariableDeclaration","scope":3271,"src":"14647:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3234,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3239,"initialValue":{"arguments":[{"id":3237,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"14677:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3236,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"14663:13:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:13"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3240,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"14813:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3241,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:13","typeDescriptions":{}}},"id":3244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3246,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"14835:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3247,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"14844:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:13","subExpression":{"arguments":[{"id":3251,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"14870:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3252,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"14877:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3250,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2661,"src":"14853:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":3253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3261,"nodeType":"IfStatement","src":"14809:142:13","trueBody":{"id":3260,"nodeType":"Block","src":"14884:67:13","statements":[{"errorCall":{"arguments":[{"id":3257,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"14931:4:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3256,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"14909:21:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3259,"nodeType":"RevertStatement","src":"14902:34:13"}]}},{"condition":{"id":3262,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3223,"src":"14969:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3270,"nodeType":"IfStatement","src":"14965:81:13","trueBody":{"id":3269,"nodeType":"Block","src":"14980:66:13","statements":[{"eventCall":{"arguments":[{"id":3264,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3235,"src":"15012:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3265,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"15019:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3266,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"15023:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3263,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"15003:8:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3268,"nodeType":"EmitStatement","src":"14998:33:13"}]}}]}},{"expression":{"id":3277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3273,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2437,"src":"15066:15:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3275,"indexExpression":{"id":3274,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"15082:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3276,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3217,"src":"15093:2:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3278,"nodeType":"ExpressionStatement","src":"15066:29:13"}]},"documentation":{"id":3215,"nodeType":"StructuredDocumentation","src":"14264:171:13","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":3280,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:13","nodeType":"FunctionDefinition","parameters":{"id":3224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3217,"mutability":"mutable","name":"to","nameLocation":"14466:2:13","nodeType":"VariableDeclaration","scope":3280,"src":"14458:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3216,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3219,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:13","nodeType":"VariableDeclaration","scope":3280,"src":"14470:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3218,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3221,"mutability":"mutable","name":"auth","nameLocation":"14495:4:13","nodeType":"VariableDeclaration","scope":3280,"src":"14487:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3220,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3223,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:13","nodeType":"VariableDeclaration","scope":3280,"src":"14501:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3222,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:13"},"returnParameters":{"id":3225,"nodeType":"ParameterList","parameters":[],"src":"14534:0:13"},"scope":3347,"src":"14440:662:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3316,"nodeType":"Block","src":"15404:219:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"15418:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3291,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:13","typeDescriptions":{}}},"id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3301,"nodeType":"IfStatement","src":"15414:91:13","trueBody":{"id":3300,"nodeType":"Block","src":"15442:63:13","statements":[{"errorCall":{"arguments":[{"id":3297,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"15485:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3296,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"15463:21:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3299,"nodeType":"RevertStatement","src":"15456:38:13"}]}},{"expression":{"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3302,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"15514:18:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":3305,"indexExpression":{"id":3303,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"15533:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:13","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":3306,"indexExpression":{"id":3304,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"15540:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3307,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"15552:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3309,"nodeType":"ExpressionStatement","src":"15514:46:13"},{"eventCall":{"arguments":[{"id":3311,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"15590:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3312,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3285,"src":"15597:8:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3313,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3287,"src":"15607:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3310,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"15575:14:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3315,"nodeType":"EmitStatement","src":"15570:46:13"}]},"documentation":{"id":3281,"nodeType":"StructuredDocumentation","src":"15108:198:13","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":3317,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:13","nodeType":"FunctionDefinition","parameters":{"id":3288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3283,"mutability":"mutable","name":"owner","nameLocation":"15347:5:13","nodeType":"VariableDeclaration","scope":3317,"src":"15339:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3282,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3285,"mutability":"mutable","name":"operator","nameLocation":"15362:8:13","nodeType":"VariableDeclaration","scope":3317,"src":"15354:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3284,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3287,"mutability":"mutable","name":"approved","nameLocation":"15377:8:13","nodeType":"VariableDeclaration","scope":3317,"src":"15372:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3286,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:13"},"returnParameters":{"id":3289,"nodeType":"ParameterList","parameters":[],"src":"15404:0:13"},"scope":3347,"src":"15311:312:13","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":3345,"nodeType":"Block","src":"15930:169:13","statements":[{"assignments":[3326],"declarations":[{"constant":false,"id":3326,"mutability":"mutable","name":"owner","nameLocation":"15948:5:13","nodeType":"VariableDeclaration","scope":3345,"src":"15940:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3325,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3330,"initialValue":{"arguments":[{"id":3328,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"15965:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3327,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"15956:8:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:13"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3331,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"15987:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3333,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3332,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:13","typeDescriptions":{}}},"id":3335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3342,"nodeType":"IfStatement","src":"15983:88:13","trueBody":{"id":3341,"nodeType":"Block","src":"16008:63:13","statements":[{"errorCall":{"arguments":[{"id":3338,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3320,"src":"16052:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3337,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"16029:22:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3340,"nodeType":"RevertStatement","src":"16022:38:13"}]}},{"expression":{"id":3343,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"16087:5:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3324,"id":3344,"nodeType":"Return","src":"16080:12:13"}]},"documentation":{"id":3318,"nodeType":"StructuredDocumentation","src":"15629:224:13","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":3346,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:13","nodeType":"FunctionDefinition","parameters":{"id":3321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3320,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:13","nodeType":"VariableDeclaration","scope":3346,"src":"15881:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3319,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:13"},"returnParameters":{"id":3324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3346,"src":"15921:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3322,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:13"},"scope":3347,"src":"15858:241:13","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3348,"src":"775:15326:13","usedErrors":[349,354,363,368,373,380,385,390],"usedEvents":[3363,3372,3381]}],"src":"107:15995:13"},"id":13},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[6467],"IERC721":[3464]},"id":3465,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3349,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:14"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":3351,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3465,"sourceUnit":6468,"src":"134:62:14","symbolAliases":[{"foreign":{"id":3350,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"142:7:14","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3353,"name":"IERC165","nameLocations":["288:7:14"],"nodeType":"IdentifierPath","referencedDeclaration":6467,"src":"288:7:14"},"id":3354,"nodeType":"InheritanceSpecifier","src":"288:7:14"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":3352,"nodeType":"StructuredDocumentation","src":"198:68:14","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":3464,"linearizedBaseContracts":[3464,6467],"name":"IERC721","nameLocation":"277:7:14","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":3355,"nodeType":"StructuredDocumentation","src":"302:88:14","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":3363,"name":"Transfer","nameLocation":"401:8:14","nodeType":"EventDefinition","parameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3357,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:14","nodeType":"VariableDeclaration","scope":3363,"src":"410:20:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3356,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3359,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:14","nodeType":"VariableDeclaration","scope":3363,"src":"432:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3358,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3361,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:14","nodeType":"VariableDeclaration","scope":3363,"src":"452:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3360,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:14"},"src":"395:82:14"},{"anonymous":false,"documentation":{"id":3364,"nodeType":"StructuredDocumentation","src":"483:94:14","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":3372,"name":"Approval","nameLocation":"588:8:14","nodeType":"EventDefinition","parameters":{"id":3371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3366,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:14","nodeType":"VariableDeclaration","scope":3372,"src":"597:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3365,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3368,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:14","nodeType":"VariableDeclaration","scope":3372,"src":"620:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3367,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3370,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:14","nodeType":"VariableDeclaration","scope":3372,"src":"646:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3369,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:14"},"src":"582:89:14"},{"anonymous":false,"documentation":{"id":3373,"nodeType":"StructuredDocumentation","src":"677:117:14","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":3381,"name":"ApprovalForAll","nameLocation":"805:14:14","nodeType":"EventDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3375,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:14","nodeType":"VariableDeclaration","scope":3381,"src":"820:21:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3374,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3377,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:14","nodeType":"VariableDeclaration","scope":3381,"src":"843:24:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3376,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3379,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:14","nodeType":"VariableDeclaration","scope":3381,"src":"869:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3378,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:14"},"src":"799:85:14"},{"documentation":{"id":3382,"nodeType":"StructuredDocumentation","src":"890:76:14","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":3389,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:14","nodeType":"FunctionDefinition","parameters":{"id":3385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3384,"mutability":"mutable","name":"owner","nameLocation":"998:5:14","nodeType":"VariableDeclaration","scope":3389,"src":"990:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3383,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:14"},"returnParameters":{"id":3388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3387,"mutability":"mutable","name":"balance","nameLocation":"1036:7:14","nodeType":"VariableDeclaration","scope":3389,"src":"1028:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3386,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:14"},"scope":3464,"src":"971:74:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3390,"nodeType":"StructuredDocumentation","src":"1051:131:14","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":3397,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:14","nodeType":"FunctionDefinition","parameters":{"id":3393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3392,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:14","nodeType":"VariableDeclaration","scope":3397,"src":"1204:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3391,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:14"},"returnParameters":{"id":3396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3395,"mutability":"mutable","name":"owner","nameLocation":"1252:5:14","nodeType":"VariableDeclaration","scope":3397,"src":"1244:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3394,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:14"},"scope":3464,"src":"1187:72:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3398,"nodeType":"StructuredDocumentation","src":"1265:565:14","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":3409,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:14","nodeType":"FunctionDefinition","parameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3400,"mutability":"mutable","name":"from","nameLocation":"1869:4:14","nodeType":"VariableDeclaration","scope":3409,"src":"1861:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3399,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3402,"mutability":"mutable","name":"to","nameLocation":"1883:2:14","nodeType":"VariableDeclaration","scope":3409,"src":"1875:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3401,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:14","nodeType":"VariableDeclaration","scope":3409,"src":"1887:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3406,"mutability":"mutable","name":"data","nameLocation":"1919:4:14","nodeType":"VariableDeclaration","scope":3409,"src":"1904:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3405,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:14"},"returnParameters":{"id":3408,"nodeType":"ParameterList","parameters":[],"src":"1933:0:14"},"scope":3464,"src":"1835:99:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3410,"nodeType":"StructuredDocumentation","src":"1940:706:14","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":3419,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:14","nodeType":"FunctionDefinition","parameters":{"id":3417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3412,"mutability":"mutable","name":"from","nameLocation":"2685:4:14","nodeType":"VariableDeclaration","scope":3419,"src":"2677:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3411,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3414,"mutability":"mutable","name":"to","nameLocation":"2699:2:14","nodeType":"VariableDeclaration","scope":3419,"src":"2691:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3413,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3416,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:14","nodeType":"VariableDeclaration","scope":3419,"src":"2703:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3415,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:14"},"returnParameters":{"id":3418,"nodeType":"ParameterList","parameters":[],"src":"2728:0:14"},"scope":3464,"src":"2651:78:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3420,"nodeType":"StructuredDocumentation","src":"2735:733:14","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":3429,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:14","nodeType":"FunctionDefinition","parameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3422,"mutability":"mutable","name":"from","nameLocation":"3503:4:14","nodeType":"VariableDeclaration","scope":3429,"src":"3495:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3421,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3424,"mutability":"mutable","name":"to","nameLocation":"3517:2:14","nodeType":"VariableDeclaration","scope":3429,"src":"3509:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3423,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3426,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:14","nodeType":"VariableDeclaration","scope":3429,"src":"3521:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:14"},"returnParameters":{"id":3428,"nodeType":"ParameterList","parameters":[],"src":"3546:0:14"},"scope":3464,"src":"3473:74:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3430,"nodeType":"StructuredDocumentation","src":"3553:452:14","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":3437,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:14","nodeType":"FunctionDefinition","parameters":{"id":3435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3432,"mutability":"mutable","name":"to","nameLocation":"4035:2:14","nodeType":"VariableDeclaration","scope":3437,"src":"4027:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3431,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3434,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:14","nodeType":"VariableDeclaration","scope":3437,"src":"4039:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3433,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:14"},"returnParameters":{"id":3436,"nodeType":"ParameterList","parameters":[],"src":"4064:0:14"},"scope":3464,"src":"4010:55:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3438,"nodeType":"StructuredDocumentation","src":"4071:315:14","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":3445,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:14","nodeType":"FunctionDefinition","parameters":{"id":3443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3440,"mutability":"mutable","name":"operator","nameLocation":"4426:8:14","nodeType":"VariableDeclaration","scope":3445,"src":"4418:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3439,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3442,"mutability":"mutable","name":"approved","nameLocation":"4441:8:14","nodeType":"VariableDeclaration","scope":3445,"src":"4436:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3441,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:14"},"returnParameters":{"id":3444,"nodeType":"ParameterList","parameters":[],"src":"4459:0:14"},"scope":3464,"src":"4391:69:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":3446,"nodeType":"StructuredDocumentation","src":"4466:139:14","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":3453,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:14","nodeType":"FunctionDefinition","parameters":{"id":3449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:14","nodeType":"VariableDeclaration","scope":3453,"src":"4631:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3447,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:14"},"returnParameters":{"id":3452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3451,"mutability":"mutable","name":"operator","nameLocation":"4679:8:14","nodeType":"VariableDeclaration","scope":3453,"src":"4671:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3450,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:14"},"scope":3464,"src":"4610:79:14","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3454,"nodeType":"StructuredDocumentation","src":"4695:138:14","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":3463,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:14","nodeType":"FunctionDefinition","parameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3456,"mutability":"mutable","name":"owner","nameLocation":"4872:5:14","nodeType":"VariableDeclaration","scope":3463,"src":"4864:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3455,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3458,"mutability":"mutable","name":"operator","nameLocation":"4887:8:14","nodeType":"VariableDeclaration","scope":3463,"src":"4879:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3457,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:14"},"returnParameters":{"id":3462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3463,"src":"4920:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3460,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:14"},"scope":3464,"src":"4838:88:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3465,"src":"267:4661:14","usedErrors":[],"usedEvents":[3363,3372,3381]}],"src":"108:4821:14"},"id":14},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[3482]},"id":3483,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3466,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":3467,"nodeType":"StructuredDocumentation","src":"142:154:15","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":3482,"linearizedBaseContracts":[3482],"name":"IERC721Receiver","nameLocation":"307:15:15","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3468,"nodeType":"StructuredDocumentation","src":"329:500:15","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":3481,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:15","nodeType":"FunctionDefinition","parameters":{"id":3477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"operator","nameLocation":"877:8:15","nodeType":"VariableDeclaration","scope":3481,"src":"869:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3469,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3472,"mutability":"mutable","name":"from","nameLocation":"903:4:15","nodeType":"VariableDeclaration","scope":3481,"src":"895:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3471,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:15","nodeType":"VariableDeclaration","scope":3481,"src":"917:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3476,"mutability":"mutable","name":"data","nameLocation":"957:4:15","nodeType":"VariableDeclaration","scope":3481,"src":"942:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3475,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:15"},"returnParameters":{"id":3480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3479,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3481,"src":"986:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3478,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:15","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:15"},"scope":3482,"src":"834:160:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":3483,"src":"297:699:15","usedErrors":[],"usedEvents":[]}],"src":"116:881:15"},"id":15},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[3464],"IERC721Metadata":[3510]},"id":3511,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3484,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:16"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":3486,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3511,"sourceUnit":3465,"src":"153:39:16","symbolAliases":[{"foreign":{"id":3485,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"161:7:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3488,"name":"IERC721","nameLocations":["357:7:16"],"nodeType":"IdentifierPath","referencedDeclaration":3464,"src":"357:7:16"},"id":3489,"nodeType":"InheritanceSpecifier","src":"357:7:16"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"194:133:16","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":3510,"linearizedBaseContracts":[3510,3464,6467],"name":"IERC721Metadata","nameLocation":"338:15:16","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3490,"nodeType":"StructuredDocumentation","src":"371:58:16","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":3495,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:16","nodeType":"FunctionDefinition","parameters":{"id":3491,"nodeType":"ParameterList","parameters":[],"src":"447:2:16"},"returnParameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3495,"src":"473:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3492,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:16"},"scope":3510,"src":"434:54:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3496,"nodeType":"StructuredDocumentation","src":"494:60:16","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":3501,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:16","nodeType":"FunctionDefinition","parameters":{"id":3497,"nodeType":"ParameterList","parameters":[],"src":"574:2:16"},"returnParameters":{"id":3500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3499,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3501,"src":"600:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3498,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:16"},"scope":3510,"src":"559:56:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":3502,"nodeType":"StructuredDocumentation","src":"621:90:16","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":3509,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:16","nodeType":"FunctionDefinition","parameters":{"id":3505,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3504,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:16","nodeType":"VariableDeclaration","scope":3509,"src":"734:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3503,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:16"},"returnParameters":{"id":3508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3509,"src":"774:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3506,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:16"},"scope":3510,"src":"716:73:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3511,"src":"328:463:16","usedErrors":[],"usedEvents":[3363,3372,3381]}],"src":"127:665:16"},"id":16},"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol","exportedSymbols":{"ERC721Holder":[3537],"IERC721Receiver":[3482]},"id":3538,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3512,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"119:24:17"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":3514,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3538,"sourceUnit":3483,"src":"145:55:17","symbolAliases":[{"foreign":{"id":3513,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"153:15:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3516,"name":"IERC721Receiver","nameLocations":["475:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":3482,"src":"475:15:17"},"id":3517,"nodeType":"InheritanceSpecifier","src":"475:15:17"}],"canonicalName":"ERC721Holder","contractDependencies":[],"contractKind":"contract","documentation":{"id":3515,"nodeType":"StructuredDocumentation","src":"202:238:17","text":" @dev Implementation of the {IERC721Receiver} interface.\n Accepts all token transfers.\n Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or\n {IERC721-setApprovalForAll}."},"fullyImplemented":true,"id":3537,"linearizedBaseContracts":[3537,3482],"name":"ERC721Holder","nameLocation":"459:12:17","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3481],"body":{"id":3535,"nodeType":"Block","src":"738:54:17","statements":[{"expression":{"expression":{"expression":{"id":3531,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"755:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_ERC721Holder_$3537","typeString":"contract ERC721Holder"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"760:16:17","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3536,"src":"755:21:17","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"777:8:17","memberName":"selector","nodeType":"MemberAccess","src":"755:30:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"functionReturnParameters":3530,"id":3534,"nodeType":"Return","src":"748:37:17"}]},"documentation":{"id":3518,"nodeType":"StructuredDocumentation","src":"497:137:17","text":" @dev See {IERC721Receiver-onERC721Received}.\n Always returns `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":3536,"implemented":true,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"648:16:17","nodeType":"FunctionDefinition","parameters":{"id":3527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3520,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3536,"src":"665:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3519,"name":"address","nodeType":"ElementaryTypeName","src":"665:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3536,"src":"674:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3521,"name":"address","nodeType":"ElementaryTypeName","src":"674:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3524,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3536,"src":"683:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3523,"name":"uint256","nodeType":"ElementaryTypeName","src":"683:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3536,"src":"692:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3525,"name":"bytes","nodeType":"ElementaryTypeName","src":"692:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"664:41:17"},"returnParameters":{"id":3530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3536,"src":"730:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3528,"name":"bytes4","nodeType":"ElementaryTypeName","src":"730:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"729:8:17"},"scope":3537,"src":"639:153:17","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":3538,"src":"441:353:17","usedErrors":[],"usedEvents":[]}],"src":"119:676:17"},"id":17},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[3614],"IERC721Errors":[391],"IERC721Receiver":[3482]},"id":3615,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3539,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:18"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":3541,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3615,"sourceUnit":3483,"src":"144:55:18","symbolAliases":[{"foreign":{"id":3540,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"152:15:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":3543,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3615,"sourceUnit":439,"src":"200:69:18","symbolAliases":[{"foreign":{"id":3542,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"208:13:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":3544,"nodeType":"StructuredDocumentation","src":"271:159:18","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":3614,"linearizedBaseContracts":[3614],"name":"ERC721Utils","nameLocation":"439:11:18","nodeType":"ContractDefinition","nodes":[{"body":{"id":3612,"nodeType":"Block","src":"1159:760:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3558,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"1173:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:18","memberName":"code","nodeType":"MemberAccess","src":"1173:7:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:18","memberName":"length","nodeType":"MemberAccess","src":"1173:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3611,"nodeType":"IfStatement","src":"1169:744:18","trueBody":{"id":3610,"nodeType":"Block","src":"1193:720:18","statements":[{"clauses":[{"block":{"id":3588,"nodeType":"Block","src":"1303:214:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3575,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3573,"src":"1325:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":3576,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"1335:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3482_$","typeString":"type(contract IERC721Receiver)"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:18","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3481,"src":"1335:32:18","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:18","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3587,"nodeType":"IfStatement","src":"1321:182:18","trueBody":{"id":3586,"nodeType":"Block","src":"1378:125:18","statements":[{"errorCall":{"arguments":[{"id":3583,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"1481:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3580,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"1445:13:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$391_$","typeString":"type(contract IERC721Errors)"}},"id":3582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:18","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":373,"src":"1445:35:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3585,"nodeType":"RevertStatement","src":"1438:46:18"}]}}]},"errorName":"","id":3589,"nodeType":"TryCatchClause","parameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"retval","nameLocation":"1295:6:18","nodeType":"VariableDeclaration","scope":3589,"src":"1288:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3572,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:18"},"src":"1279:238:18"},{"block":{"id":3607,"nodeType":"Block","src":"1546:357:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3596,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3593,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3591,"src":"1568:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:18","memberName":"length","nodeType":"MemberAccess","src":"1568:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3605,"nodeType":"Block","src":"1736:153:18","statements":[{"AST":{"nativeSrc":"1783:88:18","nodeType":"YulBlock","src":"1783:88:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1820:6:18","nodeType":"YulIdentifier","src":"1820:6:18"},{"kind":"number","nativeSrc":"1828:4:18","nodeType":"YulLiteral","src":"1828:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1816:3:18","nodeType":"YulIdentifier","src":"1816:3:18"},"nativeSrc":"1816:17:18","nodeType":"YulFunctionCall","src":"1816:17:18"},{"arguments":[{"name":"reason","nativeSrc":"1841:6:18","nodeType":"YulIdentifier","src":"1841:6:18"}],"functionName":{"name":"mload","nativeSrc":"1835:5:18","nodeType":"YulIdentifier","src":"1835:5:18"},"nativeSrc":"1835:13:18","nodeType":"YulFunctionCall","src":"1835:13:18"}],"functionName":{"name":"revert","nativeSrc":"1809:6:18","nodeType":"YulIdentifier","src":"1809:6:18"},"nativeSrc":"1809:40:18","nodeType":"YulFunctionCall","src":"1809:40:18"},"nativeSrc":"1809:40:18","nodeType":"YulExpressionStatement","src":"1809:40:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3591,"isOffset":false,"isSlot":false,"src":"1820:6:18","valueSize":1},{"declaration":3591,"isOffset":false,"isSlot":false,"src":"1841:6:18","valueSize":1}],"flags":["memory-safe"],"id":3604,"nodeType":"InlineAssembly","src":"1758:113:18"}]},"id":3606,"nodeType":"IfStatement","src":"1564:325:18","trueBody":{"id":3603,"nodeType":"Block","src":"1588:142:18","statements":[{"errorCall":{"arguments":[{"id":3600,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"1708:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3597,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":391,"src":"1672:13:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$391_$","typeString":"type(contract IERC721Errors)"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:18","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":373,"src":"1672:35:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":3602,"nodeType":"RevertStatement","src":"1665:46:18"}]}}]},"errorName":"","id":3608,"nodeType":"TryCatchClause","parameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"reason","nameLocation":"1538:6:18","nodeType":"VariableDeclaration","scope":3608,"src":"1525:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3590,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:18"},"src":"1518:385:18"}],"externalCall":{"arguments":[{"id":3567,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3547,"src":"1248:8:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3568,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"1258:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3569,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3553,"src":"1264:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3570,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"1273:4:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":3564,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3551,"src":"1227:2:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3563,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3482,"src":"1211:15:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$3482_$","typeString":"type(contract IERC721Receiver)"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$3482","typeString":"contract IERC721Receiver"}},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:18","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":3481,"src":"1211:36:18","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:18","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":3609,"nodeType":"TryStatement","src":"1207:696:18"}]}}]},"documentation":{"id":3545,"nodeType":"StructuredDocumentation","src":"457:531:18","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":3613,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:18","nodeType":"FunctionDefinition","parameters":{"id":3556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"operator","nameLocation":"1041:8:18","nodeType":"VariableDeclaration","scope":3613,"src":"1033:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3546,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3549,"mutability":"mutable","name":"from","nameLocation":"1067:4:18","nodeType":"VariableDeclaration","scope":3613,"src":"1059:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3548,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3551,"mutability":"mutable","name":"to","nameLocation":"1089:2:18","nodeType":"VariableDeclaration","scope":3613,"src":"1081:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3550,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3553,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:18","nodeType":"VariableDeclaration","scope":3613,"src":"1101:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3555,"mutability":"mutable","name":"data","nameLocation":"1139:4:18","nodeType":"VariableDeclaration","scope":3613,"src":"1126:17:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3554,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:18"},"returnParameters":{"id":3557,"nodeType":"ParameterList","parameters":[],"src":"1159:0:18"},"scope":3614,"src":"993:926:18","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3615,"src":"431:1490:18","usedErrors":[],"usedEvents":[]}],"src":"118:1804:18"},"id":18},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[4592],"Comparators":[4624],"Math":[8088],"SlotDerivation":[4905],"StorageSlot":[5029]},"id":4593,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3616,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":3618,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4593,"sourceUnit":4625,"src":"209:46:19","symbolAliases":[{"foreign":{"id":3617,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"217:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":3620,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4593,"sourceUnit":4906,"src":"256:52:19","symbolAliases":[{"foreign":{"id":3619,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4905,"src":"264:14:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":3622,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4593,"sourceUnit":5030,"src":"309:46:19","symbolAliases":[{"foreign":{"id":3621,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5029,"src":"317:11:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3624,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4593,"sourceUnit":8089,"src":"356:37:19","symbolAliases":[{"foreign":{"id":3623,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"364:4:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":3625,"nodeType":"StructuredDocumentation","src":"395:63:19","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":4592,"linearizedBaseContracts":[4592],"name":"Arrays","nameLocation":"467:6:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3628,"libraryName":{"id":3626,"name":"SlotDerivation","nameLocations":["486:14:19"],"nodeType":"IdentifierPath","referencedDeclaration":4905,"src":"486:14:19"},"nodeType":"UsingForDirective","src":"480:33:19","typeName":{"id":3627,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":3631,"libraryName":{"id":3629,"name":"StorageSlot","nameLocations":["524:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":5029,"src":"524:11:19"},"nodeType":"UsingForDirective","src":"518:30:19","typeName":{"id":3630,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":3663,"nodeType":"Block","src":"1628:83:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3653,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"1656:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3652,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"1649:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3656,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"1669:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3655,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3908,"src":"1664:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3658,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"1677:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3651,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"1638:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3660,"nodeType":"ExpressionStatement","src":"1638:44:19"},{"expression":{"id":3661,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"1699:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3650,"id":3662,"nodeType":"Return","src":"1692:12:19"}]},"documentation":{"id":3632,"nodeType":"StructuredDocumentation","src":"554:915:19","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3664,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:19","nodeType":"FunctionDefinition","parameters":{"id":3646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"array","nameLocation":"1514:5:19","nodeType":"VariableDeclaration","scope":3664,"src":"1497:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3633,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3634,"nodeType":"ArrayTypeName","src":"1497:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3645,"mutability":"mutable","name":"comp","nameLocation":"1576:4:19","nodeType":"VariableDeclaration","scope":3664,"src":"1529:51:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3644,"nodeType":"FunctionTypeName","parameterTypes":{"id":3640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3644,"src":"1538:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3644,"src":"1547:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:19"},"returnParameterTypes":{"id":3643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3642,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3644,"src":"1570:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3641,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:19"},"src":"1529:51:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:19"},"returnParameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3664,"src":"1610:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3647,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3648,"nodeType":"ArrayTypeName","src":"1610:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:19"},"scope":4592,"src":"1474:237:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3682,"nodeType":"Block","src":"1894:66:19","statements":[{"expression":{"arguments":[{"id":3675,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"1909:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3676,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"1916:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4624_$","typeString":"type(library Comparators)"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:19","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4609,"src":"1916:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3674,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3664,3683,3715,3736,3768,3789],"referencedDeclaration":3664,"src":"1904:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3679,"nodeType":"ExpressionStatement","src":"1904:27:19"},{"expression":{"id":3680,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3668,"src":"1948:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3673,"id":3681,"nodeType":"Return","src":"1941:12:19"}]},"documentation":{"id":3665,"nodeType":"StructuredDocumentation","src":"1717:93:19","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":3683,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:19","nodeType":"FunctionDefinition","parameters":{"id":3669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3668,"mutability":"mutable","name":"array","nameLocation":"1846:5:19","nodeType":"VariableDeclaration","scope":3683,"src":"1829:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3667,"nodeType":"ArrayTypeName","src":"1829:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:19"},"returnParameters":{"id":3673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3683,"src":"1876:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3671,"nodeType":"ArrayTypeName","src":"1876:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:19"},"scope":4592,"src":"1815:145:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3714,"nodeType":"Block","src":"3040:97:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3705,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"3075:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3704,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3940,3952],"referencedDeclaration":3940,"src":"3055:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3708,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"3102:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":3707,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3978,4004],"referencedDeclaration":3978,"src":"3083:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3703,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3664,3683,3715,3736,3768,3789],"referencedDeclaration":3664,"src":"3050:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3711,"nodeType":"ExpressionStatement","src":"3050:58:19"},{"expression":{"id":3712,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3687,"src":"3125:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3702,"id":3713,"nodeType":"Return","src":"3118:12:19"}]},"documentation":{"id":3684,"nodeType":"StructuredDocumentation","src":"1966:915:19","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3715,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:19","nodeType":"FunctionDefinition","parameters":{"id":3698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3687,"mutability":"mutable","name":"array","nameLocation":"2926:5:19","nodeType":"VariableDeclaration","scope":3715,"src":"2909:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3685,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3686,"nodeType":"ArrayTypeName","src":"2909:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3697,"mutability":"mutable","name":"comp","nameLocation":"2988:4:19","nodeType":"VariableDeclaration","scope":3715,"src":"2941:51:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3696,"nodeType":"FunctionTypeName","parameterTypes":{"id":3692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3696,"src":"2950:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3688,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3696,"src":"2959:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3690,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:19"},"returnParameterTypes":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3696,"src":"2982:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3693,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:19"},"src":"2941:51:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:19"},"returnParameters":{"id":3702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3715,"src":"3022:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3699,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3700,"nodeType":"ArrayTypeName","src":"3022:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:19"},"scope":4592,"src":"2886:251:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3735,"nodeType":"Block","src":"3320:87:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3727,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"3355:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":3726,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3940,3952],"referencedDeclaration":3940,"src":"3335:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3729,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"3363:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4624_$","typeString":"type(library Comparators)"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:19","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4609,"src":"3363:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3725,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3664,3683,3715,3736,3768,3789],"referencedDeclaration":3664,"src":"3330:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3732,"nodeType":"ExpressionStatement","src":"3330:48:19"},{"expression":{"id":3733,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3719,"src":"3395:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":3724,"id":3734,"nodeType":"Return","src":"3388:12:19"}]},"documentation":{"id":3716,"nodeType":"StructuredDocumentation","src":"3143:93:19","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":3736,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:19","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"array","nameLocation":"3272:5:19","nodeType":"VariableDeclaration","scope":3736,"src":"3255:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3717,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3718,"nodeType":"ArrayTypeName","src":"3255:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:19"},"returnParameters":{"id":3724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3736,"src":"3302:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3721,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3722,"nodeType":"ArrayTypeName","src":"3302:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:19"},"scope":4592,"src":"3241:166:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3767,"nodeType":"Block","src":"4487:97:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3758,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"4522:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3757,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3940,3952],"referencedDeclaration":3952,"src":"4502:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3761,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3750,"src":"4549:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":3760,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3978,4004],"referencedDeclaration":4004,"src":"4530:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":3762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3756,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3664,3683,3715,3736,3768,3789],"referencedDeclaration":3664,"src":"4497:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3764,"nodeType":"ExpressionStatement","src":"4497:58:19"},{"expression":{"id":3765,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3740,"src":"4572:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3755,"id":3766,"nodeType":"Return","src":"4565:12:19"}]},"documentation":{"id":3737,"nodeType":"StructuredDocumentation","src":"3413:915:19","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":3768,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:19","nodeType":"FunctionDefinition","parameters":{"id":3751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3740,"mutability":"mutable","name":"array","nameLocation":"4373:5:19","nodeType":"VariableDeclaration","scope":3768,"src":"4356:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3739,"nodeType":"ArrayTypeName","src":"4356:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3750,"mutability":"mutable","name":"comp","nameLocation":"4435:4:19","nodeType":"VariableDeclaration","scope":3768,"src":"4388:51:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3749,"nodeType":"FunctionTypeName","parameterTypes":{"id":3745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3749,"src":"4397:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3749,"src":"4406:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:19"},"returnParameterTypes":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3749,"src":"4429:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3746,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:19"},"src":"4388:51:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:19"},"returnParameters":{"id":3755,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3754,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3768,"src":"4469:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3752,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3753,"nodeType":"ArrayTypeName","src":"4469:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:19"},"scope":4592,"src":"4333:251:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3788,"nodeType":"Block","src":"4767:87:19","statements":[{"expression":{"arguments":[{"arguments":[{"id":3780,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"4802:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":3779,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3940,3952],"referencedDeclaration":3952,"src":"4782:19:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":3782,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"4810:11:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$4624_$","typeString":"type(library Comparators)"}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:19","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":4609,"src":"4810:14:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3778,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[3664,3683,3715,3736,3768,3789],"referencedDeclaration":3664,"src":"4777:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3785,"nodeType":"ExpressionStatement","src":"4777:48:19"},{"expression":{"id":3786,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3772,"src":"4842:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3777,"id":3787,"nodeType":"Return","src":"4835:12:19"}]},"documentation":{"id":3769,"nodeType":"StructuredDocumentation","src":"4590:93:19","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":3789,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:19","nodeType":"FunctionDefinition","parameters":{"id":3773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3772,"mutability":"mutable","name":"array","nameLocation":"4719:5:19","nodeType":"VariableDeclaration","scope":3789,"src":"4702:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3771,"nodeType":"ArrayTypeName","src":"4702:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:19"},"returnParameters":{"id":3777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3789,"src":"4749:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3774,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3775,"nodeType":"ArrayTypeName","src":"4749:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:19"},"scope":4592,"src":"4688:166:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3876,"nodeType":"Block","src":"5470:889:19","statements":[{"id":3875,"nodeType":"UncheckedBlock","src":"5480:873:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3807,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"5508:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3808,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"5514:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":3810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:19","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3813,"nodeType":"IfStatement","src":"5504:31:19","trueBody":{"functionReturnParameters":3806,"id":3812,"nodeType":"Return","src":"5528:7:19"}},{"assignments":[3815],"declarations":[{"constant":false,"id":3815,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:19","nodeType":"VariableDeclaration","scope":3875,"src":"5591:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3814,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3819,"initialValue":{"arguments":[{"id":3817,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"5614:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3816,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"5607:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:19"},{"assignments":[3821],"declarations":[{"constant":false,"id":3821,"mutability":"mutable","name":"pos","nameLocation":"5715:3:19","nodeType":"VariableDeclaration","scope":3875,"src":"5707:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3820,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3823,"initialValue":{"id":3822,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"5721:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:19"},{"body":{"id":3854,"nodeType":"Block","src":"5795:331:19","statements":[{"condition":{"arguments":[{"arguments":[{"id":3839,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"5829:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3838,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3918,"src":"5822:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3841,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"5834:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3837,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"5817:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3853,"nodeType":"IfStatement","src":"5813:299:19","trueBody":{"id":3852,"nodeType":"Block","src":"5842:270:19","statements":[{"expression":{"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3843,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"6046:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3846,"nodeType":"ExpressionStatement","src":"6046:11:19"},{"expression":{"arguments":[{"id":3848,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"6085:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3849,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"6090:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3847,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"6079:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3851,"nodeType":"ExpressionStatement","src":"6079:14:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3830,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"5773:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3831,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"5778:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3855,"initializationExpression":{"assignments":[3825],"declarations":[{"constant":false,"id":3825,"mutability":"mutable","name":"it","nameLocation":"5754:2:19","nodeType":"VariableDeclaration","scope":3855,"src":"5746:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3824,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3829,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3826,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"5759:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:19"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3833,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3825,"src":"5783:2:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3836,"nodeType":"ExpressionStatement","src":"5783:10:19"},"nodeType":"ForStatement","src":"5741:385:19"},{"expression":{"arguments":[{"id":3857,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"6146:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3858,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"6153:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3856,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"6140:5:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":3859,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3860,"nodeType":"ExpressionStatement","src":"6140:17:19"},{"expression":{"arguments":[{"id":3862,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3792,"src":"6207:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3863,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"6214:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3864,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"6219:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3861,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"6196:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3866,"nodeType":"ExpressionStatement","src":"6196:28:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3868,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3821,"src":"6284:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":3869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3871,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3794,"src":"6296:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3872,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"6301:4:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":3867,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"6273:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":3873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3874,"nodeType":"ExpressionStatement","src":"6273:33:19"}]}]},"documentation":{"id":3790,"nodeType":"StructuredDocumentation","src":"4860:491:19","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":3877,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:19","nodeType":"FunctionDefinition","parameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3792,"mutability":"mutable","name":"begin","nameLocation":"5384:5:19","nodeType":"VariableDeclaration","scope":3877,"src":"5376:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3791,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3794,"mutability":"mutable","name":"end","nameLocation":"5399:3:19","nodeType":"VariableDeclaration","scope":3877,"src":"5391:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3793,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3804,"mutability":"mutable","name":"comp","nameLocation":"5451:4:19","nodeType":"VariableDeclaration","scope":3877,"src":"5404:51:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3803,"nodeType":"FunctionTypeName","parameterTypes":{"id":3799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3796,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3803,"src":"5413:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3795,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3803,"src":"5422:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3797,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:19"},"returnParameterTypes":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3803,"src":"5445:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3800,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:19"},"src":"5404:51:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:19"},"returnParameters":{"id":3806,"nodeType":"ParameterList","parameters":[],"src":"5470:0:19"},"scope":4592,"src":"5356:1003:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3887,"nodeType":"Block","src":"6532:88:19","statements":[{"AST":{"nativeSrc":"6567:47:19","nodeType":"YulBlock","src":"6567:47:19","statements":[{"nativeSrc":"6581:23:19","nodeType":"YulAssignment","src":"6581:23:19","value":{"arguments":[{"name":"array","nativeSrc":"6592:5:19","nodeType":"YulIdentifier","src":"6592:5:19"},{"kind":"number","nativeSrc":"6599:4:19","nodeType":"YulLiteral","src":"6599:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"6588:3:19","nodeType":"YulIdentifier","src":"6588:3:19"},"nativeSrc":"6588:16:19","nodeType":"YulFunctionCall","src":"6588:16:19"},"variableNames":[{"name":"ptr","nativeSrc":"6581:3:19","nodeType":"YulIdentifier","src":"6581:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3881,"isOffset":false,"isSlot":false,"src":"6592:5:19","valueSize":1},{"declaration":3884,"isOffset":false,"isSlot":false,"src":"6581:3:19","valueSize":1}],"flags":["memory-safe"],"id":3886,"nodeType":"InlineAssembly","src":"6542:72:19"}]},"documentation":{"id":3878,"nodeType":"StructuredDocumentation","src":"6365:87:19","text":" @dev Pointer to the memory location of the first element of `array`."},"id":3888,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:19","nodeType":"FunctionDefinition","parameters":{"id":3882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3881,"mutability":"mutable","name":"array","nameLocation":"6490:5:19","nodeType":"VariableDeclaration","scope":3888,"src":"6473:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3879,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3880,"nodeType":"ArrayTypeName","src":"6473:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:19"},"returnParameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3884,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:19","nodeType":"VariableDeclaration","scope":3888,"src":"6519:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3883,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:19"},"scope":4592,"src":"6457:163:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3907,"nodeType":"Block","src":"6892:93:19","statements":[{"id":3906,"nodeType":"UncheckedBlock","src":"6902:77:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3898,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"6940:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3897,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"6933:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3900,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"6949:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:19","memberName":"length","nodeType":"MemberAccess","src":"6949:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":3902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:19","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3896,"id":3905,"nodeType":"Return","src":"6926:42:19"}]}]},"documentation":{"id":3889,"nodeType":"StructuredDocumentation","src":"6626:188:19","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":3908,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:19","nodeType":"FunctionDefinition","parameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3892,"mutability":"mutable","name":"array","nameLocation":"6850:5:19","nodeType":"VariableDeclaration","scope":3908,"src":"6833:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3890,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3891,"nodeType":"ArrayTypeName","src":"6833:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:19"},"returnParameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:19","nodeType":"VariableDeclaration","scope":3908,"src":"6879:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3894,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:19"},"scope":4592,"src":"6819:166:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3917,"nodeType":"Block","src":"7136:68:19","statements":[{"AST":{"nativeSrc":"7155:43:19","nodeType":"YulBlock","src":"7155:43:19","statements":[{"nativeSrc":"7169:19:19","nodeType":"YulAssignment","src":"7169:19:19","value":{"arguments":[{"name":"ptr","nativeSrc":"7184:3:19","nodeType":"YulIdentifier","src":"7184:3:19"}],"functionName":{"name":"mload","nativeSrc":"7178:5:19","nodeType":"YulIdentifier","src":"7178:5:19"},"nativeSrc":"7178:10:19","nodeType":"YulFunctionCall","src":"7178:10:19"},"variableNames":[{"name":"value","nativeSrc":"7169:5:19","nodeType":"YulIdentifier","src":"7169:5:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3911,"isOffset":false,"isSlot":false,"src":"7184:3:19","valueSize":1},{"declaration":3914,"isOffset":false,"isSlot":false,"src":"7169:5:19","valueSize":1}],"id":3916,"nodeType":"InlineAssembly","src":"7146:52:19"}]},"documentation":{"id":3909,"nodeType":"StructuredDocumentation","src":"6991:74:19","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":3918,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:19","nodeType":"FunctionDefinition","parameters":{"id":3912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3911,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:19","nodeType":"VariableDeclaration","scope":3918,"src":"7086:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3910,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:19"},"returnParameters":{"id":3915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"value","nameLocation":"7129:5:19","nodeType":"VariableDeclaration","scope":3918,"src":"7121:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3913,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:19"},"scope":4592,"src":"7070:134:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3927,"nodeType":"Block","src":"7348:178:19","statements":[{"AST":{"nativeSrc":"7367:153:19","nodeType":"YulBlock","src":"7367:153:19","statements":[{"nativeSrc":"7381:25:19","nodeType":"YulVariableDeclaration","src":"7381:25:19","value":{"arguments":[{"name":"ptr1","nativeSrc":"7401:4:19","nodeType":"YulIdentifier","src":"7401:4:19"}],"functionName":{"name":"mload","nativeSrc":"7395:5:19","nodeType":"YulIdentifier","src":"7395:5:19"},"nativeSrc":"7395:11:19","nodeType":"YulFunctionCall","src":"7395:11:19"},"variables":[{"name":"value1","nativeSrc":"7385:6:19","nodeType":"YulTypedName","src":"7385:6:19","type":""}]},{"nativeSrc":"7419:25:19","nodeType":"YulVariableDeclaration","src":"7419:25:19","value":{"arguments":[{"name":"ptr2","nativeSrc":"7439:4:19","nodeType":"YulIdentifier","src":"7439:4:19"}],"functionName":{"name":"mload","nativeSrc":"7433:5:19","nodeType":"YulIdentifier","src":"7433:5:19"},"nativeSrc":"7433:11:19","nodeType":"YulFunctionCall","src":"7433:11:19"},"variables":[{"name":"value2","nativeSrc":"7423:6:19","nodeType":"YulTypedName","src":"7423:6:19","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nativeSrc":"7464:4:19","nodeType":"YulIdentifier","src":"7464:4:19"},{"name":"value2","nativeSrc":"7470:6:19","nodeType":"YulIdentifier","src":"7470:6:19"}],"functionName":{"name":"mstore","nativeSrc":"7457:6:19","nodeType":"YulIdentifier","src":"7457:6:19"},"nativeSrc":"7457:20:19","nodeType":"YulFunctionCall","src":"7457:20:19"},"nativeSrc":"7457:20:19","nodeType":"YulExpressionStatement","src":"7457:20:19"},{"expression":{"arguments":[{"name":"ptr2","nativeSrc":"7497:4:19","nodeType":"YulIdentifier","src":"7497:4:19"},{"name":"value1","nativeSrc":"7503:6:19","nodeType":"YulIdentifier","src":"7503:6:19"}],"functionName":{"name":"mstore","nativeSrc":"7490:6:19","nodeType":"YulIdentifier","src":"7490:6:19"},"nativeSrc":"7490:20:19","nodeType":"YulFunctionCall","src":"7490:20:19"},"nativeSrc":"7490:20:19","nodeType":"YulExpressionStatement","src":"7490:20:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":3921,"isOffset":false,"isSlot":false,"src":"7401:4:19","valueSize":1},{"declaration":3921,"isOffset":false,"isSlot":false,"src":"7464:4:19","valueSize":1},{"declaration":3923,"isOffset":false,"isSlot":false,"src":"7439:4:19","valueSize":1},{"declaration":3923,"isOffset":false,"isSlot":false,"src":"7497:4:19","valueSize":1}],"id":3926,"nodeType":"InlineAssembly","src":"7358:162:19"}]},"documentation":{"id":3919,"nodeType":"StructuredDocumentation","src":"7210:77:19","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":3928,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:19","nodeType":"FunctionDefinition","parameters":{"id":3924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3921,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:19","nodeType":"VariableDeclaration","scope":3928,"src":"7307:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3920,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3923,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:19","nodeType":"VariableDeclaration","scope":3928,"src":"7321:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3922,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:19"},"returnParameters":{"id":3925,"nodeType":"ParameterList","parameters":[],"src":"7348:0:19"},"scope":4592,"src":"7292:234:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3939,"nodeType":"Block","src":"7713:64:19","statements":[{"AST":{"nativeSrc":"7732:39:19","nodeType":"YulBlock","src":"7732:39:19","statements":[{"nativeSrc":"7746:15:19","nodeType":"YulAssignment","src":"7746:15:19","value":{"name":"input","nativeSrc":"7756:5:19","nodeType":"YulIdentifier","src":"7756:5:19"},"variableNames":[{"name":"output","nativeSrc":"7746:6:19","nodeType":"YulIdentifier","src":"7746:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3932,"isOffset":false,"isSlot":false,"src":"7756:5:19","valueSize":1},{"declaration":3936,"isOffset":false,"isSlot":false,"src":"7746:6:19","valueSize":1}],"id":3938,"nodeType":"InlineAssembly","src":"7723:48:19"}]},"documentation":{"id":3929,"nodeType":"StructuredDocumentation","src":"7532:76:19","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":3940,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:19","nodeType":"FunctionDefinition","parameters":{"id":3933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3932,"mutability":"mutable","name":"input","nameLocation":"7659:5:19","nodeType":"VariableDeclaration","scope":3940,"src":"7642:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3930,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3931,"nodeType":"ArrayTypeName","src":"7642:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:19"},"returnParameters":{"id":3937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3936,"mutability":"mutable","name":"output","nameLocation":"7705:6:19","nodeType":"VariableDeclaration","scope":3940,"src":"7688:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3934,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3935,"nodeType":"ArrayTypeName","src":"7688:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:19"},"scope":4592,"src":"7613:164:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3951,"nodeType":"Block","src":"7964:64:19","statements":[{"AST":{"nativeSrc":"7983:39:19","nodeType":"YulBlock","src":"7983:39:19","statements":[{"nativeSrc":"7997:15:19","nodeType":"YulAssignment","src":"7997:15:19","value":{"name":"input","nativeSrc":"8007:5:19","nodeType":"YulIdentifier","src":"8007:5:19"},"variableNames":[{"name":"output","nativeSrc":"7997:6:19","nodeType":"YulIdentifier","src":"7997:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3944,"isOffset":false,"isSlot":false,"src":"8007:5:19","valueSize":1},{"declaration":3948,"isOffset":false,"isSlot":false,"src":"7997:6:19","valueSize":1}],"id":3950,"nodeType":"InlineAssembly","src":"7974:48:19"}]},"documentation":{"id":3941,"nodeType":"StructuredDocumentation","src":"7783:76:19","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":3952,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:19","nodeType":"FunctionDefinition","parameters":{"id":3945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3944,"mutability":"mutable","name":"input","nameLocation":"7910:5:19","nodeType":"VariableDeclaration","scope":3952,"src":"7893:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3943,"nodeType":"ArrayTypeName","src":"7893:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:19"},"returnParameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"output","nameLocation":"7956:6:19","nodeType":"VariableDeclaration","scope":3952,"src":"7939:23:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3947,"nodeType":"ArrayTypeName","src":"7939:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:19"},"scope":4592,"src":"7864:164:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3977,"nodeType":"Block","src":"8290:64:19","statements":[{"AST":{"nativeSrc":"8309:39:19","nodeType":"YulBlock","src":"8309:39:19","statements":[{"nativeSrc":"8323:15:19","nodeType":"YulAssignment","src":"8323:15:19","value":{"name":"input","nativeSrc":"8333:5:19","nodeType":"YulIdentifier","src":"8333:5:19"},"variableNames":[{"name":"output","nativeSrc":"8323:6:19","nodeType":"YulIdentifier","src":"8323:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3963,"isOffset":false,"isSlot":false,"src":"8333:5:19","valueSize":1},{"declaration":3974,"isOffset":false,"isSlot":false,"src":"8323:6:19","valueSize":1}],"id":3976,"nodeType":"InlineAssembly","src":"8300:48:19"}]},"documentation":{"id":3953,"nodeType":"StructuredDocumentation","src":"8034:78:19","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":3978,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:19","nodeType":"FunctionDefinition","parameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"input","nameLocation":"8201:5:19","nodeType":"VariableDeclaration","scope":3978,"src":"8154:52:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3962,"nodeType":"FunctionTypeName","parameterTypes":{"id":3958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3955,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3962,"src":"8163:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3954,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3962,"src":"8172:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3956,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:19"},"returnParameterTypes":{"id":3961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3960,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3962,"src":"8195:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3959,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:19"},"src":"8154:52:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:19"},"returnParameters":{"id":3975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3974,"mutability":"mutable","name":"output","nameLocation":"8282:6:19","nodeType":"VariableDeclaration","scope":3978,"src":"8235:53:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3973,"nodeType":"FunctionTypeName","parameterTypes":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3966,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3973,"src":"8244:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3965,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3973,"src":"8253:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:19"},"returnParameterTypes":{"id":3972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3973,"src":"8276:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3970,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:19"},"src":"8235:53:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:19"},"scope":4592,"src":"8117:237:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4003,"nodeType":"Block","src":"8616:64:19","statements":[{"AST":{"nativeSrc":"8635:39:19","nodeType":"YulBlock","src":"8635:39:19","statements":[{"nativeSrc":"8649:15:19","nodeType":"YulAssignment","src":"8649:15:19","value":{"name":"input","nativeSrc":"8659:5:19","nodeType":"YulIdentifier","src":"8659:5:19"},"variableNames":[{"name":"output","nativeSrc":"8649:6:19","nodeType":"YulIdentifier","src":"8649:6:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3989,"isOffset":false,"isSlot":false,"src":"8659:5:19","valueSize":1},{"declaration":4000,"isOffset":false,"isSlot":false,"src":"8649:6:19","valueSize":1}],"id":4002,"nodeType":"InlineAssembly","src":"8626:48:19"}]},"documentation":{"id":3979,"nodeType":"StructuredDocumentation","src":"8360:78:19","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":4004,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:19","nodeType":"FunctionDefinition","parameters":{"id":3990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3989,"mutability":"mutable","name":"input","nameLocation":"8527:5:19","nodeType":"VariableDeclaration","scope":4004,"src":"8480:52:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3988,"nodeType":"FunctionTypeName","parameterTypes":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3988,"src":"8489:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3980,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3983,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3988,"src":"8498:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:19"},"returnParameterTypes":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3988,"src":"8521:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3985,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:19"},"src":"8480:52:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:19"},"returnParameters":{"id":4001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4000,"mutability":"mutable","name":"output","nameLocation":"8608:6:19","nodeType":"VariableDeclaration","scope":4004,"src":"8561:53:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3999,"nodeType":"FunctionTypeName","parameterTypes":{"id":3995,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3992,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3999,"src":"8570:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3991,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3994,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3999,"src":"8579:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3993,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:19"},"returnParameterTypes":{"id":3998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3997,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3999,"src":"8602:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3996,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:19"},"src":"8561:53:19","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:19"},"scope":4592,"src":"8443:237:19","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4086,"nodeType":"Block","src":"9405:834:19","statements":[{"assignments":[4016],"declarations":[{"constant":false,"id":4016,"mutability":"mutable","name":"low","nameLocation":"9423:3:19","nodeType":"VariableDeclaration","scope":4086,"src":"9415:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4018,"initialValue":{"hexValue":"30","id":4017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:19"},{"assignments":[4020],"declarations":[{"constant":false,"id":4020,"mutability":"mutable","name":"high","nameLocation":"9448:4:19","nodeType":"VariableDeclaration","scope":4086,"src":"9440:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4023,"initialValue":{"expression":{"id":4021,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"9455:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:19","memberName":"length","nodeType":"MemberAccess","src":"9455:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4024,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"9482:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4030,"nodeType":"IfStatement","src":"9478:48:19","trueBody":{"id":4029,"nodeType":"Block","src":"9493:33:19","statements":[{"expression":{"hexValue":"30","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4014,"id":4028,"nodeType":"Return","src":"9507:8:19"}]}},{"body":{"id":4062,"nodeType":"Block","src":"9555:423:19","statements":[{"assignments":[4035],"declarations":[{"constant":false,"id":4035,"mutability":"mutable","name":"mid","nameLocation":"9577:3:19","nodeType":"VariableDeclaration","scope":4062,"src":"9569:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4041,"initialValue":{"arguments":[{"id":4038,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"9596:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4039,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"9601:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4036,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"9583:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8088_$","typeString":"type(library Math)"}},"id":4037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6817,"src":"9583:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4043,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"9844:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":4044,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"9851:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4042,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4367,4393,4419,4445,4471],"referencedDeclaration":4419,"src":"9831:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4920_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4920_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":4046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4919,"src":"9831:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4047,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"9864:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4060,"nodeType":"Block","src":"9922:46:19","statements":[{"expression":{"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4054,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"9940:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4055,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"9946:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4059,"nodeType":"ExpressionStatement","src":"9940:13:19"}]},"id":4061,"nodeType":"IfStatement","src":"9827:141:19","trueBody":{"id":4053,"nodeType":"Block","src":"9873:43:19","statements":[{"expression":{"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4049,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"9891:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4050,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"9898:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4052,"nodeType":"ExpressionStatement","src":"9891:10:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4031,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"9543:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4032,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"9549:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4063,"nodeType":"WhileStatement","src":"9536:442:19"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4064,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"10095:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4068,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4008,"src":"10119:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4069,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"10126:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4067,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4367,4393,4419,4445,4471],"referencedDeclaration":4419,"src":"10106:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4920_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4920_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":4073,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4919,"src":"10106:34:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4074,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4010,"src":"10144:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4084,"nodeType":"Block","src":"10198:35:19","statements":[{"expression":{"id":4082,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"10219:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4014,"id":4083,"nodeType":"Return","src":"10212:10:19"}]},"id":4085,"nodeType":"IfStatement","src":"10091:142:19","trueBody":{"id":4081,"nodeType":"Block","src":"10153:39:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4077,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"10174:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4014,"id":4080,"nodeType":"Return","src":"10167:14:19"}]}}]},"documentation":{"id":4005,"nodeType":"StructuredDocumentation","src":"8686:616:19","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":4087,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:19","nodeType":"FunctionDefinition","parameters":{"id":4011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4008,"mutability":"mutable","name":"array","nameLocation":"9349:5:19","nodeType":"VariableDeclaration","scope":4087,"src":"9331:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4007,"nodeType":"ArrayTypeName","src":"9331:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4010,"mutability":"mutable","name":"element","nameLocation":"9364:7:19","nodeType":"VariableDeclaration","scope":4087,"src":"9356:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4009,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:19"},"returnParameters":{"id":4014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4087,"src":"9396:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4012,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:19"},"scope":4592,"src":"9307:932:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4150,"nodeType":"Block","src":"10756:709:19","statements":[{"assignments":[4099],"declarations":[{"constant":false,"id":4099,"mutability":"mutable","name":"low","nameLocation":"10774:3:19","nodeType":"VariableDeclaration","scope":4150,"src":"10766:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4098,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4101,"initialValue":{"hexValue":"30","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:19"},{"assignments":[4103],"declarations":[{"constant":false,"id":4103,"mutability":"mutable","name":"high","nameLocation":"10799:4:19","nodeType":"VariableDeclaration","scope":4150,"src":"10791:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4106,"initialValue":{"expression":{"id":4104,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"10806:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:19","memberName":"length","nodeType":"MemberAccess","src":"10806:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4107,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"10833:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4113,"nodeType":"IfStatement","src":"10829:48:19","trueBody":{"id":4112,"nodeType":"Block","src":"10844:33:19","statements":[{"expression":{"hexValue":"30","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4097,"id":4111,"nodeType":"Return","src":"10858:8:19"}]}},{"body":{"id":4146,"nodeType":"Block","src":"10906:532:19","statements":[{"assignments":[4118],"declarations":[{"constant":false,"id":4118,"mutability":"mutable","name":"mid","nameLocation":"10928:3:19","nodeType":"VariableDeclaration","scope":4146,"src":"10920:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4117,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4124,"initialValue":{"arguments":[{"id":4121,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"10947:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4122,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"10952:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4119,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"10934:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8088_$","typeString":"type(library Math)"}},"id":4120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6817,"src":"10934:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4126,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4091,"src":"11195:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":4127,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"11202:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4125,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4367,4393,4419,4445,4471],"referencedDeclaration":4419,"src":"11182:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4920_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4920_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":4129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4919,"src":"11182:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4130,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"11215:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4144,"nodeType":"Block","src":"11385:43:19","statements":[{"expression":{"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4140,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"11403:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4141,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"11410:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4143,"nodeType":"ExpressionStatement","src":"11403:10:19"}]},"id":4145,"nodeType":"IfStatement","src":"11178:250:19","trueBody":{"id":4139,"nodeType":"Block","src":"11224:155:19","statements":[{"id":4138,"nodeType":"UncheckedBlock","src":"11301:64:19","statements":[{"expression":{"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4132,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"11333:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4133,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4118,"src":"11339:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4137,"nodeType":"ExpressionStatement","src":"11333:13:19"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4114,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"10894:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4115,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"10900:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4147,"nodeType":"WhileStatement","src":"10887:551:19"},{"expression":{"id":4148,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"11455:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4097,"id":4149,"nodeType":"Return","src":"11448:10:19"}]},"documentation":{"id":4088,"nodeType":"StructuredDocumentation","src":"10245:412:19","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":4151,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:19","nodeType":"FunctionDefinition","parameters":{"id":4094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4091,"mutability":"mutable","name":"array","nameLocation":"10700:5:19","nodeType":"VariableDeclaration","scope":4151,"src":"10682:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4089,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4090,"nodeType":"ArrayTypeName","src":"10682:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4093,"mutability":"mutable","name":"element","nameLocation":"10715:7:19","nodeType":"VariableDeclaration","scope":4151,"src":"10707:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4092,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:19"},"returnParameters":{"id":4097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4151,"src":"10747:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4095,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:19"},"scope":4592,"src":"10662:803:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4214,"nodeType":"Block","src":"11982:709:19","statements":[{"assignments":[4163],"declarations":[{"constant":false,"id":4163,"mutability":"mutable","name":"low","nameLocation":"12000:3:19","nodeType":"VariableDeclaration","scope":4214,"src":"11992:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4162,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4165,"initialValue":{"hexValue":"30","id":4164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:19"},{"assignments":[4167],"declarations":[{"constant":false,"id":4167,"mutability":"mutable","name":"high","nameLocation":"12025:4:19","nodeType":"VariableDeclaration","scope":4214,"src":"12017:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4166,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4170,"initialValue":{"expression":{"id":4168,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"12032:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:19","memberName":"length","nodeType":"MemberAccess","src":"12032:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4171,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"12059:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4177,"nodeType":"IfStatement","src":"12055:48:19","trueBody":{"id":4176,"nodeType":"Block","src":"12070:33:19","statements":[{"expression":{"hexValue":"30","id":4174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4161,"id":4175,"nodeType":"Return","src":"12084:8:19"}]}},{"body":{"id":4210,"nodeType":"Block","src":"12132:532:19","statements":[{"assignments":[4182],"declarations":[{"constant":false,"id":4182,"mutability":"mutable","name":"mid","nameLocation":"12154:3:19","nodeType":"VariableDeclaration","scope":4210,"src":"12146:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4181,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4188,"initialValue":{"arguments":[{"id":4185,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"12173:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4186,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"12178:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4183,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"12160:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8088_$","typeString":"type(library Math)"}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6817,"src":"12160:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4190,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"12421:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":4191,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"12428:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4189,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[4367,4393,4419,4445,4471],"referencedDeclaration":4419,"src":"12408:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$4920_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4920_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":4193,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:19","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":4919,"src":"12408:30:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4194,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4157,"src":"12441:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4208,"nodeType":"Block","src":"12499:155:19","statements":[{"id":4207,"nodeType":"UncheckedBlock","src":"12576:64:19","statements":[{"expression":{"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4201,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"12608:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4202,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"12614:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4206,"nodeType":"ExpressionStatement","src":"12608:13:19"}]}]},"id":4209,"nodeType":"IfStatement","src":"12404:250:19","trueBody":{"id":4200,"nodeType":"Block","src":"12450:43:19","statements":[{"expression":{"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4196,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"12468:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4197,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"12475:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4199,"nodeType":"ExpressionStatement","src":"12468:10:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4178,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"12120:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4179,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4167,"src":"12126:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4211,"nodeType":"WhileStatement","src":"12113:551:19"},{"expression":{"id":4212,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4163,"src":"12681:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4161,"id":4213,"nodeType":"Return","src":"12674:10:19"}]},"documentation":{"id":4152,"nodeType":"StructuredDocumentation","src":"11471:412:19","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":4215,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:19","nodeType":"FunctionDefinition","parameters":{"id":4158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4155,"mutability":"mutable","name":"array","nameLocation":"11926:5:19","nodeType":"VariableDeclaration","scope":4215,"src":"11908:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4153,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4154,"nodeType":"ArrayTypeName","src":"11908:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4157,"mutability":"mutable","name":"element","nameLocation":"11941:7:19","nodeType":"VariableDeclaration","scope":4215,"src":"11933:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4156,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:19"},"returnParameters":{"id":4161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4160,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4215,"src":"11973:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4159,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:19"},"scope":4592,"src":"11888:803:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4277,"nodeType":"Block","src":"12875:709:19","statements":[{"assignments":[4227],"declarations":[{"constant":false,"id":4227,"mutability":"mutable","name":"low","nameLocation":"12893:3:19","nodeType":"VariableDeclaration","scope":4277,"src":"12885:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4226,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4229,"initialValue":{"hexValue":"30","id":4228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:19"},{"assignments":[4231],"declarations":[{"constant":false,"id":4231,"mutability":"mutable","name":"high","nameLocation":"12918:4:19","nodeType":"VariableDeclaration","scope":4277,"src":"12910:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4230,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4234,"initialValue":{"expression":{"id":4232,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"12925:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:19","memberName":"length","nodeType":"MemberAccess","src":"12925:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4235,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"12952:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4241,"nodeType":"IfStatement","src":"12948:48:19","trueBody":{"id":4240,"nodeType":"Block","src":"12963:33:19","statements":[{"expression":{"hexValue":"30","id":4238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4225,"id":4239,"nodeType":"Return","src":"12977:8:19"}]}},{"body":{"id":4273,"nodeType":"Block","src":"13025:532:19","statements":[{"assignments":[4246],"declarations":[{"constant":false,"id":4246,"mutability":"mutable","name":"mid","nameLocation":"13047:3:19","nodeType":"VariableDeclaration","scope":4273,"src":"13039:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4245,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4252,"initialValue":{"arguments":[{"id":4249,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"13066:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4250,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"13071:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4247,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"13053:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8088_$","typeString":"type(library Math)"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6817,"src":"13053:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4254,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4219,"src":"13320:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4255,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"13327:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4253,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[4484,4497,4510,4523,4536],"referencedDeclaration":4510,"src":"13301:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4257,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4221,"src":"13334:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4271,"nodeType":"Block","src":"13504:43:19","statements":[{"expression":{"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4267,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"13522:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4268,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"13529:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4270,"nodeType":"ExpressionStatement","src":"13522:10:19"}]},"id":4272,"nodeType":"IfStatement","src":"13297:250:19","trueBody":{"id":4266,"nodeType":"Block","src":"13343:155:19","statements":[{"id":4265,"nodeType":"UncheckedBlock","src":"13420:64:19","statements":[{"expression":{"id":4263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4259,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"13452:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4260,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4246,"src":"13458:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4264,"nodeType":"ExpressionStatement","src":"13452:13:19"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4242,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"13013:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4243,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"13019:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4274,"nodeType":"WhileStatement","src":"13006:551:19"},{"expression":{"id":4275,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"13574:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4225,"id":4276,"nodeType":"Return","src":"13567:10:19"}]},"documentation":{"id":4216,"nodeType":"StructuredDocumentation","src":"12697:74:19","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":4278,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:19","nodeType":"FunctionDefinition","parameters":{"id":4222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4219,"mutability":"mutable","name":"array","nameLocation":"12819:5:19","nodeType":"VariableDeclaration","scope":4278,"src":"12802:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4218,"nodeType":"ArrayTypeName","src":"12802:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4221,"mutability":"mutable","name":"element","nameLocation":"12834:7:19","nodeType":"VariableDeclaration","scope":4278,"src":"12826:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:19"},"returnParameters":{"id":4225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4278,"src":"12866:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4223,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:19"},"scope":4592,"src":"12776:808:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4340,"nodeType":"Block","src":"13768:709:19","statements":[{"assignments":[4290],"declarations":[{"constant":false,"id":4290,"mutability":"mutable","name":"low","nameLocation":"13786:3:19","nodeType":"VariableDeclaration","scope":4340,"src":"13778:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4292,"initialValue":{"hexValue":"30","id":4291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:19"},{"assignments":[4294],"declarations":[{"constant":false,"id":4294,"mutability":"mutable","name":"high","nameLocation":"13811:4:19","nodeType":"VariableDeclaration","scope":4340,"src":"13803:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4293,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4297,"initialValue":{"expression":{"id":4295,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"13818:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":4296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:19","memberName":"length","nodeType":"MemberAccess","src":"13818:12:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4298,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"13845:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4304,"nodeType":"IfStatement","src":"13841:48:19","trueBody":{"id":4303,"nodeType":"Block","src":"13856:33:19","statements":[{"expression":{"hexValue":"30","id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4288,"id":4302,"nodeType":"Return","src":"13870:8:19"}]}},{"body":{"id":4336,"nodeType":"Block","src":"13918:532:19","statements":[{"assignments":[4309],"declarations":[{"constant":false,"id":4309,"mutability":"mutable","name":"mid","nameLocation":"13940:3:19","nodeType":"VariableDeclaration","scope":4336,"src":"13932:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4308,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4315,"initialValue":{"arguments":[{"id":4312,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"13959:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4313,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"13964:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4310,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"13946:4:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8088_$","typeString":"type(library Math)"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:19","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":6817,"src":"13946:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:19"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4317,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4282,"src":"14213:5:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":4318,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"14220:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4316,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[4484,4497,4510,4523,4536],"referencedDeclaration":4510,"src":"14194:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4320,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4284,"src":"14227:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4334,"nodeType":"Block","src":"14285:155:19","statements":[{"id":4333,"nodeType":"UncheckedBlock","src":"14362:64:19","statements":[{"expression":{"id":4331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4327,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"14394:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4328,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"14400:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:19","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4332,"nodeType":"ExpressionStatement","src":"14394:13:19"}]}]},"id":4335,"nodeType":"IfStatement","src":"14190:250:19","trueBody":{"id":4326,"nodeType":"Block","src":"14236:43:19","statements":[{"expression":{"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4322,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"14254:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4323,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4309,"src":"14261:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4325,"nodeType":"ExpressionStatement","src":"14254:10:19"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4305,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"13906:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4306,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4294,"src":"13912:4:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4337,"nodeType":"WhileStatement","src":"13899:551:19"},{"expression":{"id":4338,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"14467:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4288,"id":4339,"nodeType":"Return","src":"14460:10:19"}]},"documentation":{"id":4279,"nodeType":"StructuredDocumentation","src":"13590:74:19","text":" @dev Same as {upperBound}, but with an array in memory."},"id":4341,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:19","nodeType":"FunctionDefinition","parameters":{"id":4285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"mutability":"mutable","name":"array","nameLocation":"13712:5:19","nodeType":"VariableDeclaration","scope":4341,"src":"13695:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4280,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4281,"nodeType":"ArrayTypeName","src":"13695:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4284,"mutability":"mutable","name":"element","nameLocation":"13727:7:19","nodeType":"VariableDeclaration","scope":4341,"src":"13719:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4283,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:19"},"returnParameters":{"id":4288,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4287,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4341,"src":"13759:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4286,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:19"},"scope":4592,"src":"13669:808:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4366,"nodeType":"Block","src":"14793:167:19","statements":[{"assignments":[4354],"declarations":[{"constant":false,"id":4354,"mutability":"mutable","name":"slot","nameLocation":"14811:4:19","nodeType":"VariableDeclaration","scope":4366,"src":"14803:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4353,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4355,"nodeType":"VariableDeclarationStatement","src":"14803:12:19"},{"AST":{"nativeSrc":"14850:40:19","nodeType":"YulBlock","src":"14850:40:19","statements":[{"nativeSrc":"14864:16:19","nodeType":"YulAssignment","src":"14864:16:19","value":{"name":"arr.slot","nativeSrc":"14872:8:19","nodeType":"YulIdentifier","src":"14872:8:19"},"variableNames":[{"name":"slot","nativeSrc":"14864:4:19","nodeType":"YulIdentifier","src":"14864:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4345,"isOffset":false,"isSlot":true,"src":"14872:8:19","suffix":"slot","valueSize":1},{"declaration":4354,"isOffset":false,"isSlot":false,"src":"14864:4:19","valueSize":1}],"flags":["memory-safe"],"id":4356,"nodeType":"InlineAssembly","src":"14825:65:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4361,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"14932:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4357,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"14906:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:19","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4820,"src":"14906:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:19","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4810,"src":"14906:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:19","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":4940,"src":"14906:45:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$4911_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":4364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4911_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":4352,"id":4365,"nodeType":"Return","src":"14899:54:19"}]},"documentation":{"id":4342,"nodeType":"StructuredDocumentation","src":"14483:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4367,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:19","nodeType":"FunctionDefinition","parameters":{"id":4348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4345,"mutability":"mutable","name":"arr","nameLocation":"14719:3:19","nodeType":"VariableDeclaration","scope":4367,"src":"14701:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4343,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4344,"nodeType":"ArrayTypeName","src":"14701:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4347,"mutability":"mutable","name":"pos","nameLocation":"14732:3:19","nodeType":"VariableDeclaration","scope":4367,"src":"14724:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4346,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:19"},"returnParameters":{"id":4352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4367,"src":"14760:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4911_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4350,"nodeType":"UserDefinedTypeName","pathNode":{"id":4349,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:19","14772:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4911,"src":"14760:23:19"},"referencedDeclaration":4911,"src":"14760:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4911_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:19"},"scope":4592,"src":"14679:281:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4392,"nodeType":"Block","src":"15276:167:19","statements":[{"assignments":[4380],"declarations":[{"constant":false,"id":4380,"mutability":"mutable","name":"slot","nameLocation":"15294:4:19","nodeType":"VariableDeclaration","scope":4392,"src":"15286:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4379,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4381,"nodeType":"VariableDeclarationStatement","src":"15286:12:19"},{"AST":{"nativeSrc":"15333:40:19","nodeType":"YulBlock","src":"15333:40:19","statements":[{"nativeSrc":"15347:16:19","nodeType":"YulAssignment","src":"15347:16:19","value":{"name":"arr.slot","nativeSrc":"15355:8:19","nodeType":"YulIdentifier","src":"15355:8:19"},"variableNames":[{"name":"slot","nativeSrc":"15347:4:19","nodeType":"YulIdentifier","src":"15347:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4371,"isOffset":false,"isSlot":true,"src":"15355:8:19","suffix":"slot","valueSize":1},{"declaration":4380,"isOffset":false,"isSlot":false,"src":"15347:4:19","valueSize":1}],"flags":["memory-safe"],"id":4382,"nodeType":"InlineAssembly","src":"15308:65:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4387,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"15415:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4383,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4380,"src":"15389:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:19","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4820,"src":"15389:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:19","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4810,"src":"15389:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:19","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":4962,"src":"15389:45:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$4917_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":4390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4917_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":4378,"id":4391,"nodeType":"Return","src":"15382:54:19"}]},"documentation":{"id":4368,"nodeType":"StructuredDocumentation","src":"14966:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4393,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:19","nodeType":"FunctionDefinition","parameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4371,"mutability":"mutable","name":"arr","nameLocation":"15202:3:19","nodeType":"VariableDeclaration","scope":4393,"src":"15184:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4370,"nodeType":"ArrayTypeName","src":"15184:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4373,"mutability":"mutable","name":"pos","nameLocation":"15215:3:19","nodeType":"VariableDeclaration","scope":4393,"src":"15207:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4372,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:19"},"returnParameters":{"id":4378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4393,"src":"15243:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4917_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4376,"nodeType":"UserDefinedTypeName","pathNode":{"id":4375,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:19","15255:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4917,"src":"15243:23:19"},"referencedDeclaration":4917,"src":"15243:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4917_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:19"},"scope":4592,"src":"15162:281:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4418,"nodeType":"Block","src":"15759:167:19","statements":[{"assignments":[4406],"declarations":[{"constant":false,"id":4406,"mutability":"mutable","name":"slot","nameLocation":"15777:4:19","nodeType":"VariableDeclaration","scope":4418,"src":"15769:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4405,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4407,"nodeType":"VariableDeclarationStatement","src":"15769:12:19"},{"AST":{"nativeSrc":"15816:40:19","nodeType":"YulBlock","src":"15816:40:19","statements":[{"nativeSrc":"15830:16:19","nodeType":"YulAssignment","src":"15830:16:19","value":{"name":"arr.slot","nativeSrc":"15838:8:19","nodeType":"YulIdentifier","src":"15838:8:19"},"variableNames":[{"name":"slot","nativeSrc":"15830:4:19","nodeType":"YulIdentifier","src":"15830:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4397,"isOffset":false,"isSlot":true,"src":"15838:8:19","suffix":"slot","valueSize":1},{"declaration":4406,"isOffset":false,"isSlot":false,"src":"15830:4:19","valueSize":1}],"flags":["memory-safe"],"id":4408,"nodeType":"InlineAssembly","src":"15791:65:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4413,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4399,"src":"15898:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4409,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4406,"src":"15872:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:19","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4820,"src":"15872:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:19","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4810,"src":"15872:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:19","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":4973,"src":"15872:45:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$4920_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":4416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4920_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":4404,"id":4417,"nodeType":"Return","src":"15865:54:19"}]},"documentation":{"id":4394,"nodeType":"StructuredDocumentation","src":"15449:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4419,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:19","nodeType":"FunctionDefinition","parameters":{"id":4400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4397,"mutability":"mutable","name":"arr","nameLocation":"15685:3:19","nodeType":"VariableDeclaration","scope":4419,"src":"15667:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4395,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4396,"nodeType":"ArrayTypeName","src":"15667:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4399,"mutability":"mutable","name":"pos","nameLocation":"15698:3:19","nodeType":"VariableDeclaration","scope":4419,"src":"15690:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4398,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:19"},"returnParameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4403,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4419,"src":"15726:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4920_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4402,"nodeType":"UserDefinedTypeName","pathNode":{"id":4401,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:19","15738:11:19"],"nodeType":"IdentifierPath","referencedDeclaration":4920,"src":"15726:23:19"},"referencedDeclaration":4920,"src":"15726:23:19","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4920_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:19"},"scope":4592,"src":"15645:281:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4444,"nodeType":"Block","src":"16238:165:19","statements":[{"assignments":[4432],"declarations":[{"constant":false,"id":4432,"mutability":"mutable","name":"slot","nameLocation":"16256:4:19","nodeType":"VariableDeclaration","scope":4444,"src":"16248:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16248:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4433,"nodeType":"VariableDeclarationStatement","src":"16248:12:19"},{"AST":{"nativeSrc":"16295:40:19","nodeType":"YulBlock","src":"16295:40:19","statements":[{"nativeSrc":"16309:16:19","nodeType":"YulAssignment","src":"16309:16:19","value":{"name":"arr.slot","nativeSrc":"16317:8:19","nodeType":"YulIdentifier","src":"16317:8:19"},"variableNames":[{"name":"slot","nativeSrc":"16309:4:19","nodeType":"YulIdentifier","src":"16309:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4423,"isOffset":false,"isSlot":true,"src":"16317:8:19","suffix":"slot","valueSize":1},{"declaration":4432,"isOffset":false,"isSlot":false,"src":"16309:4:19","valueSize":1}],"flags":["memory-safe"],"id":4434,"nodeType":"InlineAssembly","src":"16270:65:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4439,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4425,"src":"16377:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4435,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4432,"src":"16351:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16356:11:19","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4820,"src":"16351:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16370:6:19","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4810,"src":"16351:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16382:12:19","memberName":"getBytesSlot","nodeType":"MemberAccess","referencedDeclaration":5017,"src":"16351:43:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_BytesSlot_$4929_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.BytesSlot storage pointer)"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16351:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4929_storage_ptr","typeString":"struct StorageSlot.BytesSlot storage pointer"}},"functionReturnParameters":4430,"id":4443,"nodeType":"Return","src":"16344:52:19"}]},"documentation":{"id":4420,"nodeType":"StructuredDocumentation","src":"15932:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4445,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16137:12:19","nodeType":"FunctionDefinition","parameters":{"id":4426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"arr","nameLocation":"16166:3:19","nodeType":"VariableDeclaration","scope":4445,"src":"16150:19:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4421,"name":"bytes","nodeType":"ElementaryTypeName","src":"16150:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4422,"nodeType":"ArrayTypeName","src":"16150:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4425,"mutability":"mutable","name":"pos","nameLocation":"16179:3:19","nodeType":"VariableDeclaration","scope":4445,"src":"16171:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4424,"name":"uint256","nodeType":"ElementaryTypeName","src":"16171:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16149:34:19"},"returnParameters":{"id":4430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4445,"src":"16207:29:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4929_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":4428,"nodeType":"UserDefinedTypeName","pathNode":{"id":4427,"name":"StorageSlot.BytesSlot","nameLocations":["16207:11:19","16219:9:19"],"nodeType":"IdentifierPath","referencedDeclaration":4929,"src":"16207:21:19"},"referencedDeclaration":4929,"src":"16207:21:19","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4929_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"16206:31:19"},"scope":4592,"src":"16128:275:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4470,"nodeType":"Block","src":"16717:166:19","statements":[{"assignments":[4458],"declarations":[{"constant":false,"id":4458,"mutability":"mutable","name":"slot","nameLocation":"16735:4:19","nodeType":"VariableDeclaration","scope":4470,"src":"16727:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16727:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":4459,"nodeType":"VariableDeclarationStatement","src":"16727:12:19"},{"AST":{"nativeSrc":"16774:40:19","nodeType":"YulBlock","src":"16774:40:19","statements":[{"nativeSrc":"16788:16:19","nodeType":"YulAssignment","src":"16788:16:19","value":{"name":"arr.slot","nativeSrc":"16796:8:19","nodeType":"YulIdentifier","src":"16796:8:19"},"variableNames":[{"name":"slot","nativeSrc":"16788:4:19","nodeType":"YulIdentifier","src":"16788:4:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4449,"isOffset":false,"isSlot":true,"src":"16796:8:19","suffix":"slot","valueSize":1},{"declaration":4458,"isOffset":false,"isSlot":false,"src":"16788:4:19","valueSize":1}],"flags":["memory-safe"],"id":4460,"nodeType":"InlineAssembly","src":"16749:65:19"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4465,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4451,"src":"16856:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4461,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4458,"src":"16830:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16835:11:19","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":4820,"src":"16830:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16849:6:19","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":4810,"src":"16830:25:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":4466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16861:13:19","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":4995,"src":"16830:44:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_StringSlot_$4926_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16830:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4926_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"functionReturnParameters":4456,"id":4469,"nodeType":"Return","src":"16823:53:19"}]},"documentation":{"id":4446,"nodeType":"StructuredDocumentation","src":"16409:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4471,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"16614:12:19","nodeType":"FunctionDefinition","parameters":{"id":4452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4449,"mutability":"mutable","name":"arr","nameLocation":"16644:3:19","nodeType":"VariableDeclaration","scope":4471,"src":"16627:20:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4447,"name":"string","nodeType":"ElementaryTypeName","src":"16627:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4448,"nodeType":"ArrayTypeName","src":"16627:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4451,"mutability":"mutable","name":"pos","nameLocation":"16657:3:19","nodeType":"VariableDeclaration","scope":4471,"src":"16649:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4450,"name":"uint256","nodeType":"ElementaryTypeName","src":"16649:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16626:35:19"},"returnParameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4471,"src":"16685:30:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4926_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4454,"nodeType":"UserDefinedTypeName","pathNode":{"id":4453,"name":"StorageSlot.StringSlot","nameLocations":["16685:11:19","16697:10:19"],"nodeType":"IdentifierPath","referencedDeclaration":4926,"src":"16685:22:19"},"referencedDeclaration":4926,"src":"16685:22:19","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4926_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"16684:32:19"},"scope":4592,"src":"16605:278:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4483,"nodeType":"Block","src":"17184:98:19","statements":[{"AST":{"nativeSrc":"17203:73:19","nodeType":"YulBlock","src":"17203:73:19","statements":[{"nativeSrc":"17217:49:19","nodeType":"YulAssignment","src":"17217:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17238:3:19","nodeType":"YulIdentifier","src":"17238:3:19"},{"kind":"number","nativeSrc":"17243:4:19","nodeType":"YulLiteral","src":"17243:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17234:3:19","nodeType":"YulIdentifier","src":"17234:3:19"},"nativeSrc":"17234:14:19","nodeType":"YulFunctionCall","src":"17234:14:19"},{"arguments":[{"name":"pos","nativeSrc":"17254:3:19","nodeType":"YulIdentifier","src":"17254:3:19"},{"kind":"number","nativeSrc":"17259:4:19","nodeType":"YulLiteral","src":"17259:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17250:3:19","nodeType":"YulIdentifier","src":"17250:3:19"},"nativeSrc":"17250:14:19","nodeType":"YulFunctionCall","src":"17250:14:19"}],"functionName":{"name":"add","nativeSrc":"17230:3:19","nodeType":"YulIdentifier","src":"17230:3:19"},"nativeSrc":"17230:35:19","nodeType":"YulFunctionCall","src":"17230:35:19"}],"functionName":{"name":"mload","nativeSrc":"17224:5:19","nodeType":"YulIdentifier","src":"17224:5:19"},"nativeSrc":"17224:42:19","nodeType":"YulFunctionCall","src":"17224:42:19"},"variableNames":[{"name":"res","nativeSrc":"17217:3:19","nodeType":"YulIdentifier","src":"17217:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4475,"isOffset":false,"isSlot":false,"src":"17238:3:19","valueSize":1},{"declaration":4477,"isOffset":false,"isSlot":false,"src":"17254:3:19","valueSize":1},{"declaration":4480,"isOffset":false,"isSlot":false,"src":"17217:3:19","valueSize":1}],"id":4482,"nodeType":"InlineAssembly","src":"17194:82:19"}]},"documentation":{"id":4472,"nodeType":"StructuredDocumentation","src":"16889:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4484,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17094:18:19","nodeType":"FunctionDefinition","parameters":{"id":4478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4475,"mutability":"mutable","name":"arr","nameLocation":"17130:3:19","nodeType":"VariableDeclaration","scope":4484,"src":"17113:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4473,"name":"address","nodeType":"ElementaryTypeName","src":"17113:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4474,"nodeType":"ArrayTypeName","src":"17113:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4477,"mutability":"mutable","name":"pos","nameLocation":"17143:3:19","nodeType":"VariableDeclaration","scope":4484,"src":"17135:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4476,"name":"uint256","nodeType":"ElementaryTypeName","src":"17135:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17112:35:19"},"returnParameters":{"id":4481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4480,"mutability":"mutable","name":"res","nameLocation":"17179:3:19","nodeType":"VariableDeclaration","scope":4484,"src":"17171:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4479,"name":"address","nodeType":"ElementaryTypeName","src":"17171:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17170:13:19"},"scope":4592,"src":"17085:197:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4496,"nodeType":"Block","src":"17583:98:19","statements":[{"AST":{"nativeSrc":"17602:73:19","nodeType":"YulBlock","src":"17602:73:19","statements":[{"nativeSrc":"17616:49:19","nodeType":"YulAssignment","src":"17616:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"17637:3:19","nodeType":"YulIdentifier","src":"17637:3:19"},{"kind":"number","nativeSrc":"17642:4:19","nodeType":"YulLiteral","src":"17642:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"17633:3:19","nodeType":"YulIdentifier","src":"17633:3:19"},"nativeSrc":"17633:14:19","nodeType":"YulFunctionCall","src":"17633:14:19"},{"arguments":[{"name":"pos","nativeSrc":"17653:3:19","nodeType":"YulIdentifier","src":"17653:3:19"},{"kind":"number","nativeSrc":"17658:4:19","nodeType":"YulLiteral","src":"17658:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"17649:3:19","nodeType":"YulIdentifier","src":"17649:3:19"},"nativeSrc":"17649:14:19","nodeType":"YulFunctionCall","src":"17649:14:19"}],"functionName":{"name":"add","nativeSrc":"17629:3:19","nodeType":"YulIdentifier","src":"17629:3:19"},"nativeSrc":"17629:35:19","nodeType":"YulFunctionCall","src":"17629:35:19"}],"functionName":{"name":"mload","nativeSrc":"17623:5:19","nodeType":"YulIdentifier","src":"17623:5:19"},"nativeSrc":"17623:42:19","nodeType":"YulFunctionCall","src":"17623:42:19"},"variableNames":[{"name":"res","nativeSrc":"17616:3:19","nodeType":"YulIdentifier","src":"17616:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4488,"isOffset":false,"isSlot":false,"src":"17637:3:19","valueSize":1},{"declaration":4490,"isOffset":false,"isSlot":false,"src":"17653:3:19","valueSize":1},{"declaration":4493,"isOffset":false,"isSlot":false,"src":"17616:3:19","valueSize":1}],"id":4495,"nodeType":"InlineAssembly","src":"17593:82:19"}]},"documentation":{"id":4485,"nodeType":"StructuredDocumentation","src":"17288:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4497,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17493:18:19","nodeType":"FunctionDefinition","parameters":{"id":4491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"arr","nameLocation":"17529:3:19","nodeType":"VariableDeclaration","scope":4497,"src":"17512:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17512:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4487,"nodeType":"ArrayTypeName","src":"17512:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4490,"mutability":"mutable","name":"pos","nameLocation":"17542:3:19","nodeType":"VariableDeclaration","scope":4497,"src":"17534:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4489,"name":"uint256","nodeType":"ElementaryTypeName","src":"17534:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17511:35:19"},"returnParameters":{"id":4494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4493,"mutability":"mutable","name":"res","nameLocation":"17578:3:19","nodeType":"VariableDeclaration","scope":4497,"src":"17570:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4492,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17570:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"17569:13:19"},"scope":4592,"src":"17484:197:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4509,"nodeType":"Block","src":"17982:98:19","statements":[{"AST":{"nativeSrc":"18001:73:19","nodeType":"YulBlock","src":"18001:73:19","statements":[{"nativeSrc":"18015:49:19","nodeType":"YulAssignment","src":"18015:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18036:3:19","nodeType":"YulIdentifier","src":"18036:3:19"},{"kind":"number","nativeSrc":"18041:4:19","nodeType":"YulLiteral","src":"18041:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18032:3:19","nodeType":"YulIdentifier","src":"18032:3:19"},"nativeSrc":"18032:14:19","nodeType":"YulFunctionCall","src":"18032:14:19"},{"arguments":[{"name":"pos","nativeSrc":"18052:3:19","nodeType":"YulIdentifier","src":"18052:3:19"},{"kind":"number","nativeSrc":"18057:4:19","nodeType":"YulLiteral","src":"18057:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18048:3:19","nodeType":"YulIdentifier","src":"18048:3:19"},"nativeSrc":"18048:14:19","nodeType":"YulFunctionCall","src":"18048:14:19"}],"functionName":{"name":"add","nativeSrc":"18028:3:19","nodeType":"YulIdentifier","src":"18028:3:19"},"nativeSrc":"18028:35:19","nodeType":"YulFunctionCall","src":"18028:35:19"}],"functionName":{"name":"mload","nativeSrc":"18022:5:19","nodeType":"YulIdentifier","src":"18022:5:19"},"nativeSrc":"18022:42:19","nodeType":"YulFunctionCall","src":"18022:42:19"},"variableNames":[{"name":"res","nativeSrc":"18015:3:19","nodeType":"YulIdentifier","src":"18015:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4501,"isOffset":false,"isSlot":false,"src":"18036:3:19","valueSize":1},{"declaration":4503,"isOffset":false,"isSlot":false,"src":"18052:3:19","valueSize":1},{"declaration":4506,"isOffset":false,"isSlot":false,"src":"18015:3:19","valueSize":1}],"id":4508,"nodeType":"InlineAssembly","src":"17992:82:19"}]},"documentation":{"id":4498,"nodeType":"StructuredDocumentation","src":"17687:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4510,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"17892:18:19","nodeType":"FunctionDefinition","parameters":{"id":4504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"arr","nameLocation":"17928:3:19","nodeType":"VariableDeclaration","scope":4510,"src":"17911:20:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4499,"name":"uint256","nodeType":"ElementaryTypeName","src":"17911:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4500,"nodeType":"ArrayTypeName","src":"17911:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4503,"mutability":"mutable","name":"pos","nameLocation":"17941:3:19","nodeType":"VariableDeclaration","scope":4510,"src":"17933:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4502,"name":"uint256","nodeType":"ElementaryTypeName","src":"17933:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17910:35:19"},"returnParameters":{"id":4507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4506,"mutability":"mutable","name":"res","nameLocation":"17977:3:19","nodeType":"VariableDeclaration","scope":4510,"src":"17969:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4505,"name":"uint256","nodeType":"ElementaryTypeName","src":"17969:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17968:13:19"},"scope":4592,"src":"17883:197:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4522,"nodeType":"Block","src":"18384:98:19","statements":[{"AST":{"nativeSrc":"18403:73:19","nodeType":"YulBlock","src":"18403:73:19","statements":[{"nativeSrc":"18417:49:19","nodeType":"YulAssignment","src":"18417:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18438:3:19","nodeType":"YulIdentifier","src":"18438:3:19"},{"kind":"number","nativeSrc":"18443:4:19","nodeType":"YulLiteral","src":"18443:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18434:3:19","nodeType":"YulIdentifier","src":"18434:3:19"},"nativeSrc":"18434:14:19","nodeType":"YulFunctionCall","src":"18434:14:19"},{"arguments":[{"name":"pos","nativeSrc":"18454:3:19","nodeType":"YulIdentifier","src":"18454:3:19"},{"kind":"number","nativeSrc":"18459:4:19","nodeType":"YulLiteral","src":"18459:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18450:3:19","nodeType":"YulIdentifier","src":"18450:3:19"},"nativeSrc":"18450:14:19","nodeType":"YulFunctionCall","src":"18450:14:19"}],"functionName":{"name":"add","nativeSrc":"18430:3:19","nodeType":"YulIdentifier","src":"18430:3:19"},"nativeSrc":"18430:35:19","nodeType":"YulFunctionCall","src":"18430:35:19"}],"functionName":{"name":"mload","nativeSrc":"18424:5:19","nodeType":"YulIdentifier","src":"18424:5:19"},"nativeSrc":"18424:42:19","nodeType":"YulFunctionCall","src":"18424:42:19"},"variableNames":[{"name":"res","nativeSrc":"18417:3:19","nodeType":"YulIdentifier","src":"18417:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4514,"isOffset":false,"isSlot":false,"src":"18438:3:19","valueSize":1},{"declaration":4516,"isOffset":false,"isSlot":false,"src":"18454:3:19","valueSize":1},{"declaration":4519,"isOffset":false,"isSlot":false,"src":"18417:3:19","valueSize":1}],"id":4521,"nodeType":"InlineAssembly","src":"18394:82:19"}]},"documentation":{"id":4511,"nodeType":"StructuredDocumentation","src":"18086:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4523,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18291:18:19","nodeType":"FunctionDefinition","parameters":{"id":4517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4514,"mutability":"mutable","name":"arr","nameLocation":"18325:3:19","nodeType":"VariableDeclaration","scope":4523,"src":"18310:18:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_memory_ptr_$dyn_memory_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4512,"name":"bytes","nodeType":"ElementaryTypeName","src":"18310:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4513,"nodeType":"ArrayTypeName","src":"18310:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4516,"mutability":"mutable","name":"pos","nameLocation":"18338:3:19","nodeType":"VariableDeclaration","scope":4523,"src":"18330:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4515,"name":"uint256","nodeType":"ElementaryTypeName","src":"18330:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18309:33:19"},"returnParameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"res","nameLocation":"18379:3:19","nodeType":"VariableDeclaration","scope":4523,"src":"18366:16:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4518,"name":"bytes","nodeType":"ElementaryTypeName","src":"18366:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18365:18:19"},"scope":4592,"src":"18282:200:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4535,"nodeType":"Block","src":"18788:98:19","statements":[{"AST":{"nativeSrc":"18807:73:19","nodeType":"YulBlock","src":"18807:73:19","statements":[{"nativeSrc":"18821:49:19","nodeType":"YulAssignment","src":"18821:49:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nativeSrc":"18842:3:19","nodeType":"YulIdentifier","src":"18842:3:19"},{"kind":"number","nativeSrc":"18847:4:19","nodeType":"YulLiteral","src":"18847:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18838:3:19","nodeType":"YulIdentifier","src":"18838:3:19"},"nativeSrc":"18838:14:19","nodeType":"YulFunctionCall","src":"18838:14:19"},{"arguments":[{"name":"pos","nativeSrc":"18858:3:19","nodeType":"YulIdentifier","src":"18858:3:19"},{"kind":"number","nativeSrc":"18863:4:19","nodeType":"YulLiteral","src":"18863:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"18854:3:19","nodeType":"YulIdentifier","src":"18854:3:19"},"nativeSrc":"18854:14:19","nodeType":"YulFunctionCall","src":"18854:14:19"}],"functionName":{"name":"add","nativeSrc":"18834:3:19","nodeType":"YulIdentifier","src":"18834:3:19"},"nativeSrc":"18834:35:19","nodeType":"YulFunctionCall","src":"18834:35:19"}],"functionName":{"name":"mload","nativeSrc":"18828:5:19","nodeType":"YulIdentifier","src":"18828:5:19"},"nativeSrc":"18828:42:19","nodeType":"YulFunctionCall","src":"18828:42:19"},"variableNames":[{"name":"res","nativeSrc":"18821:3:19","nodeType":"YulIdentifier","src":"18821:3:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4527,"isOffset":false,"isSlot":false,"src":"18842:3:19","valueSize":1},{"declaration":4529,"isOffset":false,"isSlot":false,"src":"18858:3:19","valueSize":1},{"declaration":4532,"isOffset":false,"isSlot":false,"src":"18821:3:19","valueSize":1}],"id":4534,"nodeType":"InlineAssembly","src":"18798:82:19"}]},"documentation":{"id":4524,"nodeType":"StructuredDocumentation","src":"18488:191:19","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":4536,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"18693:18:19","nodeType":"FunctionDefinition","parameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4527,"mutability":"mutable","name":"arr","nameLocation":"18728:3:19","nodeType":"VariableDeclaration","scope":4536,"src":"18712:19:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_string_memory_ptr_$dyn_memory_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4525,"name":"string","nodeType":"ElementaryTypeName","src":"18712:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4526,"nodeType":"ArrayTypeName","src":"18712:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4529,"mutability":"mutable","name":"pos","nameLocation":"18741:3:19","nodeType":"VariableDeclaration","scope":4536,"src":"18733:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4528,"name":"uint256","nodeType":"ElementaryTypeName","src":"18733:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18711:34:19"},"returnParameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"res","nameLocation":"18783:3:19","nodeType":"VariableDeclaration","scope":4536,"src":"18769:17:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4531,"name":"string","nodeType":"ElementaryTypeName","src":"18769:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"18768:19:19"},"scope":4592,"src":"18684:202:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4546,"nodeType":"Block","src":"19202:88:19","statements":[{"AST":{"nativeSrc":"19237:47:19","nodeType":"YulBlock","src":"19237:47:19","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"19258:10:19","nodeType":"YulIdentifier","src":"19258:10:19"},{"name":"len","nativeSrc":"19270:3:19","nodeType":"YulIdentifier","src":"19270:3:19"}],"functionName":{"name":"sstore","nativeSrc":"19251:6:19","nodeType":"YulIdentifier","src":"19251:6:19"},"nativeSrc":"19251:23:19","nodeType":"YulFunctionCall","src":"19251:23:19"},"nativeSrc":"19251:23:19","nodeType":"YulExpressionStatement","src":"19251:23:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4540,"isOffset":false,"isSlot":true,"src":"19258:10:19","suffix":"slot","valueSize":1},{"declaration":4542,"isOffset":false,"isSlot":false,"src":"19270:3:19","valueSize":1}],"flags":["memory-safe"],"id":4545,"nodeType":"InlineAssembly","src":"19212:72:19"}]},"documentation":{"id":4537,"nodeType":"StructuredDocumentation","src":"18892:233:19","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4547,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19139:15:19","nodeType":"FunctionDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4540,"mutability":"mutable","name":"array","nameLocation":"19173:5:19","nodeType":"VariableDeclaration","scope":4547,"src":"19155:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4538,"name":"address","nodeType":"ElementaryTypeName","src":"19155:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4539,"nodeType":"ArrayTypeName","src":"19155:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4542,"mutability":"mutable","name":"len","nameLocation":"19188:3:19","nodeType":"VariableDeclaration","scope":4547,"src":"19180:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4541,"name":"uint256","nodeType":"ElementaryTypeName","src":"19180:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19154:38:19"},"returnParameters":{"id":4544,"nodeType":"ParameterList","parameters":[],"src":"19202:0:19"},"scope":4592,"src":"19130:160:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4557,"nodeType":"Block","src":"19606:88:19","statements":[{"AST":{"nativeSrc":"19641:47:19","nodeType":"YulBlock","src":"19641:47:19","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"19662:10:19","nodeType":"YulIdentifier","src":"19662:10:19"},{"name":"len","nativeSrc":"19674:3:19","nodeType":"YulIdentifier","src":"19674:3:19"}],"functionName":{"name":"sstore","nativeSrc":"19655:6:19","nodeType":"YulIdentifier","src":"19655:6:19"},"nativeSrc":"19655:23:19","nodeType":"YulFunctionCall","src":"19655:23:19"},"nativeSrc":"19655:23:19","nodeType":"YulExpressionStatement","src":"19655:23:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4551,"isOffset":false,"isSlot":true,"src":"19662:10:19","suffix":"slot","valueSize":1},{"declaration":4553,"isOffset":false,"isSlot":false,"src":"19674:3:19","valueSize":1}],"flags":["memory-safe"],"id":4556,"nodeType":"InlineAssembly","src":"19616:72:19"}]},"documentation":{"id":4548,"nodeType":"StructuredDocumentation","src":"19296:233:19","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4558,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19543:15:19","nodeType":"FunctionDefinition","parameters":{"id":4554,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4551,"mutability":"mutable","name":"array","nameLocation":"19577:5:19","nodeType":"VariableDeclaration","scope":4558,"src":"19559:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4549,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19559:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4550,"nodeType":"ArrayTypeName","src":"19559:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":4553,"mutability":"mutable","name":"len","nameLocation":"19592:3:19","nodeType":"VariableDeclaration","scope":4558,"src":"19584:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4552,"name":"uint256","nodeType":"ElementaryTypeName","src":"19584:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19558:38:19"},"returnParameters":{"id":4555,"nodeType":"ParameterList","parameters":[],"src":"19606:0:19"},"scope":4592,"src":"19534:160:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4568,"nodeType":"Block","src":"20010:88:19","statements":[{"AST":{"nativeSrc":"20045:47:19","nodeType":"YulBlock","src":"20045:47:19","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20066:10:19","nodeType":"YulIdentifier","src":"20066:10:19"},{"name":"len","nativeSrc":"20078:3:19","nodeType":"YulIdentifier","src":"20078:3:19"}],"functionName":{"name":"sstore","nativeSrc":"20059:6:19","nodeType":"YulIdentifier","src":"20059:6:19"},"nativeSrc":"20059:23:19","nodeType":"YulFunctionCall","src":"20059:23:19"},"nativeSrc":"20059:23:19","nodeType":"YulExpressionStatement","src":"20059:23:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4562,"isOffset":false,"isSlot":true,"src":"20066:10:19","suffix":"slot","valueSize":1},{"declaration":4564,"isOffset":false,"isSlot":false,"src":"20078:3:19","valueSize":1}],"flags":["memory-safe"],"id":4567,"nodeType":"InlineAssembly","src":"20020:72:19"}]},"documentation":{"id":4559,"nodeType":"StructuredDocumentation","src":"19700:233:19","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4569,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"19947:15:19","nodeType":"FunctionDefinition","parameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4562,"mutability":"mutable","name":"array","nameLocation":"19981:5:19","nodeType":"VariableDeclaration","scope":4569,"src":"19963:23:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4560,"name":"uint256","nodeType":"ElementaryTypeName","src":"19963:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4561,"nodeType":"ArrayTypeName","src":"19963:9:19","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":4564,"mutability":"mutable","name":"len","nameLocation":"19996:3:19","nodeType":"VariableDeclaration","scope":4569,"src":"19988:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"19988:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"19962:38:19"},"returnParameters":{"id":4566,"nodeType":"ParameterList","parameters":[],"src":"20010:0:19"},"scope":4592,"src":"19938:160:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4579,"nodeType":"Block","src":"20412:88:19","statements":[{"AST":{"nativeSrc":"20447:47:19","nodeType":"YulBlock","src":"20447:47:19","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20468:10:19","nodeType":"YulIdentifier","src":"20468:10:19"},{"name":"len","nativeSrc":"20480:3:19","nodeType":"YulIdentifier","src":"20480:3:19"}],"functionName":{"name":"sstore","nativeSrc":"20461:6:19","nodeType":"YulIdentifier","src":"20461:6:19"},"nativeSrc":"20461:23:19","nodeType":"YulFunctionCall","src":"20461:23:19"},"nativeSrc":"20461:23:19","nodeType":"YulExpressionStatement","src":"20461:23:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4573,"isOffset":false,"isSlot":true,"src":"20468:10:19","suffix":"slot","valueSize":1},{"declaration":4575,"isOffset":false,"isSlot":false,"src":"20480:3:19","valueSize":1}],"flags":["memory-safe"],"id":4578,"nodeType":"InlineAssembly","src":"20422:72:19"}]},"documentation":{"id":4570,"nodeType":"StructuredDocumentation","src":"20104:233:19","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4580,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20351:15:19","nodeType":"FunctionDefinition","parameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4573,"mutability":"mutable","name":"array","nameLocation":"20383:5:19","nodeType":"VariableDeclaration","scope":4580,"src":"20367:21:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":4571,"name":"bytes","nodeType":"ElementaryTypeName","src":"20367:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":4572,"nodeType":"ArrayTypeName","src":"20367:7:19","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":4575,"mutability":"mutable","name":"len","nameLocation":"20398:3:19","nodeType":"VariableDeclaration","scope":4580,"src":"20390:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4574,"name":"uint256","nodeType":"ElementaryTypeName","src":"20390:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20366:36:19"},"returnParameters":{"id":4577,"nodeType":"ParameterList","parameters":[],"src":"20412:0:19"},"scope":4592,"src":"20342:158:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4590,"nodeType":"Block","src":"20815:88:19","statements":[{"AST":{"nativeSrc":"20850:47:19","nodeType":"YulBlock","src":"20850:47:19","statements":[{"expression":{"arguments":[{"name":"array.slot","nativeSrc":"20871:10:19","nodeType":"YulIdentifier","src":"20871:10:19"},{"name":"len","nativeSrc":"20883:3:19","nodeType":"YulIdentifier","src":"20883:3:19"}],"functionName":{"name":"sstore","nativeSrc":"20864:6:19","nodeType":"YulIdentifier","src":"20864:6:19"},"nativeSrc":"20864:23:19","nodeType":"YulFunctionCall","src":"20864:23:19"},"nativeSrc":"20864:23:19","nodeType":"YulExpressionStatement","src":"20864:23:19"}]},"evmVersion":"paris","externalReferences":[{"declaration":4584,"isOffset":false,"isSlot":true,"src":"20871:10:19","suffix":"slot","valueSize":1},{"declaration":4586,"isOffset":false,"isSlot":false,"src":"20883:3:19","valueSize":1}],"flags":["memory-safe"],"id":4589,"nodeType":"InlineAssembly","src":"20825:72:19"}]},"documentation":{"id":4581,"nodeType":"StructuredDocumentation","src":"20506:233:19","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":4591,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"20753:15:19","nodeType":"FunctionDefinition","parameters":{"id":4587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"mutability":"mutable","name":"array","nameLocation":"20786:5:19","nodeType":"VariableDeclaration","scope":4591,"src":"20769:22:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":4582,"name":"string","nodeType":"ElementaryTypeName","src":"20769:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":4583,"nodeType":"ArrayTypeName","src":"20769:8:19","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":4586,"mutability":"mutable","name":"len","nameLocation":"20801:3:19","nodeType":"VariableDeclaration","scope":4591,"src":"20793:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4585,"name":"uint256","nodeType":"ElementaryTypeName","src":"20793:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20768:37:19"},"returnParameters":{"id":4588,"nodeType":"ParameterList","parameters":[],"src":"20815:0:19"},"scope":4592,"src":"20744:159:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4593,"src":"459:20446:19","usedErrors":[],"usedEvents":[]}],"src":"183:20723:19"},"id":19},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[4624]},"id":4625,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4594,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":4595,"nodeType":"StructuredDocumentation","src":"131:92:20","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":4624,"linearizedBaseContracts":[4624],"name":"Comparators","nameLocation":"232:11:20","nodeType":"ContractDefinition","nodes":[{"body":{"id":4608,"nodeType":"Block","src":"313:29:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4604,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"330:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4605,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4599,"src":"334:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4603,"id":4607,"nodeType":"Return","src":"323:12:20"}]},"id":4609,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:20","nodeType":"FunctionDefinition","parameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4597,"mutability":"mutable","name":"a","nameLocation":"270:1:20","nodeType":"VariableDeclaration","scope":4609,"src":"262:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4596,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4599,"mutability":"mutable","name":"b","nameLocation":"281:1:20","nodeType":"VariableDeclaration","scope":4609,"src":"273:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:20"},"returnParameters":{"id":4603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4602,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4609,"src":"307:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4601,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:20"},"scope":4624,"src":"250:92:20","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4622,"nodeType":"Block","src":"411:29:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4618,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4611,"src":"428:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4619,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4613,"src":"432:1:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4617,"id":4621,"nodeType":"Return","src":"421:12:20"}]},"id":4623,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:20","nodeType":"FunctionDefinition","parameters":{"id":4614,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4611,"mutability":"mutable","name":"a","nameLocation":"368:1:20","nodeType":"VariableDeclaration","scope":4623,"src":"360:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4610,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4613,"mutability":"mutable","name":"b","nameLocation":"379:1:20","nodeType":"VariableDeclaration","scope":4623,"src":"371:9:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4612,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:20"},"returnParameters":{"id":4617,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4616,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4623,"src":"405:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4615,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:20"},"scope":4624,"src":"348:92:20","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4625,"src":"224:218:20","usedErrors":[],"usedEvents":[]}],"src":"105:338:20"},"id":20},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[4654]},"id":4655,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4626,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:21"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":4627,"nodeType":"StructuredDocumentation","src":"127:496:21","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":4654,"linearizedBaseContracts":[4654],"name":"Context","nameLocation":"642:7:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":4635,"nodeType":"Block","src":"718:34:21","statements":[{"expression":{"expression":{"id":4632,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:21","memberName":"sender","nodeType":"MemberAccess","src":"735:10:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4631,"id":4634,"nodeType":"Return","src":"728:17:21"}]},"id":4636,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:21","nodeType":"FunctionDefinition","parameters":{"id":4628,"nodeType":"ParameterList","parameters":[],"src":"675:2:21"},"returnParameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4636,"src":"709:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4629,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:21"},"scope":4654,"src":"656:96:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4644,"nodeType":"Block","src":"825:32:21","statements":[{"expression":{"expression":{"id":4641,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:21","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:21","memberName":"data","nodeType":"MemberAccess","src":"842:8:21","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":4640,"id":4643,"nodeType":"Return","src":"835:15:21"}]},"id":4645,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:21","nodeType":"FunctionDefinition","parameters":{"id":4637,"nodeType":"ParameterList","parameters":[],"src":"775:2:21"},"returnParameters":{"id":4640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4645,"src":"809:14:21","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4638,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:21"},"scope":4654,"src":"758:99:21","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":4652,"nodeType":"Block","src":"935:25:21","statements":[{"expression":{"hexValue":"30","id":4650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4649,"id":4651,"nodeType":"Return","src":"945:8:21"}]},"id":4653,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:21","nodeType":"FunctionDefinition","parameters":{"id":4646,"nodeType":"ParameterList","parameters":[],"src":"892:2:21"},"returnParameters":{"id":4649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4653,"src":"926:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4647,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:21"},"scope":4654,"src":"863:97:21","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":4655,"src":"624:338:21","usedErrors":[],"usedEvents":[]}],"src":"101:862:21"},"id":21},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[4706]},"id":4707,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4656,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":4657,"nodeType":"StructuredDocumentation","src":"125:489:22","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":4706,"linearizedBaseContracts":[4706],"name":"Panic","nameLocation":"665:5:22","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":4658,"nodeType":"StructuredDocumentation","src":"677:36:22","text":"@dev generic / unspecified error"},"id":4661,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:22","nodeType":"VariableDeclaration","scope":4706,"src":"718:40:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4659,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":4662,"nodeType":"StructuredDocumentation","src":"764:37:22","text":"@dev used by the assert() builtin"},"id":4665,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:22","nodeType":"VariableDeclaration","scope":4706,"src":"806:39:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4663,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":4666,"nodeType":"StructuredDocumentation","src":"851:41:22","text":"@dev arithmetic underflow or overflow"},"id":4669,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:22","nodeType":"VariableDeclaration","scope":4706,"src":"897:47:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4667,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":4668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:22","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":4670,"nodeType":"StructuredDocumentation","src":"950:35:22","text":"@dev division or modulo by zero"},"id":4673,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:22","nodeType":"VariableDeclaration","scope":4706,"src":"990:49:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4671,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:22","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":4674,"nodeType":"StructuredDocumentation","src":"1045:30:22","text":"@dev enum conversion error"},"id":4677,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:22","nodeType":"VariableDeclaration","scope":4706,"src":"1080:54:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4675,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:22","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":4678,"nodeType":"StructuredDocumentation","src":"1140:36:22","text":"@dev invalid encoding in storage"},"id":4681,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:22","nodeType":"VariableDeclaration","scope":4706,"src":"1181:55:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4679,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:22","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":4682,"nodeType":"StructuredDocumentation","src":"1242:24:22","text":"@dev empty array pop"},"id":4685,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:22","nodeType":"VariableDeclaration","scope":4706,"src":"1271:48:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4683,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":4684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:22","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":4686,"nodeType":"StructuredDocumentation","src":"1325:35:22","text":"@dev array out of bounds access"},"id":4689,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:22","nodeType":"VariableDeclaration","scope":4706,"src":"1365:52:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4687,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:22","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":4690,"nodeType":"StructuredDocumentation","src":"1423:65:22","text":"@dev resource error (too large allocation or too large array)"},"id":4693,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:22","nodeType":"VariableDeclaration","scope":4706,"src":"1493:47:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4691,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:22","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":4694,"nodeType":"StructuredDocumentation","src":"1546:42:22","text":"@dev calling invalid internal function"},"id":4697,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:22","nodeType":"VariableDeclaration","scope":4706,"src":"1593:58:22","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4695,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":4696,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:22","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":4704,"nodeType":"Block","src":"1819:151:22","statements":[{"AST":{"nativeSrc":"1854:110:22","nodeType":"YulBlock","src":"1854:110:22","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:22","nodeType":"YulLiteral","src":"1875:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:22","nodeType":"YulLiteral","src":"1881:10:22","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:22","nodeType":"YulIdentifier","src":"1868:6:22"},"nativeSrc":"1868:24:22","nodeType":"YulFunctionCall","src":"1868:24:22"},"nativeSrc":"1868:24:22","nodeType":"YulExpressionStatement","src":"1868:24:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:22","nodeType":"YulLiteral","src":"1912:4:22","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:22","nodeType":"YulIdentifier","src":"1918:4:22"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:22","nodeType":"YulIdentifier","src":"1905:6:22"},"nativeSrc":"1905:18:22","nodeType":"YulFunctionCall","src":"1905:18:22"},"nativeSrc":"1905:18:22","nodeType":"YulExpressionStatement","src":"1905:18:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:22","nodeType":"YulLiteral","src":"1943:4:22","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:22","nodeType":"YulLiteral","src":"1949:4:22","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:22","nodeType":"YulIdentifier","src":"1936:6:22"},"nativeSrc":"1936:18:22","nodeType":"YulFunctionCall","src":"1936:18:22"},"nativeSrc":"1936:18:22","nodeType":"YulExpressionStatement","src":"1936:18:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":4700,"isOffset":false,"isSlot":false,"src":"1918:4:22","valueSize":1}],"flags":["memory-safe"],"id":4703,"nodeType":"InlineAssembly","src":"1829:135:22"}]},"documentation":{"id":4698,"nodeType":"StructuredDocumentation","src":"1658:113:22","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":4705,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:22","nodeType":"FunctionDefinition","parameters":{"id":4701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4700,"mutability":"mutable","name":"code","nameLocation":"1799:4:22","nodeType":"VariableDeclaration","scope":4705,"src":"1791:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4699,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:22"},"returnParameters":{"id":4702,"nodeType":"ParameterList","parameters":[],"src":"1819:0:22"},"scope":4706,"src":"1776:194:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4707,"src":"657:1315:22","usedErrors":[],"usedEvents":[]}],"src":"99:1874:22"},"id":22},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[4775]},"id":4776,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4708,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:23"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":4709,"nodeType":"StructuredDocumentation","src":"135:894:23","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":4775,"linearizedBaseContracts":[4775],"name":"ReentrancyGuard","nameLocation":"1048:15:23","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":4712,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:23","nodeType":"VariableDeclaration","scope":4775,"src":"1818:40:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":4715,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:23","nodeType":"VariableDeclaration","scope":4775,"src":"1864:36:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4713,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:23","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":4717,"mutability":"mutable","name":"_status","nameLocation":"1923:7:23","nodeType":"VariableDeclaration","scope":4775,"src":"1907:23:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"documentation":{"id":4718,"nodeType":"StructuredDocumentation","src":"1937:52:23","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","id":4720,"name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:23","nodeType":"ErrorDefinition","parameters":{"id":4719,"nodeType":"ParameterList","parameters":[],"src":"2028:2:23"},"src":"1994:37:23"},{"body":{"id":4727,"nodeType":"Block","src":"2051:38:23","statements":[{"expression":{"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4723,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"2061:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4724,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"2071:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4726,"nodeType":"ExpressionStatement","src":"2061:21:23"}]},"id":4728,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4721,"nodeType":"ParameterList","parameters":[],"src":"2048:2:23"},"returnParameters":{"id":4722,"nodeType":"ParameterList","parameters":[],"src":"2051:0:23"},"scope":4775,"src":"2037:52:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4738,"nodeType":"Block","src":"2490:79:23","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4731,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4755,"src":"2500:19:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4733,"nodeType":"ExpressionStatement","src":"2500:21:23"},{"id":4734,"nodeType":"PlaceholderStatement","src":"2531:1:23"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":4735,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4763,"src":"2542:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4737,"nodeType":"ExpressionStatement","src":"2542:20:23"}]},"documentation":{"id":4729,"nodeType":"StructuredDocumentation","src":"2095:366:23","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":4739,"name":"nonReentrant","nameLocation":"2475:12:23","nodeType":"ModifierDefinition","parameters":{"id":4730,"nodeType":"ParameterList","parameters":[],"src":"2487:2:23"},"src":"2466:103:23","virtual":false,"visibility":"internal"},{"body":{"id":4754,"nodeType":"Block","src":"2614:268:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4742,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"2702:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4743,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"2713:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4749,"nodeType":"IfStatement","src":"2698:86:23","trueBody":{"id":4748,"nodeType":"Block","src":"2722:62:23","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4745,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4720,"src":"2743:28:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":4746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4747,"nodeType":"RevertStatement","src":"2736:37:23"}]}},{"expression":{"id":4752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4750,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"2858:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4751,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"2868:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4753,"nodeType":"ExpressionStatement","src":"2858:17:23"}]},"id":4755,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:23","nodeType":"FunctionDefinition","parameters":{"id":4740,"nodeType":"ParameterList","parameters":[],"src":"2603:2:23"},"returnParameters":{"id":4741,"nodeType":"ParameterList","parameters":[],"src":"2614:0:23"},"scope":4775,"src":"2575:307:23","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4762,"nodeType":"Block","src":"2926:170:23","statements":[{"expression":{"id":4760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4758,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"3068:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4759,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4712,"src":"3078:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4761,"nodeType":"ExpressionStatement","src":"3068:21:23"}]},"id":4763,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:23","nodeType":"FunctionDefinition","parameters":{"id":4756,"nodeType":"ParameterList","parameters":[],"src":"2915:2:23"},"returnParameters":{"id":4757,"nodeType":"ParameterList","parameters":[],"src":"2926:0:23"},"scope":4775,"src":"2888:208:23","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":4773,"nodeType":"Block","src":"3339:42:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4769,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4717,"src":"3356:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4770,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4715,"src":"3367:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4768,"id":4772,"nodeType":"Return","src":"3349:25:23"}]},"documentation":{"id":4764,"nodeType":"StructuredDocumentation","src":"3102:168:23","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":4774,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:23","nodeType":"FunctionDefinition","parameters":{"id":4765,"nodeType":"ParameterList","parameters":[],"src":"3307:2:23"},"returnParameters":{"id":4768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4767,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4774,"src":"3333:4:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4766,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:23"},"scope":4775,"src":"3275:106:23","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4776,"src":"1030:2353:23","usedErrors":[4720],"usedEvents":[]}],"src":"109:3275:23"},"id":23},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[4905]},"id":4906,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4777,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:24"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":4778,"nodeType":"StructuredDocumentation","src":"225:1373:24","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":4905,"linearizedBaseContracts":[4905],"name":"SlotDerivation","nameLocation":"1607:14:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":4787,"nodeType":"Block","src":"1790:194:24","statements":[{"AST":{"nativeSrc":"1825:153:24","nodeType":"YulBlock","src":"1825:153:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1846:4:24","nodeType":"YulLiteral","src":"1846:4:24","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nativeSrc":"1870:9:24","nodeType":"YulIdentifier","src":"1870:9:24"},{"kind":"number","nativeSrc":"1881:4:24","nodeType":"YulLiteral","src":"1881:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1866:3:24","nodeType":"YulIdentifier","src":"1866:3:24"},"nativeSrc":"1866:20:24","nodeType":"YulFunctionCall","src":"1866:20:24"},{"arguments":[{"name":"namespace","nativeSrc":"1894:9:24","nodeType":"YulIdentifier","src":"1894:9:24"}],"functionName":{"name":"mload","nativeSrc":"1888:5:24","nodeType":"YulIdentifier","src":"1888:5:24"},"nativeSrc":"1888:16:24","nodeType":"YulFunctionCall","src":"1888:16:24"}],"functionName":{"name":"keccak256","nativeSrc":"1856:9:24","nodeType":"YulIdentifier","src":"1856:9:24"},"nativeSrc":"1856:49:24","nodeType":"YulFunctionCall","src":"1856:49:24"},{"kind":"number","nativeSrc":"1907:1:24","nodeType":"YulLiteral","src":"1907:1:24","type":"","value":"1"}],"functionName":{"name":"sub","nativeSrc":"1852:3:24","nodeType":"YulIdentifier","src":"1852:3:24"},"nativeSrc":"1852:57:24","nodeType":"YulFunctionCall","src":"1852:57:24"}],"functionName":{"name":"mstore","nativeSrc":"1839:6:24","nodeType":"YulIdentifier","src":"1839:6:24"},"nativeSrc":"1839:71:24","nodeType":"YulFunctionCall","src":"1839:71:24"},"nativeSrc":"1839:71:24","nodeType":"YulExpressionStatement","src":"1839:71:24"},{"nativeSrc":"1923:45:24","nodeType":"YulAssignment","src":"1923:45:24","value":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"1945:4:24","nodeType":"YulLiteral","src":"1945:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1951:4:24","nodeType":"YulLiteral","src":"1951:4:24","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"1935:9:24","nodeType":"YulIdentifier","src":"1935:9:24"},"nativeSrc":"1935:21:24","nodeType":"YulFunctionCall","src":"1935:21:24"},{"arguments":[{"kind":"number","nativeSrc":"1962:4:24","nodeType":"YulLiteral","src":"1962:4:24","type":"","value":"0xff"}],"functionName":{"name":"not","nativeSrc":"1958:3:24","nodeType":"YulIdentifier","src":"1958:3:24"},"nativeSrc":"1958:9:24","nodeType":"YulFunctionCall","src":"1958:9:24"}],"functionName":{"name":"and","nativeSrc":"1931:3:24","nodeType":"YulIdentifier","src":"1931:3:24"},"nativeSrc":"1931:37:24","nodeType":"YulFunctionCall","src":"1931:37:24"},"variableNames":[{"name":"slot","nativeSrc":"1923:4:24","nodeType":"YulIdentifier","src":"1923:4:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4781,"isOffset":false,"isSlot":false,"src":"1870:9:24","valueSize":1},{"declaration":4781,"isOffset":false,"isSlot":false,"src":"1894:9:24","valueSize":1},{"declaration":4784,"isOffset":false,"isSlot":false,"src":"1923:4:24","valueSize":1}],"flags":["memory-safe"],"id":4786,"nodeType":"InlineAssembly","src":"1800:178:24"}]},"documentation":{"id":4779,"nodeType":"StructuredDocumentation","src":"1628:74:24","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":4788,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:24","nodeType":"FunctionDefinition","parameters":{"id":4782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4781,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:24","nodeType":"VariableDeclaration","scope":4788,"src":"1728:23:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4780,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:24"},"returnParameters":{"id":4785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4784,"mutability":"mutable","name":"slot","nameLocation":"1784:4:24","nodeType":"VariableDeclaration","scope":4788,"src":"1776:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:24"},"scope":4905,"src":"1707:277:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4809,"nodeType":"Block","src":"2176:86:24","statements":[{"id":4808,"nodeType":"UncheckedBlock","src":"2186:70:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4802,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4791,"src":"2233:4:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4801,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4800,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:24","typeDescriptions":{}}},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4804,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4793,"src":"2241:3:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:24","typeDescriptions":{}}},"id":4806,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4797,"id":4807,"nodeType":"Return","src":"2210:35:24"}]}]},"documentation":{"id":4789,"nodeType":"StructuredDocumentation","src":"1990:99:24","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":4810,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:24","nodeType":"FunctionDefinition","parameters":{"id":4794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4791,"mutability":"mutable","name":"slot","nameLocation":"2118:4:24","nodeType":"VariableDeclaration","scope":4810,"src":"2110:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4790,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4793,"mutability":"mutable","name":"pos","nameLocation":"2132:3:24","nodeType":"VariableDeclaration","scope":4810,"src":"2124:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4792,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:24"},"returnParameters":{"id":4797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4796,"mutability":"mutable","name":"result","nameLocation":"2168:6:24","nodeType":"VariableDeclaration","scope":4810,"src":"2160:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4795,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:24"},"scope":4905,"src":"2094:168:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4819,"nodeType":"Block","src":"2465:127:24","statements":[{"AST":{"nativeSrc":"2500:86:24","nodeType":"YulBlock","src":"2500:86:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2521:4:24","nodeType":"YulLiteral","src":"2521:4:24","type":"","value":"0x00"},{"name":"slot","nativeSrc":"2527:4:24","nodeType":"YulIdentifier","src":"2527:4:24"}],"functionName":{"name":"mstore","nativeSrc":"2514:6:24","nodeType":"YulIdentifier","src":"2514:6:24"},"nativeSrc":"2514:18:24","nodeType":"YulFunctionCall","src":"2514:18:24"},"nativeSrc":"2514:18:24","nodeType":"YulExpressionStatement","src":"2514:18:24"},{"nativeSrc":"2545:31:24","nodeType":"YulAssignment","src":"2545:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"2565:4:24","nodeType":"YulLiteral","src":"2565:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2571:4:24","nodeType":"YulLiteral","src":"2571:4:24","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"2555:9:24","nodeType":"YulIdentifier","src":"2555:9:24"},"nativeSrc":"2555:21:24","nodeType":"YulFunctionCall","src":"2555:21:24"},"variableNames":[{"name":"result","nativeSrc":"2545:6:24","nodeType":"YulIdentifier","src":"2545:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4816,"isOffset":false,"isSlot":false,"src":"2545:6:24","valueSize":1},{"declaration":4813,"isOffset":false,"isSlot":false,"src":"2527:4:24","valueSize":1}],"flags":["memory-safe"],"id":4818,"nodeType":"InlineAssembly","src":"2475:111:24"}]},"documentation":{"id":4811,"nodeType":"StructuredDocumentation","src":"2268:118:24","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":4820,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:24","nodeType":"FunctionDefinition","parameters":{"id":4814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4813,"mutability":"mutable","name":"slot","nameLocation":"2420:4:24","nodeType":"VariableDeclaration","scope":4820,"src":"2412:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:24"},"returnParameters":{"id":4817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4816,"mutability":"mutable","name":"result","nameLocation":"2457:6:24","nodeType":"VariableDeclaration","scope":4820,"src":"2449:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4815,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:24"},"scope":4905,"src":"2391:201:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4831,"nodeType":"Block","src":"2770:179:24","statements":[{"AST":{"nativeSrc":"2805:138:24","nodeType":"YulBlock","src":"2805:138:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"2826:4:24","nodeType":"YulLiteral","src":"2826:4:24","type":"","value":"0x00"},{"arguments":[{"name":"key","nativeSrc":"2836:3:24","nodeType":"YulIdentifier","src":"2836:3:24"},{"arguments":[{"kind":"number","nativeSrc":"2845:2:24","nodeType":"YulLiteral","src":"2845:2:24","type":"","value":"96"},{"arguments":[{"kind":"number","nativeSrc":"2853:1:24","nodeType":"YulLiteral","src":"2853:1:24","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"2849:3:24","nodeType":"YulIdentifier","src":"2849:3:24"},"nativeSrc":"2849:6:24","nodeType":"YulFunctionCall","src":"2849:6:24"}],"functionName":{"name":"shr","nativeSrc":"2841:3:24","nodeType":"YulIdentifier","src":"2841:3:24"},"nativeSrc":"2841:15:24","nodeType":"YulFunctionCall","src":"2841:15:24"}],"functionName":{"name":"and","nativeSrc":"2832:3:24","nodeType":"YulIdentifier","src":"2832:3:24"},"nativeSrc":"2832:25:24","nodeType":"YulFunctionCall","src":"2832:25:24"}],"functionName":{"name":"mstore","nativeSrc":"2819:6:24","nodeType":"YulIdentifier","src":"2819:6:24"},"nativeSrc":"2819:39:24","nodeType":"YulFunctionCall","src":"2819:39:24"},"nativeSrc":"2819:39:24","nodeType":"YulExpressionStatement","src":"2819:39:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2878:4:24","nodeType":"YulLiteral","src":"2878:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"2884:4:24","nodeType":"YulIdentifier","src":"2884:4:24"}],"functionName":{"name":"mstore","nativeSrc":"2871:6:24","nodeType":"YulIdentifier","src":"2871:6:24"},"nativeSrc":"2871:18:24","nodeType":"YulFunctionCall","src":"2871:18:24"},"nativeSrc":"2871:18:24","nodeType":"YulExpressionStatement","src":"2871:18:24"},{"nativeSrc":"2902:31:24","nodeType":"YulAssignment","src":"2902:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"2922:4:24","nodeType":"YulLiteral","src":"2922:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"2928:4:24","nodeType":"YulLiteral","src":"2928:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"2912:9:24","nodeType":"YulIdentifier","src":"2912:9:24"},"nativeSrc":"2912:21:24","nodeType":"YulFunctionCall","src":"2912:21:24"},"variableNames":[{"name":"result","nativeSrc":"2902:6:24","nodeType":"YulIdentifier","src":"2902:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4825,"isOffset":false,"isSlot":false,"src":"2836:3:24","valueSize":1},{"declaration":4828,"isOffset":false,"isSlot":false,"src":"2902:6:24","valueSize":1},{"declaration":4823,"isOffset":false,"isSlot":false,"src":"2884:4:24","valueSize":1}],"flags":["memory-safe"],"id":4830,"nodeType":"InlineAssembly","src":"2780:163:24"}]},"documentation":{"id":4821,"nodeType":"StructuredDocumentation","src":"2598:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":4832,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:24","nodeType":"FunctionDefinition","parameters":{"id":4826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4823,"mutability":"mutable","name":"slot","nameLocation":"2712:4:24","nodeType":"VariableDeclaration","scope":4832,"src":"2704:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4822,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4825,"mutability":"mutable","name":"key","nameLocation":"2726:3:24","nodeType":"VariableDeclaration","scope":4832,"src":"2718:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4824,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:24"},"returnParameters":{"id":4829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4828,"mutability":"mutable","name":"result","nameLocation":"2762:6:24","nodeType":"VariableDeclaration","scope":4832,"src":"2754:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:24"},"scope":4905,"src":"2681:268:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4843,"nodeType":"Block","src":"3124:173:24","statements":[{"AST":{"nativeSrc":"3159:132:24","nodeType":"YulBlock","src":"3159:132:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3180:4:24","nodeType":"YulLiteral","src":"3180:4:24","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nativeSrc":"3200:3:24","nodeType":"YulIdentifier","src":"3200:3:24"}],"functionName":{"name":"iszero","nativeSrc":"3193:6:24","nodeType":"YulIdentifier","src":"3193:6:24"},"nativeSrc":"3193:11:24","nodeType":"YulFunctionCall","src":"3193:11:24"}],"functionName":{"name":"iszero","nativeSrc":"3186:6:24","nodeType":"YulIdentifier","src":"3186:6:24"},"nativeSrc":"3186:19:24","nodeType":"YulFunctionCall","src":"3186:19:24"}],"functionName":{"name":"mstore","nativeSrc":"3173:6:24","nodeType":"YulIdentifier","src":"3173:6:24"},"nativeSrc":"3173:33:24","nodeType":"YulFunctionCall","src":"3173:33:24"},"nativeSrc":"3173:33:24","nodeType":"YulExpressionStatement","src":"3173:33:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3226:4:24","nodeType":"YulLiteral","src":"3226:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3232:4:24","nodeType":"YulIdentifier","src":"3232:4:24"}],"functionName":{"name":"mstore","nativeSrc":"3219:6:24","nodeType":"YulIdentifier","src":"3219:6:24"},"nativeSrc":"3219:18:24","nodeType":"YulFunctionCall","src":"3219:18:24"},"nativeSrc":"3219:18:24","nodeType":"YulExpressionStatement","src":"3219:18:24"},{"nativeSrc":"3250:31:24","nodeType":"YulAssignment","src":"3250:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"3270:4:24","nodeType":"YulLiteral","src":"3270:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3276:4:24","nodeType":"YulLiteral","src":"3276:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3260:9:24","nodeType":"YulIdentifier","src":"3260:9:24"},"nativeSrc":"3260:21:24","nodeType":"YulFunctionCall","src":"3260:21:24"},"variableNames":[{"name":"result","nativeSrc":"3250:6:24","nodeType":"YulIdentifier","src":"3250:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4837,"isOffset":false,"isSlot":false,"src":"3200:3:24","valueSize":1},{"declaration":4840,"isOffset":false,"isSlot":false,"src":"3250:6:24","valueSize":1},{"declaration":4835,"isOffset":false,"isSlot":false,"src":"3232:4:24","valueSize":1}],"flags":["memory-safe"],"id":4842,"nodeType":"InlineAssembly","src":"3134:157:24"}]},"documentation":{"id":4833,"nodeType":"StructuredDocumentation","src":"2955:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":4844,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:24","nodeType":"FunctionDefinition","parameters":{"id":4838,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4835,"mutability":"mutable","name":"slot","nameLocation":"3069:4:24","nodeType":"VariableDeclaration","scope":4844,"src":"3061:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4837,"mutability":"mutable","name":"key","nameLocation":"3080:3:24","nodeType":"VariableDeclaration","scope":4844,"src":"3075:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4836,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:24"},"returnParameters":{"id":4841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4840,"mutability":"mutable","name":"result","nameLocation":"3116:6:24","nodeType":"VariableDeclaration","scope":4844,"src":"3108:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4839,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:24"},"scope":4905,"src":"3038:259:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4855,"nodeType":"Block","src":"3475:157:24","statements":[{"AST":{"nativeSrc":"3510:116:24","nodeType":"YulBlock","src":"3510:116:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3531:4:24","nodeType":"YulLiteral","src":"3531:4:24","type":"","value":"0x00"},{"name":"key","nativeSrc":"3537:3:24","nodeType":"YulIdentifier","src":"3537:3:24"}],"functionName":{"name":"mstore","nativeSrc":"3524:6:24","nodeType":"YulIdentifier","src":"3524:6:24"},"nativeSrc":"3524:17:24","nodeType":"YulFunctionCall","src":"3524:17:24"},"nativeSrc":"3524:17:24","nodeType":"YulExpressionStatement","src":"3524:17:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3561:4:24","nodeType":"YulLiteral","src":"3561:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3567:4:24","nodeType":"YulIdentifier","src":"3567:4:24"}],"functionName":{"name":"mstore","nativeSrc":"3554:6:24","nodeType":"YulIdentifier","src":"3554:6:24"},"nativeSrc":"3554:18:24","nodeType":"YulFunctionCall","src":"3554:18:24"},"nativeSrc":"3554:18:24","nodeType":"YulExpressionStatement","src":"3554:18:24"},{"nativeSrc":"3585:31:24","nodeType":"YulAssignment","src":"3585:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"3605:4:24","nodeType":"YulLiteral","src":"3605:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3611:4:24","nodeType":"YulLiteral","src":"3611:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3595:9:24","nodeType":"YulIdentifier","src":"3595:9:24"},"nativeSrc":"3595:21:24","nodeType":"YulFunctionCall","src":"3595:21:24"},"variableNames":[{"name":"result","nativeSrc":"3585:6:24","nodeType":"YulIdentifier","src":"3585:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4849,"isOffset":false,"isSlot":false,"src":"3537:3:24","valueSize":1},{"declaration":4852,"isOffset":false,"isSlot":false,"src":"3585:6:24","valueSize":1},{"declaration":4847,"isOffset":false,"isSlot":false,"src":"3567:4:24","valueSize":1}],"flags":["memory-safe"],"id":4854,"nodeType":"InlineAssembly","src":"3485:141:24"}]},"documentation":{"id":4845,"nodeType":"StructuredDocumentation","src":"3303:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":4856,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:24","nodeType":"FunctionDefinition","parameters":{"id":4850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4847,"mutability":"mutable","name":"slot","nameLocation":"3417:4:24","nodeType":"VariableDeclaration","scope":4856,"src":"3409:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4846,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4849,"mutability":"mutable","name":"key","nameLocation":"3431:3:24","nodeType":"VariableDeclaration","scope":4856,"src":"3423:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4848,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:24"},"returnParameters":{"id":4853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4852,"mutability":"mutable","name":"result","nameLocation":"3467:6:24","nodeType":"VariableDeclaration","scope":4856,"src":"3459:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4851,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:24"},"scope":4905,"src":"3386:246:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4867,"nodeType":"Block","src":"3810:157:24","statements":[{"AST":{"nativeSrc":"3845:116:24","nodeType":"YulBlock","src":"3845:116:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3866:4:24","nodeType":"YulLiteral","src":"3866:4:24","type":"","value":"0x00"},{"name":"key","nativeSrc":"3872:3:24","nodeType":"YulIdentifier","src":"3872:3:24"}],"functionName":{"name":"mstore","nativeSrc":"3859:6:24","nodeType":"YulIdentifier","src":"3859:6:24"},"nativeSrc":"3859:17:24","nodeType":"YulFunctionCall","src":"3859:17:24"},"nativeSrc":"3859:17:24","nodeType":"YulExpressionStatement","src":"3859:17:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"3896:4:24","nodeType":"YulLiteral","src":"3896:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"3902:4:24","nodeType":"YulIdentifier","src":"3902:4:24"}],"functionName":{"name":"mstore","nativeSrc":"3889:6:24","nodeType":"YulIdentifier","src":"3889:6:24"},"nativeSrc":"3889:18:24","nodeType":"YulFunctionCall","src":"3889:18:24"},"nativeSrc":"3889:18:24","nodeType":"YulExpressionStatement","src":"3889:18:24"},{"nativeSrc":"3920:31:24","nodeType":"YulAssignment","src":"3920:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"3940:4:24","nodeType":"YulLiteral","src":"3940:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"3946:4:24","nodeType":"YulLiteral","src":"3946:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"3930:9:24","nodeType":"YulIdentifier","src":"3930:9:24"},"nativeSrc":"3930:21:24","nodeType":"YulFunctionCall","src":"3930:21:24"},"variableNames":[{"name":"result","nativeSrc":"3920:6:24","nodeType":"YulIdentifier","src":"3920:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4861,"isOffset":false,"isSlot":false,"src":"3872:3:24","valueSize":1},{"declaration":4864,"isOffset":false,"isSlot":false,"src":"3920:6:24","valueSize":1},{"declaration":4859,"isOffset":false,"isSlot":false,"src":"3902:4:24","valueSize":1}],"flags":["memory-safe"],"id":4866,"nodeType":"InlineAssembly","src":"3820:141:24"}]},"documentation":{"id":4857,"nodeType":"StructuredDocumentation","src":"3638:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":4868,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:24","nodeType":"FunctionDefinition","parameters":{"id":4862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4859,"mutability":"mutable","name":"slot","nameLocation":"3752:4:24","nodeType":"VariableDeclaration","scope":4868,"src":"3744:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4858,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4861,"mutability":"mutable","name":"key","nameLocation":"3766:3:24","nodeType":"VariableDeclaration","scope":4868,"src":"3758:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4860,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:24"},"returnParameters":{"id":4865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4864,"mutability":"mutable","name":"result","nameLocation":"3802:6:24","nodeType":"VariableDeclaration","scope":4868,"src":"3794:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4863,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:24"},"scope":4905,"src":"3721:246:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4879,"nodeType":"Block","src":"4144:157:24","statements":[{"AST":{"nativeSrc":"4179:116:24","nodeType":"YulBlock","src":"4179:116:24","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4200:4:24","nodeType":"YulLiteral","src":"4200:4:24","type":"","value":"0x00"},{"name":"key","nativeSrc":"4206:3:24","nodeType":"YulIdentifier","src":"4206:3:24"}],"functionName":{"name":"mstore","nativeSrc":"4193:6:24","nodeType":"YulIdentifier","src":"4193:6:24"},"nativeSrc":"4193:17:24","nodeType":"YulFunctionCall","src":"4193:17:24"},"nativeSrc":"4193:17:24","nodeType":"YulExpressionStatement","src":"4193:17:24"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4230:4:24","nodeType":"YulLiteral","src":"4230:4:24","type":"","value":"0x20"},{"name":"slot","nativeSrc":"4236:4:24","nodeType":"YulIdentifier","src":"4236:4:24"}],"functionName":{"name":"mstore","nativeSrc":"4223:6:24","nodeType":"YulIdentifier","src":"4223:6:24"},"nativeSrc":"4223:18:24","nodeType":"YulFunctionCall","src":"4223:18:24"},"nativeSrc":"4223:18:24","nodeType":"YulExpressionStatement","src":"4223:18:24"},{"nativeSrc":"4254:31:24","nodeType":"YulAssignment","src":"4254:31:24","value":{"arguments":[{"kind":"number","nativeSrc":"4274:4:24","nodeType":"YulLiteral","src":"4274:4:24","type":"","value":"0x00"},{"kind":"number","nativeSrc":"4280:4:24","nodeType":"YulLiteral","src":"4280:4:24","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nativeSrc":"4264:9:24","nodeType":"YulIdentifier","src":"4264:9:24"},"nativeSrc":"4264:21:24","nodeType":"YulFunctionCall","src":"4264:21:24"},"variableNames":[{"name":"result","nativeSrc":"4254:6:24","nodeType":"YulIdentifier","src":"4254:6:24"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4873,"isOffset":false,"isSlot":false,"src":"4206:3:24","valueSize":1},{"declaration":4876,"isOffset":false,"isSlot":false,"src":"4254:6:24","valueSize":1},{"declaration":4871,"isOffset":false,"isSlot":false,"src":"4236:4:24","valueSize":1}],"flags":["memory-safe"],"id":4878,"nodeType":"InlineAssembly","src":"4154:141:24"}]},"documentation":{"id":4869,"nodeType":"StructuredDocumentation","src":"3973:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":4880,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:24","nodeType":"FunctionDefinition","parameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4871,"mutability":"mutable","name":"slot","nameLocation":"4087:4:24","nodeType":"VariableDeclaration","scope":4880,"src":"4079:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4870,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4873,"mutability":"mutable","name":"key","nameLocation":"4100:3:24","nodeType":"VariableDeclaration","scope":4880,"src":"4093:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4872,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:24"},"returnParameters":{"id":4877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4876,"mutability":"mutable","name":"result","nameLocation":"4136:6:24","nodeType":"VariableDeclaration","scope":4880,"src":"4128:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4875,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:24"},"scope":4905,"src":"4056:245:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4891,"nodeType":"Block","src":"4485:326:24","statements":[{"AST":{"nativeSrc":"4520:285:24","nodeType":"YulBlock","src":"4520:285:24","statements":[{"nativeSrc":"4534:24:24","nodeType":"YulVariableDeclaration","src":"4534:24:24","value":{"arguments":[{"name":"key","nativeSrc":"4554:3:24","nodeType":"YulIdentifier","src":"4554:3:24"}],"functionName":{"name":"mload","nativeSrc":"4548:5:24","nodeType":"YulIdentifier","src":"4548:5:24"},"nativeSrc":"4548:10:24","nodeType":"YulFunctionCall","src":"4548:10:24"},"variables":[{"name":"length","nativeSrc":"4538:6:24","nodeType":"YulTypedName","src":"4538:6:24","type":""}]},{"nativeSrc":"4571:27:24","nodeType":"YulVariableDeclaration","src":"4571:27:24","value":{"arguments":[{"name":"key","nativeSrc":"4588:3:24","nodeType":"YulIdentifier","src":"4588:3:24"},{"kind":"number","nativeSrc":"4593:4:24","nodeType":"YulLiteral","src":"4593:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4584:3:24","nodeType":"YulIdentifier","src":"4584:3:24"},"nativeSrc":"4584:14:24","nodeType":"YulFunctionCall","src":"4584:14:24"},"variables":[{"name":"begin","nativeSrc":"4575:5:24","nodeType":"YulTypedName","src":"4575:5:24","type":""}]},{"nativeSrc":"4611:29:24","nodeType":"YulVariableDeclaration","src":"4611:29:24","value":{"arguments":[{"name":"begin","nativeSrc":"4626:5:24","nodeType":"YulIdentifier","src":"4626:5:24"},{"name":"length","nativeSrc":"4633:6:24","nodeType":"YulIdentifier","src":"4633:6:24"}],"functionName":{"name":"add","nativeSrc":"4622:3:24","nodeType":"YulIdentifier","src":"4622:3:24"},"nativeSrc":"4622:18:24","nodeType":"YulFunctionCall","src":"4622:18:24"},"variables":[{"name":"end","nativeSrc":"4615:3:24","nodeType":"YulTypedName","src":"4615:3:24","type":""}]},{"nativeSrc":"4653:23:24","nodeType":"YulVariableDeclaration","src":"4653:23:24","value":{"arguments":[{"name":"end","nativeSrc":"4672:3:24","nodeType":"YulIdentifier","src":"4672:3:24"}],"functionName":{"name":"mload","nativeSrc":"4666:5:24","nodeType":"YulIdentifier","src":"4666:5:24"},"nativeSrc":"4666:10:24","nodeType":"YulFunctionCall","src":"4666:10:24"},"variables":[{"name":"cache","nativeSrc":"4657:5:24","nodeType":"YulTypedName","src":"4657:5:24","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4696:3:24","nodeType":"YulIdentifier","src":"4696:3:24"},{"name":"slot","nativeSrc":"4701:4:24","nodeType":"YulIdentifier","src":"4701:4:24"}],"functionName":{"name":"mstore","nativeSrc":"4689:6:24","nodeType":"YulIdentifier","src":"4689:6:24"},"nativeSrc":"4689:17:24","nodeType":"YulFunctionCall","src":"4689:17:24"},"nativeSrc":"4689:17:24","nodeType":"YulExpressionStatement","src":"4689:17:24"},{"nativeSrc":"4719:45:24","nodeType":"YulAssignment","src":"4719:45:24","value":{"arguments":[{"name":"begin","nativeSrc":"4739:5:24","nodeType":"YulIdentifier","src":"4739:5:24"},{"arguments":[{"name":"length","nativeSrc":"4750:6:24","nodeType":"YulIdentifier","src":"4750:6:24"},{"kind":"number","nativeSrc":"4758:4:24","nodeType":"YulLiteral","src":"4758:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4746:3:24","nodeType":"YulIdentifier","src":"4746:3:24"},"nativeSrc":"4746:17:24","nodeType":"YulFunctionCall","src":"4746:17:24"}],"functionName":{"name":"keccak256","nativeSrc":"4729:9:24","nodeType":"YulIdentifier","src":"4729:9:24"},"nativeSrc":"4729:35:24","nodeType":"YulFunctionCall","src":"4729:35:24"},"variableNames":[{"name":"result","nativeSrc":"4719:6:24","nodeType":"YulIdentifier","src":"4719:6:24"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"4784:3:24","nodeType":"YulIdentifier","src":"4784:3:24"},{"name":"cache","nativeSrc":"4789:5:24","nodeType":"YulIdentifier","src":"4789:5:24"}],"functionName":{"name":"mstore","nativeSrc":"4777:6:24","nodeType":"YulIdentifier","src":"4777:6:24"},"nativeSrc":"4777:18:24","nodeType":"YulFunctionCall","src":"4777:18:24"},"nativeSrc":"4777:18:24","nodeType":"YulExpressionStatement","src":"4777:18:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":4885,"isOffset":false,"isSlot":false,"src":"4554:3:24","valueSize":1},{"declaration":4885,"isOffset":false,"isSlot":false,"src":"4588:3:24","valueSize":1},{"declaration":4888,"isOffset":false,"isSlot":false,"src":"4719:6:24","valueSize":1},{"declaration":4883,"isOffset":false,"isSlot":false,"src":"4701:4:24","valueSize":1}],"flags":["memory-safe"],"id":4890,"nodeType":"InlineAssembly","src":"4495:310:24"}]},"documentation":{"id":4881,"nodeType":"StructuredDocumentation","src":"4307:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":4892,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:24","nodeType":"FunctionDefinition","parameters":{"id":4886,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4883,"mutability":"mutable","name":"slot","nameLocation":"4421:4:24","nodeType":"VariableDeclaration","scope":4892,"src":"4413:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4882,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4885,"mutability":"mutable","name":"key","nameLocation":"4441:3:24","nodeType":"VariableDeclaration","scope":4892,"src":"4427:17:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4884,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:24","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:24"},"returnParameters":{"id":4889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4888,"mutability":"mutable","name":"result","nameLocation":"4477:6:24","nodeType":"VariableDeclaration","scope":4892,"src":"4469:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:24"},"scope":4905,"src":"4390:421:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4903,"nodeType":"Block","src":"4994:326:24","statements":[{"AST":{"nativeSrc":"5029:285:24","nodeType":"YulBlock","src":"5029:285:24","statements":[{"nativeSrc":"5043:24:24","nodeType":"YulVariableDeclaration","src":"5043:24:24","value":{"arguments":[{"name":"key","nativeSrc":"5063:3:24","nodeType":"YulIdentifier","src":"5063:3:24"}],"functionName":{"name":"mload","nativeSrc":"5057:5:24","nodeType":"YulIdentifier","src":"5057:5:24"},"nativeSrc":"5057:10:24","nodeType":"YulFunctionCall","src":"5057:10:24"},"variables":[{"name":"length","nativeSrc":"5047:6:24","nodeType":"YulTypedName","src":"5047:6:24","type":""}]},{"nativeSrc":"5080:27:24","nodeType":"YulVariableDeclaration","src":"5080:27:24","value":{"arguments":[{"name":"key","nativeSrc":"5097:3:24","nodeType":"YulIdentifier","src":"5097:3:24"},{"kind":"number","nativeSrc":"5102:4:24","nodeType":"YulLiteral","src":"5102:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5093:3:24","nodeType":"YulIdentifier","src":"5093:3:24"},"nativeSrc":"5093:14:24","nodeType":"YulFunctionCall","src":"5093:14:24"},"variables":[{"name":"begin","nativeSrc":"5084:5:24","nodeType":"YulTypedName","src":"5084:5:24","type":""}]},{"nativeSrc":"5120:29:24","nodeType":"YulVariableDeclaration","src":"5120:29:24","value":{"arguments":[{"name":"begin","nativeSrc":"5135:5:24","nodeType":"YulIdentifier","src":"5135:5:24"},{"name":"length","nativeSrc":"5142:6:24","nodeType":"YulIdentifier","src":"5142:6:24"}],"functionName":{"name":"add","nativeSrc":"5131:3:24","nodeType":"YulIdentifier","src":"5131:3:24"},"nativeSrc":"5131:18:24","nodeType":"YulFunctionCall","src":"5131:18:24"},"variables":[{"name":"end","nativeSrc":"5124:3:24","nodeType":"YulTypedName","src":"5124:3:24","type":""}]},{"nativeSrc":"5162:23:24","nodeType":"YulVariableDeclaration","src":"5162:23:24","value":{"arguments":[{"name":"end","nativeSrc":"5181:3:24","nodeType":"YulIdentifier","src":"5181:3:24"}],"functionName":{"name":"mload","nativeSrc":"5175:5:24","nodeType":"YulIdentifier","src":"5175:5:24"},"nativeSrc":"5175:10:24","nodeType":"YulFunctionCall","src":"5175:10:24"},"variables":[{"name":"cache","nativeSrc":"5166:5:24","nodeType":"YulTypedName","src":"5166:5:24","type":""}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5205:3:24","nodeType":"YulIdentifier","src":"5205:3:24"},{"name":"slot","nativeSrc":"5210:4:24","nodeType":"YulIdentifier","src":"5210:4:24"}],"functionName":{"name":"mstore","nativeSrc":"5198:6:24","nodeType":"YulIdentifier","src":"5198:6:24"},"nativeSrc":"5198:17:24","nodeType":"YulFunctionCall","src":"5198:17:24"},"nativeSrc":"5198:17:24","nodeType":"YulExpressionStatement","src":"5198:17:24"},{"nativeSrc":"5228:45:24","nodeType":"YulAssignment","src":"5228:45:24","value":{"arguments":[{"name":"begin","nativeSrc":"5248:5:24","nodeType":"YulIdentifier","src":"5248:5:24"},{"arguments":[{"name":"length","nativeSrc":"5259:6:24","nodeType":"YulIdentifier","src":"5259:6:24"},{"kind":"number","nativeSrc":"5267:4:24","nodeType":"YulLiteral","src":"5267:4:24","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5255:3:24","nodeType":"YulIdentifier","src":"5255:3:24"},"nativeSrc":"5255:17:24","nodeType":"YulFunctionCall","src":"5255:17:24"}],"functionName":{"name":"keccak256","nativeSrc":"5238:9:24","nodeType":"YulIdentifier","src":"5238:9:24"},"nativeSrc":"5238:35:24","nodeType":"YulFunctionCall","src":"5238:35:24"},"variableNames":[{"name":"result","nativeSrc":"5228:6:24","nodeType":"YulIdentifier","src":"5228:6:24"}]},{"expression":{"arguments":[{"name":"end","nativeSrc":"5293:3:24","nodeType":"YulIdentifier","src":"5293:3:24"},{"name":"cache","nativeSrc":"5298:5:24","nodeType":"YulIdentifier","src":"5298:5:24"}],"functionName":{"name":"mstore","nativeSrc":"5286:6:24","nodeType":"YulIdentifier","src":"5286:6:24"},"nativeSrc":"5286:18:24","nodeType":"YulFunctionCall","src":"5286:18:24"},"nativeSrc":"5286:18:24","nodeType":"YulExpressionStatement","src":"5286:18:24"}]},"evmVersion":"paris","externalReferences":[{"declaration":4897,"isOffset":false,"isSlot":false,"src":"5063:3:24","valueSize":1},{"declaration":4897,"isOffset":false,"isSlot":false,"src":"5097:3:24","valueSize":1},{"declaration":4900,"isOffset":false,"isSlot":false,"src":"5228:6:24","valueSize":1},{"declaration":4895,"isOffset":false,"isSlot":false,"src":"5210:4:24","valueSize":1}],"flags":["memory-safe"],"id":4902,"nodeType":"InlineAssembly","src":"5004:310:24"}]},"documentation":{"id":4893,"nodeType":"StructuredDocumentation","src":"4817:78:24","text":" @dev Derive the location of a mapping element from the key."},"id":4904,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:24","nodeType":"FunctionDefinition","parameters":{"id":4898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4895,"mutability":"mutable","name":"slot","nameLocation":"4931:4:24","nodeType":"VariableDeclaration","scope":4904,"src":"4923:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4897,"mutability":"mutable","name":"key","nameLocation":"4950:3:24","nodeType":"VariableDeclaration","scope":4904,"src":"4937:16:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4896,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:24","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:24"},"returnParameters":{"id":4901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4900,"mutability":"mutable","name":"result","nameLocation":"4986:6:24","nodeType":"VariableDeclaration","scope":4904,"src":"4978:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4899,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:24"},"scope":4905,"src":"4900:420:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4906,"src":"1599:3723:24","usedErrors":[],"usedEvents":[]}],"src":"199:5124:24"},"id":24},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[5029]},"id":5030,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4907,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:25"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":4908,"nodeType":"StructuredDocumentation","src":"219:1187:25","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":5029,"linearizedBaseContracts":[5029],"name":"StorageSlot","nameLocation":"1415:11:25","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":4911,"members":[{"constant":false,"id":4910,"mutability":"mutable","name":"value","nameLocation":"1470:5:25","nodeType":"VariableDeclaration","scope":4911,"src":"1462:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4909,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:25","nodeType":"StructDefinition","scope":5029,"src":"1433:49:25","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":4914,"members":[{"constant":false,"id":4913,"mutability":"mutable","name":"value","nameLocation":"1522:5:25","nodeType":"VariableDeclaration","scope":4914,"src":"1517:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4912,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:25","nodeType":"StructDefinition","scope":5029,"src":"1488:46:25","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":4917,"members":[{"constant":false,"id":4916,"mutability":"mutable","name":"value","nameLocation":"1577:5:25","nodeType":"VariableDeclaration","scope":4917,"src":"1569:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4915,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:25","nodeType":"StructDefinition","scope":5029,"src":"1540:49:25","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":4920,"members":[{"constant":false,"id":4919,"mutability":"mutable","name":"value","nameLocation":"1632:5:25","nodeType":"VariableDeclaration","scope":4920,"src":"1624:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4918,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:25","nodeType":"StructDefinition","scope":5029,"src":"1595:49:25","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":4923,"members":[{"constant":false,"id":4922,"mutability":"mutable","name":"value","nameLocation":"1685:5:25","nodeType":"VariableDeclaration","scope":4923,"src":"1678:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4921,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:25","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:25","nodeType":"StructDefinition","scope":5029,"src":"1650:47:25","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":4926,"members":[{"constant":false,"id":4925,"mutability":"mutable","name":"value","nameLocation":"1738:5:25","nodeType":"VariableDeclaration","scope":4926,"src":"1731:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4924,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:25","nodeType":"StructDefinition","scope":5029,"src":"1703:47:25","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":4929,"members":[{"constant":false,"id":4928,"mutability":"mutable","name":"value","nameLocation":"1789:5:25","nodeType":"VariableDeclaration","scope":4929,"src":"1783:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":4927,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:25","nodeType":"StructDefinition","scope":5029,"src":"1756:45:25","visibility":"public"},{"body":{"id":4939,"nodeType":"Block","src":"1983:79:25","statements":[{"AST":{"nativeSrc":"2018:38:25","nodeType":"YulBlock","src":"2018:38:25","statements":[{"nativeSrc":"2032:14:25","nodeType":"YulAssignment","src":"2032:14:25","value":{"name":"slot","nativeSrc":"2042:4:25","nodeType":"YulIdentifier","src":"2042:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:25","nodeType":"YulIdentifier","src":"2032:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4936,"isOffset":false,"isSlot":true,"src":"2032:6:25","suffix":"slot","valueSize":1},{"declaration":4932,"isOffset":false,"isSlot":false,"src":"2042:4:25","valueSize":1}],"flags":["memory-safe"],"id":4938,"nodeType":"InlineAssembly","src":"1993:63:25"}]},"documentation":{"id":4930,"nodeType":"StructuredDocumentation","src":"1807:87:25","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":4940,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:25","nodeType":"FunctionDefinition","parameters":{"id":4933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4932,"mutability":"mutable","name":"slot","nameLocation":"1931:4:25","nodeType":"VariableDeclaration","scope":4940,"src":"1923:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4931,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:25"},"returnParameters":{"id":4937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4936,"mutability":"mutable","name":"r","nameLocation":"1980:1:25","nodeType":"VariableDeclaration","scope":4940,"src":"1960:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4911_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":4935,"nodeType":"UserDefinedTypeName","pathNode":{"id":4934,"name":"AddressSlot","nameLocations":["1960:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":4911,"src":"1960:11:25"},"referencedDeclaration":4911,"src":"1960:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$4911_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:25"},"scope":5029,"src":"1899:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4950,"nodeType":"Block","src":"2243:79:25","statements":[{"AST":{"nativeSrc":"2278:38:25","nodeType":"YulBlock","src":"2278:38:25","statements":[{"nativeSrc":"2292:14:25","nodeType":"YulAssignment","src":"2292:14:25","value":{"name":"slot","nativeSrc":"2302:4:25","nodeType":"YulIdentifier","src":"2302:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:25","nodeType":"YulIdentifier","src":"2292:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4947,"isOffset":false,"isSlot":true,"src":"2292:6:25","suffix":"slot","valueSize":1},{"declaration":4943,"isOffset":false,"isSlot":false,"src":"2302:4:25","valueSize":1}],"flags":["memory-safe"],"id":4949,"nodeType":"InlineAssembly","src":"2253:63:25"}]},"documentation":{"id":4941,"nodeType":"StructuredDocumentation","src":"2068:86:25","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":4951,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:25","nodeType":"FunctionDefinition","parameters":{"id":4944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4943,"mutability":"mutable","name":"slot","nameLocation":"2191:4:25","nodeType":"VariableDeclaration","scope":4951,"src":"2183:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4942,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:25"},"returnParameters":{"id":4948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4947,"mutability":"mutable","name":"r","nameLocation":"2240:1:25","nodeType":"VariableDeclaration","scope":4951,"src":"2220:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4914_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":4946,"nodeType":"UserDefinedTypeName","pathNode":{"id":4945,"name":"BooleanSlot","nameLocations":["2220:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":4914,"src":"2220:11:25"},"referencedDeclaration":4914,"src":"2220:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$4914_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:25"},"scope":5029,"src":"2159:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4961,"nodeType":"Block","src":"2503:79:25","statements":[{"AST":{"nativeSrc":"2538:38:25","nodeType":"YulBlock","src":"2538:38:25","statements":[{"nativeSrc":"2552:14:25","nodeType":"YulAssignment","src":"2552:14:25","value":{"name":"slot","nativeSrc":"2562:4:25","nodeType":"YulIdentifier","src":"2562:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:25","nodeType":"YulIdentifier","src":"2552:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4958,"isOffset":false,"isSlot":true,"src":"2552:6:25","suffix":"slot","valueSize":1},{"declaration":4954,"isOffset":false,"isSlot":false,"src":"2562:4:25","valueSize":1}],"flags":["memory-safe"],"id":4960,"nodeType":"InlineAssembly","src":"2513:63:25"}]},"documentation":{"id":4952,"nodeType":"StructuredDocumentation","src":"2328:86:25","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":4962,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:25","nodeType":"FunctionDefinition","parameters":{"id":4955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4954,"mutability":"mutable","name":"slot","nameLocation":"2451:4:25","nodeType":"VariableDeclaration","scope":4962,"src":"2443:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:25"},"returnParameters":{"id":4959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4958,"mutability":"mutable","name":"r","nameLocation":"2500:1:25","nodeType":"VariableDeclaration","scope":4962,"src":"2480:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4917_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":4957,"nodeType":"UserDefinedTypeName","pathNode":{"id":4956,"name":"Bytes32Slot","nameLocations":["2480:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":4917,"src":"2480:11:25"},"referencedDeclaration":4917,"src":"2480:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$4917_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:25"},"scope":5029,"src":"2419:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4972,"nodeType":"Block","src":"2763:79:25","statements":[{"AST":{"nativeSrc":"2798:38:25","nodeType":"YulBlock","src":"2798:38:25","statements":[{"nativeSrc":"2812:14:25","nodeType":"YulAssignment","src":"2812:14:25","value":{"name":"slot","nativeSrc":"2822:4:25","nodeType":"YulIdentifier","src":"2822:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:25","nodeType":"YulIdentifier","src":"2812:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4969,"isOffset":false,"isSlot":true,"src":"2812:6:25","suffix":"slot","valueSize":1},{"declaration":4965,"isOffset":false,"isSlot":false,"src":"2822:4:25","valueSize":1}],"flags":["memory-safe"],"id":4971,"nodeType":"InlineAssembly","src":"2773:63:25"}]},"documentation":{"id":4963,"nodeType":"StructuredDocumentation","src":"2588:86:25","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":4973,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:25","nodeType":"FunctionDefinition","parameters":{"id":4966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4965,"mutability":"mutable","name":"slot","nameLocation":"2711:4:25","nodeType":"VariableDeclaration","scope":4973,"src":"2703:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:25"},"returnParameters":{"id":4970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4969,"mutability":"mutable","name":"r","nameLocation":"2760:1:25","nodeType":"VariableDeclaration","scope":4973,"src":"2740:21:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4920_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":4968,"nodeType":"UserDefinedTypeName","pathNode":{"id":4967,"name":"Uint256Slot","nameLocations":["2740:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":4920,"src":"2740:11:25"},"referencedDeclaration":4920,"src":"2740:11:25","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$4920_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:25"},"scope":5029,"src":"2679:163:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4983,"nodeType":"Block","src":"3020:79:25","statements":[{"AST":{"nativeSrc":"3055:38:25","nodeType":"YulBlock","src":"3055:38:25","statements":[{"nativeSrc":"3069:14:25","nodeType":"YulAssignment","src":"3069:14:25","value":{"name":"slot","nativeSrc":"3079:4:25","nodeType":"YulIdentifier","src":"3079:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:25","nodeType":"YulIdentifier","src":"3069:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4980,"isOffset":false,"isSlot":true,"src":"3069:6:25","suffix":"slot","valueSize":1},{"declaration":4976,"isOffset":false,"isSlot":false,"src":"3079:4:25","valueSize":1}],"flags":["memory-safe"],"id":4982,"nodeType":"InlineAssembly","src":"3030:63:25"}]},"documentation":{"id":4974,"nodeType":"StructuredDocumentation","src":"2848:85:25","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":4984,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:25","nodeType":"FunctionDefinition","parameters":{"id":4977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4976,"mutability":"mutable","name":"slot","nameLocation":"2969:4:25","nodeType":"VariableDeclaration","scope":4984,"src":"2961:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:25"},"returnParameters":{"id":4981,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4980,"mutability":"mutable","name":"r","nameLocation":"3017:1:25","nodeType":"VariableDeclaration","scope":4984,"src":"2998:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4923_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":4979,"nodeType":"UserDefinedTypeName","pathNode":{"id":4978,"name":"Int256Slot","nameLocations":["2998:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4923,"src":"2998:10:25"},"referencedDeclaration":4923,"src":"2998:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$4923_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:25"},"scope":5029,"src":"2938:161:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4994,"nodeType":"Block","src":"3277:79:25","statements":[{"AST":{"nativeSrc":"3312:38:25","nodeType":"YulBlock","src":"3312:38:25","statements":[{"nativeSrc":"3326:14:25","nodeType":"YulAssignment","src":"3326:14:25","value":{"name":"slot","nativeSrc":"3336:4:25","nodeType":"YulIdentifier","src":"3336:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:25","nodeType":"YulIdentifier","src":"3326:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4991,"isOffset":false,"isSlot":true,"src":"3326:6:25","suffix":"slot","valueSize":1},{"declaration":4987,"isOffset":false,"isSlot":false,"src":"3336:4:25","valueSize":1}],"flags":["memory-safe"],"id":4993,"nodeType":"InlineAssembly","src":"3287:63:25"}]},"documentation":{"id":4985,"nodeType":"StructuredDocumentation","src":"3105:85:25","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":4995,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:25","nodeType":"FunctionDefinition","parameters":{"id":4988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4987,"mutability":"mutable","name":"slot","nameLocation":"3226:4:25","nodeType":"VariableDeclaration","scope":4995,"src":"3218:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4986,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:25"},"returnParameters":{"id":4992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4991,"mutability":"mutable","name":"r","nameLocation":"3274:1:25","nodeType":"VariableDeclaration","scope":4995,"src":"3255:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4926_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":4990,"nodeType":"UserDefinedTypeName","pathNode":{"id":4989,"name":"StringSlot","nameLocations":["3255:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4926,"src":"3255:10:25"},"referencedDeclaration":4926,"src":"3255:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4926_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:25"},"scope":5029,"src":"3195:161:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5005,"nodeType":"Block","src":"3558:85:25","statements":[{"AST":{"nativeSrc":"3593:44:25","nodeType":"YulBlock","src":"3593:44:25","statements":[{"nativeSrc":"3607:20:25","nodeType":"YulAssignment","src":"3607:20:25","value":{"name":"store.slot","nativeSrc":"3617:10:25","nodeType":"YulIdentifier","src":"3617:10:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:25","nodeType":"YulIdentifier","src":"3607:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5002,"isOffset":false,"isSlot":true,"src":"3607:6:25","suffix":"slot","valueSize":1},{"declaration":4998,"isOffset":false,"isSlot":true,"src":"3617:10:25","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":5004,"nodeType":"InlineAssembly","src":"3568:69:25"}]},"documentation":{"id":4996,"nodeType":"StructuredDocumentation","src":"3362:101:25","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":5006,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:25","nodeType":"FunctionDefinition","parameters":{"id":4999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4998,"mutability":"mutable","name":"store","nameLocation":"3506:5:25","nodeType":"VariableDeclaration","scope":5006,"src":"3491:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4997,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:25"},"returnParameters":{"id":5003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5002,"mutability":"mutable","name":"r","nameLocation":"3555:1:25","nodeType":"VariableDeclaration","scope":5006,"src":"3536:20:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4926_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":5001,"nodeType":"UserDefinedTypeName","pathNode":{"id":5000,"name":"StringSlot","nameLocations":["3536:10:25"],"nodeType":"IdentifierPath","referencedDeclaration":4926,"src":"3536:10:25"},"referencedDeclaration":4926,"src":"3536:10:25","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$4926_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:25"},"scope":5029,"src":"3468:175:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5016,"nodeType":"Block","src":"3818:79:25","statements":[{"AST":{"nativeSrc":"3853:38:25","nodeType":"YulBlock","src":"3853:38:25","statements":[{"nativeSrc":"3867:14:25","nodeType":"YulAssignment","src":"3867:14:25","value":{"name":"slot","nativeSrc":"3877:4:25","nodeType":"YulIdentifier","src":"3877:4:25"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:25","nodeType":"YulIdentifier","src":"3867:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5013,"isOffset":false,"isSlot":true,"src":"3867:6:25","suffix":"slot","valueSize":1},{"declaration":5009,"isOffset":false,"isSlot":false,"src":"3877:4:25","valueSize":1}],"flags":["memory-safe"],"id":5015,"nodeType":"InlineAssembly","src":"3828:63:25"}]},"documentation":{"id":5007,"nodeType":"StructuredDocumentation","src":"3649:84:25","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":5017,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:25","nodeType":"FunctionDefinition","parameters":{"id":5010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5009,"mutability":"mutable","name":"slot","nameLocation":"3768:4:25","nodeType":"VariableDeclaration","scope":5017,"src":"3760:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:25"},"returnParameters":{"id":5014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5013,"mutability":"mutable","name":"r","nameLocation":"3815:1:25","nodeType":"VariableDeclaration","scope":5017,"src":"3797:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4929_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":5012,"nodeType":"UserDefinedTypeName","pathNode":{"id":5011,"name":"BytesSlot","nameLocations":["3797:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":4929,"src":"3797:9:25"},"referencedDeclaration":4929,"src":"3797:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4929_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:25"},"scope":5029,"src":"3738:159:25","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5027,"nodeType":"Block","src":"4094:85:25","statements":[{"AST":{"nativeSrc":"4129:44:25","nodeType":"YulBlock","src":"4129:44:25","statements":[{"nativeSrc":"4143:20:25","nodeType":"YulAssignment","src":"4143:20:25","value":{"name":"store.slot","nativeSrc":"4153:10:25","nodeType":"YulIdentifier","src":"4153:10:25"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:25","nodeType":"YulIdentifier","src":"4143:6:25"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5024,"isOffset":false,"isSlot":true,"src":"4143:6:25","suffix":"slot","valueSize":1},{"declaration":5020,"isOffset":false,"isSlot":true,"src":"4153:10:25","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":5026,"nodeType":"InlineAssembly","src":"4104:69:25"}]},"documentation":{"id":5018,"nodeType":"StructuredDocumentation","src":"3903:99:25","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":5028,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:25","nodeType":"FunctionDefinition","parameters":{"id":5021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5020,"mutability":"mutable","name":"store","nameLocation":"4043:5:25","nodeType":"VariableDeclaration","scope":5028,"src":"4029:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":5019,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:25"},"returnParameters":{"id":5025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5024,"mutability":"mutable","name":"r","nameLocation":"4091:1:25","nodeType":"VariableDeclaration","scope":5028,"src":"4073:19:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4929_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":5023,"nodeType":"UserDefinedTypeName","pathNode":{"id":5022,"name":"BytesSlot","nameLocations":["4073:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":4929,"src":"4073:9:25"},"referencedDeclaration":4929,"src":"4073:9:25","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$4929_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:25"},"scope":5029,"src":"4007:172:25","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5030,"src":"1407:2774:25","usedErrors":[],"usedEvents":[]}],"src":"193:3989:25"},"id":25},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[8088],"SafeCast":[9853],"SignedMath":[9997],"Strings":[6431]},"id":6432,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5031,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:26"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":5033,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6432,"sourceUnit":8089,"src":"127:37:26","symbolAliases":[{"foreign":{"id":5032,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"135:4:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":5035,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6432,"sourceUnit":9854,"src":"165:45:26","symbolAliases":[{"foreign":{"id":5034,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"173:8:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":5037,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6432,"sourceUnit":9998,"src":"211:49:26","symbolAliases":[{"foreign":{"id":5036,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9997,"src":"219:10:26","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":5038,"nodeType":"StructuredDocumentation","src":"262:34:26","text":" @dev String operations."},"fullyImplemented":true,"id":6431,"linearizedBaseContracts":[6431],"name":"Strings","nameLocation":"305:7:26","nodeType":"ContractDefinition","nodes":[{"global":false,"id":5040,"libraryName":{"id":5039,"name":"SafeCast","nameLocations":["325:8:26"],"nodeType":"IdentifierPath","referencedDeclaration":9853,"src":"325:8:26"},"nodeType":"UsingForDirective","src":"319:21:26"},{"constant":true,"id":5043,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:26","nodeType":"VariableDeclaration","scope":6431,"src":"346:56:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":5041,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:26","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":5042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":5046,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:26","nodeType":"VariableDeclaration","scope":6431,"src":"408:42:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5044,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":5045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:26","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":5082,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:26","nodeType":"VariableDeclaration","scope":6431,"src":"456:302:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5047,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":5081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":5076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":5071,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":5066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":5056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":5050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":5049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":5051,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:26","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":5054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":5053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:26","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:26","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":5055,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:26","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:26","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":5059,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":5058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:26","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":5060,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:26","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:26","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":5064,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:26","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:26","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":5065,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:26","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:26","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":5069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":5068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:26","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:26","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":5070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:26","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:26","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":5074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":5073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:26","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:26","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":5075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:26","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:26","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":5079,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":5078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:26","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:26","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":5080,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:26","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:26","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":5083,"nodeType":"StructuredDocumentation","src":"778:81:26","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":5089,"name":"StringsInsufficientHexLength","nameLocation":"870:28:26","nodeType":"ErrorDefinition","parameters":{"id":5088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5085,"mutability":"mutable","name":"value","nameLocation":"907:5:26","nodeType":"VariableDeclaration","scope":5089,"src":"899:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5084,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5087,"mutability":"mutable","name":"length","nameLocation":"922:6:26","nodeType":"VariableDeclaration","scope":5089,"src":"914:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5086,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:26"},"src":"864:66:26"},{"documentation":{"id":5090,"nodeType":"StructuredDocumentation","src":"936:108:26","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":5092,"name":"StringsInvalidChar","nameLocation":"1055:18:26","nodeType":"ErrorDefinition","parameters":{"id":5091,"nodeType":"ParameterList","parameters":[],"src":"1073:2:26"},"src":"1049:27:26"},{"documentation":{"id":5093,"nodeType":"StructuredDocumentation","src":"1082:84:26","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":5095,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:26","nodeType":"ErrorDefinition","parameters":{"id":5094,"nodeType":"ParameterList","parameters":[],"src":"1204:2:26"},"src":"1171:36:26"},{"body":{"id":5142,"nodeType":"Block","src":"1379:563:26","statements":[{"id":5141,"nodeType":"UncheckedBlock","src":"1389:547:26","statements":[{"assignments":[5104],"declarations":[{"constant":false,"id":5104,"mutability":"mutable","name":"length","nameLocation":"1421:6:26","nodeType":"VariableDeclaration","scope":5141,"src":"1413:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5103,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5111,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"1441:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5105,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"1430:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8088_$","typeString":"type(library Math)"}},"id":5106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:26","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":7920,"src":"1430:10:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:26"},{"assignments":[5113],"declarations":[{"constant":false,"id":5113,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:26","nodeType":"VariableDeclaration","scope":5141,"src":"1465:20:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5112,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":5118,"initialValue":{"arguments":[{"id":5116,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"1499:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":5114,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":5117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:26"},{"assignments":[5120],"declarations":[{"constant":false,"id":5120,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:26","nodeType":"VariableDeclaration","scope":5141,"src":"1520:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5121,"nodeType":"VariableDeclarationStatement","src":"1520:11:26"},{"AST":{"nativeSrc":"1570:69:26","nodeType":"YulBlock","src":"1570:69:26","statements":[{"nativeSrc":"1588:37:26","nodeType":"YulAssignment","src":"1588:37:26","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:26","nodeType":"YulIdentifier","src":"1603:6:26"},{"kind":"number","nativeSrc":"1611:4:26","nodeType":"YulLiteral","src":"1611:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:26","nodeType":"YulIdentifier","src":"1599:3:26"},"nativeSrc":"1599:17:26","nodeType":"YulFunctionCall","src":"1599:17:26"},{"name":"length","nativeSrc":"1618:6:26","nodeType":"YulIdentifier","src":"1618:6:26"}],"functionName":{"name":"add","nativeSrc":"1595:3:26","nodeType":"YulIdentifier","src":"1595:3:26"},"nativeSrc":"1595:30:26","nodeType":"YulFunctionCall","src":"1595:30:26"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:26","nodeType":"YulIdentifier","src":"1588:3:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5113,"isOffset":false,"isSlot":false,"src":"1603:6:26","valueSize":1},{"declaration":5104,"isOffset":false,"isSlot":false,"src":"1618:6:26","valueSize":1},{"declaration":5120,"isOffset":false,"isSlot":false,"src":"1588:3:26","valueSize":1}],"flags":["memory-safe"],"id":5122,"nodeType":"InlineAssembly","src":"1545:94:26"},{"body":{"id":5137,"nodeType":"Block","src":"1665:234:26","statements":[{"expression":{"id":5125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:26","subExpression":{"id":5124,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5120,"src":"1683:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5126,"nodeType":"ExpressionStatement","src":"1683:5:26"},{"AST":{"nativeSrc":"1731:86:26","nodeType":"YulBlock","src":"1731:86:26","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:26","nodeType":"YulIdentifier","src":"1761:3:26"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:26","nodeType":"YulIdentifier","src":"1775:5:26"},{"kind":"number","nativeSrc":"1782:2:26","nodeType":"YulLiteral","src":"1782:2:26","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:26","nodeType":"YulIdentifier","src":"1771:3:26"},"nativeSrc":"1771:14:26","nodeType":"YulFunctionCall","src":"1771:14:26"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:26","nodeType":"YulIdentifier","src":"1787:10:26"}],"functionName":{"name":"byte","nativeSrc":"1766:4:26","nodeType":"YulIdentifier","src":"1766:4:26"},"nativeSrc":"1766:32:26","nodeType":"YulFunctionCall","src":"1766:32:26"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:26","nodeType":"YulIdentifier","src":"1753:7:26"},"nativeSrc":"1753:46:26","nodeType":"YulFunctionCall","src":"1753:46:26"},"nativeSrc":"1753:46:26","nodeType":"YulExpressionStatement","src":"1753:46:26"}]},"evmVersion":"paris","externalReferences":[{"declaration":5043,"isOffset":false,"isSlot":false,"src":"1787:10:26","valueSize":1},{"declaration":5120,"isOffset":false,"isSlot":false,"src":"1761:3:26","valueSize":1},{"declaration":5098,"isOffset":false,"isSlot":false,"src":"1775:5:26","valueSize":1}],"flags":["memory-safe"],"id":5127,"nodeType":"InlineAssembly","src":"1706:111:26"},{"expression":{"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"1834:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":5129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5131,"nodeType":"ExpressionStatement","src":"1834:11:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5098,"src":"1867:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5136,"nodeType":"IfStatement","src":"1863:21:26","trueBody":{"id":5135,"nodeType":"Break","src":"1879:5:26"}}]},"condition":{"hexValue":"74727565","id":5123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":5138,"nodeType":"WhileStatement","src":"1652:247:26"},{"expression":{"id":5139,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5113,"src":"1919:6:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5102,"id":5140,"nodeType":"Return","src":"1912:13:26"}]}]},"documentation":{"id":5096,"nodeType":"StructuredDocumentation","src":"1213:90:26","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":5143,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:26","nodeType":"FunctionDefinition","parameters":{"id":5099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5098,"mutability":"mutable","name":"value","nameLocation":"1334:5:26","nodeType":"VariableDeclaration","scope":5143,"src":"1326:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:26"},"returnParameters":{"id":5102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5143,"src":"1364:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5100,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:26"},"scope":6431,"src":"1308:634:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5168,"nodeType":"Block","src":"2118:92:26","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"2149:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":5158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":5159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:26","trueExpression":{"hexValue":"2d","id":5157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":5163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5146,"src":"2195:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":5161,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9997,"src":"2180:10:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$9997_$","typeString":"type(library SignedMath)"}},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:26","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":9996,"src":"2180:14:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5160,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5143,"src":"2171:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":5152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5151,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:26","typeDescriptions":{}}},"id":5153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:26","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:26","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":5166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5150,"id":5167,"nodeType":"Return","src":"2128:75:26"}]},"documentation":{"id":5144,"nodeType":"StructuredDocumentation","src":"1948:89:26","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":5169,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:26","nodeType":"FunctionDefinition","parameters":{"id":5147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5146,"mutability":"mutable","name":"value","nameLocation":"2073:5:26","nodeType":"VariableDeclaration","scope":5169,"src":"2066:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5145,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:26"},"returnParameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5169,"src":"2103:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5148,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:26"},"scope":6431,"src":"2042:168:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5188,"nodeType":"Block","src":"2389:100:26","statements":[{"id":5187,"nodeType":"UncheckedBlock","src":"2399:84:26","statements":[{"expression":{"arguments":[{"id":5178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"2442:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5172,"src":"2461:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5179,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"2449:4:26","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8088_$","typeString":"type(library Math)"}},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:26","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":8031,"src":"2449:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":5182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5177,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5189,5272,5292],"referencedDeclaration":5272,"src":"2430:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":5185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5176,"id":5186,"nodeType":"Return","src":"2423:49:26"}]}]},"documentation":{"id":5170,"nodeType":"StructuredDocumentation","src":"2216:94:26","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":5189,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:26","nodeType":"FunctionDefinition","parameters":{"id":5173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5172,"mutability":"mutable","name":"value","nameLocation":"2344:5:26","nodeType":"VariableDeclaration","scope":5189,"src":"2336:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5171,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:26"},"returnParameters":{"id":5176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5189,"src":"2374:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5174,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:26"},"scope":6431,"src":"2315:174:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5271,"nodeType":"Block","src":"2702:435:26","statements":[{"assignments":[5200],"declarations":[{"constant":false,"id":5200,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:26","nodeType":"VariableDeclaration","scope":5271,"src":"2712:18:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5199,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5202,"initialValue":{"id":5201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"2733:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:26"},{"assignments":[5204],"declarations":[{"constant":false,"id":5204,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:26","nodeType":"VariableDeclaration","scope":5271,"src":"2748:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5203,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5213,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5208,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"2784:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":5210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5205,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:26"},{"expression":{"id":5218,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5214,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"2805:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5216,"indexExpression":{"hexValue":"30","id":5215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":5217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5219,"nodeType":"ExpressionStatement","src":"2805:15:26"},{"expression":{"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5220,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"2830:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5222,"indexExpression":{"hexValue":"31","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":5223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5225,"nodeType":"ExpressionStatement","src":"2830:15:26"},{"body":{"id":5254,"nodeType":"Block","src":"2900:95:26","statements":[{"expression":{"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5240,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"2914:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5242,"indexExpression":{"id":5241,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"2921:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":5243,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"2926:10:26","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":5247,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5244,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"2937:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":5245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5249,"nodeType":"ExpressionStatement","src":"2914:40:26"},{"expression":{"id":5252,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5250,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"2968:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5253,"nodeType":"ExpressionStatement","src":"2968:16:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"2888:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5255,"initializationExpression":{"assignments":[5227],"declarations":[{"constant":false,"id":5227,"mutability":"mutable","name":"i","nameLocation":"2868:1:26","nodeType":"VariableDeclaration","scope":5255,"src":"2860:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5226,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5233,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5229,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"2876:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:26"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:26","subExpression":{"id":5237,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5227,"src":"2897:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5239,"nodeType":"ExpressionStatement","src":"2895:3:26"},"nodeType":"ForStatement","src":"2855:140:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5256,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"3008:10:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5265,"nodeType":"IfStatement","src":"3004:96:26","trueBody":{"id":5264,"nodeType":"Block","src":"3025:75:26","statements":[{"errorCall":{"arguments":[{"id":5260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"3075:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5261,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5194,"src":"3082:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5259,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5089,"src":"3046:28:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5263,"nodeType":"RevertStatement","src":"3039:50:26"}]}},{"expression":{"arguments":[{"id":5268,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5204,"src":"3123:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5266,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:26","typeDescriptions":{}}},"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5198,"id":5270,"nodeType":"Return","src":"3109:21:26"}]},"documentation":{"id":5190,"nodeType":"StructuredDocumentation","src":"2495:112:26","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":5272,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:26","nodeType":"FunctionDefinition","parameters":{"id":5195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"value","nameLocation":"2641:5:26","nodeType":"VariableDeclaration","scope":5272,"src":"2633:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5194,"mutability":"mutable","name":"length","nameLocation":"2656:6:26","nodeType":"VariableDeclaration","scope":5272,"src":"2648:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5193,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:26"},"returnParameters":{"id":5198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5272,"src":"2687:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5196,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:26"},"scope":6431,"src":"2612:525:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5291,"nodeType":"Block","src":"3369:75:26","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":5285,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5275,"src":"3414:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5283,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:26","typeDescriptions":{}}},"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5281,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:26","typeDescriptions":{}}},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5288,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5046,"src":"3422:14:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":5280,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5189,5272,5292],"referencedDeclaration":5272,"src":"3386:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5279,"id":5290,"nodeType":"Return","src":"3379:58:26"}]},"documentation":{"id":5273,"nodeType":"StructuredDocumentation","src":"3143:148:26","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":5292,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:26","nodeType":"FunctionDefinition","parameters":{"id":5276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5275,"mutability":"mutable","name":"addr","nameLocation":"3325:4:26","nodeType":"VariableDeclaration","scope":5292,"src":"3317:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5274,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:26"},"returnParameters":{"id":5279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5292,"src":"3354:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5277,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:26"},"scope":6431,"src":"3296:148:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5356,"nodeType":"Block","src":"3701:642:26","statements":[{"assignments":[5301],"declarations":[{"constant":false,"id":5301,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:26","nodeType":"VariableDeclaration","scope":5356,"src":"3711:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5300,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5308,"initialValue":{"arguments":[{"arguments":[{"id":5305,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5295,"src":"3751:4:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5304,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[5189,5272,5292],"referencedDeclaration":5292,"src":"3739:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5302,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:26","typeDescriptions":{}}},"id":5307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:26"},{"assignments":[5310],"declarations":[{"constant":false,"id":5310,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:26","nodeType":"VariableDeclaration","scope":5356,"src":"3842:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5309,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5311,"nodeType":"VariableDeclarationStatement","src":"3842:17:26"},{"AST":{"nativeSrc":"3894:78:26","nodeType":"YulBlock","src":"3894:78:26","statements":[{"nativeSrc":"3908:54:26","nodeType":"YulAssignment","src":"3908:54:26","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:26","nodeType":"YulLiteral","src":"3925:2:26","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:26","nodeType":"YulIdentifier","src":"3943:6:26"},{"kind":"number","nativeSrc":"3951:4:26","nodeType":"YulLiteral","src":"3951:4:26","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:26","nodeType":"YulIdentifier","src":"3939:3:26"},"nativeSrc":"3939:17:26","nodeType":"YulFunctionCall","src":"3939:17:26"},{"kind":"number","nativeSrc":"3958:2:26","nodeType":"YulLiteral","src":"3958:2:26","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:26","nodeType":"YulIdentifier","src":"3929:9:26"},"nativeSrc":"3929:32:26","nodeType":"YulFunctionCall","src":"3929:32:26"}],"functionName":{"name":"shr","nativeSrc":"3921:3:26","nodeType":"YulIdentifier","src":"3921:3:26"},"nativeSrc":"3921:41:26","nodeType":"YulFunctionCall","src":"3921:41:26"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:26","nodeType":"YulIdentifier","src":"3908:9:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5301,"isOffset":false,"isSlot":false,"src":"3943:6:26","valueSize":1},{"declaration":5310,"isOffset":false,"isSlot":false,"src":"3908:9:26","valueSize":1}],"flags":["memory-safe"],"id":5312,"nodeType":"InlineAssembly","src":"3869:103:26"},{"body":{"id":5349,"nodeType":"Block","src":"4015:291:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5323,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"4121:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":5324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":5326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:26","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":5330,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"4150:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5332,"indexExpression":{"id":5331,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"4157:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5328,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:26","typeDescriptions":{}}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":5334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5344,"nodeType":"IfStatement","src":"4117:150:26","trueBody":{"id":5343,"nodeType":"Block","src":"4167:100:26","statements":[{"expression":{"id":5341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5337,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"4235:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5339,"indexExpression":{"id":5338,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"4242:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":5340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:26","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5342,"nodeType":"ExpressionStatement","src":"4235:17:26"}]}},{"expression":{"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5345,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5310,"src":"4280:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":5346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:26","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5348,"nodeType":"ExpressionStatement","src":"4280:15:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5317,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"4003:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5350,"initializationExpression":{"assignments":[5314],"declarations":[{"constant":false,"id":5314,"mutability":"mutable","name":"i","nameLocation":"3995:1:26","nodeType":"VariableDeclaration","scope":5350,"src":"3987:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5313,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5316,"initialValue":{"hexValue":"3431","id":5315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:26","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:26"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":5321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:26","subExpression":{"id":5320,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5314,"src":"4012:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5322,"nodeType":"ExpressionStatement","src":"4010:3:26"},"nodeType":"ForStatement","src":"3982:324:26"},{"expression":{"arguments":[{"id":5353,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5301,"src":"4329:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5351,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:26","typeDescriptions":{}}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5299,"id":5355,"nodeType":"Return","src":"4315:21:26"}]},"documentation":{"id":5293,"nodeType":"StructuredDocumentation","src":"3450:165:26","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":5357,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:26","nodeType":"FunctionDefinition","parameters":{"id":5296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5295,"mutability":"mutable","name":"addr","nameLocation":"3657:4:26","nodeType":"VariableDeclaration","scope":5357,"src":"3649:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5294,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:26"},"returnParameters":{"id":5299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5357,"src":"3686:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5297,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:26"},"scope":6431,"src":"3620:723:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5393,"nodeType":"Block","src":"4498:104:26","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":5369,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"4521:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5367,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:26","typeDescriptions":{}}},"id":5370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:26","memberName":"length","nodeType":"MemberAccess","src":"4515:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5374,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"4540:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5373,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5372,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:26","typeDescriptions":{}}},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:26","memberName":"length","nodeType":"MemberAccess","src":"4534:15:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":5390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5381,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"4569:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5379,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:26","typeDescriptions":{}}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5378,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":5387,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5362,"src":"4592:1:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5385,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:26","typeDescriptions":{}}},"id":5388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5384,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:26","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5366,"id":5392,"nodeType":"Return","src":"4508:87:26"}]},"documentation":{"id":5358,"nodeType":"StructuredDocumentation","src":"4349:66:26","text":" @dev Returns true if the two strings are equal."},"id":5394,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:26","nodeType":"FunctionDefinition","parameters":{"id":5363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"a","nameLocation":"4449:1:26","nodeType":"VariableDeclaration","scope":5394,"src":"4435:15:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5359,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5362,"mutability":"mutable","name":"b","nameLocation":"4466:1:26","nodeType":"VariableDeclaration","scope":5394,"src":"4452:15:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5361,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:26"},"returnParameters":{"id":5366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5394,"src":"4492:4:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5364,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:26"},"scope":6431,"src":"4420:182:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5412,"nodeType":"Block","src":"4899:64:26","statements":[{"expression":{"arguments":[{"id":5403,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"4926:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5407,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5397,"src":"4942:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5405,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:26","typeDescriptions":{}}},"id":5408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:26","memberName":"length","nodeType":"MemberAccess","src":"4936:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5402,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[5413,5444],"referencedDeclaration":5444,"src":"4916:9:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5401,"id":5411,"nodeType":"Return","src":"4909:47:26"}]},"documentation":{"id":5395,"nodeType":"StructuredDocumentation","src":"4608:214:26","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":5413,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:26","nodeType":"FunctionDefinition","parameters":{"id":5398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5397,"mutability":"mutable","name":"input","nameLocation":"4860:5:26","nodeType":"VariableDeclaration","scope":5413,"src":"4846:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5396,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:26"},"returnParameters":{"id":5401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5400,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5413,"src":"4890:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5399,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:26"},"scope":6431,"src":"4827:136:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5443,"nodeType":"Block","src":"5368:153:26","statements":[{"assignments":[5426,5428],"declarations":[{"constant":false,"id":5426,"mutability":"mutable","name":"success","nameLocation":"5384:7:26","nodeType":"VariableDeclaration","scope":5443,"src":"5379:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5425,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5428,"mutability":"mutable","name":"value","nameLocation":"5401:5:26","nodeType":"VariableDeclaration","scope":5443,"src":"5393:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5427,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5434,"initialValue":{"arguments":[{"id":5430,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"5423:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5431,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5418,"src":"5430:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5432,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5420,"src":"5437:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5429,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[5465,5502],"referencedDeclaration":5502,"src":"5410:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:26"},{"condition":{"id":5436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:26","subExpression":{"id":5435,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5426,"src":"5456:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5440,"nodeType":"IfStatement","src":"5451:41:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5437,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"5472:18:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5439,"nodeType":"RevertStatement","src":"5465:27:26"}},{"expression":{"id":5441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5428,"src":"5509:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5424,"id":5442,"nodeType":"Return","src":"5502:12:26"}]},"documentation":{"id":5414,"nodeType":"StructuredDocumentation","src":"4969:294:26","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":5444,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:26","nodeType":"FunctionDefinition","parameters":{"id":5421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"input","nameLocation":"5301:5:26","nodeType":"VariableDeclaration","scope":5444,"src":"5287:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5415,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5418,"mutability":"mutable","name":"begin","nameLocation":"5316:5:26","nodeType":"VariableDeclaration","scope":5444,"src":"5308:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5417,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5420,"mutability":"mutable","name":"end","nameLocation":"5331:3:26","nodeType":"VariableDeclaration","scope":5444,"src":"5323:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5419,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:26"},"returnParameters":{"id":5424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5444,"src":"5359:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5422,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:26"},"scope":6431,"src":"5268:253:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5464,"nodeType":"Block","src":"5842:83:26","statements":[{"expression":{"arguments":[{"id":5455,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"5888:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5456,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5459,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5447,"src":"5904:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5457,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:26","typeDescriptions":{}}},"id":5460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:26","memberName":"length","nodeType":"MemberAccess","src":"5898:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5454,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"5859:28:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5453,"id":5463,"nodeType":"Return","src":"5852:66:26"}]},"documentation":{"id":5445,"nodeType":"StructuredDocumentation","src":"5527:215:26","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5465,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:26","nodeType":"FunctionDefinition","parameters":{"id":5448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5447,"mutability":"mutable","name":"input","nameLocation":"5783:5:26","nodeType":"VariableDeclaration","scope":5465,"src":"5769:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5446,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:26"},"returnParameters":{"id":5453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5450,"mutability":"mutable","name":"success","nameLocation":"5818:7:26","nodeType":"VariableDeclaration","scope":5465,"src":"5813:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5449,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5452,"mutability":"mutable","name":"value","nameLocation":"5835:5:26","nodeType":"VariableDeclaration","scope":5465,"src":"5827:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5451,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:26"},"scope":6431,"src":"5747:178:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5501,"nodeType":"Block","src":"6327:144:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5479,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"6341:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5482,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"6353:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5481,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5480,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:26","typeDescriptions":{}}},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:26","memberName":"length","nodeType":"MemberAccess","src":"6347:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5486,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"6370:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5487,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"6378:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5494,"nodeType":"IfStatement","src":"6337:63:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5492,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5478,"id":5493,"nodeType":"Return","src":"6383:17:26"}},{"expression":{"arguments":[{"id":5496,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5468,"src":"6446:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5497,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"6453:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5498,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"6460:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5495,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5572,"src":"6417:28:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5478,"id":5500,"nodeType":"Return","src":"6410:54:26"}]},"documentation":{"id":5466,"nodeType":"StructuredDocumentation","src":"5931:238:26","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5502,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:26","nodeType":"FunctionDefinition","parameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5468,"mutability":"mutable","name":"input","nameLocation":"6219:5:26","nodeType":"VariableDeclaration","scope":5502,"src":"6205:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5467,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5470,"mutability":"mutable","name":"begin","nameLocation":"6242:5:26","nodeType":"VariableDeclaration","scope":5502,"src":"6234:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5469,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5472,"mutability":"mutable","name":"end","nameLocation":"6265:3:26","nodeType":"VariableDeclaration","scope":5502,"src":"6257:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5471,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:26"},"returnParameters":{"id":5478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5475,"mutability":"mutable","name":"success","nameLocation":"6303:7:26","nodeType":"VariableDeclaration","scope":5502,"src":"6298:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5474,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5477,"mutability":"mutable","name":"value","nameLocation":"6320:5:26","nodeType":"VariableDeclaration","scope":5502,"src":"6312:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5476,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:26"},"scope":6431,"src":"6174:297:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5571,"nodeType":"Block","src":"6874:347:26","statements":[{"assignments":[5517],"declarations":[{"constant":false,"id":5517,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:26","nodeType":"VariableDeclaration","scope":5571,"src":"6884:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5516,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5522,"initialValue":{"arguments":[{"id":5520,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"6912:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5518,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:26","typeDescriptions":{}}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:26"},{"assignments":[5524],"declarations":[{"constant":false,"id":5524,"mutability":"mutable","name":"result","nameLocation":"6937:6:26","nodeType":"VariableDeclaration","scope":5571,"src":"6929:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5523,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5526,"initialValue":{"hexValue":"30","id":5525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:26"},{"body":{"id":5565,"nodeType":"Block","src":"6995:189:26","statements":[{"assignments":[5538],"declarations":[{"constant":false,"id":5538,"mutability":"mutable","name":"chr","nameLocation":"7015:3:26","nodeType":"VariableDeclaration","scope":5565,"src":"7009:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5537,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5548,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5543,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5517,"src":"7064:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5544,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"7072:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5542,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"7041:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5540,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:26","typeDescriptions":{}}},"id":5546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5539,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"7021:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5549,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"7094:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":5550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:26","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5556,"nodeType":"IfStatement","src":"7090:30:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5554,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5515,"id":5555,"nodeType":"Return","src":"7103:17:26"}},{"expression":{"id":5559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"7134:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":5558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5560,"nodeType":"ExpressionStatement","src":"7134:12:26"},{"expression":{"id":5563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5561,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"7160:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":5562,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5538,"src":"7170:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5564,"nodeType":"ExpressionStatement","src":"7160:13:26"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5531,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"6981:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5532,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5509,"src":"6985:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5566,"initializationExpression":{"assignments":[5528],"declarations":[{"constant":false,"id":5528,"mutability":"mutable","name":"i","nameLocation":"6970:1:26","nodeType":"VariableDeclaration","scope":5566,"src":"6962:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5527,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5530,"initialValue":{"id":5529,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5507,"src":"6974:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:26","subExpression":{"id":5534,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"6992:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5536,"nodeType":"ExpressionStatement","src":"6990:3:26"},"nodeType":"ForStatement","src":"6957:227:26"},{"expression":{"components":[{"hexValue":"74727565","id":5567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":5568,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5524,"src":"7207:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5515,"id":5570,"nodeType":"Return","src":"7193:21:26"}]},"documentation":{"id":5503,"nodeType":"StructuredDocumentation","src":"6477:224:26","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5572,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:26","nodeType":"FunctionDefinition","parameters":{"id":5510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5505,"mutability":"mutable","name":"input","nameLocation":"6767:5:26","nodeType":"VariableDeclaration","scope":5572,"src":"6753:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5504,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5507,"mutability":"mutable","name":"begin","nameLocation":"6790:5:26","nodeType":"VariableDeclaration","scope":5572,"src":"6782:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5506,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5509,"mutability":"mutable","name":"end","nameLocation":"6813:3:26","nodeType":"VariableDeclaration","scope":5572,"src":"6805:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5508,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:26"},"returnParameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5512,"mutability":"mutable","name":"success","nameLocation":"6850:7:26","nodeType":"VariableDeclaration","scope":5572,"src":"6845:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5511,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5514,"mutability":"mutable","name":"value","nameLocation":"6867:5:26","nodeType":"VariableDeclaration","scope":5572,"src":"6859:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5513,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:26"},"scope":6431,"src":"6706:515:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5590,"nodeType":"Block","src":"7518:63:26","statements":[{"expression":{"arguments":[{"id":5581,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"7544:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5585,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5575,"src":"7560:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5583,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:26","typeDescriptions":{}}},"id":5586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:26","memberName":"length","nodeType":"MemberAccess","src":"7554:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5580,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[5591,5622],"referencedDeclaration":5622,"src":"7535:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":5588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5579,"id":5589,"nodeType":"Return","src":"7528:46:26"}]},"documentation":{"id":5573,"nodeType":"StructuredDocumentation","src":"7227:216:26","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5591,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:26","nodeType":"FunctionDefinition","parameters":{"id":5576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5575,"mutability":"mutable","name":"input","nameLocation":"7480:5:26","nodeType":"VariableDeclaration","scope":5591,"src":"7466:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5574,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:26"},"returnParameters":{"id":5579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5591,"src":"7510:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5577,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:26"},"scope":6431,"src":"7448:133:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5621,"nodeType":"Block","src":"7986:151:26","statements":[{"assignments":[5604,5606],"declarations":[{"constant":false,"id":5604,"mutability":"mutable","name":"success","nameLocation":"8002:7:26","nodeType":"VariableDeclaration","scope":5621,"src":"7997:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5603,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5606,"mutability":"mutable","name":"value","nameLocation":"8018:5:26","nodeType":"VariableDeclaration","scope":5621,"src":"8011:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5605,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":5612,"initialValue":{"arguments":[{"id":5608,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5594,"src":"8039:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5609,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5596,"src":"8046:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5610,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"8053:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5607,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[5643,5685],"referencedDeclaration":5685,"src":"8027:11:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:26"},{"condition":{"id":5614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:26","subExpression":{"id":5613,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"8072:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5618,"nodeType":"IfStatement","src":"8067:41:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5615,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"8088:18:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5617,"nodeType":"RevertStatement","src":"8081:27:26"}},{"expression":{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5606,"src":"8125:5:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":5602,"id":5620,"nodeType":"Return","src":"8118:12:26"}]},"documentation":{"id":5592,"nodeType":"StructuredDocumentation","src":"7587:296:26","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":5622,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:26","nodeType":"FunctionDefinition","parameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5594,"mutability":"mutable","name":"input","nameLocation":"7920:5:26","nodeType":"VariableDeclaration","scope":5622,"src":"7906:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5593,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5596,"mutability":"mutable","name":"begin","nameLocation":"7935:5:26","nodeType":"VariableDeclaration","scope":5622,"src":"7927:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5595,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5598,"mutability":"mutable","name":"end","nameLocation":"7950:3:26","nodeType":"VariableDeclaration","scope":5622,"src":"7942:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5597,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:26"},"returnParameters":{"id":5602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5622,"src":"7978:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5600,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:26"},"scope":6431,"src":"7888:249:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5642,"nodeType":"Block","src":"8528:82:26","statements":[{"expression":{"arguments":[{"id":5633,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"8573:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5637,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5625,"src":"8589:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5635,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:26","typeDescriptions":{}}},"id":5638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:26","memberName":"length","nodeType":"MemberAccess","src":"8583:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5632,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"8545:27:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5631,"id":5641,"nodeType":"Return","src":"8538:65:26"}]},"documentation":{"id":5623,"nodeType":"StructuredDocumentation","src":"8143:287:26","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5643,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:26","nodeType":"FunctionDefinition","parameters":{"id":5626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5625,"mutability":"mutable","name":"input","nameLocation":"8470:5:26","nodeType":"VariableDeclaration","scope":5643,"src":"8456:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5624,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:26"},"returnParameters":{"id":5631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5628,"mutability":"mutable","name":"success","nameLocation":"8505:7:26","nodeType":"VariableDeclaration","scope":5643,"src":"8500:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5627,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5630,"mutability":"mutable","name":"value","nameLocation":"8521:5:26","nodeType":"VariableDeclaration","scope":5643,"src":"8514:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5629,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:26"},"scope":6431,"src":"8435:175:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":5648,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:26","nodeType":"VariableDeclaration","scope":6431,"src":"8616:50:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5644,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":5647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":5646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:26","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:26","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":5684,"nodeType":"Block","src":"9132:143:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5662,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"9146:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5665,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"9158:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5663,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:26","typeDescriptions":{}}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:26","memberName":"length","nodeType":"MemberAccess","src":"9152:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5669,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"9175:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5670,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"9183:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5677,"nodeType":"IfStatement","src":"9142:63:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5675,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5661,"id":5676,"nodeType":"Return","src":"9188:17:26"}},{"expression":{"arguments":[{"id":5679,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5651,"src":"9250:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5680,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5653,"src":"9257:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5681,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5655,"src":"9264:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5678,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5806,"src":"9222:27:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":5682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5661,"id":5683,"nodeType":"Return","src":"9215:53:26"}]},"documentation":{"id":5649,"nodeType":"StructuredDocumentation","src":"8673:303:26","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":5685,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:26","nodeType":"FunctionDefinition","parameters":{"id":5656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5651,"mutability":"mutable","name":"input","nameLocation":"9025:5:26","nodeType":"VariableDeclaration","scope":5685,"src":"9011:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5650,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5653,"mutability":"mutable","name":"begin","nameLocation":"9048:5:26","nodeType":"VariableDeclaration","scope":5685,"src":"9040:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5652,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5655,"mutability":"mutable","name":"end","nameLocation":"9071:3:26","nodeType":"VariableDeclaration","scope":5685,"src":"9063:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5654,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:26"},"returnParameters":{"id":5661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5658,"mutability":"mutable","name":"success","nameLocation":"9109:7:26","nodeType":"VariableDeclaration","scope":5685,"src":"9104:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5657,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5660,"mutability":"mutable","name":"value","nameLocation":"9125:5:26","nodeType":"VariableDeclaration","scope":5685,"src":"9118:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5659,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:26"},"scope":6431,"src":"8981:294:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5805,"nodeType":"Block","src":"9675:812:26","statements":[{"assignments":[5700],"declarations":[{"constant":false,"id":5700,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:26","nodeType":"VariableDeclaration","scope":5805,"src":"9685:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5699,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5705,"initialValue":{"arguments":[{"id":5703,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"9713:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5701,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:26","typeDescriptions":{}}},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:26"},{"assignments":[5707],"declarations":[{"constant":false,"id":5707,"mutability":"mutable","name":"sign","nameLocation":"9783:4:26","nodeType":"VariableDeclaration","scope":5805,"src":"9776:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5706,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5723,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5708,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"9790:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5709,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"9799:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":5718,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5700,"src":"9847:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5719,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"9855:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5717,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"9824:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5715,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:26","typeDescriptions":{}}},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:26","trueExpression":{"arguments":[{"hexValue":"30","id":5713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5712,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5711,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:26","typeDescriptions":{}}},"id":5714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:26"},{"assignments":[5725],"declarations":[{"constant":false,"id":5725,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:26","nodeType":"VariableDeclaration","scope":5805,"src":"9943:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5724,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5732,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5726,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"9963:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":5729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":5728,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5727,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:26","typeDescriptions":{}}},"id":5730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:26"},{"assignments":[5734],"declarations":[{"constant":false,"id":5734,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:26","nodeType":"VariableDeclaration","scope":5805,"src":"9992:17:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5733,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5741,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5735,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5707,"src":"10012:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":5738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":5737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5736,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:26","typeDescriptions":{}}},"id":5739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:26"},{"assignments":[5743],"declarations":[{"constant":false,"id":5743,"mutability":"mutable","name":"offset","nameLocation":"10049:6:26","nodeType":"VariableDeclaration","scope":5805,"src":"10041:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5742,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5750,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5744,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5725,"src":"10059:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":5745,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10075:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"10058:37:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:26"},{"assignments":[5752,5754],"declarations":[{"constant":false,"id":5752,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:26","nodeType":"VariableDeclaration","scope":5805,"src":"10109:15:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5751,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5754,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:26","nodeType":"VariableDeclaration","scope":5805,"src":"10126:16:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5753,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5762,"initialValue":{"arguments":[{"id":5756,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5688,"src":"10159:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5757,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5690,"src":"10166:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5758,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5743,"src":"10174:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5760,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5692,"src":"10182:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5755,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[5465,5502],"referencedDeclaration":5502,"src":"10146:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:26"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5763,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"10201:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5764,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"10215:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5765,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"10226:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5783,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"10343:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5784,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10357:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5786,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"10373:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5787,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5648,"src":"10385:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5698,"id":5802,"nodeType":"Return","src":"10463:17:26"},"id":5803,"nodeType":"IfStatement","src":"10339:141:26","trueBody":{"id":5798,"nodeType":"Block","src":"10401:56:26","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":5793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5792,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":5791,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":5795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:26","memberName":"min","nodeType":"MemberAccess","src":"10429:16:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5698,"id":5797,"nodeType":"Return","src":"10415:31:26"}]}},"id":5804,"nodeType":"IfStatement","src":"10197:283:26","trueBody":{"id":5782,"nodeType":"Block","src":"10242:91:26","statements":[{"expression":{"components":[{"hexValue":"74727565","id":5768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":5769,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5734,"src":"10270:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":5777,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"10312:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5775,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:26","typeDescriptions":{}}},"id":5778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:26","trueExpression":{"id":5774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:26","subExpression":{"arguments":[{"id":5772,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5754,"src":"10293:8:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":5770,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:26","typeDescriptions":{}}},"id":5773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":5780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":5698,"id":5781,"nodeType":"Return","src":"10256:66:26"}]}}]},"documentation":{"id":5686,"nodeType":"StructuredDocumentation","src":"9281:223:26","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":5806,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:26","nodeType":"FunctionDefinition","parameters":{"id":5693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5688,"mutability":"mutable","name":"input","nameLocation":"9569:5:26","nodeType":"VariableDeclaration","scope":5806,"src":"9555:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5687,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5690,"mutability":"mutable","name":"begin","nameLocation":"9592:5:26","nodeType":"VariableDeclaration","scope":5806,"src":"9584:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5689,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5692,"mutability":"mutable","name":"end","nameLocation":"9615:3:26","nodeType":"VariableDeclaration","scope":5806,"src":"9607:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5691,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:26"},"returnParameters":{"id":5698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5695,"mutability":"mutable","name":"success","nameLocation":"9652:7:26","nodeType":"VariableDeclaration","scope":5806,"src":"9647:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5694,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5697,"mutability":"mutable","name":"value","nameLocation":"9668:5:26","nodeType":"VariableDeclaration","scope":5806,"src":"9661:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5696,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:26","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:26"},"scope":6431,"src":"9509:978:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5824,"nodeType":"Block","src":"10832:67:26","statements":[{"expression":{"arguments":[{"id":5815,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"10862:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5819,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5809,"src":"10878:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5817,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:26","typeDescriptions":{}}},"id":5820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:26","memberName":"length","nodeType":"MemberAccess","src":"10872:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5814,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[5825,5856],"referencedDeclaration":5856,"src":"10849:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5813,"id":5823,"nodeType":"Return","src":"10842:50:26"}]},"documentation":{"id":5807,"nodeType":"StructuredDocumentation","src":"10493:259:26","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5825,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:26","nodeType":"FunctionDefinition","parameters":{"id":5810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5809,"mutability":"mutable","name":"input","nameLocation":"10793:5:26","nodeType":"VariableDeclaration","scope":5825,"src":"10779:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5808,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:26"},"returnParameters":{"id":5813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5825,"src":"10823:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5811,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:26"},"scope":6431,"src":"10757:142:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5855,"nodeType":"Block","src":"11320:156:26","statements":[{"assignments":[5838,5840],"declarations":[{"constant":false,"id":5838,"mutability":"mutable","name":"success","nameLocation":"11336:7:26","nodeType":"VariableDeclaration","scope":5855,"src":"11331:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5837,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5840,"mutability":"mutable","name":"value","nameLocation":"11353:5:26","nodeType":"VariableDeclaration","scope":5855,"src":"11345:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5839,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5846,"initialValue":{"arguments":[{"id":5842,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5828,"src":"11378:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5843,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"11385:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5844,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5832,"src":"11392:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5841,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[5877,5914],"referencedDeclaration":5914,"src":"11362:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:26"},{"condition":{"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:26","subExpression":{"id":5847,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5838,"src":"11411:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5852,"nodeType":"IfStatement","src":"11406:41:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5849,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5092,"src":"11427:18:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":5850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5851,"nodeType":"RevertStatement","src":"11420:27:26"}},{"expression":{"id":5853,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5840,"src":"11464:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5836,"id":5854,"nodeType":"Return","src":"11457:12:26"}]},"documentation":{"id":5826,"nodeType":"StructuredDocumentation","src":"10905:307:26","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":5856,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:26","nodeType":"FunctionDefinition","parameters":{"id":5833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5828,"mutability":"mutable","name":"input","nameLocation":"11253:5:26","nodeType":"VariableDeclaration","scope":5856,"src":"11239:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5827,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5830,"mutability":"mutable","name":"begin","nameLocation":"11268:5:26","nodeType":"VariableDeclaration","scope":5856,"src":"11260:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5829,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5832,"mutability":"mutable","name":"end","nameLocation":"11283:3:26","nodeType":"VariableDeclaration","scope":5856,"src":"11275:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5831,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:26"},"returnParameters":{"id":5836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5856,"src":"11311:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5834,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:26"},"scope":6431,"src":"11217:259:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5876,"nodeType":"Block","src":"11803:86:26","statements":[{"expression":{"arguments":[{"id":5867,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"11852:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5871,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5859,"src":"11868:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5869,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:26","typeDescriptions":{}}},"id":5872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:26","memberName":"length","nodeType":"MemberAccess","src":"11862:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5866,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"11820:31:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5865,"id":5875,"nodeType":"Return","src":"11813:69:26"}]},"documentation":{"id":5857,"nodeType":"StructuredDocumentation","src":"11482:218:26","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5877,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:26","nodeType":"FunctionDefinition","parameters":{"id":5860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5859,"mutability":"mutable","name":"input","nameLocation":"11744:5:26","nodeType":"VariableDeclaration","scope":5877,"src":"11730:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5858,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:26"},"returnParameters":{"id":5865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5862,"mutability":"mutable","name":"success","nameLocation":"11779:7:26","nodeType":"VariableDeclaration","scope":5877,"src":"11774:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5861,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5864,"mutability":"mutable","name":"value","nameLocation":"11796:5:26","nodeType":"VariableDeclaration","scope":5877,"src":"11788:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5863,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:26"},"scope":6431,"src":"11705:184:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5913,"nodeType":"Block","src":"12297:147:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5891,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"12311:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5894,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"12323:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5893,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5892,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:26","typeDescriptions":{}}},"id":5895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:26","memberName":"length","nodeType":"MemberAccess","src":"12317:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5898,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"12340:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5899,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"12348:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5906,"nodeType":"IfStatement","src":"12307:63:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5904,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5890,"id":5905,"nodeType":"Return","src":"12353:17:26"}},{"expression":{"arguments":[{"id":5908,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5880,"src":"12419:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5909,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"12426:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5910,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5884,"src":"12433:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5907,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"12387:31:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5890,"id":5912,"nodeType":"Return","src":"12380:57:26"}]},"documentation":{"id":5878,"nodeType":"StructuredDocumentation","src":"11895:241:26","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":5914,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:26","nodeType":"FunctionDefinition","parameters":{"id":5885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5880,"mutability":"mutable","name":"input","nameLocation":"12189:5:26","nodeType":"VariableDeclaration","scope":5914,"src":"12175:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5879,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5882,"mutability":"mutable","name":"begin","nameLocation":"12212:5:26","nodeType":"VariableDeclaration","scope":5914,"src":"12204:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5881,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5884,"mutability":"mutable","name":"end","nameLocation":"12235:3:26","nodeType":"VariableDeclaration","scope":5914,"src":"12227:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5883,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:26"},"returnParameters":{"id":5890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5887,"mutability":"mutable","name":"success","nameLocation":"12273:7:26","nodeType":"VariableDeclaration","scope":5914,"src":"12268:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5886,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5889,"mutability":"mutable","name":"value","nameLocation":"12290:5:26","nodeType":"VariableDeclaration","scope":5914,"src":"12282:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5888,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:26"},"scope":6431,"src":"12141:303:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6016,"nodeType":"Block","src":"12853:881:26","statements":[{"assignments":[5929],"declarations":[{"constant":false,"id":5929,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:26","nodeType":"VariableDeclaration","scope":6016,"src":"12863:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5928,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5934,"initialValue":{"arguments":[{"id":5932,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"12891:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5931,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5930,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:26","typeDescriptions":{}}},"id":5933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:26"},{"assignments":[5936],"declarations":[{"constant":false,"id":5936,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:26","nodeType":"VariableDeclaration","scope":6016,"src":"12945:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5935,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5956,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5937,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"12963:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5938,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"12969:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5942,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":5946,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"13013:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5947,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"13021:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5945,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"12990:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5944,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5943,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:26","typeDescriptions":{}}},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5950,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:26","typeDescriptions":{}}},"id":5953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:26"},{"assignments":[5958],"declarations":[{"constant":false,"id":5958,"mutability":"mutable","name":"offset","nameLocation":"13133:6:26","nodeType":"VariableDeclaration","scope":6016,"src":"13125:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5957,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5964,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5959,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5936,"src":"13142:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"13142:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:26"},{"assignments":[5966],"declarations":[{"constant":false,"id":5966,"mutability":"mutable","name":"result","nameLocation":"13183:6:26","nodeType":"VariableDeclaration","scope":6016,"src":"13175:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5965,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5968,"initialValue":{"hexValue":"30","id":5967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:26"},{"body":{"id":6010,"nodeType":"Block","src":"13250:447:26","statements":[{"assignments":[5982],"declarations":[{"constant":false,"id":5982,"mutability":"mutable","name":"chr","nameLocation":"13270:3:26","nodeType":"VariableDeclaration","scope":6010,"src":"13264:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5981,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5992,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":5987,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5929,"src":"13319:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5988,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"13327:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5986,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"13296:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5989,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5984,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:26","typeDescriptions":{}}},"id":5990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5983,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6252,"src":"13276:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":5991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5993,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"13349:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":5994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:26","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6000,"nodeType":"IfStatement","src":"13345:31:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5996,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":5997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":5998,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":5927,"id":5999,"nodeType":"Return","src":"13359:17:26"}},{"expression":{"id":6003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6001,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"13390:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":6002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:26","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6004,"nodeType":"ExpressionStatement","src":"13390:12:26"},{"id":6009,"nodeType":"UncheckedBlock","src":"13416:271:26","statements":[{"expression":{"id":6007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6005,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"13659:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":6006,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5982,"src":"13669:3:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6008,"nodeType":"ExpressionStatement","src":"13659:13:26"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5975,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"13236:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5976,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5921,"src":"13240:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6011,"initializationExpression":{"assignments":[5970],"declarations":[{"constant":false,"id":5970,"mutability":"mutable","name":"i","nameLocation":"13216:1:26","nodeType":"VariableDeclaration","scope":6011,"src":"13208:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5969,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5974,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5971,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5919,"src":"13220:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5972,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5958,"src":"13228:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:26","subExpression":{"id":5978,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5970,"src":"13247:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5980,"nodeType":"ExpressionStatement","src":"13245:3:26"},"nodeType":"ForStatement","src":"13203:494:26"},{"expression":{"components":[{"hexValue":"74727565","id":6012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":6013,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5966,"src":"13720:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6014,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":5927,"id":6015,"nodeType":"Return","src":"13706:21:26"}]},"documentation":{"id":5915,"nodeType":"StructuredDocumentation","src":"12450:227:26","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":6017,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:26","nodeType":"FunctionDefinition","parameters":{"id":5922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5917,"mutability":"mutable","name":"input","nameLocation":"12746:5:26","nodeType":"VariableDeclaration","scope":6017,"src":"12732:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5916,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5919,"mutability":"mutable","name":"begin","nameLocation":"12769:5:26","nodeType":"VariableDeclaration","scope":6017,"src":"12761:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5918,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5921,"mutability":"mutable","name":"end","nameLocation":"12792:3:26","nodeType":"VariableDeclaration","scope":6017,"src":"12784:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5920,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:26"},"returnParameters":{"id":5927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5924,"mutability":"mutable","name":"success","nameLocation":"12829:7:26","nodeType":"VariableDeclaration","scope":6017,"src":"12824:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5923,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5926,"mutability":"mutable","name":"value","nameLocation":"12846:5:26","nodeType":"VariableDeclaration","scope":6017,"src":"12838:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5925,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:26"},"scope":6431,"src":"12682:1052:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6035,"nodeType":"Block","src":"14032:67:26","statements":[{"expression":{"arguments":[{"id":6026,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"14062:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":6030,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6020,"src":"14078:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6028,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:26","typeDescriptions":{}}},"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:26","memberName":"length","nodeType":"MemberAccess","src":"14072:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6025,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[6036,6067],"referencedDeclaration":6067,"src":"14049:12:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":6033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6024,"id":6034,"nodeType":"Return","src":"14042:50:26"}]},"documentation":{"id":6018,"nodeType":"StructuredDocumentation","src":"13740:212:26","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":6036,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:26","nodeType":"FunctionDefinition","parameters":{"id":6021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6020,"mutability":"mutable","name":"input","nameLocation":"13993:5:26","nodeType":"VariableDeclaration","scope":6036,"src":"13979:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6019,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:26"},"returnParameters":{"id":6024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6023,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6036,"src":"14023:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6022,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:26"},"scope":6431,"src":"13957:142:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6066,"nodeType":"Block","src":"14472:165:26","statements":[{"assignments":[6049,6051],"declarations":[{"constant":false,"id":6049,"mutability":"mutable","name":"success","nameLocation":"14488:7:26","nodeType":"VariableDeclaration","scope":6066,"src":"14483:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6048,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6051,"mutability":"mutable","name":"value","nameLocation":"14505:5:26","nodeType":"VariableDeclaration","scope":6066,"src":"14497:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6050,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":6057,"initialValue":{"arguments":[{"id":6053,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6039,"src":"14530:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6054,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"14537:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6055,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6043,"src":"14544:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6052,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[6088,6192],"referencedDeclaration":6192,"src":"14514:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:26"},{"condition":{"id":6059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:26","subExpression":{"id":6058,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6049,"src":"14563:7:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6063,"nodeType":"IfStatement","src":"14558:50:26","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":6060,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5095,"src":"14579:27:26","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6062,"nodeType":"RevertStatement","src":"14572:36:26"}},{"expression":{"id":6064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6051,"src":"14625:5:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":6047,"id":6065,"nodeType":"Return","src":"14618:12:26"}]},"documentation":{"id":6037,"nodeType":"StructuredDocumentation","src":"14105:259:26","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":6067,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:26","nodeType":"FunctionDefinition","parameters":{"id":6044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6039,"mutability":"mutable","name":"input","nameLocation":"14405:5:26","nodeType":"VariableDeclaration","scope":6067,"src":"14391:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6038,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6041,"mutability":"mutable","name":"begin","nameLocation":"14420:5:26","nodeType":"VariableDeclaration","scope":6067,"src":"14412:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6040,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6043,"mutability":"mutable","name":"end","nameLocation":"14435:3:26","nodeType":"VariableDeclaration","scope":6067,"src":"14427:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6042,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:26"},"returnParameters":{"id":6047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6046,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6067,"src":"14463:7:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6045,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:26"},"scope":6431,"src":"14369:268:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6087,"nodeType":"Block","src":"14944:70:26","statements":[{"expression":{"arguments":[{"id":6078,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"14977:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":6082,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6070,"src":"14993:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6080,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:26","typeDescriptions":{}}},"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:26","memberName":"length","nodeType":"MemberAccess","src":"14987:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6077,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[6088,6192],"referencedDeclaration":6192,"src":"14961:15:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":6085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":6076,"id":6086,"nodeType":"Return","src":"14954:53:26"}]},"documentation":{"id":6068,"nodeType":"StructuredDocumentation","src":"14643:198:26","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":6088,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:26","nodeType":"FunctionDefinition","parameters":{"id":6071,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6070,"mutability":"mutable","name":"input","nameLocation":"14885:5:26","nodeType":"VariableDeclaration","scope":6088,"src":"14871:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6069,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:26"},"returnParameters":{"id":6076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6073,"mutability":"mutable","name":"success","nameLocation":"14920:7:26","nodeType":"VariableDeclaration","scope":6088,"src":"14915:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6072,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6075,"mutability":"mutable","name":"value","nameLocation":"14937:5:26","nodeType":"VariableDeclaration","scope":6088,"src":"14929:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6074,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:26"},"scope":6431,"src":"14846:168:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6191,"nodeType":"Block","src":"15407:733:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6102,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"15421:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":6105,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"15433:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6103,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:26","typeDescriptions":{}}},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:26","memberName":"length","nodeType":"MemberAccess","src":"15427:19:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6109,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"15450:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6110,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"15458:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6120,"nodeType":"IfStatement","src":"15417:72:26","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6114,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:26","typeDescriptions":{}}},"id":6117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6118,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":6101,"id":6119,"nodeType":"Return","src":"15463:26:26"}},{"assignments":[6122],"declarations":[{"constant":false,"id":6122,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:26","nodeType":"VariableDeclaration","scope":6191,"src":"15500:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6121,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":6145,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6123,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"15518:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6124,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"15524:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6128,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":6134,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"15574:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6132,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:26","typeDescriptions":{}}},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6136,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"15582:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6131,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"15545:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":6137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":6129,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:26","typeDescriptions":{}}},"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":6141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":6140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":6139,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:26","typeDescriptions":{}}},"id":6142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:26"},{"assignments":[6147],"declarations":[{"constant":false,"id":6147,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:26","nodeType":"VariableDeclaration","scope":6191,"src":"15686:22:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6146,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6155,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":6148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:26","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":6149,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6122,"src":"15716:9:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:26","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"15716:16:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":6152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:26"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6156,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"15803:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6157,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"15809:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":6159,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6147,"src":"15818:14:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6189,"nodeType":"Block","src":"16083:51:26","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":6182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6183,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:26","typeDescriptions":{}}},"id":6186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":6101,"id":6188,"nodeType":"Return","src":"16097:26:26"}]},"id":6190,"nodeType":"IfStatement","src":"15799:335:26","trueBody":{"id":6181,"nodeType":"Block","src":"15834:243:26","statements":[{"assignments":[6162,6164],"declarations":[{"constant":false,"id":6162,"mutability":"mutable","name":"s","nameLocation":"15955:1:26","nodeType":"VariableDeclaration","scope":6181,"src":"15950:6:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6161,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6164,"mutability":"mutable","name":"v","nameLocation":"15966:1:26","nodeType":"VariableDeclaration","scope":6181,"src":"15958:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6163,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6170,"initialValue":{"arguments":[{"id":6166,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6091,"src":"16003:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6167,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"16010:5:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6168,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6095,"src":"16017:3:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6165,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6017,"src":"15971:31:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:26"},{"expression":{"components":[{"id":6171,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6162,"src":"16043:1:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":6176,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6164,"src":"16062:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6175,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":6174,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:26","typeDescriptions":{}}},"id":6177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":6173,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:26","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6172,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:26","typeDescriptions":{}}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":6179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:26","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":6101,"id":6180,"nodeType":"Return","src":"16035:31:26"}]}}]},"documentation":{"id":6089,"nodeType":"StructuredDocumentation","src":"15020:226:26","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":6192,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:26","nodeType":"FunctionDefinition","parameters":{"id":6096,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6091,"mutability":"mutable","name":"input","nameLocation":"15299:5:26","nodeType":"VariableDeclaration","scope":6192,"src":"15285:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6090,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6093,"mutability":"mutable","name":"begin","nameLocation":"15322:5:26","nodeType":"VariableDeclaration","scope":6192,"src":"15314:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6092,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6095,"mutability":"mutable","name":"end","nameLocation":"15345:3:26","nodeType":"VariableDeclaration","scope":6192,"src":"15337:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6094,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:26"},"returnParameters":{"id":6101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6098,"mutability":"mutable","name":"success","nameLocation":"15383:7:26","nodeType":"VariableDeclaration","scope":6192,"src":"15378:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6097,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6100,"mutability":"mutable","name":"value","nameLocation":"15400:5:26","nodeType":"VariableDeclaration","scope":6192,"src":"15392:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6099,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:26"},"scope":6431,"src":"15251:889:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6251,"nodeType":"Block","src":"16209:461:26","statements":[{"assignments":[6200],"declarations":[{"constant":false,"id":6200,"mutability":"mutable","name":"value","nameLocation":"16225:5:26","nodeType":"VariableDeclaration","scope":6251,"src":"16219:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6199,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":6205,"initialValue":{"arguments":[{"id":6203,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6194,"src":"16239:3:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":6202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6201,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:26","typeDescriptions":{}}},"id":6204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:26"},{"id":6248,"nodeType":"UncheckedBlock","src":"16403:238:26","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"16431:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":6207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:26","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"16445:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":6210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:26","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6217,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"16491:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":6218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:26","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"16505:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":6221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:26","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"16552:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":6229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:26","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":6233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6231,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"16566:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":6232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:26","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":6241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6240,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:26","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":6239,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:26","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":6243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:26","memberName":"max","nodeType":"MemberAccess","src":"16615:15:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6198,"id":6244,"nodeType":"Return","src":"16608:22:26"},"id":6245,"nodeType":"IfStatement","src":"16548:82:26","trueBody":{"expression":{"id":6237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"16578:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":6236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:26","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6238,"nodeType":"ExpressionStatement","src":"16578:11:26"}},"id":6246,"nodeType":"IfStatement","src":"16487:143:26","trueBody":{"expression":{"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"16518:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":6225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:26","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6227,"nodeType":"ExpressionStatement","src":"16518:11:26"}},"id":6247,"nodeType":"IfStatement","src":"16427:203:26","trueBody":{"expression":{"id":6215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"16457:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":6214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:26","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":6216,"nodeType":"ExpressionStatement","src":"16457:11:26"}}]},{"expression":{"id":6249,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6200,"src":"16658:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":6198,"id":6250,"nodeType":"Return","src":"16651:12:26"}]},"id":6252,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:26","nodeType":"FunctionDefinition","parameters":{"id":6195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6194,"mutability":"mutable","name":"chr","nameLocation":"16175:3:26","nodeType":"VariableDeclaration","scope":6252,"src":"16168:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":6193,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:26"},"returnParameters":{"id":6198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6252,"src":"16202:5:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6196,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:26","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:26"},"scope":6431,"src":"16146:524:26","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6417,"nodeType":"Block","src":"17336:1331:26","statements":[{"assignments":[6261],"declarations":[{"constant":false,"id":6261,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:26","nodeType":"VariableDeclaration","scope":6417,"src":"17346:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6260,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6266,"initialValue":{"arguments":[{"id":6264,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"17374:5:26","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6263,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":6262,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:26","typeDescriptions":{}}},"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:26"},{"assignments":[6268],"declarations":[{"constant":false,"id":6268,"mutability":"mutable","name":"output","nameLocation":"17403:6:26","nodeType":"VariableDeclaration","scope":6417,"src":"17390:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6267,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6276,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:26","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":6272,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"17426:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:26","memberName":"length","nodeType":"MemberAccess","src":"17426:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:26","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6269,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:26"},{"assignments":[6278],"declarations":[{"constant":false,"id":6278,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:26","nodeType":"VariableDeclaration","scope":6417,"src":"17473:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6277,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6280,"initialValue":{"hexValue":"30","id":6279,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:26"},{"body":{"id":6409,"nodeType":"Block","src":"17548:854:26","statements":[{"assignments":[6292],"declarations":[{"constant":false,"id":6292,"mutability":"mutable","name":"char","nameLocation":"17569:4:26","nodeType":"VariableDeclaration","scope":6409,"src":"17562:11:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":6291,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":6300,"initialValue":{"arguments":[{"arguments":[{"id":6296,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"17606:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6297,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"17614:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6295,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6430,"src":"17583:22:26","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":6298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":6294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":6293,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:26","typeDescriptions":{}}},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:26"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6301,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5082,"src":"17637:20:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":6305,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"17672:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":6304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:26","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":6303,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:26","typeDescriptions":{}}},"id":6306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6310,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:26","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":6313,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":6407,"nodeType":"Block","src":"18330:62:26","statements":[{"expression":{"id":6405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6400,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"18348:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6403,"indexExpression":{"id":6402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:26","subExpression":{"id":6401,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"18355:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6404,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"18373:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6406,"nodeType":"ExpressionStatement","src":"18348:29:26"}]},"id":6408,"nodeType":"IfStatement","src":"17631:761:26","trueBody":{"id":6399,"nodeType":"Block","src":"17687:637:26","statements":[{"expression":{"id":6319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6314,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"17705:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6317,"indexExpression":{"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:26","subExpression":{"id":6315,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"17712:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":6318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6320,"nodeType":"ExpressionStatement","src":"17705:29:26"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6321,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"17756:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":6322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:26","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6331,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"17825:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":6332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:26","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6341,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"17894:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":6342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6351,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"17963:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":6352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:26","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6361,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"18032:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":6362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:26","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6371,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"18101:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":6372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:26","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6381,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6292,"src":"18171:4:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":6382,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:26","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6392,"nodeType":"IfStatement","src":"18167:143:26","trueBody":{"id":6391,"nodeType":"Block","src":"18185:125:26","statements":[{"expression":{"id":6389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6384,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"18263:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6387,"indexExpression":{"id":6386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:26","subExpression":{"id":6385,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"18270:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":6388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6390,"nodeType":"ExpressionStatement","src":"18263:28:26"}]}},"id":6393,"nodeType":"IfStatement","src":"18097:213:26","trueBody":{"expression":{"id":6379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6374,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"18115:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6377,"indexExpression":{"id":6376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:26","subExpression":{"id":6375,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"18122:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":6378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6380,"nodeType":"ExpressionStatement","src":"18115:29:26"}},"id":6394,"nodeType":"IfStatement","src":"18028:282:26","trueBody":{"expression":{"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6364,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"18046:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6367,"indexExpression":{"id":6366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:26","subExpression":{"id":6365,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"18053:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":6368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6370,"nodeType":"ExpressionStatement","src":"18046:28:26"}},"id":6395,"nodeType":"IfStatement","src":"17959:351:26","trueBody":{"expression":{"id":6359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6354,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"17977:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6357,"indexExpression":{"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:26","subExpression":{"id":6355,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"17984:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":6358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6360,"nodeType":"ExpressionStatement","src":"17977:28:26"}},"id":6396,"nodeType":"IfStatement","src":"17890:420:26","trueBody":{"expression":{"id":6349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6344,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"17908:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6347,"indexExpression":{"id":6346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:26","subExpression":{"id":6345,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"17915:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":6348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6350,"nodeType":"ExpressionStatement","src":"17908:28:26"}},"id":6397,"nodeType":"IfStatement","src":"17821:489:26","trueBody":{"expression":{"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6334,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"17839:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6337,"indexExpression":{"id":6336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:26","subExpression":{"id":6335,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"17846:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":6338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6340,"nodeType":"ExpressionStatement","src":"17839:28:26"}},"id":6398,"nodeType":"IfStatement","src":"17752:558:26","trueBody":{"expression":{"id":6329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6324,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"17770:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6327,"indexExpression":{"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:26","subExpression":{"id":6325,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6278,"src":"17777:12:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":6328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:26","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":6330,"nodeType":"ExpressionStatement","src":"17770:28:26"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6284,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"17524:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6285,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"17528:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:26","memberName":"length","nodeType":"MemberAccess","src":"17528:13:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6410,"initializationExpression":{"assignments":[6282],"declarations":[{"constant":false,"id":6282,"mutability":"mutable","name":"i","nameLocation":"17521:1:26","nodeType":"VariableDeclaration","scope":6410,"src":"17513:9:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6281,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6283,"nodeType":"VariableDeclarationStatement","src":"17513:9:26"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":6289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:26","subExpression":{"id":6288,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6282,"src":"17545:1:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6290,"nodeType":"ExpressionStatement","src":"17543:3:26"},"nodeType":"ForStatement","src":"17508:894:26"},{"AST":{"nativeSrc":"18500:129:26","nodeType":"YulBlock","src":"18500:129:26","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:26","nodeType":"YulIdentifier","src":"18521:6:26"},{"name":"outputLength","nativeSrc":"18529:12:26","nodeType":"YulIdentifier","src":"18529:12:26"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:26","nodeType":"YulIdentifier","src":"18514:6:26"},"nativeSrc":"18514:28:26","nodeType":"YulFunctionCall","src":"18514:28:26"},"nativeSrc":"18514:28:26","nodeType":"YulExpressionStatement","src":"18514:28:26"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:26","nodeType":"YulLiteral","src":"18562:4:26","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:26","nodeType":"YulIdentifier","src":"18572:6:26"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:26","nodeType":"YulLiteral","src":"18584:1:26","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:26","nodeType":"YulLiteral","src":"18591:1:26","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:26","nodeType":"YulIdentifier","src":"18598:12:26"},{"kind":"number","nativeSrc":"18612:2:26","nodeType":"YulLiteral","src":"18612:2:26","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:26","nodeType":"YulIdentifier","src":"18594:3:26"},"nativeSrc":"18594:21:26","nodeType":"YulFunctionCall","src":"18594:21:26"}],"functionName":{"name":"shr","nativeSrc":"18587:3:26","nodeType":"YulIdentifier","src":"18587:3:26"},"nativeSrc":"18587:29:26","nodeType":"YulFunctionCall","src":"18587:29:26"}],"functionName":{"name":"shl","nativeSrc":"18580:3:26","nodeType":"YulIdentifier","src":"18580:3:26"},"nativeSrc":"18580:37:26","nodeType":"YulFunctionCall","src":"18580:37:26"}],"functionName":{"name":"add","nativeSrc":"18568:3:26","nodeType":"YulIdentifier","src":"18568:3:26"},"nativeSrc":"18568:50:26","nodeType":"YulFunctionCall","src":"18568:50:26"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:26","nodeType":"YulIdentifier","src":"18555:6:26"},"nativeSrc":"18555:64:26","nodeType":"YulFunctionCall","src":"18555:64:26"},"nativeSrc":"18555:64:26","nodeType":"YulExpressionStatement","src":"18555:64:26"}]},"evmVersion":"paris","externalReferences":[{"declaration":6268,"isOffset":false,"isSlot":false,"src":"18521:6:26","valueSize":1},{"declaration":6268,"isOffset":false,"isSlot":false,"src":"18572:6:26","valueSize":1},{"declaration":6278,"isOffset":false,"isSlot":false,"src":"18529:12:26","valueSize":1},{"declaration":6278,"isOffset":false,"isSlot":false,"src":"18598:12:26","valueSize":1}],"flags":["memory-safe"],"id":6411,"nodeType":"InlineAssembly","src":"18475:154:26"},{"expression":{"arguments":[{"id":6414,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6268,"src":"18653:6:26","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:26","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":6412,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:26","typeDescriptions":{}}},"id":6415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":6259,"id":6416,"nodeType":"Return","src":"18639:21:26"}]},"documentation":{"id":6253,"nodeType":"StructuredDocumentation","src":"16676:576:26","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":6418,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:26","nodeType":"FunctionDefinition","parameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6255,"mutability":"mutable","name":"input","nameLocation":"17291:5:26","nodeType":"VariableDeclaration","scope":6418,"src":"17277:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6254,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:26"},"returnParameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6418,"src":"17321:13:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6257,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:26","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:26"},"scope":6431,"src":"17257:1410:26","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6429,"nodeType":"Block","src":"19052:225:26","statements":[{"AST":{"nativeSrc":"19201:70:26","nodeType":"YulBlock","src":"19201:70:26","statements":[{"nativeSrc":"19215:46:26","nodeType":"YulAssignment","src":"19215:46:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:26","nodeType":"YulIdentifier","src":"19238:6:26"},{"kind":"number","nativeSrc":"19246:4:26","nodeType":"YulLiteral","src":"19246:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:26","nodeType":"YulIdentifier","src":"19234:3:26"},"nativeSrc":"19234:17:26","nodeType":"YulFunctionCall","src":"19234:17:26"},{"name":"offset","nativeSrc":"19253:6:26","nodeType":"YulIdentifier","src":"19253:6:26"}],"functionName":{"name":"add","nativeSrc":"19230:3:26","nodeType":"YulIdentifier","src":"19230:3:26"},"nativeSrc":"19230:30:26","nodeType":"YulFunctionCall","src":"19230:30:26"}],"functionName":{"name":"mload","nativeSrc":"19224:5:26","nodeType":"YulIdentifier","src":"19224:5:26"},"nativeSrc":"19224:37:26","nodeType":"YulFunctionCall","src":"19224:37:26"},"variableNames":[{"name":"value","nativeSrc":"19215:5:26","nodeType":"YulIdentifier","src":"19215:5:26"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6421,"isOffset":false,"isSlot":false,"src":"19238:6:26","valueSize":1},{"declaration":6423,"isOffset":false,"isSlot":false,"src":"19253:6:26","valueSize":1},{"declaration":6426,"isOffset":false,"isSlot":false,"src":"19215:5:26","valueSize":1}],"flags":["memory-safe"],"id":6428,"nodeType":"InlineAssembly","src":"19176:95:26"}]},"documentation":{"id":6419,"nodeType":"StructuredDocumentation","src":"18673:268:26","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":6430,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:26","nodeType":"FunctionDefinition","parameters":{"id":6424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6421,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:26","nodeType":"VariableDeclaration","scope":6430,"src":"18978:19:26","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6420,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:26","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6423,"mutability":"mutable","name":"offset","nameLocation":"19007:6:26","nodeType":"VariableDeclaration","scope":6430,"src":"18999:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6422,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:26"},"returnParameters":{"id":6427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6426,"mutability":"mutable","name":"value","nameLocation":"19045:5:26","nodeType":"VariableDeclaration","scope":6430,"src":"19037:13:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":6425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:26","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:26"},"scope":6431,"src":"18946:331:26","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":6432,"src":"297:18982:26","usedErrors":[5089,5092,5095],"usedEvents":[]}],"src":"101:19179:26"},"id":26},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[6455],"IERC165":[6467]},"id":6456,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6433,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:27"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":6435,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6456,"sourceUnit":6468,"src":"140:38:27","symbolAliases":[{"foreign":{"id":6434,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"148:7:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":6437,"name":"IERC165","nameLocations":["688:7:27"],"nodeType":"IdentifierPath","referencedDeclaration":6467,"src":"688:7:27"},"id":6438,"nodeType":"InheritanceSpecifier","src":"688:7:27"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":6436,"nodeType":"StructuredDocumentation","src":"180:479:27","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":6455,"linearizedBaseContracts":[6455,6467],"name":"ERC165","nameLocation":"678:6:27","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[6466],"body":{"id":6453,"nodeType":"Block","src":"812:64:27","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6446,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6441,"src":"829:11:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":6448,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6467,"src":"849:7:27","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$6467_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$6467_$","typeString":"type(contract IERC165)"}],"id":6447,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:27","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:27","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$6467","typeString":"type(contract IERC165)"}},"id":6450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:27","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":6445,"id":6452,"nodeType":"Return","src":"822:47:27"}]},"documentation":{"id":6439,"nodeType":"StructuredDocumentation","src":"702:23:27","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":6454,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:27","nodeType":"FunctionDefinition","parameters":{"id":6442,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6441,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:27","nodeType":"VariableDeclaration","scope":6454,"src":"757:18:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6440,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:27","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:27"},"returnParameters":{"id":6445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6444,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6454,"src":"806:4:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6443,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:27"},"scope":6455,"src":"730:146:27","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":6456,"src":"660:218:27","usedErrors":[],"usedEvents":[]}],"src":"114:765:27"},"id":27},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[6467]},"id":6468,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6457,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:28"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":6458,"nodeType":"StructuredDocumentation","src":"142:280:28","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":6467,"linearizedBaseContracts":[6467],"name":"IERC165","nameLocation":"433:7:28","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":6459,"nodeType":"StructuredDocumentation","src":"447:340:28","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":6466,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:28","nodeType":"FunctionDefinition","parameters":{"id":6462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6461,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:28","nodeType":"VariableDeclaration","scope":6466,"src":"819:18:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":6460,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:28","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:28"},"returnParameters":{"id":6465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6466,"src":"862:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6463,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:28"},"scope":6467,"src":"792:76:28","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":6468,"src":"423:447:28","usedErrors":[],"usedEvents":[]}],"src":"115:756:28"},"id":28},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[8088],"Panic":[4706],"SafeCast":[9853]},"id":8089,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6469,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:29"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":6471,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8089,"sourceUnit":4707,"src":"129:35:29","symbolAliases":[{"foreign":{"id":6470,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"137:5:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6473,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8089,"sourceUnit":9854,"src":"165:40:29","symbolAliases":[{"foreign":{"id":6472,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"173:8:29","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":6474,"nodeType":"StructuredDocumentation","src":"207:73:29","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8088,"linearizedBaseContracts":[8088],"name":"Math","nameLocation":"289:4:29","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":6479,"members":[{"id":6475,"name":"Floor","nameLocation":"324:5:29","nodeType":"EnumValue","src":"324:5:29"},{"id":6476,"name":"Ceil","nameLocation":"367:4:29","nodeType":"EnumValue","src":"367:4:29"},{"id":6477,"name":"Trunc","nameLocation":"409:5:29","nodeType":"EnumValue","src":"409:5:29"},{"id":6478,"name":"Expand","nameLocation":"439:6:29","nodeType":"EnumValue","src":"439:6:29"}],"name":"Rounding","nameLocation":"305:8:29","nodeType":"EnumDefinition","src":"300:169:29"},{"body":{"id":6492,"nodeType":"Block","src":"731:112:29","statements":[{"AST":{"nativeSrc":"766:71:29","nodeType":"YulBlock","src":"766:71:29","statements":[{"nativeSrc":"780:16:29","nodeType":"YulAssignment","src":"780:16:29","value":{"arguments":[{"name":"a","nativeSrc":"791:1:29","nodeType":"YulIdentifier","src":"791:1:29"},{"name":"b","nativeSrc":"794:1:29","nodeType":"YulIdentifier","src":"794:1:29"}],"functionName":{"name":"add","nativeSrc":"787:3:29","nodeType":"YulIdentifier","src":"787:3:29"},"nativeSrc":"787:9:29","nodeType":"YulFunctionCall","src":"787:9:29"},"variableNames":[{"name":"low","nativeSrc":"780:3:29","nodeType":"YulIdentifier","src":"780:3:29"}]},{"nativeSrc":"809:18:29","nodeType":"YulAssignment","src":"809:18:29","value":{"arguments":[{"name":"low","nativeSrc":"820:3:29","nodeType":"YulIdentifier","src":"820:3:29"},{"name":"a","nativeSrc":"825:1:29","nodeType":"YulIdentifier","src":"825:1:29"}],"functionName":{"name":"lt","nativeSrc":"817:2:29","nodeType":"YulIdentifier","src":"817:2:29"},"nativeSrc":"817:10:29","nodeType":"YulFunctionCall","src":"817:10:29"},"variableNames":[{"name":"high","nativeSrc":"809:4:29","nodeType":"YulIdentifier","src":"809:4:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6482,"isOffset":false,"isSlot":false,"src":"791:1:29","valueSize":1},{"declaration":6482,"isOffset":false,"isSlot":false,"src":"825:1:29","valueSize":1},{"declaration":6484,"isOffset":false,"isSlot":false,"src":"794:1:29","valueSize":1},{"declaration":6487,"isOffset":false,"isSlot":false,"src":"809:4:29","valueSize":1},{"declaration":6489,"isOffset":false,"isSlot":false,"src":"780:3:29","valueSize":1},{"declaration":6489,"isOffset":false,"isSlot":false,"src":"820:3:29","valueSize":1}],"flags":["memory-safe"],"id":6491,"nodeType":"InlineAssembly","src":"741:96:29"}]},"documentation":{"id":6480,"nodeType":"StructuredDocumentation","src":"475:163:29","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":6493,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:29","nodeType":"FunctionDefinition","parameters":{"id":6485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6482,"mutability":"mutable","name":"a","nameLocation":"667:1:29","nodeType":"VariableDeclaration","scope":6493,"src":"659:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6481,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6484,"mutability":"mutable","name":"b","nameLocation":"678:1:29","nodeType":"VariableDeclaration","scope":6493,"src":"670:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6483,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:29"},"returnParameters":{"id":6490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6487,"mutability":"mutable","name":"high","nameLocation":"712:4:29","nodeType":"VariableDeclaration","scope":6493,"src":"704:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6486,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6489,"mutability":"mutable","name":"low","nameLocation":"726:3:29","nodeType":"VariableDeclaration","scope":6493,"src":"718:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6488,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:29"},"scope":8088,"src":"643:200:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6506,"nodeType":"Block","src":"1115:462:29","statements":[{"AST":{"nativeSrc":"1437:134:29","nodeType":"YulBlock","src":"1437:134:29","statements":[{"nativeSrc":"1451:30:29","nodeType":"YulVariableDeclaration","src":"1451:30:29","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:29","nodeType":"YulIdentifier","src":"1468:1:29"},{"name":"b","nativeSrc":"1471:1:29","nodeType":"YulIdentifier","src":"1471:1:29"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:29","nodeType":"YulLiteral","src":"1478:1:29","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:29","nodeType":"YulIdentifier","src":"1474:3:29"},"nativeSrc":"1474:6:29","nodeType":"YulFunctionCall","src":"1474:6:29"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:29","nodeType":"YulIdentifier","src":"1461:6:29"},"nativeSrc":"1461:20:29","nodeType":"YulFunctionCall","src":"1461:20:29"},"variables":[{"name":"mm","nativeSrc":"1455:2:29","nodeType":"YulTypedName","src":"1455:2:29","type":""}]},{"nativeSrc":"1494:16:29","nodeType":"YulAssignment","src":"1494:16:29","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:29","nodeType":"YulIdentifier","src":"1505:1:29"},{"name":"b","nativeSrc":"1508:1:29","nodeType":"YulIdentifier","src":"1508:1:29"}],"functionName":{"name":"mul","nativeSrc":"1501:3:29","nodeType":"YulIdentifier","src":"1501:3:29"},"nativeSrc":"1501:9:29","nodeType":"YulFunctionCall","src":"1501:9:29"},"variableNames":[{"name":"low","nativeSrc":"1494:3:29","nodeType":"YulIdentifier","src":"1494:3:29"}]},{"nativeSrc":"1523:38:29","nodeType":"YulAssignment","src":"1523:38:29","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:29","nodeType":"YulIdentifier","src":"1539:2:29"},{"name":"low","nativeSrc":"1543:3:29","nodeType":"YulIdentifier","src":"1543:3:29"}],"functionName":{"name":"sub","nativeSrc":"1535:3:29","nodeType":"YulIdentifier","src":"1535:3:29"},"nativeSrc":"1535:12:29","nodeType":"YulFunctionCall","src":"1535:12:29"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:29","nodeType":"YulIdentifier","src":"1552:2:29"},{"name":"low","nativeSrc":"1556:3:29","nodeType":"YulIdentifier","src":"1556:3:29"}],"functionName":{"name":"lt","nativeSrc":"1549:2:29","nodeType":"YulIdentifier","src":"1549:2:29"},"nativeSrc":"1549:11:29","nodeType":"YulFunctionCall","src":"1549:11:29"}],"functionName":{"name":"sub","nativeSrc":"1531:3:29","nodeType":"YulIdentifier","src":"1531:3:29"},"nativeSrc":"1531:30:29","nodeType":"YulFunctionCall","src":"1531:30:29"},"variableNames":[{"name":"high","nativeSrc":"1523:4:29","nodeType":"YulIdentifier","src":"1523:4:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6496,"isOffset":false,"isSlot":false,"src":"1468:1:29","valueSize":1},{"declaration":6496,"isOffset":false,"isSlot":false,"src":"1505:1:29","valueSize":1},{"declaration":6498,"isOffset":false,"isSlot":false,"src":"1471:1:29","valueSize":1},{"declaration":6498,"isOffset":false,"isSlot":false,"src":"1508:1:29","valueSize":1},{"declaration":6501,"isOffset":false,"isSlot":false,"src":"1523:4:29","valueSize":1},{"declaration":6503,"isOffset":false,"isSlot":false,"src":"1494:3:29","valueSize":1},{"declaration":6503,"isOffset":false,"isSlot":false,"src":"1543:3:29","valueSize":1},{"declaration":6503,"isOffset":false,"isSlot":false,"src":"1556:3:29","valueSize":1}],"flags":["memory-safe"],"id":6505,"nodeType":"InlineAssembly","src":"1412:159:29"}]},"documentation":{"id":6494,"nodeType":"StructuredDocumentation","src":"849:173:29","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":6507,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:29","nodeType":"FunctionDefinition","parameters":{"id":6499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6496,"mutability":"mutable","name":"a","nameLocation":"1051:1:29","nodeType":"VariableDeclaration","scope":6507,"src":"1043:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6495,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6498,"mutability":"mutable","name":"b","nameLocation":"1062:1:29","nodeType":"VariableDeclaration","scope":6507,"src":"1054:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:29"},"returnParameters":{"id":6504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6501,"mutability":"mutable","name":"high","nameLocation":"1096:4:29","nodeType":"VariableDeclaration","scope":6507,"src":"1088:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6500,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6503,"mutability":"mutable","name":"low","nameLocation":"1110:3:29","nodeType":"VariableDeclaration","scope":6507,"src":"1102:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6502,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:29"},"scope":8088,"src":"1027:550:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6541,"nodeType":"Block","src":"1784:149:29","statements":[{"id":6540,"nodeType":"UncheckedBlock","src":"1794:133:29","statements":[{"assignments":[6520],"declarations":[{"constant":false,"id":6520,"mutability":"mutable","name":"c","nameLocation":"1826:1:29","nodeType":"VariableDeclaration","scope":6540,"src":"1818:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6524,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6521,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"1830:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6522,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6512,"src":"1834:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:29"},{"expression":{"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6525,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"1849:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6526,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"1859:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6527,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6510,"src":"1864:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6530,"nodeType":"ExpressionStatement","src":"1849:16:29"},{"expression":{"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6531,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6517,"src":"1879:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6532,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6520,"src":"1888:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6535,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"1908:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6533,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"1892:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"1892:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6539,"nodeType":"ExpressionStatement","src":"1879:37:29"}]}]},"documentation":{"id":6508,"nodeType":"StructuredDocumentation","src":"1583:105:29","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":6542,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:29","nodeType":"FunctionDefinition","parameters":{"id":6513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6510,"mutability":"mutable","name":"a","nameLocation":"1717:1:29","nodeType":"VariableDeclaration","scope":6542,"src":"1709:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6509,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6512,"mutability":"mutable","name":"b","nameLocation":"1728:1:29","nodeType":"VariableDeclaration","scope":6542,"src":"1720:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6511,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:29"},"returnParameters":{"id":6518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6515,"mutability":"mutable","name":"success","nameLocation":"1759:7:29","nodeType":"VariableDeclaration","scope":6542,"src":"1754:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6514,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6517,"mutability":"mutable","name":"result","nameLocation":"1776:6:29","nodeType":"VariableDeclaration","scope":6542,"src":"1768:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6516,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:29"},"scope":8088,"src":"1693:240:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6576,"nodeType":"Block","src":"2143:149:29","statements":[{"id":6575,"nodeType":"UncheckedBlock","src":"2153:133:29","statements":[{"assignments":[6555],"declarations":[{"constant":false,"id":6555,"mutability":"mutable","name":"c","nameLocation":"2185:1:29","nodeType":"VariableDeclaration","scope":6575,"src":"2177:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6554,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6559,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6556,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"2189:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6557,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6547,"src":"2193:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:29"},{"expression":{"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6560,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"2208:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6561,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"2218:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6562,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6545,"src":"2223:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6565,"nodeType":"ExpressionStatement","src":"2208:16:29"},{"expression":{"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6566,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6552,"src":"2238:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6567,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"2247:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6570,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6550,"src":"2267:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6568,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"2251:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"2251:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6574,"nodeType":"ExpressionStatement","src":"2238:37:29"}]}]},"documentation":{"id":6543,"nodeType":"StructuredDocumentation","src":"1939:108:29","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":6577,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:29","nodeType":"FunctionDefinition","parameters":{"id":6548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6545,"mutability":"mutable","name":"a","nameLocation":"2076:1:29","nodeType":"VariableDeclaration","scope":6577,"src":"2068:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6544,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6547,"mutability":"mutable","name":"b","nameLocation":"2087:1:29","nodeType":"VariableDeclaration","scope":6577,"src":"2079:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6546,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:29"},"returnParameters":{"id":6553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6550,"mutability":"mutable","name":"success","nameLocation":"2118:7:29","nodeType":"VariableDeclaration","scope":6577,"src":"2113:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6549,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6552,"mutability":"mutable","name":"result","nameLocation":"2135:6:29","nodeType":"VariableDeclaration","scope":6577,"src":"2127:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6551,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:29"},"scope":8088,"src":"2052:240:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6606,"nodeType":"Block","src":"2505:391:29","statements":[{"id":6605,"nodeType":"UncheckedBlock","src":"2515:375:29","statements":[{"assignments":[6590],"declarations":[{"constant":false,"id":6590,"mutability":"mutable","name":"c","nameLocation":"2547:1:29","nodeType":"VariableDeclaration","scope":6605,"src":"2539:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6589,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6594,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6591,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6580,"src":"2551:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6592,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6582,"src":"2555:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:29"},{"AST":{"nativeSrc":"2595:188:29","nodeType":"YulBlock","src":"2595:188:29","statements":[{"nativeSrc":"2727:42:29","nodeType":"YulAssignment","src":"2727:42:29","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:29","nodeType":"YulIdentifier","src":"2748:1:29"},{"name":"a","nativeSrc":"2751:1:29","nodeType":"YulIdentifier","src":"2751:1:29"}],"functionName":{"name":"div","nativeSrc":"2744:3:29","nodeType":"YulIdentifier","src":"2744:3:29"},"nativeSrc":"2744:9:29","nodeType":"YulFunctionCall","src":"2744:9:29"},{"name":"b","nativeSrc":"2755:1:29","nodeType":"YulIdentifier","src":"2755:1:29"}],"functionName":{"name":"eq","nativeSrc":"2741:2:29","nodeType":"YulIdentifier","src":"2741:2:29"},"nativeSrc":"2741:16:29","nodeType":"YulFunctionCall","src":"2741:16:29"},{"arguments":[{"name":"a","nativeSrc":"2766:1:29","nodeType":"YulIdentifier","src":"2766:1:29"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:29","nodeType":"YulIdentifier","src":"2759:6:29"},"nativeSrc":"2759:9:29","nodeType":"YulFunctionCall","src":"2759:9:29"}],"functionName":{"name":"or","nativeSrc":"2738:2:29","nodeType":"YulIdentifier","src":"2738:2:29"},"nativeSrc":"2738:31:29","nodeType":"YulFunctionCall","src":"2738:31:29"},"variableNames":[{"name":"success","nativeSrc":"2727:7:29","nodeType":"YulIdentifier","src":"2727:7:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6580,"isOffset":false,"isSlot":false,"src":"2751:1:29","valueSize":1},{"declaration":6580,"isOffset":false,"isSlot":false,"src":"2766:1:29","valueSize":1},{"declaration":6582,"isOffset":false,"isSlot":false,"src":"2755:1:29","valueSize":1},{"declaration":6590,"isOffset":false,"isSlot":false,"src":"2748:1:29","valueSize":1},{"declaration":6585,"isOffset":false,"isSlot":false,"src":"2727:7:29","valueSize":1}],"flags":["memory-safe"],"id":6595,"nodeType":"InlineAssembly","src":"2570:213:29"},{"expression":{"id":6603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6596,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6587,"src":"2842:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6597,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6590,"src":"2851:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6600,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"2871:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6598,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"2855:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":6599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"2855:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6604,"nodeType":"ExpressionStatement","src":"2842:37:29"}]}]},"documentation":{"id":6578,"nodeType":"StructuredDocumentation","src":"2298:111:29","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":6607,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:29","nodeType":"FunctionDefinition","parameters":{"id":6583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6580,"mutability":"mutable","name":"a","nameLocation":"2438:1:29","nodeType":"VariableDeclaration","scope":6607,"src":"2430:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6579,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6582,"mutability":"mutable","name":"b","nameLocation":"2449:1:29","nodeType":"VariableDeclaration","scope":6607,"src":"2441:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6581,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:29"},"returnParameters":{"id":6588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"mutability":"mutable","name":"success","nameLocation":"2480:7:29","nodeType":"VariableDeclaration","scope":6607,"src":"2475:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6584,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6587,"mutability":"mutable","name":"result","nameLocation":"2497:6:29","nodeType":"VariableDeclaration","scope":6607,"src":"2489:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6586,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:29"},"scope":8088,"src":"2414:482:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6627,"nodeType":"Block","src":"3111:231:29","statements":[{"id":6626,"nodeType":"UncheckedBlock","src":"3121:215:29","statements":[{"expression":{"id":6623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6619,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"3145:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6620,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6612,"src":"3155:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6624,"nodeType":"ExpressionStatement","src":"3145:15:29"},{"AST":{"nativeSrc":"3199:127:29","nodeType":"YulBlock","src":"3199:127:29","statements":[{"nativeSrc":"3293:19:29","nodeType":"YulAssignment","src":"3293:19:29","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:29","nodeType":"YulIdentifier","src":"3307:1:29"},{"name":"b","nativeSrc":"3310:1:29","nodeType":"YulIdentifier","src":"3310:1:29"}],"functionName":{"name":"div","nativeSrc":"3303:3:29","nodeType":"YulIdentifier","src":"3303:3:29"},"nativeSrc":"3303:9:29","nodeType":"YulFunctionCall","src":"3303:9:29"},"variableNames":[{"name":"result","nativeSrc":"3293:6:29","nodeType":"YulIdentifier","src":"3293:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6610,"isOffset":false,"isSlot":false,"src":"3307:1:29","valueSize":1},{"declaration":6612,"isOffset":false,"isSlot":false,"src":"3310:1:29","valueSize":1},{"declaration":6617,"isOffset":false,"isSlot":false,"src":"3293:6:29","valueSize":1}],"flags":["memory-safe"],"id":6625,"nodeType":"InlineAssembly","src":"3174:152:29"}]}]},"documentation":{"id":6608,"nodeType":"StructuredDocumentation","src":"2902:113:29","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":6628,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:29","nodeType":"FunctionDefinition","parameters":{"id":6613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6610,"mutability":"mutable","name":"a","nameLocation":"3044:1:29","nodeType":"VariableDeclaration","scope":6628,"src":"3036:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6609,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6612,"mutability":"mutable","name":"b","nameLocation":"3055:1:29","nodeType":"VariableDeclaration","scope":6628,"src":"3047:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6611,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:29"},"returnParameters":{"id":6618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6615,"mutability":"mutable","name":"success","nameLocation":"3086:7:29","nodeType":"VariableDeclaration","scope":6628,"src":"3081:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6614,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6617,"mutability":"mutable","name":"result","nameLocation":"3103:6:29","nodeType":"VariableDeclaration","scope":6628,"src":"3095:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6616,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:29"},"scope":8088,"src":"3020:322:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6648,"nodeType":"Block","src":"3567:231:29","statements":[{"id":6647,"nodeType":"UncheckedBlock","src":"3577:215:29","statements":[{"expression":{"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6640,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6636,"src":"3601:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6641,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6633,"src":"3611:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6645,"nodeType":"ExpressionStatement","src":"3601:15:29"},{"AST":{"nativeSrc":"3655:127:29","nodeType":"YulBlock","src":"3655:127:29","statements":[{"nativeSrc":"3749:19:29","nodeType":"YulAssignment","src":"3749:19:29","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:29","nodeType":"YulIdentifier","src":"3763:1:29"},{"name":"b","nativeSrc":"3766:1:29","nodeType":"YulIdentifier","src":"3766:1:29"}],"functionName":{"name":"mod","nativeSrc":"3759:3:29","nodeType":"YulIdentifier","src":"3759:3:29"},"nativeSrc":"3759:9:29","nodeType":"YulFunctionCall","src":"3759:9:29"},"variableNames":[{"name":"result","nativeSrc":"3749:6:29","nodeType":"YulIdentifier","src":"3749:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6631,"isOffset":false,"isSlot":false,"src":"3763:1:29","valueSize":1},{"declaration":6633,"isOffset":false,"isSlot":false,"src":"3766:1:29","valueSize":1},{"declaration":6638,"isOffset":false,"isSlot":false,"src":"3749:6:29","valueSize":1}],"flags":["memory-safe"],"id":6646,"nodeType":"InlineAssembly","src":"3630:152:29"}]}]},"documentation":{"id":6629,"nodeType":"StructuredDocumentation","src":"3348:123:29","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":6649,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:29","nodeType":"FunctionDefinition","parameters":{"id":6634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6631,"mutability":"mutable","name":"a","nameLocation":"3500:1:29","nodeType":"VariableDeclaration","scope":6649,"src":"3492:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6630,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6633,"mutability":"mutable","name":"b","nameLocation":"3511:1:29","nodeType":"VariableDeclaration","scope":6649,"src":"3503:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6632,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:29"},"returnParameters":{"id":6639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6636,"mutability":"mutable","name":"success","nameLocation":"3542:7:29","nodeType":"VariableDeclaration","scope":6649,"src":"3537:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6635,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6638,"mutability":"mutable","name":"result","nameLocation":"3559:6:29","nodeType":"VariableDeclaration","scope":6649,"src":"3551:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6637,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:29"},"scope":8088,"src":"3476:322:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6678,"nodeType":"Block","src":"3989:122:29","statements":[{"assignments":[6660,6662],"declarations":[{"constant":false,"id":6660,"mutability":"mutable","name":"success","nameLocation":"4005:7:29","nodeType":"VariableDeclaration","scope":6678,"src":"4000:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6659,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6662,"mutability":"mutable","name":"result","nameLocation":"4022:6:29","nodeType":"VariableDeclaration","scope":6678,"src":"4014:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6661,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6667,"initialValue":{"arguments":[{"id":6664,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6652,"src":"4039:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6665,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"4042:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6663,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6542,"src":"4032:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:29"},{"expression":{"arguments":[{"id":6669,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6660,"src":"4069:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"4078:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6672,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6671,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:29","memberName":"max","nodeType":"MemberAccess","src":"4086:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6668,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"4061:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6658,"id":6677,"nodeType":"Return","src":"4054:50:29"}]},"documentation":{"id":6650,"nodeType":"StructuredDocumentation","src":"3804:103:29","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6679,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:29","nodeType":"FunctionDefinition","parameters":{"id":6655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6652,"mutability":"mutable","name":"a","nameLocation":"3943:1:29","nodeType":"VariableDeclaration","scope":6679,"src":"3935:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6651,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6654,"mutability":"mutable","name":"b","nameLocation":"3954:1:29","nodeType":"VariableDeclaration","scope":6679,"src":"3946:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6653,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:29"},"returnParameters":{"id":6658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6679,"src":"3980:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6656,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:29"},"scope":8088,"src":"3912:199:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6698,"nodeType":"Block","src":"4294:73:29","statements":[{"assignments":[null,6690],"declarations":[null,{"constant":false,"id":6690,"mutability":"mutable","name":"result","nameLocation":"4315:6:29","nodeType":"VariableDeclaration","scope":6698,"src":"4307:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6689,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6695,"initialValue":{"arguments":[{"id":6692,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6682,"src":"4332:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6693,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6684,"src":"4335:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6691,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6577,"src":"4325:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:29"},{"expression":{"id":6696,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6690,"src":"4354:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6688,"id":6697,"nodeType":"Return","src":"4347:13:29"}]},"documentation":{"id":6680,"nodeType":"StructuredDocumentation","src":"4117:95:29","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":6699,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:29","nodeType":"FunctionDefinition","parameters":{"id":6685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6682,"mutability":"mutable","name":"a","nameLocation":"4248:1:29","nodeType":"VariableDeclaration","scope":6699,"src":"4240:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6681,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6684,"mutability":"mutable","name":"b","nameLocation":"4259:1:29","nodeType":"VariableDeclaration","scope":6699,"src":"4251:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6683,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:29"},"returnParameters":{"id":6688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6699,"src":"4285:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6686,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:29"},"scope":8088,"src":"4217:150:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6728,"nodeType":"Block","src":"4564:122:29","statements":[{"assignments":[6710,6712],"declarations":[{"constant":false,"id":6710,"mutability":"mutable","name":"success","nameLocation":"4580:7:29","nodeType":"VariableDeclaration","scope":6728,"src":"4575:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6709,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6712,"mutability":"mutable","name":"result","nameLocation":"4597:6:29","nodeType":"VariableDeclaration","scope":6728,"src":"4589:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6711,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6717,"initialValue":{"arguments":[{"id":6714,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6702,"src":"4614:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6715,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6704,"src":"4617:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6713,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6607,"src":"4607:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":6716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:29"},{"expression":{"arguments":[{"id":6719,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"4644:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6712,"src":"4653:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":6723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6722,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:29","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":6721,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:29","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":6725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:29","memberName":"max","nodeType":"MemberAccess","src":"4661:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6718,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"4636:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6708,"id":6727,"nodeType":"Return","src":"4629:50:29"}]},"documentation":{"id":6700,"nodeType":"StructuredDocumentation","src":"4373:109:29","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":6729,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:29","nodeType":"FunctionDefinition","parameters":{"id":6705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6702,"mutability":"mutable","name":"a","nameLocation":"4518:1:29","nodeType":"VariableDeclaration","scope":6729,"src":"4510:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6701,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6704,"mutability":"mutable","name":"b","nameLocation":"4529:1:29","nodeType":"VariableDeclaration","scope":6729,"src":"4521:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6703,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:29"},"returnParameters":{"id":6708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6707,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6729,"src":"4555:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6706,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:29"},"scope":8088,"src":"4487:199:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6755,"nodeType":"Block","src":"5158:207:29","statements":[{"id":6754,"nodeType":"UncheckedBlock","src":"5168:191:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6741,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"5306:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6742,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6734,"src":"5312:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6743,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6736,"src":"5316:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6748,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6732,"src":"5337:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6746,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"5321:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":6747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"5321:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6751,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6740,"id":6753,"nodeType":"Return","src":"5299:49:29"}]}]},"documentation":{"id":6730,"nodeType":"StructuredDocumentation","src":"4692:374:29","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6756,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:29","nodeType":"FunctionDefinition","parameters":{"id":6737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6732,"mutability":"mutable","name":"condition","nameLocation":"5093:9:29","nodeType":"VariableDeclaration","scope":6756,"src":"5088:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6731,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6734,"mutability":"mutable","name":"a","nameLocation":"5112:1:29","nodeType":"VariableDeclaration","scope":6756,"src":"5104:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6733,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6736,"mutability":"mutable","name":"b","nameLocation":"5123:1:29","nodeType":"VariableDeclaration","scope":6756,"src":"5115:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6735,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:29"},"returnParameters":{"id":6740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6756,"src":"5149:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6738,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:29"},"scope":8088,"src":"5071:294:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6774,"nodeType":"Block","src":"5502:44:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6767,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"5527:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6768,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"5531:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6759,"src":"5534:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6771,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6761,"src":"5537:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6766,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"5519:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6765,"id":6773,"nodeType":"Return","src":"5512:27:29"}]},"documentation":{"id":6757,"nodeType":"StructuredDocumentation","src":"5371:59:29","text":" @dev Returns the largest of two numbers."},"id":6775,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:29","nodeType":"FunctionDefinition","parameters":{"id":6762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6759,"mutability":"mutable","name":"a","nameLocation":"5456:1:29","nodeType":"VariableDeclaration","scope":6775,"src":"5448:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6758,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6761,"mutability":"mutable","name":"b","nameLocation":"5467:1:29","nodeType":"VariableDeclaration","scope":6775,"src":"5459:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6760,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:29"},"returnParameters":{"id":6765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6764,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6775,"src":"5493:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6763,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:29"},"scope":8088,"src":"5435:111:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6793,"nodeType":"Block","src":"5684:44:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6786,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"5709:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6787,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"5713:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6789,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6778,"src":"5716:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6790,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6780,"src":"5719:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6785,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"5701:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6784,"id":6792,"nodeType":"Return","src":"5694:27:29"}]},"documentation":{"id":6776,"nodeType":"StructuredDocumentation","src":"5552:60:29","text":" @dev Returns the smallest of two numbers."},"id":6794,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:29","nodeType":"FunctionDefinition","parameters":{"id":6781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6778,"mutability":"mutable","name":"a","nameLocation":"5638:1:29","nodeType":"VariableDeclaration","scope":6794,"src":"5630:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6777,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6780,"mutability":"mutable","name":"b","nameLocation":"5649:1:29","nodeType":"VariableDeclaration","scope":6794,"src":"5641:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6779,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:29"},"returnParameters":{"id":6784,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6783,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6794,"src":"5675:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6782,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:29"},"scope":8088,"src":"5617:111:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6816,"nodeType":"Block","src":"5912:82:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6806,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6804,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"5967:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6805,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"5971:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6807,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6808,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"5977:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6809,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"5981:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6811,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":6812,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6803,"id":6815,"nodeType":"Return","src":"5959:28:29"}]},"documentation":{"id":6795,"nodeType":"StructuredDocumentation","src":"5734:102:29","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":6817,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:29","nodeType":"FunctionDefinition","parameters":{"id":6800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6797,"mutability":"mutable","name":"a","nameLocation":"5866:1:29","nodeType":"VariableDeclaration","scope":6817,"src":"5858:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6796,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6799,"mutability":"mutable","name":"b","nameLocation":"5877:1:29","nodeType":"VariableDeclaration","scope":6817,"src":"5869:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6798,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:29"},"returnParameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6817,"src":"5903:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6801,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:29"},"scope":8088,"src":"5841:153:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6857,"nodeType":"Block","src":"6286:633:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6827,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"6300:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6838,"nodeType":"IfStatement","src":"6296:150:29","trueBody":{"id":6837,"nodeType":"Block","src":"6308:138:29","statements":[{"expression":{"arguments":[{"expression":{"id":6833,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"6412:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4706_$","typeString":"type(library Panic)"}},"id":6834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:29","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4673,"src":"6412:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6830,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"6400:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4706_$","typeString":"type(library Panic)"}},"id":6832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:29","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4705,"src":"6400:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6836,"nodeType":"ExpressionStatement","src":"6400:35:29"}]}},{"id":6856,"nodeType":"UncheckedBlock","src":"6829:84:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6841,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"6876:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6839,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"6860:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":6840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"6860:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6845,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6820,"src":"6887:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":6846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6848,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6849,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"6896:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6853,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6826,"id":6855,"nodeType":"Return","src":"6853:49:29"}]}]},"documentation":{"id":6818,"nodeType":"StructuredDocumentation","src":"6000:210:29","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":6858,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:29","nodeType":"FunctionDefinition","parameters":{"id":6823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6820,"mutability":"mutable","name":"a","nameLocation":"6240:1:29","nodeType":"VariableDeclaration","scope":6858,"src":"6232:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6822,"mutability":"mutable","name":"b","nameLocation":"6251:1:29","nodeType":"VariableDeclaration","scope":6858,"src":"6243:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6821,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:29"},"returnParameters":{"id":6826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6825,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6858,"src":"6277:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6824,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:29"},"scope":8088,"src":"6215:704:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6993,"nodeType":"Block","src":"7340:3585:29","statements":[{"id":6992,"nodeType":"UncheckedBlock","src":"7350:3569:29","statements":[{"assignments":[6871,6873],"declarations":[{"constant":false,"id":6871,"mutability":"mutable","name":"high","nameLocation":"7383:4:29","nodeType":"VariableDeclaration","scope":6992,"src":"7375:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6870,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6873,"mutability":"mutable","name":"low","nameLocation":"7397:3:29","nodeType":"VariableDeclaration","scope":6992,"src":"7389:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6872,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6878,"initialValue":{"arguments":[{"id":6875,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6861,"src":"7411:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6876,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6863,"src":"7414:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6874,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"7404:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6879,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"7498:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6880,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6887,"nodeType":"IfStatement","src":"7494:365:29","trueBody":{"id":6886,"nodeType":"Block","src":"7509:350:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6882,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"7827:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6883,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"7833:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6869,"id":6885,"nodeType":"Return","src":"7820:24:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6888,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"7969:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":6889,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"7984:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6906,"nodeType":"IfStatement","src":"7965:142:29","trueBody":{"id":6905,"nodeType":"Block","src":"7990:117:29","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6895,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"8028:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":6898,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"8046:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4706_$","typeString":"type(library Panic)"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:29","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4673,"src":"8046:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6900,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"8070:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4706_$","typeString":"type(library Panic)"}},"id":6901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:29","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"8070:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6894,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"8020:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6891,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"8008:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4706_$","typeString":"type(library Panic)"}},"id":6893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:29","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4705,"src":"8008:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6904,"nodeType":"ExpressionStatement","src":"8008:84:29"}]}},{"assignments":[6908],"declarations":[{"constant":false,"id":6908,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:29","nodeType":"VariableDeclaration","scope":6992,"src":"8359:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6907,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6909,"nodeType":"VariableDeclarationStatement","src":"8359:17:29"},{"AST":{"nativeSrc":"8415:283:29","nodeType":"YulBlock","src":"8415:283:29","statements":[{"nativeSrc":"8484:38:29","nodeType":"YulAssignment","src":"8484:38:29","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:29","nodeType":"YulIdentifier","src":"8504:1:29"},{"name":"y","nativeSrc":"8507:1:29","nodeType":"YulIdentifier","src":"8507:1:29"},{"name":"denominator","nativeSrc":"8510:11:29","nodeType":"YulIdentifier","src":"8510:11:29"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:29","nodeType":"YulIdentifier","src":"8497:6:29"},"nativeSrc":"8497:25:29","nodeType":"YulFunctionCall","src":"8497:25:29"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:29","nodeType":"YulIdentifier","src":"8484:9:29"}]},{"nativeSrc":"8604:37:29","nodeType":"YulAssignment","src":"8604:37:29","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:29","nodeType":"YulIdentifier","src":"8616:4:29"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:29","nodeType":"YulIdentifier","src":"8625:9:29"},{"name":"low","nativeSrc":"8636:3:29","nodeType":"YulIdentifier","src":"8636:3:29"}],"functionName":{"name":"gt","nativeSrc":"8622:2:29","nodeType":"YulIdentifier","src":"8622:2:29"},"nativeSrc":"8622:18:29","nodeType":"YulFunctionCall","src":"8622:18:29"}],"functionName":{"name":"sub","nativeSrc":"8612:3:29","nodeType":"YulIdentifier","src":"8612:3:29"},"nativeSrc":"8612:29:29","nodeType":"YulFunctionCall","src":"8612:29:29"},"variableNames":[{"name":"high","nativeSrc":"8604:4:29","nodeType":"YulIdentifier","src":"8604:4:29"}]},{"nativeSrc":"8658:26:29","nodeType":"YulAssignment","src":"8658:26:29","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:29","nodeType":"YulIdentifier","src":"8669:3:29"},{"name":"remainder","nativeSrc":"8674:9:29","nodeType":"YulIdentifier","src":"8674:9:29"}],"functionName":{"name":"sub","nativeSrc":"8665:3:29","nodeType":"YulIdentifier","src":"8665:3:29"},"nativeSrc":"8665:19:29","nodeType":"YulFunctionCall","src":"8665:19:29"},"variableNames":[{"name":"low","nativeSrc":"8658:3:29","nodeType":"YulIdentifier","src":"8658:3:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6865,"isOffset":false,"isSlot":false,"src":"8510:11:29","valueSize":1},{"declaration":6871,"isOffset":false,"isSlot":false,"src":"8604:4:29","valueSize":1},{"declaration":6871,"isOffset":false,"isSlot":false,"src":"8616:4:29","valueSize":1},{"declaration":6873,"isOffset":false,"isSlot":false,"src":"8636:3:29","valueSize":1},{"declaration":6873,"isOffset":false,"isSlot":false,"src":"8658:3:29","valueSize":1},{"declaration":6873,"isOffset":false,"isSlot":false,"src":"8669:3:29","valueSize":1},{"declaration":6908,"isOffset":false,"isSlot":false,"src":"8484:9:29","valueSize":1},{"declaration":6908,"isOffset":false,"isSlot":false,"src":"8625:9:29","valueSize":1},{"declaration":6908,"isOffset":false,"isSlot":false,"src":"8674:9:29","valueSize":1},{"declaration":6861,"isOffset":false,"isSlot":false,"src":"8504:1:29","valueSize":1},{"declaration":6863,"isOffset":false,"isSlot":false,"src":"8507:1:29","valueSize":1}],"flags":["memory-safe"],"id":6910,"nodeType":"InlineAssembly","src":"8390:308:29"},{"assignments":[6912],"declarations":[{"constant":false,"id":6912,"mutability":"mutable","name":"twos","nameLocation":"8910:4:29","nodeType":"VariableDeclaration","scope":6992,"src":"8902:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6911,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6919,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6913,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"8917:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":6914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6915,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"8936:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6917,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:29"},{"AST":{"nativeSrc":"8987:359:29","nodeType":"YulBlock","src":"8987:359:29","statements":[{"nativeSrc":"9052:37:29","nodeType":"YulAssignment","src":"9052:37:29","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:29","nodeType":"YulIdentifier","src":"9071:11:29"},{"name":"twos","nativeSrc":"9084:4:29","nodeType":"YulIdentifier","src":"9084:4:29"}],"functionName":{"name":"div","nativeSrc":"9067:3:29","nodeType":"YulIdentifier","src":"9067:3:29"},"nativeSrc":"9067:22:29","nodeType":"YulFunctionCall","src":"9067:22:29"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:29","nodeType":"YulIdentifier","src":"9052:11:29"}]},{"nativeSrc":"9153:21:29","nodeType":"YulAssignment","src":"9153:21:29","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:29","nodeType":"YulIdentifier","src":"9164:3:29"},{"name":"twos","nativeSrc":"9169:4:29","nodeType":"YulIdentifier","src":"9169:4:29"}],"functionName":{"name":"div","nativeSrc":"9160:3:29","nodeType":"YulIdentifier","src":"9160:3:29"},"nativeSrc":"9160:14:29","nodeType":"YulFunctionCall","src":"9160:14:29"},"variableNames":[{"name":"low","nativeSrc":"9153:3:29","nodeType":"YulIdentifier","src":"9153:3:29"}]},{"nativeSrc":"9293:39:29","nodeType":"YulAssignment","src":"9293:39:29","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:29","nodeType":"YulLiteral","src":"9313:1:29","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:29","nodeType":"YulIdentifier","src":"9316:4:29"}],"functionName":{"name":"sub","nativeSrc":"9309:3:29","nodeType":"YulIdentifier","src":"9309:3:29"},"nativeSrc":"9309:12:29","nodeType":"YulFunctionCall","src":"9309:12:29"},{"name":"twos","nativeSrc":"9323:4:29","nodeType":"YulIdentifier","src":"9323:4:29"}],"functionName":{"name":"div","nativeSrc":"9305:3:29","nodeType":"YulIdentifier","src":"9305:3:29"},"nativeSrc":"9305:23:29","nodeType":"YulFunctionCall","src":"9305:23:29"},{"kind":"number","nativeSrc":"9330:1:29","nodeType":"YulLiteral","src":"9330:1:29","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:29","nodeType":"YulIdentifier","src":"9301:3:29"},"nativeSrc":"9301:31:29","nodeType":"YulFunctionCall","src":"9301:31:29"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:29","nodeType":"YulIdentifier","src":"9293:4:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6865,"isOffset":false,"isSlot":false,"src":"9052:11:29","valueSize":1},{"declaration":6865,"isOffset":false,"isSlot":false,"src":"9071:11:29","valueSize":1},{"declaration":6873,"isOffset":false,"isSlot":false,"src":"9153:3:29","valueSize":1},{"declaration":6873,"isOffset":false,"isSlot":false,"src":"9164:3:29","valueSize":1},{"declaration":6912,"isOffset":false,"isSlot":false,"src":"9084:4:29","valueSize":1},{"declaration":6912,"isOffset":false,"isSlot":false,"src":"9169:4:29","valueSize":1},{"declaration":6912,"isOffset":false,"isSlot":false,"src":"9293:4:29","valueSize":1},{"declaration":6912,"isOffset":false,"isSlot":false,"src":"9316:4:29","valueSize":1},{"declaration":6912,"isOffset":false,"isSlot":false,"src":"9323:4:29","valueSize":1}],"flags":["memory-safe"],"id":6920,"nodeType":"InlineAssembly","src":"8962:384:29"},{"expression":{"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6921,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"9409:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6922,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6871,"src":"9416:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6923,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6912,"src":"9423:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6926,"nodeType":"ExpressionStatement","src":"9409:18:29"},{"assignments":[6928],"declarations":[{"constant":false,"id":6928,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:29","nodeType":"VariableDeclaration","scope":6992,"src":"9762:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6927,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6935,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:29","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6930,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"9785:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6932,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":6933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:29"},{"expression":{"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6936,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10018:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6938,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"10033:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6939,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10047:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6943,"nodeType":"ExpressionStatement","src":"10018:36:29"},{"expression":{"id":6950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6944,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10088:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6946,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"10103:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6947,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10117:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6951,"nodeType":"ExpressionStatement","src":"10088:36:29"},{"expression":{"id":6958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6952,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10160:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6954,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"10175:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6955,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10189:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6959,"nodeType":"ExpressionStatement","src":"10160:36:29"},{"expression":{"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6960,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10231:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6962,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"10246:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6963,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10260:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6967,"nodeType":"ExpressionStatement","src":"10231:36:29"},{"expression":{"id":6974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6968,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10304:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6970,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"10319:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6971,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10333:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6975,"nodeType":"ExpressionStatement","src":"10304:36:29"},{"expression":{"id":6982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6976,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10378:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":6977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6978,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6865,"src":"10393:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6979,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10407:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6983,"nodeType":"ExpressionStatement","src":"10378:36:29"},{"expression":{"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"10859:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6985,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"10868:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6986,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6928,"src":"10874:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6989,"nodeType":"ExpressionStatement","src":"10859:22:29"},{"expression":{"id":6990,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6868,"src":"10902:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6869,"id":6991,"nodeType":"Return","src":"10895:13:29"}]}]},"documentation":{"id":6859,"nodeType":"StructuredDocumentation","src":"6925:312:29","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":6994,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:29","nodeType":"FunctionDefinition","parameters":{"id":6866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6861,"mutability":"mutable","name":"x","nameLocation":"7266:1:29","nodeType":"VariableDeclaration","scope":6994,"src":"7258:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6860,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6863,"mutability":"mutable","name":"y","nameLocation":"7277:1:29","nodeType":"VariableDeclaration","scope":6994,"src":"7269:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6862,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6865,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:29","nodeType":"VariableDeclaration","scope":6994,"src":"7280:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6864,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:29"},"returnParameters":{"id":6869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6868,"mutability":"mutable","name":"result","nameLocation":"7332:6:29","nodeType":"VariableDeclaration","scope":6994,"src":"7324:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6867,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:29"},"scope":8088,"src":"7242:3683:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7030,"nodeType":"Block","src":"11164:128:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7010,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"11188:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7011,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"11191:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7012,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"11194:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7009,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[6994,7031],"referencedDeclaration":6994,"src":"11181:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7017,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7004,"src":"11242:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}],"id":7016,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"11225:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6479_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7020,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6997,"src":"11262:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7021,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6999,"src":"11265:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7022,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7001,"src":"11268:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7019,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:29","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":7023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7014,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"11209:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"11209:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7008,"id":7029,"nodeType":"Return","src":"11174:111:29"}]},"documentation":{"id":6995,"nodeType":"StructuredDocumentation","src":"10931:118:29","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":7031,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:29","nodeType":"FunctionDefinition","parameters":{"id":7005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6997,"mutability":"mutable","name":"x","nameLocation":"11078:1:29","nodeType":"VariableDeclaration","scope":7031,"src":"11070:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6996,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6999,"mutability":"mutable","name":"y","nameLocation":"11089:1:29","nodeType":"VariableDeclaration","scope":7031,"src":"11081:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6998,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7001,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:29","nodeType":"VariableDeclaration","scope":7031,"src":"11092:19:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7000,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7004,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:29","nodeType":"VariableDeclaration","scope":7031,"src":"11113:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"},"typeName":{"id":7003,"nodeType":"UserDefinedTypeName","pathNode":{"id":7002,"name":"Rounding","nameLocations":["11113:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":6479,"src":"11113:8:29"},"referencedDeclaration":6479,"src":"11113:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:29"},"returnParameters":{"id":7008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7031,"src":"11155:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7006,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:29"},"scope":8088,"src":"11054:238:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7080,"nodeType":"Block","src":"11500:245:29","statements":[{"id":7079,"nodeType":"UncheckedBlock","src":"11510:229:29","statements":[{"assignments":[7044,7046],"declarations":[{"constant":false,"id":7044,"mutability":"mutable","name":"high","nameLocation":"11543:4:29","nodeType":"VariableDeclaration","scope":7079,"src":"11535:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7043,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7046,"mutability":"mutable","name":"low","nameLocation":"11557:3:29","nodeType":"VariableDeclaration","scope":7079,"src":"11549:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7045,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7051,"initialValue":{"arguments":[{"id":7048,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7034,"src":"11571:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7049,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7036,"src":"11574:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7047,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6507,"src":"11564:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":7050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7052,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"11594:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7054,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"11607:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7065,"nodeType":"IfStatement","src":"11590:86:29","trueBody":{"id":7064,"nodeType":"Block","src":"11610:66:29","statements":[{"expression":{"arguments":[{"expression":{"id":7060,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"11640:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4706_$","typeString":"type(library Panic)"}},"id":7061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:29","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":4669,"src":"11640:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7057,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"11628:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4706_$","typeString":"type(library Panic)"}},"id":7059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:29","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4705,"src":"11628:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7063,"nodeType":"ExpressionStatement","src":"11628:33:29"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7066,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7044,"src":"11697:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":7069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":7067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:29","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":7068,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"11712:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":7070,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:29","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7072,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7073,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7046,"src":"11719:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7074,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"11726:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7042,"id":7078,"nodeType":"Return","src":"11689:39:29"}]}]},"documentation":{"id":7032,"nodeType":"StructuredDocumentation","src":"11298:111:29","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":7081,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:29","nodeType":"FunctionDefinition","parameters":{"id":7039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7034,"mutability":"mutable","name":"x","nameLocation":"11438:1:29","nodeType":"VariableDeclaration","scope":7081,"src":"11430:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7033,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7036,"mutability":"mutable","name":"y","nameLocation":"11449:1:29","nodeType":"VariableDeclaration","scope":7081,"src":"11441:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7035,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7038,"mutability":"mutable","name":"n","nameLocation":"11458:1:29","nodeType":"VariableDeclaration","scope":7081,"src":"11452:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7037,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:29"},"returnParameters":{"id":7042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7041,"mutability":"mutable","name":"result","nameLocation":"11492:6:29","nodeType":"VariableDeclaration","scope":7081,"src":"11484:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7040,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:29"},"scope":8088,"src":"11414:331:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7119,"nodeType":"Block","src":"11963:113:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7097,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7084,"src":"11987:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7098,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"11990:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7099,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"11993:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":7096,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[7081,7120],"referencedDeclaration":7081,"src":"11980:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":7100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7104,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7091,"src":"12031:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}],"id":7103,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"12014:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6479_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7107,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7084,"src":"12051:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7108,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7086,"src":"12054:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7110,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7088,"src":"12062:1:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7106,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:29","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":7113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7101,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"11998:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"11998:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7095,"id":7118,"nodeType":"Return","src":"11973:96:29"}]},"documentation":{"id":7082,"nodeType":"StructuredDocumentation","src":"11751:109:29","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":7120,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:29","nodeType":"FunctionDefinition","parameters":{"id":7092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7084,"mutability":"mutable","name":"x","nameLocation":"11889:1:29","nodeType":"VariableDeclaration","scope":7120,"src":"11881:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7083,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7086,"mutability":"mutable","name":"y","nameLocation":"11900:1:29","nodeType":"VariableDeclaration","scope":7120,"src":"11892:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7085,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7088,"mutability":"mutable","name":"n","nameLocation":"11909:1:29","nodeType":"VariableDeclaration","scope":7120,"src":"11903:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7087,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7091,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:29","nodeType":"VariableDeclaration","scope":7120,"src":"11912:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"},"typeName":{"id":7090,"nodeType":"UserDefinedTypeName","pathNode":{"id":7089,"name":"Rounding","nameLocations":["11912:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":6479,"src":"11912:8:29"},"referencedDeclaration":6479,"src":"11912:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:29"},"returnParameters":{"id":7095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7094,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7120,"src":"11954:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7093,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:29"},"scope":8088,"src":"11865:211:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7216,"nodeType":"Block","src":"12710:1849:29","statements":[{"id":7215,"nodeType":"UncheckedBlock","src":"12720:1833:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7130,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"12748:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7135,"nodeType":"IfStatement","src":"12744:20:29","trueBody":{"expression":{"hexValue":"30","id":7133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7129,"id":7134,"nodeType":"Return","src":"12756:8:29"}},{"assignments":[7137],"declarations":[{"constant":false,"id":7137,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:29","nodeType":"VariableDeclaration","scope":7215,"src":"13235:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7136,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7141,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7138,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7123,"src":"13255:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":7139,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"13259:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:29"},{"assignments":[7143],"declarations":[{"constant":false,"id":7143,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:29","nodeType":"VariableDeclaration","scope":7215,"src":"13274:11:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7142,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7145,"initialValue":{"id":7144,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"13288:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:29"},{"assignments":[7147],"declarations":[{"constant":false,"id":7147,"mutability":"mutable","name":"x","nameLocation":"13432:1:29","nodeType":"VariableDeclaration","scope":7215,"src":"13425:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7146,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7149,"initialValue":{"hexValue":"30","id":7148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:29"},{"assignments":[7151],"declarations":[{"constant":false,"id":7151,"mutability":"mutable","name":"y","nameLocation":"13458:1:29","nodeType":"VariableDeclaration","scope":7215,"src":"13451:8:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7150,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":7153,"initialValue":{"hexValue":"31","id":7152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:29"},{"body":{"id":7190,"nodeType":"Block","src":"13501:882:29","statements":[{"assignments":[7158],"declarations":[{"constant":false,"id":7158,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:29","nodeType":"VariableDeclaration","scope":7190,"src":"13519:16:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7157,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7162,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7159,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"13538:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7160,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"13544:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:29"},{"expression":{"id":7173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7163,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"13573:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7164,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"13578:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7165,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":7166,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"13678:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7167,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"13923:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7168,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"13929:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7169,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7158,"src":"13941:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:29","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7174,"nodeType":"ExpressionStatement","src":"13572:395:29"},{"expression":{"id":7188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":7175,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"13987:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":7176,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"13990:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7177,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":7178,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"14072:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7179,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"14326:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7180,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"14330:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":7183,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7158,"src":"14341:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:29","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":7181,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:29","typeDescriptions":{}}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":7187,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:29","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7189,"nodeType":"ExpressionStatement","src":"13986:382:29"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7154,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7137,"src":"13485:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7191,"nodeType":"WhileStatement","src":"13478:905:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7192,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7143,"src":"14401:3:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":7193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7197,"nodeType":"IfStatement","src":"14397:22:29","trueBody":{"expression":{"hexValue":"30","id":7195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7129,"id":7196,"nodeType":"Return","src":"14411:8:29"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7199,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"14470:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7202,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7125,"src":"14477:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":7206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:29","subExpression":{"id":7205,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"14490:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7203,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:29","typeDescriptions":{}}},"id":7207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":7211,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7147,"src":"14502:1:29","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7209,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:29","typeDescriptions":{}}},"id":7212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7198,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6756,"src":"14462:7:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":7213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7129,"id":7214,"nodeType":"Return","src":"14455:50:29"}]}]},"documentation":{"id":7121,"nodeType":"StructuredDocumentation","src":"12082:553:29","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":7217,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:29","nodeType":"FunctionDefinition","parameters":{"id":7126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7123,"mutability":"mutable","name":"a","nameLocation":"12664:1:29","nodeType":"VariableDeclaration","scope":7217,"src":"12656:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7122,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7125,"mutability":"mutable","name":"n","nameLocation":"12675:1:29","nodeType":"VariableDeclaration","scope":7217,"src":"12667:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7124,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:29"},"returnParameters":{"id":7129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7217,"src":"12701:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7127,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:29"},"scope":8088,"src":"12640:1919:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7237,"nodeType":"Block","src":"15159:82:29","statements":[{"id":7236,"nodeType":"UncheckedBlock","src":"15169:66:29","statements":[{"expression":{"arguments":[{"id":7229,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7220,"src":"15212:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7230,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"15215:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":7231,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7233,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"15222:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7227,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8088,"src":"15200:4:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$8088_$","typeString":"type(library Math)"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:29","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":7274,"src":"15200:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":7234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7226,"id":7235,"nodeType":"Return","src":"15193:31:29"}]}]},"documentation":{"id":7218,"nodeType":"StructuredDocumentation","src":"14565:514:29","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":7238,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:29","nodeType":"FunctionDefinition","parameters":{"id":7223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7220,"mutability":"mutable","name":"a","nameLocation":"15113:1:29","nodeType":"VariableDeclaration","scope":7238,"src":"15105:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7219,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7222,"mutability":"mutable","name":"p","nameLocation":"15124:1:29","nodeType":"VariableDeclaration","scope":7238,"src":"15116:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7221,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:29"},"returnParameters":{"id":7226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7225,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7238,"src":"15150:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7224,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:29"},"scope":8088,"src":"15084:157:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7273,"nodeType":"Block","src":"16011:174:29","statements":[{"assignments":[7251,7253],"declarations":[{"constant":false,"id":7251,"mutability":"mutable","name":"success","nameLocation":"16027:7:29","nodeType":"VariableDeclaration","scope":7273,"src":"16022:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7250,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7253,"mutability":"mutable","name":"result","nameLocation":"16044:6:29","nodeType":"VariableDeclaration","scope":7273,"src":"16036:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7252,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7259,"initialValue":{"arguments":[{"id":7255,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7241,"src":"16064:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7256,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7243,"src":"16067:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7257,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7245,"src":"16070:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7254,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[7298,7380],"referencedDeclaration":7298,"src":"16054:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:29"},{"condition":{"id":7261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:29","subExpression":{"id":7260,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7251,"src":"16087:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7270,"nodeType":"IfStatement","src":"16082:74:29","trueBody":{"id":7269,"nodeType":"Block","src":"16096:60:29","statements":[{"expression":{"arguments":[{"expression":{"id":7265,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"16122:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4706_$","typeString":"type(library Panic)"}},"id":7266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:29","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4673,"src":"16122:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7262,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"16110:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4706_$","typeString":"type(library Panic)"}},"id":7264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:29","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4705,"src":"16110:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7268,"nodeType":"ExpressionStatement","src":"16110:35:29"}]}},{"expression":{"id":7271,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7253,"src":"16172:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7249,"id":7272,"nodeType":"Return","src":"16165:13:29"}]},"documentation":{"id":7239,"nodeType":"StructuredDocumentation","src":"15247:678:29","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":7274,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:29","nodeType":"FunctionDefinition","parameters":{"id":7246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7241,"mutability":"mutable","name":"b","nameLocation":"15954:1:29","nodeType":"VariableDeclaration","scope":7274,"src":"15946:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7240,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7243,"mutability":"mutable","name":"e","nameLocation":"15965:1:29","nodeType":"VariableDeclaration","scope":7274,"src":"15957:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7242,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7245,"mutability":"mutable","name":"m","nameLocation":"15976:1:29","nodeType":"VariableDeclaration","scope":7274,"src":"15968:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7244,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:29"},"returnParameters":{"id":7249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7274,"src":"16002:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7247,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:29"},"scope":8088,"src":"15930:255:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7297,"nodeType":"Block","src":"17039:1493:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7288,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7281,"src":"17053:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7295,"nodeType":"IfStatement","src":"17049:29:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":7291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":7292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":7293,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":7287,"id":7294,"nodeType":"Return","src":"17061:17:29"}},{"AST":{"nativeSrc":"17113:1413:29","nodeType":"YulBlock","src":"17113:1413:29","statements":[{"nativeSrc":"17127:22:29","nodeType":"YulVariableDeclaration","src":"17127:22:29","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:29","nodeType":"YulLiteral","src":"17144:4:29","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:29","nodeType":"YulIdentifier","src":"17138:5:29"},"nativeSrc":"17138:11:29","nodeType":"YulFunctionCall","src":"17138:11:29"},"variables":[{"name":"ptr","nativeSrc":"17131:3:29","nodeType":"YulTypedName","src":"17131:3:29","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:29","nodeType":"YulIdentifier","src":"18057:3:29"},{"kind":"number","nativeSrc":"18062:4:29","nodeType":"YulLiteral","src":"18062:4:29","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:29","nodeType":"YulIdentifier","src":"18050:6:29"},"nativeSrc":"18050:17:29","nodeType":"YulFunctionCall","src":"18050:17:29"},"nativeSrc":"18050:17:29","nodeType":"YulExpressionStatement","src":"18050:17:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:29","nodeType":"YulIdentifier","src":"18091:3:29"},{"kind":"number","nativeSrc":"18096:4:29","nodeType":"YulLiteral","src":"18096:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:29","nodeType":"YulIdentifier","src":"18087:3:29"},"nativeSrc":"18087:14:29","nodeType":"YulFunctionCall","src":"18087:14:29"},{"kind":"number","nativeSrc":"18103:4:29","nodeType":"YulLiteral","src":"18103:4:29","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:29","nodeType":"YulIdentifier","src":"18080:6:29"},"nativeSrc":"18080:28:29","nodeType":"YulFunctionCall","src":"18080:28:29"},"nativeSrc":"18080:28:29","nodeType":"YulExpressionStatement","src":"18080:28:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:29","nodeType":"YulIdentifier","src":"18132:3:29"},{"kind":"number","nativeSrc":"18137:4:29","nodeType":"YulLiteral","src":"18137:4:29","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:29","nodeType":"YulIdentifier","src":"18128:3:29"},"nativeSrc":"18128:14:29","nodeType":"YulFunctionCall","src":"18128:14:29"},{"kind":"number","nativeSrc":"18144:4:29","nodeType":"YulLiteral","src":"18144:4:29","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:29","nodeType":"YulIdentifier","src":"18121:6:29"},"nativeSrc":"18121:28:29","nodeType":"YulFunctionCall","src":"18121:28:29"},"nativeSrc":"18121:28:29","nodeType":"YulExpressionStatement","src":"18121:28:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:29","nodeType":"YulIdentifier","src":"18173:3:29"},{"kind":"number","nativeSrc":"18178:4:29","nodeType":"YulLiteral","src":"18178:4:29","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:29","nodeType":"YulIdentifier","src":"18169:3:29"},"nativeSrc":"18169:14:29","nodeType":"YulFunctionCall","src":"18169:14:29"},{"name":"b","nativeSrc":"18185:1:29","nodeType":"YulIdentifier","src":"18185:1:29"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:29","nodeType":"YulIdentifier","src":"18162:6:29"},"nativeSrc":"18162:25:29","nodeType":"YulFunctionCall","src":"18162:25:29"},"nativeSrc":"18162:25:29","nodeType":"YulExpressionStatement","src":"18162:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:29","nodeType":"YulIdentifier","src":"18211:3:29"},{"kind":"number","nativeSrc":"18216:4:29","nodeType":"YulLiteral","src":"18216:4:29","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:29","nodeType":"YulIdentifier","src":"18207:3:29"},"nativeSrc":"18207:14:29","nodeType":"YulFunctionCall","src":"18207:14:29"},{"name":"e","nativeSrc":"18223:1:29","nodeType":"YulIdentifier","src":"18223:1:29"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:29","nodeType":"YulIdentifier","src":"18200:6:29"},"nativeSrc":"18200:25:29","nodeType":"YulFunctionCall","src":"18200:25:29"},"nativeSrc":"18200:25:29","nodeType":"YulExpressionStatement","src":"18200:25:29"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:29","nodeType":"YulIdentifier","src":"18249:3:29"},{"kind":"number","nativeSrc":"18254:4:29","nodeType":"YulLiteral","src":"18254:4:29","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:29","nodeType":"YulIdentifier","src":"18245:3:29"},"nativeSrc":"18245:14:29","nodeType":"YulFunctionCall","src":"18245:14:29"},{"name":"m","nativeSrc":"18261:1:29","nodeType":"YulIdentifier","src":"18261:1:29"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:29","nodeType":"YulIdentifier","src":"18238:6:29"},"nativeSrc":"18238:25:29","nodeType":"YulFunctionCall","src":"18238:25:29"},"nativeSrc":"18238:25:29","nodeType":"YulExpressionStatement","src":"18238:25:29"},{"nativeSrc":"18425:57:29","nodeType":"YulAssignment","src":"18425:57:29","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:29","nodeType":"YulIdentifier","src":"18447:3:29"},"nativeSrc":"18447:5:29","nodeType":"YulFunctionCall","src":"18447:5:29"},{"kind":"number","nativeSrc":"18454:4:29","nodeType":"YulLiteral","src":"18454:4:29","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:29","nodeType":"YulIdentifier","src":"18460:3:29"},{"kind":"number","nativeSrc":"18465:4:29","nodeType":"YulLiteral","src":"18465:4:29","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:29","nodeType":"YulLiteral","src":"18471:4:29","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:29","nodeType":"YulLiteral","src":"18477:4:29","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:29","nodeType":"YulIdentifier","src":"18436:10:29"},"nativeSrc":"18436:46:29","nodeType":"YulFunctionCall","src":"18436:46:29"},"variableNames":[{"name":"success","nativeSrc":"18425:7:29","nodeType":"YulIdentifier","src":"18425:7:29"}]},{"nativeSrc":"18495:21:29","nodeType":"YulAssignment","src":"18495:21:29","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:29","nodeType":"YulLiteral","src":"18511:4:29","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:29","nodeType":"YulIdentifier","src":"18505:5:29"},"nativeSrc":"18505:11:29","nodeType":"YulFunctionCall","src":"18505:11:29"},"variableNames":[{"name":"result","nativeSrc":"18495:6:29","nodeType":"YulIdentifier","src":"18495:6:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7277,"isOffset":false,"isSlot":false,"src":"18185:1:29","valueSize":1},{"declaration":7279,"isOffset":false,"isSlot":false,"src":"18223:1:29","valueSize":1},{"declaration":7281,"isOffset":false,"isSlot":false,"src":"18261:1:29","valueSize":1},{"declaration":7286,"isOffset":false,"isSlot":false,"src":"18495:6:29","valueSize":1},{"declaration":7284,"isOffset":false,"isSlot":false,"src":"18425:7:29","valueSize":1}],"flags":["memory-safe"],"id":7296,"nodeType":"InlineAssembly","src":"17088:1438:29"}]},"documentation":{"id":7275,"nodeType":"StructuredDocumentation","src":"16191:738:29","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":7298,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:29","nodeType":"FunctionDefinition","parameters":{"id":7282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7277,"mutability":"mutable","name":"b","nameLocation":"16961:1:29","nodeType":"VariableDeclaration","scope":7298,"src":"16953:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7276,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7279,"mutability":"mutable","name":"e","nameLocation":"16972:1:29","nodeType":"VariableDeclaration","scope":7298,"src":"16964:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7278,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7281,"mutability":"mutable","name":"m","nameLocation":"16983:1:29","nodeType":"VariableDeclaration","scope":7298,"src":"16975:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7280,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:29"},"returnParameters":{"id":7287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7284,"mutability":"mutable","name":"success","nameLocation":"17014:7:29","nodeType":"VariableDeclaration","scope":7298,"src":"17009:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7283,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7286,"mutability":"mutable","name":"result","nameLocation":"17031:6:29","nodeType":"VariableDeclaration","scope":7298,"src":"17023:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7285,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:29"},"scope":8088,"src":"16934:1598:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7333,"nodeType":"Block","src":"18729:179:29","statements":[{"assignments":[7311,7313],"declarations":[{"constant":false,"id":7311,"mutability":"mutable","name":"success","nameLocation":"18745:7:29","nodeType":"VariableDeclaration","scope":7333,"src":"18740:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7310,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7313,"mutability":"mutable","name":"result","nameLocation":"18767:6:29","nodeType":"VariableDeclaration","scope":7333,"src":"18754:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7312,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":7319,"initialValue":{"arguments":[{"id":7315,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7301,"src":"18787:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7316,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7303,"src":"18790:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7317,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7305,"src":"18793:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7314,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[7298,7380],"referencedDeclaration":7380,"src":"18777:9:29","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":7318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:29"},{"condition":{"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:29","subExpression":{"id":7320,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7311,"src":"18810:7:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7330,"nodeType":"IfStatement","src":"18805:74:29","trueBody":{"id":7329,"nodeType":"Block","src":"18819:60:29","statements":[{"expression":{"arguments":[{"expression":{"id":7325,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"18845:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4706_$","typeString":"type(library Panic)"}},"id":7326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:29","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":4673,"src":"18845:22:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7322,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4706,"src":"18833:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$4706_$","typeString":"type(library Panic)"}},"id":7324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:29","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":4705,"src":"18833:11:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":7327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7328,"nodeType":"ExpressionStatement","src":"18833:35:29"}]}},{"expression":{"id":7331,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7313,"src":"18895:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":7309,"id":7332,"nodeType":"Return","src":"18888:13:29"}]},"documentation":{"id":7299,"nodeType":"StructuredDocumentation","src":"18538:85:29","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":7334,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:29","nodeType":"FunctionDefinition","parameters":{"id":7306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7301,"mutability":"mutable","name":"b","nameLocation":"18657:1:29","nodeType":"VariableDeclaration","scope":7334,"src":"18644:14:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7300,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7303,"mutability":"mutable","name":"e","nameLocation":"18673:1:29","nodeType":"VariableDeclaration","scope":7334,"src":"18660:14:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7302,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7305,"mutability":"mutable","name":"m","nameLocation":"18689:1:29","nodeType":"VariableDeclaration","scope":7334,"src":"18676:14:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7304,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:29"},"returnParameters":{"id":7309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7334,"src":"18715:12:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7307,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:29"},"scope":8088,"src":"18628:280:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7379,"nodeType":"Block","src":"19162:771:29","statements":[{"condition":{"arguments":[{"id":7349,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"19187:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7348,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7413,"src":"19176:10:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":7350,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7358,"nodeType":"IfStatement","src":"19172:47:29","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":7351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":7354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":7353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:29","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":7352,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":7355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":7356,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":7347,"id":7357,"nodeType":"Return","src":"19191:28:29"}},{"assignments":[7360],"declarations":[{"constant":false,"id":7360,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:29","nodeType":"VariableDeclaration","scope":7379,"src":"19230:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7359,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7363,"initialValue":{"expression":{"id":7361,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"19245:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:29","memberName":"length","nodeType":"MemberAccess","src":"19245:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:29"},{"expression":{"id":7376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7364,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7346,"src":"19335:6:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":7367,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"19361:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:29","memberName":"length","nodeType":"MemberAccess","src":"19361:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":7369,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7339,"src":"19371:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:29","memberName":"length","nodeType":"MemberAccess","src":"19371:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7371,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7360,"src":"19381:4:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7372,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"19387:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7373,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7339,"src":"19390:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":7374,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7341,"src":"19393:1:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7365,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:29","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:29","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7377,"nodeType":"ExpressionStatement","src":"19335:60:29"},{"AST":{"nativeSrc":"19431:496:29","nodeType":"YulBlock","src":"19431:496:29","statements":[{"nativeSrc":"19445:32:29","nodeType":"YulVariableDeclaration","src":"19445:32:29","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:29","nodeType":"YulIdentifier","src":"19464:6:29"},{"kind":"number","nativeSrc":"19472:4:29","nodeType":"YulLiteral","src":"19472:4:29","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:29","nodeType":"YulIdentifier","src":"19460:3:29"},"nativeSrc":"19460:17:29","nodeType":"YulFunctionCall","src":"19460:17:29"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:29","nodeType":"YulTypedName","src":"19449:7:29","type":""}]},{"nativeSrc":"19567:73:29","nodeType":"YulAssignment","src":"19567:73:29","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:29","nodeType":"YulIdentifier","src":"19589:3:29"},"nativeSrc":"19589:5:29","nodeType":"YulFunctionCall","src":"19589:5:29"},{"kind":"number","nativeSrc":"19596:4:29","nodeType":"YulLiteral","src":"19596:4:29","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:29","nodeType":"YulIdentifier","src":"19602:7:29"},{"arguments":[{"name":"result","nativeSrc":"19617:6:29","nodeType":"YulIdentifier","src":"19617:6:29"}],"functionName":{"name":"mload","nativeSrc":"19611:5:29","nodeType":"YulIdentifier","src":"19611:5:29"},"nativeSrc":"19611:13:29","nodeType":"YulFunctionCall","src":"19611:13:29"},{"name":"dataPtr","nativeSrc":"19626:7:29","nodeType":"YulIdentifier","src":"19626:7:29"},{"name":"mLen","nativeSrc":"19635:4:29","nodeType":"YulIdentifier","src":"19635:4:29"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:29","nodeType":"YulIdentifier","src":"19578:10:29"},"nativeSrc":"19578:62:29","nodeType":"YulFunctionCall","src":"19578:62:29"},"variableNames":[{"name":"success","nativeSrc":"19567:7:29","nodeType":"YulIdentifier","src":"19567:7:29"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:29","nodeType":"YulIdentifier","src":"19796:6:29"},{"name":"mLen","nativeSrc":"19804:4:29","nodeType":"YulIdentifier","src":"19804:4:29"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:29","nodeType":"YulIdentifier","src":"19789:6:29"},"nativeSrc":"19789:20:29","nodeType":"YulFunctionCall","src":"19789:20:29"},"nativeSrc":"19789:20:29","nodeType":"YulExpressionStatement","src":"19789:20:29"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:29","nodeType":"YulLiteral","src":"19892:4:29","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:29","nodeType":"YulIdentifier","src":"19902:7:29"},{"name":"mLen","nativeSrc":"19911:4:29","nodeType":"YulIdentifier","src":"19911:4:29"}],"functionName":{"name":"add","nativeSrc":"19898:3:29","nodeType":"YulIdentifier","src":"19898:3:29"},"nativeSrc":"19898:18:29","nodeType":"YulFunctionCall","src":"19898:18:29"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:29","nodeType":"YulIdentifier","src":"19885:6:29"},"nativeSrc":"19885:32:29","nodeType":"YulFunctionCall","src":"19885:32:29"},"nativeSrc":"19885:32:29","nodeType":"YulExpressionStatement","src":"19885:32:29"}]},"evmVersion":"paris","externalReferences":[{"declaration":7360,"isOffset":false,"isSlot":false,"src":"19635:4:29","valueSize":1},{"declaration":7360,"isOffset":false,"isSlot":false,"src":"19804:4:29","valueSize":1},{"declaration":7360,"isOffset":false,"isSlot":false,"src":"19911:4:29","valueSize":1},{"declaration":7346,"isOffset":false,"isSlot":false,"src":"19464:6:29","valueSize":1},{"declaration":7346,"isOffset":false,"isSlot":false,"src":"19617:6:29","valueSize":1},{"declaration":7346,"isOffset":false,"isSlot":false,"src":"19796:6:29","valueSize":1},{"declaration":7344,"isOffset":false,"isSlot":false,"src":"19567:7:29","valueSize":1}],"flags":["memory-safe"],"id":7378,"nodeType":"InlineAssembly","src":"19406:521:29"}]},"documentation":{"id":7335,"nodeType":"StructuredDocumentation","src":"18914:88:29","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":7380,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:29","nodeType":"FunctionDefinition","parameters":{"id":7342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7337,"mutability":"mutable","name":"b","nameLocation":"19048:1:29","nodeType":"VariableDeclaration","scope":7380,"src":"19035:14:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7336,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7339,"mutability":"mutable","name":"e","nameLocation":"19072:1:29","nodeType":"VariableDeclaration","scope":7380,"src":"19059:14:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7338,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":7341,"mutability":"mutable","name":"m","nameLocation":"19096:1:29","nodeType":"VariableDeclaration","scope":7380,"src":"19083:14:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7340,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:29"},"returnParameters":{"id":7347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7344,"mutability":"mutable","name":"success","nameLocation":"19132:7:29","nodeType":"VariableDeclaration","scope":7380,"src":"19127:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7343,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":7346,"mutability":"mutable","name":"result","nameLocation":"19154:6:29","nodeType":"VariableDeclaration","scope":7380,"src":"19141:19:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7345,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:29"},"scope":8088,"src":"19007:926:29","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":7412,"nodeType":"Block","src":"20088:176:29","statements":[{"body":{"id":7408,"nodeType":"Block","src":"20145:92:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":7403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":7399,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7383,"src":"20163:9:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7401,"indexExpression":{"id":7400,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"20173:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:29","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":7402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7407,"nodeType":"IfStatement","src":"20159:68:29","trueBody":{"id":7406,"nodeType":"Block","src":"20182:45:29","statements":[{"expression":{"hexValue":"66616c7365","id":7404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":7387,"id":7405,"nodeType":"Return","src":"20200:12:29"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7392,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"20118:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7393,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7383,"src":"20122:9:29","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":7394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:29","memberName":"length","nodeType":"MemberAccess","src":"20122:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7409,"initializationExpression":{"assignments":[7389],"declarations":[{"constant":false,"id":7389,"mutability":"mutable","name":"i","nameLocation":"20111:1:29","nodeType":"VariableDeclaration","scope":7409,"src":"20103:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7388,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7391,"initialValue":{"hexValue":"30","id":7390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:29"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:29","subExpression":{"id":7396,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7389,"src":"20142:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7398,"nodeType":"ExpressionStatement","src":"20140:3:29"},"nodeType":"ForStatement","src":"20098:139:29"},{"expression":{"hexValue":"74727565","id":7410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":7387,"id":7411,"nodeType":"Return","src":"20246:11:29"}]},"documentation":{"id":7381,"nodeType":"StructuredDocumentation","src":"19939:72:29","text":" @dev Returns whether the provided byte array is zero."},"id":7413,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:29","nodeType":"FunctionDefinition","parameters":{"id":7384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7383,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:29","nodeType":"VariableDeclaration","scope":7413,"src":"20036:22:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7382,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:29","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:29"},"returnParameters":{"id":7387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7413,"src":"20082:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7385,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:29"},"scope":8088,"src":"20016:248:29","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":7631,"nodeType":"Block","src":"20624:5124:29","statements":[{"id":7630,"nodeType":"UncheckedBlock","src":"20634:5108:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7421,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"20728:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":7422,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7427,"nodeType":"IfStatement","src":"20724:53:29","trueBody":{"id":7426,"nodeType":"Block","src":"20736:41:29","statements":[{"expression":{"id":7424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"20761:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7420,"id":7425,"nodeType":"Return","src":"20754:8:29"}]}},{"assignments":[7429],"declarations":[{"constant":false,"id":7429,"mutability":"mutable","name":"aa","nameLocation":"21712:2:29","nodeType":"VariableDeclaration","scope":7630,"src":"21704:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7428,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7431,"initialValue":{"id":7430,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"21717:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:29"},{"assignments":[7433],"declarations":[{"constant":false,"id":7433,"mutability":"mutable","name":"xn","nameLocation":"21740:2:29","nodeType":"VariableDeclaration","scope":7630,"src":"21732:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7432,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7435,"initialValue":{"hexValue":"31","id":7434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:29"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7436,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"21765:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":7439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":7438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:29","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":7440,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:29","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7451,"nodeType":"IfStatement","src":"21761:92:29","trueBody":{"id":7450,"nodeType":"Block","src":"21783:70:29","statements":[{"expression":{"id":7444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7442,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"21801:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":7443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:29","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7445,"nodeType":"ExpressionStatement","src":"21801:10:29"},{"expression":{"id":7448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7446,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"21829:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":7447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7449,"nodeType":"ExpressionStatement","src":"21829:9:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7452,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"21870:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":7455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":7454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:29","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":7456,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:29","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7467,"nodeType":"IfStatement","src":"21866:90:29","trueBody":{"id":7466,"nodeType":"Block","src":"21887:69:29","statements":[{"expression":{"id":7460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7458,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"21905:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":7459,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7461,"nodeType":"ExpressionStatement","src":"21905:9:29"},{"expression":{"id":7464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7462,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"21932:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":7463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7465,"nodeType":"ExpressionStatement","src":"21932:9:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7468,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"21973:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":7471,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":7470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:29","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":7472,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:29","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7483,"nodeType":"IfStatement","src":"21969:90:29","trueBody":{"id":7482,"nodeType":"Block","src":"21990:69:29","statements":[{"expression":{"id":7476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7474,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"22008:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":7475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7477,"nodeType":"ExpressionStatement","src":"22008:9:29"},{"expression":{"id":7480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7478,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"22035:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":7479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7481,"nodeType":"ExpressionStatement","src":"22035:9:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7484,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"22076:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":7487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":7486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:29","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":7488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:29","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7499,"nodeType":"IfStatement","src":"22072:89:29","trueBody":{"id":7498,"nodeType":"Block","src":"22093:68:29","statements":[{"expression":{"id":7492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7490,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"22111:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":7491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7493,"nodeType":"ExpressionStatement","src":"22111:9:29"},{"expression":{"id":7496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7494,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"22138:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":7495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7497,"nodeType":"ExpressionStatement","src":"22138:8:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7500,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"22178:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":7503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":7502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:29","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":7504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:29","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7515,"nodeType":"IfStatement","src":"22174:87:29","trueBody":{"id":7514,"nodeType":"Block","src":"22194:67:29","statements":[{"expression":{"id":7508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7506,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"22212:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":7507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7509,"nodeType":"ExpressionStatement","src":"22212:8:29"},{"expression":{"id":7512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7510,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"22238:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":7511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7513,"nodeType":"ExpressionStatement","src":"22238:8:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7516,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"22278:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":7519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":7520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7531,"nodeType":"IfStatement","src":"22274:87:29","trueBody":{"id":7530,"nodeType":"Block","src":"22294:67:29","statements":[{"expression":{"id":7524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7522,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"22312:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":7523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7525,"nodeType":"ExpressionStatement","src":"22312:8:29"},{"expression":{"id":7528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7526,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"22338:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":7527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7529,"nodeType":"ExpressionStatement","src":"22338:8:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7532,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7429,"src":"22378:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":7535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":7536,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7543,"nodeType":"IfStatement","src":"22374:61:29","trueBody":{"id":7542,"nodeType":"Block","src":"22394:41:29","statements":[{"expression":{"id":7540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7538,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"22412:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":7539,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7541,"nodeType":"ExpressionStatement","src":"22412:8:29"}]}},{"expression":{"id":7551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7544,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"22855:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":7545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:29","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7546,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"22865:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7548,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7552,"nodeType":"ExpressionStatement","src":"22855:18:29"},{"expression":{"id":7562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7553,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"24760:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7554,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"24766:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7555,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"24771:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7556,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"24775:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7559,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7563,"nodeType":"ExpressionStatement","src":"24760:23:29"},{"expression":{"id":7573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7564,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"24869:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7565,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"24875:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7566,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"24880:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7567,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"24884:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7570,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7574,"nodeType":"ExpressionStatement","src":"24869:23:29"},{"expression":{"id":7584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7575,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"24980:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7576,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"24986:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7577,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"24991:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7578,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"24995:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7581,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7585,"nodeType":"ExpressionStatement","src":"24980:23:29"},{"expression":{"id":7595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7586,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25089:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7587,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25095:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7588,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"25100:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7589,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25104:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7592,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7596,"nodeType":"ExpressionStatement","src":"25089:23:29"},{"expression":{"id":7606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7597,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25199:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7598,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25205:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7599,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"25210:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7600,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25214:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7603,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7607,"nodeType":"ExpressionStatement","src":"25199:23:29"},{"expression":{"id":7617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7608,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25309:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7609,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25315:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7610,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"25320:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7611,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25324:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":7615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7618,"nodeType":"ExpressionStatement","src":"25309:23:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7619,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25698:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7622,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25719:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7623,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7416,"src":"25724:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":7624,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7433,"src":"25728:2:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7620,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"25703:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"25703:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7420,"id":7629,"nodeType":"Return","src":"25691:40:29"}]}]},"documentation":{"id":7414,"nodeType":"StructuredDocumentation","src":"20270:292:29","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":7632,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:29","nodeType":"FunctionDefinition","parameters":{"id":7417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7416,"mutability":"mutable","name":"a","nameLocation":"20589:1:29","nodeType":"VariableDeclaration","scope":7632,"src":"20581:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7415,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:29"},"returnParameters":{"id":7420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7632,"src":"20615:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7418,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:29"},"scope":8088,"src":"20567:5181:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7665,"nodeType":"Block","src":"25921:171:29","statements":[{"id":7664,"nodeType":"UncheckedBlock","src":"25931:155:29","statements":[{"assignments":[7644],"declarations":[{"constant":false,"id":7644,"mutability":"mutable","name":"result","nameLocation":"25963:6:29","nodeType":"VariableDeclaration","scope":7664,"src":"25955:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7643,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7648,"initialValue":{"arguments":[{"id":7646,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"25977:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7645,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[7632,7666],"referencedDeclaration":7632,"src":"25972:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7649,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"26000:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7653,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7638,"src":"26042:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}],"id":7652,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"26025:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6479_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7655,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"26055:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":7656,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7644,"src":"26064:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7658,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7635,"src":"26073:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7650,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"26009:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"26009:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7642,"id":7663,"nodeType":"Return","src":"25993:82:29"}]}]},"documentation":{"id":7633,"nodeType":"StructuredDocumentation","src":"25754:86:29","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":7666,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:29","nodeType":"FunctionDefinition","parameters":{"id":7639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7635,"mutability":"mutable","name":"a","nameLocation":"25867:1:29","nodeType":"VariableDeclaration","scope":7666,"src":"25859:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7634,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7638,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:29","nodeType":"VariableDeclaration","scope":7666,"src":"25870:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"},"typeName":{"id":7637,"nodeType":"UserDefinedTypeName","pathNode":{"id":7636,"name":"Rounding","nameLocations":["25870:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":6479,"src":"25870:8:29"},"referencedDeclaration":6479,"src":"25870:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:29"},"returnParameters":{"id":7642,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7641,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7666,"src":"25912:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7640,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:29"},"scope":8088,"src":"25845:247:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7756,"nodeType":"Block","src":"26281:2334:29","statements":[{"expression":{"id":7683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7674,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26363:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7677,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"26383:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7678,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:29","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7675,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"26367:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7676,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"26367:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:29","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7684,"nodeType":"ExpressionStatement","src":"26363:64:29"},{"expression":{"id":7697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7685,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26503:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7688,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"26525:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7689,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26530:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7691,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:29","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7686,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"26508:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"26508:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:29","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7698,"nodeType":"ExpressionStatement","src":"26503:56:29"},{"expression":{"id":7711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7699,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26634:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7702,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"26656:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7703,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26661:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:29","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7700,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"26639:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"26639:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:29","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7712,"nodeType":"ExpressionStatement","src":"26634:48:29"},{"expression":{"id":7725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7713,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26757:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7716,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"26779:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7717,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26784:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7719,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":7720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:29","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7714,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"26762:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"26762:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":7723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7726,"nodeType":"ExpressionStatement","src":"26757:44:29"},{"expression":{"id":7739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7727,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26874:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7730,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"26896:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7731,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26901:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7733,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":7734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:29","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7728,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"26879:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"26879:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:29","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7740,"nodeType":"ExpressionStatement","src":"26874:42:29"},{"expression":{"id":7753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7741,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"26988:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7752,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7744,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7669,"src":"27010:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7745,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7672,"src":"27015:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7747,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":7748,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:29","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7742,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"26993:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"26993:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":7751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7754,"nodeType":"ExpressionStatement","src":"26988:41:29"},{"AST":{"nativeSrc":"28490:119:29","nodeType":"YulBlock","src":"28490:119:29","statements":[{"nativeSrc":"28504:95:29","nodeType":"YulAssignment","src":"28504:95:29","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:29","nodeType":"YulIdentifier","src":"28512:1:29"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:29","nodeType":"YulIdentifier","src":"28524:1:29"},{"name":"x","nativeSrc":"28527:1:29","nodeType":"YulIdentifier","src":"28527:1:29"}],"functionName":{"name":"shr","nativeSrc":"28520:3:29","nodeType":"YulIdentifier","src":"28520:3:29"},"nativeSrc":"28520:9:29","nodeType":"YulFunctionCall","src":"28520:9:29"},{"kind":"number","nativeSrc":"28531:66:29","nodeType":"YulLiteral","src":"28531:66:29","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:29","nodeType":"YulIdentifier","src":"28515:4:29"},"nativeSrc":"28515:83:29","nodeType":"YulFunctionCall","src":"28515:83:29"}],"functionName":{"name":"or","nativeSrc":"28509:2:29","nodeType":"YulIdentifier","src":"28509:2:29"},"nativeSrc":"28509:90:29","nodeType":"YulFunctionCall","src":"28509:90:29"},"variableNames":[{"name":"r","nativeSrc":"28504:1:29","nodeType":"YulIdentifier","src":"28504:1:29"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":7672,"isOffset":false,"isSlot":false,"src":"28504:1:29","valueSize":1},{"declaration":7672,"isOffset":false,"isSlot":false,"src":"28512:1:29","valueSize":1},{"declaration":7672,"isOffset":false,"isSlot":false,"src":"28524:1:29","valueSize":1},{"declaration":7669,"isOffset":false,"isSlot":false,"src":"28527:1:29","valueSize":1}],"flags":["memory-safe"],"id":7755,"nodeType":"InlineAssembly","src":"28465:144:29"}]},"documentation":{"id":7667,"nodeType":"StructuredDocumentation","src":"26098:119:29","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7757,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:29","nodeType":"FunctionDefinition","parameters":{"id":7670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7669,"mutability":"mutable","name":"x","nameLocation":"26244:1:29","nodeType":"VariableDeclaration","scope":7757,"src":"26236:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7668,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:29"},"returnParameters":{"id":7673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7672,"mutability":"mutable","name":"r","nameLocation":"26278:1:29","nodeType":"VariableDeclaration","scope":7757,"src":"26270:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7671,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:29"},"scope":8088,"src":"26222:2393:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7790,"nodeType":"Block","src":"28848:175:29","statements":[{"id":7789,"nodeType":"UncheckedBlock","src":"28858:159:29","statements":[{"assignments":[7769],"declarations":[{"constant":false,"id":7769,"mutability":"mutable","name":"result","nameLocation":"28890:6:29","nodeType":"VariableDeclaration","scope":7789,"src":"28882:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7768,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7773,"initialValue":{"arguments":[{"id":7771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7760,"src":"28904:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7770,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[7757,7791],"referencedDeclaration":7757,"src":"28899:4:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7774,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"28931:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7778,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7763,"src":"28973:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}],"id":7777,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"28956:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6479_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":7781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7769,"src":"28991:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7760,"src":"29000:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7775,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"28940:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"28940:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7767,"id":7788,"nodeType":"Return","src":"28924:82:29"}]}]},"documentation":{"id":7758,"nodeType":"StructuredDocumentation","src":"28621:142:29","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7791,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:29","nodeType":"FunctionDefinition","parameters":{"id":7764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7760,"mutability":"mutable","name":"value","nameLocation":"28790:5:29","nodeType":"VariableDeclaration","scope":7791,"src":"28782:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7759,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7763,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:29","nodeType":"VariableDeclaration","scope":7791,"src":"28797:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"},"typeName":{"id":7762,"nodeType":"UserDefinedTypeName","pathNode":{"id":7761,"name":"Rounding","nameLocations":["28797:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":6479,"src":"28797:8:29"},"referencedDeclaration":6479,"src":"28797:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:29"},"returnParameters":{"id":7767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7791,"src":"28839:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7765,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:29"},"scope":8088,"src":"28768:255:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7919,"nodeType":"Block","src":"29216:854:29","statements":[{"assignments":[7800],"declarations":[{"constant":false,"id":7800,"mutability":"mutable","name":"result","nameLocation":"29234:6:29","nodeType":"VariableDeclaration","scope":7919,"src":"29226:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7799,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7802,"initialValue":{"hexValue":"30","id":7801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:29","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:29"},{"id":7916,"nodeType":"UncheckedBlock","src":"29254:787:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"29282:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:29","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7819,"nodeType":"IfStatement","src":"29278:103:29","trueBody":{"id":7818,"nodeType":"Block","src":"29301:80:29","statements":[{"expression":{"id":7812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"29319:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":7811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":7810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:29","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7813,"nodeType":"ExpressionStatement","src":"29319:17:29"},{"expression":{"id":7816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"29354:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":7815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:29","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7817,"nodeType":"ExpressionStatement","src":"29354:12:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"29398:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7823,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:29","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7836,"nodeType":"IfStatement","src":"29394:103:29","trueBody":{"id":7835,"nodeType":"Block","src":"29417:80:29","statements":[{"expression":{"id":7829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"29435:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":7828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":7827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:29","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7830,"nodeType":"ExpressionStatement","src":"29435:17:29"},{"expression":{"id":7833,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7831,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"29470:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":7832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:29","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7834,"nodeType":"ExpressionStatement","src":"29470:12:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7837,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"29514:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:29","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7853,"nodeType":"IfStatement","src":"29510:103:29","trueBody":{"id":7852,"nodeType":"Block","src":"29533:80:29","statements":[{"expression":{"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"29551:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":7845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":7844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:29","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7847,"nodeType":"ExpressionStatement","src":"29551:17:29"},{"expression":{"id":7850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7848,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"29586:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":7849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:29","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7851,"nodeType":"ExpressionStatement","src":"29586:12:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"29630:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:29","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7870,"nodeType":"IfStatement","src":"29626:100:29","trueBody":{"id":7869,"nodeType":"Block","src":"29648:78:29","statements":[{"expression":{"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7859,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"29666:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":7862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":7861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:29","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7864,"nodeType":"ExpressionStatement","src":"29666:16:29"},{"expression":{"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"29700:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":7866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:29","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7868,"nodeType":"ExpressionStatement","src":"29700:11:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"29743:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:29","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7887,"nodeType":"IfStatement","src":"29739:100:29","trueBody":{"id":7886,"nodeType":"Block","src":"29761:78:29","statements":[{"expression":{"id":7880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"29779:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":7879,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":7878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:29","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7881,"nodeType":"ExpressionStatement","src":"29779:16:29"},{"expression":{"id":7884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7882,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"29813:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":7883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7885,"nodeType":"ExpressionStatement","src":"29813:11:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"29856:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:29","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7904,"nodeType":"IfStatement","src":"29852:100:29","trueBody":{"id":7903,"nodeType":"Block","src":"29874:78:29","statements":[{"expression":{"id":7897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7893,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"29892:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":7896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":7895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:29","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7898,"nodeType":"ExpressionStatement","src":"29892:16:29"},{"expression":{"id":7901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7899,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"29926:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":7900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7902,"nodeType":"ExpressionStatement","src":"29926:11:29"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7794,"src":"29969:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":7908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":7907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7915,"nodeType":"IfStatement","src":"29965:66:29","trueBody":{"id":7914,"nodeType":"Block","src":"29987:44:29","statements":[{"expression":{"id":7912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"30005:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7913,"nodeType":"ExpressionStatement","src":"30005:11:29"}]}}]},{"expression":{"id":7917,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7800,"src":"30057:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7798,"id":7918,"nodeType":"Return","src":"30050:13:29"}]},"documentation":{"id":7792,"nodeType":"StructuredDocumentation","src":"29029:120:29","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":7920,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:29","nodeType":"FunctionDefinition","parameters":{"id":7795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7794,"mutability":"mutable","name":"value","nameLocation":"29177:5:29","nodeType":"VariableDeclaration","scope":7920,"src":"29169:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7793,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:29"},"returnParameters":{"id":7798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7797,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7920,"src":"29207:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7796,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:29"},"scope":8088,"src":"29154:916:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7953,"nodeType":"Block","src":"30305:177:29","statements":[{"id":7952,"nodeType":"UncheckedBlock","src":"30315:161:29","statements":[{"assignments":[7932],"declarations":[{"constant":false,"id":7932,"mutability":"mutable","name":"result","nameLocation":"30347:6:29","nodeType":"VariableDeclaration","scope":7952,"src":"30339:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7931,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7936,"initialValue":{"arguments":[{"id":7934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"30362:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7933,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[7920,7954],"referencedDeclaration":7920,"src":"30356:5:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":7935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7937,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"30389:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7941,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7926,"src":"30431:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}],"id":7940,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"30414:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6479_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":7943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:29","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":7944,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7932,"src":"30450:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7923,"src":"30459:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7938,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"30398:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"30398:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7930,"id":7951,"nodeType":"Return","src":"30382:83:29"}]}]},"documentation":{"id":7921,"nodeType":"StructuredDocumentation","src":"30076:143:29","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7954,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:29","nodeType":"FunctionDefinition","parameters":{"id":7927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7923,"mutability":"mutable","name":"value","nameLocation":"30247:5:29","nodeType":"VariableDeclaration","scope":7954,"src":"30239:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7922,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7926,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:29","nodeType":"VariableDeclaration","scope":7954,"src":"30254:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"},"typeName":{"id":7925,"nodeType":"UserDefinedTypeName","pathNode":{"id":7924,"name":"Rounding","nameLocations":["30254:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":6479,"src":"30254:8:29"},"referencedDeclaration":6479,"src":"30254:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:29"},"returnParameters":{"id":7930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7954,"src":"30296:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7928,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:29"},"scope":8088,"src":"30224:258:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8030,"nodeType":"Block","src":"30800:675:29","statements":[{"expression":{"id":7971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7962,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"30882:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7965,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"30902:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":7966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:29","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7963,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"30886:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"30886:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":7969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:29","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7972,"nodeType":"ExpressionStatement","src":"30882:64:29"},{"expression":{"id":7985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7973,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"31022:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7976,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"31044:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7977,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"31049:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":7980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:29","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7974,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"31027:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"31027:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":7983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:29","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7986,"nodeType":"ExpressionStatement","src":"31022:56:29"},{"expression":{"id":7999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7987,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"31153:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7990,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"31175:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":7991,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"31180:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":7994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:29","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":7988,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"31158:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":7989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"31158:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":7997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:29","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8000,"nodeType":"ExpressionStatement","src":"31153:48:29"},{"expression":{"id":8013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8001,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"31276:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8004,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"31298:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8005,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"31303:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8007,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":8008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:29","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8002,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"31281:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":8003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"31281:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":8011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:29","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":8014,"nodeType":"ExpressionStatement","src":"31276:44:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8015,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"31426:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":8016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:29","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8018,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8021,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7957,"src":"31453:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":8022,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7960,"src":"31458:1:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":8025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:29","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8019,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"31436:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"31436:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7961,"id":8029,"nodeType":"Return","src":"31418:50:29"}]},"documentation":{"id":7955,"nodeType":"StructuredDocumentation","src":"30488:246:29","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":8031,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:29","nodeType":"FunctionDefinition","parameters":{"id":7958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7957,"mutability":"mutable","name":"x","nameLocation":"30763:1:29","nodeType":"VariableDeclaration","scope":8031,"src":"30755:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7956,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:29"},"returnParameters":{"id":7961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7960,"mutability":"mutable","name":"r","nameLocation":"30797:1:29","nodeType":"VariableDeclaration","scope":8031,"src":"30789:9:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7959,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:29"},"scope":8088,"src":"30739:736:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8067,"nodeType":"Block","src":"31712:184:29","statements":[{"id":8066,"nodeType":"UncheckedBlock","src":"31722:168:29","statements":[{"assignments":[8043],"declarations":[{"constant":false,"id":8043,"mutability":"mutable","name":"result","nameLocation":"31754:6:29","nodeType":"VariableDeclaration","scope":8066,"src":"31746:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8042,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":8047,"initialValue":{"arguments":[{"id":8045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8034,"src":"31770:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8044,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[8031,8068],"referencedDeclaration":8031,"src":"31763:6:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:29"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8048,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"31797:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":8062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8052,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"31839:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}],"id":8051,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8087,"src":"31822:16:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$6479_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":8053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":8054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8055,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8043,"src":"31858:6:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":8056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:29","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":8058,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8034,"src":"31873:5:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8049,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"31806:8:29","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":8050,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:29","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"31806:15:29","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8041,"id":8065,"nodeType":"Return","src":"31790:89:29"}]}]},"documentation":{"id":8032,"nodeType":"StructuredDocumentation","src":"31481:144:29","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":8068,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:29","nodeType":"FunctionDefinition","parameters":{"id":8038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8034,"mutability":"mutable","name":"value","nameLocation":"31654:5:29","nodeType":"VariableDeclaration","scope":8068,"src":"31646:13:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8033,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":8037,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:29","nodeType":"VariableDeclaration","scope":8068,"src":"31661:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"},"typeName":{"id":8036,"nodeType":"UserDefinedTypeName","pathNode":{"id":8035,"name":"Rounding","nameLocations":["31661:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":6479,"src":"31661:8:29"},"referencedDeclaration":6479,"src":"31661:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:29"},"returnParameters":{"id":8041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8068,"src":"31703:7:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8039,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:29","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:29"},"scope":8088,"src":"31630:266:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8086,"nodeType":"Block","src":"32094:48:29","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":8082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8079,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8072,"src":"32117:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}],"id":8078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8077,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:29","typeDescriptions":{}}},"id":8080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":8081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:29","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:29","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":8083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:29","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":8076,"id":8085,"nodeType":"Return","src":"32104:31:29"}]},"documentation":{"id":8069,"nodeType":"StructuredDocumentation","src":"31902:113:29","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":8087,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:29","nodeType":"FunctionDefinition","parameters":{"id":8073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8072,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:29","nodeType":"VariableDeclaration","scope":8087,"src":"32046:17:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"},"typeName":{"id":8071,"nodeType":"UserDefinedTypeName","pathNode":{"id":8070,"name":"Rounding","nameLocations":["32046:8:29"],"nodeType":"IdentifierPath","referencedDeclaration":6479,"src":"32046:8:29"},"referencedDeclaration":6479,"src":"32046:8:29","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$6479","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:29"},"returnParameters":{"id":8076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8087,"src":"32088:4:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8074,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:29"},"scope":8088,"src":"32020:122:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8089,"src":"281:31863:29","usedErrors":[],"usedEvents":[]}],"src":"103:32042:29"},"id":29},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[9853]},"id":9854,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8090,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:30"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":8091,"nodeType":"StructuredDocumentation","src":"218:550:30","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":9853,"linearizedBaseContracts":[9853],"name":"SafeCast","nameLocation":"777:8:30","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":8092,"nodeType":"StructuredDocumentation","src":"792:68:30","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":8098,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:30","nodeType":"ErrorDefinition","parameters":{"id":8097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8094,"mutability":"mutable","name":"bits","nameLocation":"908:4:30","nodeType":"VariableDeclaration","scope":8098,"src":"902:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8093,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8096,"mutability":"mutable","name":"value","nameLocation":"922:5:30","nodeType":"VariableDeclaration","scope":8098,"src":"914:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8095,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:30"},"src":"865:64:30"},{"documentation":{"id":8099,"nodeType":"StructuredDocumentation","src":"935:75:30","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":8103,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:30","nodeType":"ErrorDefinition","parameters":{"id":8102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8101,"mutability":"mutable","name":"value","nameLocation":"1056:5:30","nodeType":"VariableDeclaration","scope":8103,"src":"1049:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8100,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:30"},"src":"1015:48:30"},{"documentation":{"id":8104,"nodeType":"StructuredDocumentation","src":"1069:67:30","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":8110,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:30","nodeType":"ErrorDefinition","parameters":{"id":8109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8106,"mutability":"mutable","name":"bits","nameLocation":"1183:4:30","nodeType":"VariableDeclaration","scope":8110,"src":"1177:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8105,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":8108,"mutability":"mutable","name":"value","nameLocation":"1196:5:30","nodeType":"VariableDeclaration","scope":8110,"src":"1189:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8107,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:30"},"src":"1141:62:30"},{"documentation":{"id":8111,"nodeType":"StructuredDocumentation","src":"1209:75:30","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":8115,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:30","nodeType":"ErrorDefinition","parameters":{"id":8114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8113,"mutability":"mutable","name":"value","nameLocation":"1331:5:30","nodeType":"VariableDeclaration","scope":8115,"src":"1323:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8112,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:30"},"src":"1289:49:30"},{"body":{"id":8142,"nodeType":"Block","src":"1695:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8118,"src":"1709:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8126,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":8125,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":8124,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":8128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:30","memberName":"max","nodeType":"MemberAccess","src":"1717:17:30","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8136,"nodeType":"IfStatement","src":"1705:105:30","trueBody":{"id":8135,"nodeType":"Block","src":"1736:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":8131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:30","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":8132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8118,"src":"1793:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8130,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"1757:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8134,"nodeType":"RevertStatement","src":"1750:49:30"}]}},{"expression":{"arguments":[{"id":8139,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8118,"src":"1834:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8138,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":8137,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:30","typeDescriptions":{}}},"id":8140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":8122,"id":8141,"nodeType":"Return","src":"1819:21:30"}]},"documentation":{"id":8116,"nodeType":"StructuredDocumentation","src":"1344:280:30","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":8143,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:30","nodeType":"FunctionDefinition","parameters":{"id":8119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8118,"mutability":"mutable","name":"value","nameLocation":"1656:5:30","nodeType":"VariableDeclaration","scope":8143,"src":"1648:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8117,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:30"},"returnParameters":{"id":8122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8143,"src":"1686:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":8120,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:30","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:30"},"scope":9853,"src":"1629:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8170,"nodeType":"Block","src":"2204:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"2218:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":8153,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":8152,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":8156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:30","memberName":"max","nodeType":"MemberAccess","src":"2226:17:30","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8164,"nodeType":"IfStatement","src":"2214:105:30","trueBody":{"id":8163,"nodeType":"Block","src":"2245:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":8159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:30","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":8160,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"2302:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8158,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"2266:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8162,"nodeType":"RevertStatement","src":"2259:49:30"}]}},{"expression":{"arguments":[{"id":8167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8146,"src":"2343:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":8165,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:30","typeDescriptions":{}}},"id":8168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":8150,"id":8169,"nodeType":"Return","src":"2328:21:30"}]},"documentation":{"id":8144,"nodeType":"StructuredDocumentation","src":"1853:280:30","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":8171,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:30","nodeType":"FunctionDefinition","parameters":{"id":8147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8146,"mutability":"mutable","name":"value","nameLocation":"2165:5:30","nodeType":"VariableDeclaration","scope":8171,"src":"2157:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8145,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:30"},"returnParameters":{"id":8150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8149,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8171,"src":"2195:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":8148,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:30","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:30"},"scope":9853,"src":"2138:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8198,"nodeType":"Block","src":"2713:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"2727:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":8181,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":8180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":8184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:30","memberName":"max","nodeType":"MemberAccess","src":"2735:17:30","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8192,"nodeType":"IfStatement","src":"2723:105:30","trueBody":{"id":8191,"nodeType":"Block","src":"2754:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":8187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:30","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":8188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"2811:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8186,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"2775:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8190,"nodeType":"RevertStatement","src":"2768:49:30"}]}},{"expression":{"arguments":[{"id":8195,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8174,"src":"2852:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":8193,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:30","typeDescriptions":{}}},"id":8196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":8178,"id":8197,"nodeType":"Return","src":"2837:21:30"}]},"documentation":{"id":8172,"nodeType":"StructuredDocumentation","src":"2362:280:30","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":8199,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:30","nodeType":"FunctionDefinition","parameters":{"id":8175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8174,"mutability":"mutable","name":"value","nameLocation":"2674:5:30","nodeType":"VariableDeclaration","scope":8199,"src":"2666:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8173,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:30"},"returnParameters":{"id":8178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8177,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8199,"src":"2704:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":8176,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:30","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:30"},"scope":9853,"src":"2647:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8226,"nodeType":"Block","src":"3222:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8202,"src":"3236:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":8209,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":8208,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":8212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:30","memberName":"max","nodeType":"MemberAccess","src":"3244:17:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8220,"nodeType":"IfStatement","src":"3232:105:30","trueBody":{"id":8219,"nodeType":"Block","src":"3263:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:30","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8202,"src":"3320:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8214,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"3284:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8218,"nodeType":"RevertStatement","src":"3277:49:30"}]}},{"expression":{"arguments":[{"id":8223,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8202,"src":"3361:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":8221,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:30","typeDescriptions":{}}},"id":8224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":8206,"id":8225,"nodeType":"Return","src":"3346:21:30"}]},"documentation":{"id":8200,"nodeType":"StructuredDocumentation","src":"2871:280:30","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8227,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:30","nodeType":"FunctionDefinition","parameters":{"id":8203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8202,"mutability":"mutable","name":"value","nameLocation":"3183:5:30","nodeType":"VariableDeclaration","scope":8227,"src":"3175:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8201,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:30"},"returnParameters":{"id":8206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8205,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8227,"src":"3213:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":8204,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:30","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:30"},"scope":9853,"src":"3156:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8254,"nodeType":"Block","src":"3731:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"3745:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":8237,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":8236,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":8240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:30","memberName":"max","nodeType":"MemberAccess","src":"3753:17:30","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8248,"nodeType":"IfStatement","src":"3741:105:30","trueBody":{"id":8247,"nodeType":"Block","src":"3772:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:30","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8244,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"3829:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8242,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"3793:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8246,"nodeType":"RevertStatement","src":"3786:49:30"}]}},{"expression":{"arguments":[{"id":8251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8230,"src":"3870:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":8249,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:30","typeDescriptions":{}}},"id":8252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":8234,"id":8253,"nodeType":"Return","src":"3855:21:30"}]},"documentation":{"id":8228,"nodeType":"StructuredDocumentation","src":"3380:280:30","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8255,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:30","nodeType":"FunctionDefinition","parameters":{"id":8231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8230,"mutability":"mutable","name":"value","nameLocation":"3692:5:30","nodeType":"VariableDeclaration","scope":8255,"src":"3684:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8229,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:30"},"returnParameters":{"id":8234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8233,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8255,"src":"3722:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":8232,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:30","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:30"},"scope":9853,"src":"3665:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8282,"nodeType":"Block","src":"4240:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"4254:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":8265,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":8264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":8268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:30","memberName":"max","nodeType":"MemberAccess","src":"4262:17:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8276,"nodeType":"IfStatement","src":"4250:105:30","trueBody":{"id":8275,"nodeType":"Block","src":"4281:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:30","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"4338:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8270,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"4302:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8274,"nodeType":"RevertStatement","src":"4295:49:30"}]}},{"expression":{"arguments":[{"id":8279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8258,"src":"4379:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":8277,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:30","typeDescriptions":{}}},"id":8280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":8262,"id":8281,"nodeType":"Return","src":"4364:21:30"}]},"documentation":{"id":8256,"nodeType":"StructuredDocumentation","src":"3889:280:30","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8283,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:30","nodeType":"FunctionDefinition","parameters":{"id":8259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8258,"mutability":"mutable","name":"value","nameLocation":"4201:5:30","nodeType":"VariableDeclaration","scope":8283,"src":"4193:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8257,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:30"},"returnParameters":{"id":8262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8283,"src":"4231:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":8260,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:30","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:30"},"scope":9853,"src":"4174:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8310,"nodeType":"Block","src":"4749:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"4763:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":8293,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":8292,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":8296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:30","memberName":"max","nodeType":"MemberAccess","src":"4771:17:30","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8304,"nodeType":"IfStatement","src":"4759:105:30","trueBody":{"id":8303,"nodeType":"Block","src":"4790:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:30","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8300,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"4847:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8298,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"4811:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8301,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8302,"nodeType":"RevertStatement","src":"4804:49:30"}]}},{"expression":{"arguments":[{"id":8307,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8286,"src":"4888:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8306,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":8305,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:30","typeDescriptions":{}}},"id":8308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":8290,"id":8309,"nodeType":"Return","src":"4873:21:30"}]},"documentation":{"id":8284,"nodeType":"StructuredDocumentation","src":"4398:280:30","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8311,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:30","nodeType":"FunctionDefinition","parameters":{"id":8287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8286,"mutability":"mutable","name":"value","nameLocation":"4710:5:30","nodeType":"VariableDeclaration","scope":8311,"src":"4702:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8285,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:30"},"returnParameters":{"id":8290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8289,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8311,"src":"4740:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":8288,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:30","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:30"},"scope":9853,"src":"4683:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8338,"nodeType":"Block","src":"5258:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8319,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"5272:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":8321,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":8320,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":8324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:30","memberName":"max","nodeType":"MemberAccess","src":"5280:17:30","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8332,"nodeType":"IfStatement","src":"5268:105:30","trueBody":{"id":8331,"nodeType":"Block","src":"5299:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:30","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8328,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"5356:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8326,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"5320:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8330,"nodeType":"RevertStatement","src":"5313:49:30"}]}},{"expression":{"arguments":[{"id":8335,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8314,"src":"5397:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":8333,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:30","typeDescriptions":{}}},"id":8336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":8318,"id":8337,"nodeType":"Return","src":"5382:21:30"}]},"documentation":{"id":8312,"nodeType":"StructuredDocumentation","src":"4907:280:30","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8339,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:30","nodeType":"FunctionDefinition","parameters":{"id":8315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8314,"mutability":"mutable","name":"value","nameLocation":"5219:5:30","nodeType":"VariableDeclaration","scope":8339,"src":"5211:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8313,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:30"},"returnParameters":{"id":8318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8317,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8339,"src":"5249:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":8316,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:30","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:30"},"scope":9853,"src":"5192:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8366,"nodeType":"Block","src":"5767:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8347,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8342,"src":"5781:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":8349,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":8348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":8352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:30","memberName":"max","nodeType":"MemberAccess","src":"5789:17:30","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8360,"nodeType":"IfStatement","src":"5777:105:30","trueBody":{"id":8359,"nodeType":"Block","src":"5808:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:30","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8342,"src":"5865:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8354,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"5829:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8358,"nodeType":"RevertStatement","src":"5822:49:30"}]}},{"expression":{"arguments":[{"id":8363,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8342,"src":"5906:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":8361,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:30","typeDescriptions":{}}},"id":8364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":8346,"id":8365,"nodeType":"Return","src":"5891:21:30"}]},"documentation":{"id":8340,"nodeType":"StructuredDocumentation","src":"5416:280:30","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8367,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:30","nodeType":"FunctionDefinition","parameters":{"id":8343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8342,"mutability":"mutable","name":"value","nameLocation":"5728:5:30","nodeType":"VariableDeclaration","scope":8367,"src":"5720:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8341,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:30"},"returnParameters":{"id":8346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8367,"src":"5758:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":8344,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:30","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:30"},"scope":9853,"src":"5701:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8394,"nodeType":"Block","src":"6276:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8375,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"6290:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":8377,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":8376,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":8380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:30","memberName":"max","nodeType":"MemberAccess","src":"6298:17:30","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8388,"nodeType":"IfStatement","src":"6286:105:30","trueBody":{"id":8387,"nodeType":"Block","src":"6317:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:30","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8384,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"6374:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8382,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"6338:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8386,"nodeType":"RevertStatement","src":"6331:49:30"}]}},{"expression":{"arguments":[{"id":8391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8370,"src":"6415:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":8389,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:30","typeDescriptions":{}}},"id":8392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":8374,"id":8393,"nodeType":"Return","src":"6400:21:30"}]},"documentation":{"id":8368,"nodeType":"StructuredDocumentation","src":"5925:280:30","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8395,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:30","nodeType":"FunctionDefinition","parameters":{"id":8371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8370,"mutability":"mutable","name":"value","nameLocation":"6237:5:30","nodeType":"VariableDeclaration","scope":8395,"src":"6229:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8369,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:30"},"returnParameters":{"id":8374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8395,"src":"6267:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":8372,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:30","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:30"},"scope":9853,"src":"6210:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8422,"nodeType":"Block","src":"6785:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8403,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8398,"src":"6799:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":8405,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":8404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":8408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:30","memberName":"max","nodeType":"MemberAccess","src":"6807:17:30","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8416,"nodeType":"IfStatement","src":"6795:105:30","trueBody":{"id":8415,"nodeType":"Block","src":"6826:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:30","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8398,"src":"6883:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8410,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"6847:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8414,"nodeType":"RevertStatement","src":"6840:49:30"}]}},{"expression":{"arguments":[{"id":8419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8398,"src":"6924:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":8417,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:30","typeDescriptions":{}}},"id":8420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":8402,"id":8421,"nodeType":"Return","src":"6909:21:30"}]},"documentation":{"id":8396,"nodeType":"StructuredDocumentation","src":"6434:280:30","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8423,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:30","nodeType":"FunctionDefinition","parameters":{"id":8399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8398,"mutability":"mutable","name":"value","nameLocation":"6746:5:30","nodeType":"VariableDeclaration","scope":8423,"src":"6738:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8397,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:30"},"returnParameters":{"id":8402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8423,"src":"6776:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":8400,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:30","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:30"},"scope":9853,"src":"6719:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8450,"nodeType":"Block","src":"7294:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8431,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8426,"src":"7308:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8433,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":8432,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":8436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:30","memberName":"max","nodeType":"MemberAccess","src":"7316:17:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8444,"nodeType":"IfStatement","src":"7304:105:30","trueBody":{"id":8443,"nodeType":"Block","src":"7335:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:30","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8426,"src":"7392:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8438,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"7356:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8442,"nodeType":"RevertStatement","src":"7349:49:30"}]}},{"expression":{"arguments":[{"id":8447,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8426,"src":"7433:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":8445,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:30","typeDescriptions":{}}},"id":8448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":8430,"id":8449,"nodeType":"Return","src":"7418:21:30"}]},"documentation":{"id":8424,"nodeType":"StructuredDocumentation","src":"6943:280:30","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8451,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:30","nodeType":"FunctionDefinition","parameters":{"id":8427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8426,"mutability":"mutable","name":"value","nameLocation":"7255:5:30","nodeType":"VariableDeclaration","scope":8451,"src":"7247:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8425,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:30"},"returnParameters":{"id":8430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8451,"src":"7285:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":8428,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:30"},"scope":9853,"src":"7228:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8478,"nodeType":"Block","src":"7803:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"7817:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8461,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":8460,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":8464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:30","memberName":"max","nodeType":"MemberAccess","src":"7825:17:30","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8472,"nodeType":"IfStatement","src":"7813:105:30","trueBody":{"id":8471,"nodeType":"Block","src":"7844:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:30","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"7901:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8466,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"7865:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8470,"nodeType":"RevertStatement","src":"7858:49:30"}]}},{"expression":{"arguments":[{"id":8475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8454,"src":"7942:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":8473,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:30","typeDescriptions":{}}},"id":8476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":8458,"id":8477,"nodeType":"Return","src":"7927:21:30"}]},"documentation":{"id":8452,"nodeType":"StructuredDocumentation","src":"7452:280:30","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8479,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:30","nodeType":"FunctionDefinition","parameters":{"id":8455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8454,"mutability":"mutable","name":"value","nameLocation":"7764:5:30","nodeType":"VariableDeclaration","scope":8479,"src":"7756:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8453,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:30"},"returnParameters":{"id":8458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8479,"src":"7794:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":8456,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:30","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:30"},"scope":9853,"src":"7737:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8506,"nodeType":"Block","src":"8312:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"8326:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8489,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":8488,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":8492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:30","memberName":"max","nodeType":"MemberAccess","src":"8334:17:30","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8500,"nodeType":"IfStatement","src":"8322:105:30","trueBody":{"id":8499,"nodeType":"Block","src":"8353:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:30","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"8410:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8494,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"8374:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8498,"nodeType":"RevertStatement","src":"8367:49:30"}]}},{"expression":{"arguments":[{"id":8503,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"8451:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8502,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":8501,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:30","typeDescriptions":{}}},"id":8504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":8486,"id":8505,"nodeType":"Return","src":"8436:21:30"}]},"documentation":{"id":8480,"nodeType":"StructuredDocumentation","src":"7961:280:30","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8507,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:30","nodeType":"FunctionDefinition","parameters":{"id":8483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8482,"mutability":"mutable","name":"value","nameLocation":"8273:5:30","nodeType":"VariableDeclaration","scope":8507,"src":"8265:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8481,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:30"},"returnParameters":{"id":8486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8485,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8507,"src":"8303:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":8484,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:30","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:30"},"scope":9853,"src":"8246:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8534,"nodeType":"Block","src":"8821:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8515,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8510,"src":"8835:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8518,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8517,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":8516,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":8520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:30","memberName":"max","nodeType":"MemberAccess","src":"8843:17:30","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8528,"nodeType":"IfStatement","src":"8831:105:30","trueBody":{"id":8527,"nodeType":"Block","src":"8862:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:30","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8524,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8510,"src":"8919:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8522,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"8883:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8526,"nodeType":"RevertStatement","src":"8876:49:30"}]}},{"expression":{"arguments":[{"id":8531,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8510,"src":"8960:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":8529,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:30","typeDescriptions":{}}},"id":8532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":8514,"id":8533,"nodeType":"Return","src":"8945:21:30"}]},"documentation":{"id":8508,"nodeType":"StructuredDocumentation","src":"8470:280:30","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8535,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:30","nodeType":"FunctionDefinition","parameters":{"id":8511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8510,"mutability":"mutable","name":"value","nameLocation":"8782:5:30","nodeType":"VariableDeclaration","scope":8535,"src":"8774:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8509,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:30"},"returnParameters":{"id":8514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8535,"src":"8812:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":8512,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:30","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:30"},"scope":9853,"src":"8755:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8562,"nodeType":"Block","src":"9330:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8543,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8538,"src":"9344:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8546,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8545,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":8544,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":8548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:30","memberName":"max","nodeType":"MemberAccess","src":"9352:17:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8556,"nodeType":"IfStatement","src":"9340:105:30","trueBody":{"id":8555,"nodeType":"Block","src":"9371:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8552,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8538,"src":"9428:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8550,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"9392:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8554,"nodeType":"RevertStatement","src":"9385:49:30"}]}},{"expression":{"arguments":[{"id":8559,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8538,"src":"9469:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":8557,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:30","typeDescriptions":{}}},"id":8560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":8542,"id":8561,"nodeType":"Return","src":"9454:21:30"}]},"documentation":{"id":8536,"nodeType":"StructuredDocumentation","src":"8979:280:30","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8563,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:30","nodeType":"FunctionDefinition","parameters":{"id":8539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8538,"mutability":"mutable","name":"value","nameLocation":"9291:5:30","nodeType":"VariableDeclaration","scope":8563,"src":"9283:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8537,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:30"},"returnParameters":{"id":8542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8541,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8563,"src":"9321:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":8540,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:30"},"scope":9853,"src":"9264:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8590,"nodeType":"Block","src":"9839:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8571,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"9853:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8573,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":8572,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":8576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:30","memberName":"max","nodeType":"MemberAccess","src":"9861:17:30","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8584,"nodeType":"IfStatement","src":"9849:105:30","trueBody":{"id":8583,"nodeType":"Block","src":"9880:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:30","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"9937:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8578,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"9901:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8581,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8582,"nodeType":"RevertStatement","src":"9894:49:30"}]}},{"expression":{"arguments":[{"id":8587,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8566,"src":"9978:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":8585,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:30","typeDescriptions":{}}},"id":8588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":8570,"id":8589,"nodeType":"Return","src":"9963:21:30"}]},"documentation":{"id":8564,"nodeType":"StructuredDocumentation","src":"9488:280:30","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8591,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:30","nodeType":"FunctionDefinition","parameters":{"id":8567,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8566,"mutability":"mutable","name":"value","nameLocation":"9800:5:30","nodeType":"VariableDeclaration","scope":8591,"src":"9792:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8565,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:30"},"returnParameters":{"id":8570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8569,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8591,"src":"9830:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":8568,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:30","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:30"},"scope":9853,"src":"9773:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8618,"nodeType":"Block","src":"10348:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8599,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"10362:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8601,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":8600,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":8604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:30","memberName":"max","nodeType":"MemberAccess","src":"10370:17:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8612,"nodeType":"IfStatement","src":"10358:105:30","trueBody":{"id":8611,"nodeType":"Block","src":"10389:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:30","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"10446:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8606,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"10410:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8610,"nodeType":"RevertStatement","src":"10403:49:30"}]}},{"expression":{"arguments":[{"id":8615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8594,"src":"10487:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":8613,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:30","typeDescriptions":{}}},"id":8616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":8598,"id":8617,"nodeType":"Return","src":"10472:21:30"}]},"documentation":{"id":8592,"nodeType":"StructuredDocumentation","src":"9997:280:30","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8619,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:30","nodeType":"FunctionDefinition","parameters":{"id":8595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8594,"mutability":"mutable","name":"value","nameLocation":"10309:5:30","nodeType":"VariableDeclaration","scope":8619,"src":"10301:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8593,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:30"},"returnParameters":{"id":8598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8597,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8619,"src":"10339:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":8596,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:30","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:30"},"scope":9853,"src":"10282:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8646,"nodeType":"Block","src":"10857:152:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8627,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8622,"src":"10871:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8629,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":8628,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":8632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:30","memberName":"max","nodeType":"MemberAccess","src":"10879:17:30","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8640,"nodeType":"IfStatement","src":"10867:105:30","trueBody":{"id":8639,"nodeType":"Block","src":"10898:74:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:30","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8636,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8622,"src":"10955:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8634,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"10919:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8638,"nodeType":"RevertStatement","src":"10912:49:30"}]}},{"expression":{"arguments":[{"id":8643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8622,"src":"10996:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":8641,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:30","typeDescriptions":{}}},"id":8644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":8626,"id":8645,"nodeType":"Return","src":"10981:21:30"}]},"documentation":{"id":8620,"nodeType":"StructuredDocumentation","src":"10506:280:30","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8647,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:30","nodeType":"FunctionDefinition","parameters":{"id":8623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8622,"mutability":"mutable","name":"value","nameLocation":"10818:5:30","nodeType":"VariableDeclaration","scope":8647,"src":"10810:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8621,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:30"},"returnParameters":{"id":8626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8647,"src":"10848:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":8624,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:30","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:30"},"scope":9853,"src":"10791:218:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8674,"nodeType":"Block","src":"11360:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8655,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"11374:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8658,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8657,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":8656,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":8660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:30","memberName":"max","nodeType":"MemberAccess","src":"11382:16:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8668,"nodeType":"IfStatement","src":"11370:103:30","trueBody":{"id":8667,"nodeType":"Block","src":"11400:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:30","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"11456:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8662,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"11421:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8666,"nodeType":"RevertStatement","src":"11414:48:30"}]}},{"expression":{"arguments":[{"id":8671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8650,"src":"11496:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":8669,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:30","typeDescriptions":{}}},"id":8672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":8654,"id":8673,"nodeType":"Return","src":"11482:20:30"}]},"documentation":{"id":8648,"nodeType":"StructuredDocumentation","src":"11015:276:30","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8675,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:30","nodeType":"FunctionDefinition","parameters":{"id":8651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8650,"mutability":"mutable","name":"value","nameLocation":"11322:5:30","nodeType":"VariableDeclaration","scope":8675,"src":"11314:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8649,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:30"},"returnParameters":{"id":8654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8675,"src":"11352:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":8652,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:30","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:30"},"scope":9853,"src":"11296:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8702,"nodeType":"Block","src":"11860:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8683,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"11874:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8685,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":8684,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":8688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:30","memberName":"max","nodeType":"MemberAccess","src":"11882:16:30","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8696,"nodeType":"IfStatement","src":"11870:103:30","trueBody":{"id":8695,"nodeType":"Block","src":"11900:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:30","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"11956:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8690,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"11921:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8694,"nodeType":"RevertStatement","src":"11914:48:30"}]}},{"expression":{"arguments":[{"id":8699,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8678,"src":"11996:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8698,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":8697,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:30","typeDescriptions":{}}},"id":8700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":8682,"id":8701,"nodeType":"Return","src":"11982:20:30"}]},"documentation":{"id":8676,"nodeType":"StructuredDocumentation","src":"11515:276:30","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8703,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:30","nodeType":"FunctionDefinition","parameters":{"id":8679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8678,"mutability":"mutable","name":"value","nameLocation":"11822:5:30","nodeType":"VariableDeclaration","scope":8703,"src":"11814:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8677,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:30"},"returnParameters":{"id":8682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8703,"src":"11852:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":8680,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:30","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:30"},"scope":9853,"src":"11796:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8730,"nodeType":"Block","src":"12360:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8711,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"12374:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8713,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":8712,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":8716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:30","memberName":"max","nodeType":"MemberAccess","src":"12382:16:30","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8724,"nodeType":"IfStatement","src":"12370:103:30","trueBody":{"id":8723,"nodeType":"Block","src":"12400:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:30","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8720,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"12456:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8718,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"12421:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8722,"nodeType":"RevertStatement","src":"12414:48:30"}]}},{"expression":{"arguments":[{"id":8727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8706,"src":"12496:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":8725,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:30","typeDescriptions":{}}},"id":8728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":8710,"id":8729,"nodeType":"Return","src":"12482:20:30"}]},"documentation":{"id":8704,"nodeType":"StructuredDocumentation","src":"12015:276:30","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8731,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:30","nodeType":"FunctionDefinition","parameters":{"id":8707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8706,"mutability":"mutable","name":"value","nameLocation":"12322:5:30","nodeType":"VariableDeclaration","scope":8731,"src":"12314:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8705,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:30"},"returnParameters":{"id":8710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8731,"src":"12352:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":8708,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:30","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:30"},"scope":9853,"src":"12296:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8758,"nodeType":"Block","src":"12860:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8739,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8734,"src":"12874:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8742,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8741,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":8740,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":8744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:30","memberName":"max","nodeType":"MemberAccess","src":"12882:16:30","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8752,"nodeType":"IfStatement","src":"12870:103:30","trueBody":{"id":8751,"nodeType":"Block","src":"12900:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:30","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8748,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8734,"src":"12956:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8746,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"12921:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8750,"nodeType":"RevertStatement","src":"12914:48:30"}]}},{"expression":{"arguments":[{"id":8755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8734,"src":"12996:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":8753,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:30","typeDescriptions":{}}},"id":8756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":8738,"id":8757,"nodeType":"Return","src":"12982:20:30"}]},"documentation":{"id":8732,"nodeType":"StructuredDocumentation","src":"12515:276:30","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8759,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:30","nodeType":"FunctionDefinition","parameters":{"id":8735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8734,"mutability":"mutable","name":"value","nameLocation":"12822:5:30","nodeType":"VariableDeclaration","scope":8759,"src":"12814:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8733,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:30"},"returnParameters":{"id":8738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8759,"src":"12852:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":8736,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:30","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:30"},"scope":9853,"src":"12796:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8786,"nodeType":"Block","src":"13360:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8767,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8762,"src":"13374:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8769,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":8768,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":8772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:30","memberName":"max","nodeType":"MemberAccess","src":"13382:16:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8780,"nodeType":"IfStatement","src":"13370:103:30","trueBody":{"id":8779,"nodeType":"Block","src":"13400:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8775,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8762,"src":"13456:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8774,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"13421:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8778,"nodeType":"RevertStatement","src":"13414:48:30"}]}},{"expression":{"arguments":[{"id":8783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8762,"src":"13496:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":8781,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:30","typeDescriptions":{}}},"id":8784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":8766,"id":8785,"nodeType":"Return","src":"13482:20:30"}]},"documentation":{"id":8760,"nodeType":"StructuredDocumentation","src":"13015:276:30","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8787,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:30","nodeType":"FunctionDefinition","parameters":{"id":8763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8762,"mutability":"mutable","name":"value","nameLocation":"13322:5:30","nodeType":"VariableDeclaration","scope":8787,"src":"13314:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8761,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:30"},"returnParameters":{"id":8766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8765,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8787,"src":"13352:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":8764,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:30","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:30"},"scope":9853,"src":"13296:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8814,"nodeType":"Block","src":"13860:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8790,"src":"13874:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8797,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":8796,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":8800,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:30","memberName":"max","nodeType":"MemberAccess","src":"13882:16:30","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8808,"nodeType":"IfStatement","src":"13870:103:30","trueBody":{"id":8807,"nodeType":"Block","src":"13900:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:30","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8790,"src":"13956:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8802,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"13921:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8806,"nodeType":"RevertStatement","src":"13914:48:30"}]}},{"expression":{"arguments":[{"id":8811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8790,"src":"13996:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8810,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":8809,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:30","typeDescriptions":{}}},"id":8812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":8794,"id":8813,"nodeType":"Return","src":"13982:20:30"}]},"documentation":{"id":8788,"nodeType":"StructuredDocumentation","src":"13515:276:30","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8815,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:30","nodeType":"FunctionDefinition","parameters":{"id":8791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8790,"mutability":"mutable","name":"value","nameLocation":"13822:5:30","nodeType":"VariableDeclaration","scope":8815,"src":"13814:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8789,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:30"},"returnParameters":{"id":8794,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8793,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8815,"src":"13852:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":8792,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:30","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:30"},"scope":9853,"src":"13796:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8842,"nodeType":"Block","src":"14360:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8818,"src":"14374:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8825,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":8824,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":8828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:30","memberName":"max","nodeType":"MemberAccess","src":"14382:16:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8836,"nodeType":"IfStatement","src":"14370:103:30","trueBody":{"id":8835,"nodeType":"Block","src":"14400:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:30","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8832,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8818,"src":"14456:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8830,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"14421:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8834,"nodeType":"RevertStatement","src":"14414:48:30"}]}},{"expression":{"arguments":[{"id":8839,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8818,"src":"14496:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8838,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":8837,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:30","typeDescriptions":{}}},"id":8840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":8822,"id":8841,"nodeType":"Return","src":"14482:20:30"}]},"documentation":{"id":8816,"nodeType":"StructuredDocumentation","src":"14015:276:30","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8843,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:30","nodeType":"FunctionDefinition","parameters":{"id":8819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8818,"mutability":"mutable","name":"value","nameLocation":"14322:5:30","nodeType":"VariableDeclaration","scope":8843,"src":"14314:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8817,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:30"},"returnParameters":{"id":8822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8821,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8843,"src":"14352:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":8820,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:30","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:30"},"scope":9853,"src":"14296:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8870,"nodeType":"Block","src":"14860:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8851,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8846,"src":"14874:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8854,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8853,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":8852,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":8856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:30","memberName":"max","nodeType":"MemberAccess","src":"14882:16:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8864,"nodeType":"IfStatement","src":"14870:103:30","trueBody":{"id":8863,"nodeType":"Block","src":"14900:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:30","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8846,"src":"14956:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8858,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"14921:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8862,"nodeType":"RevertStatement","src":"14914:48:30"}]}},{"expression":{"arguments":[{"id":8867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8846,"src":"14996:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":8865,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:30","typeDescriptions":{}}},"id":8868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":8850,"id":8869,"nodeType":"Return","src":"14982:20:30"}]},"documentation":{"id":8844,"nodeType":"StructuredDocumentation","src":"14515:276:30","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8871,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:30","nodeType":"FunctionDefinition","parameters":{"id":8847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8846,"mutability":"mutable","name":"value","nameLocation":"14822:5:30","nodeType":"VariableDeclaration","scope":8871,"src":"14814:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8845,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:30"},"returnParameters":{"id":8850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8849,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8871,"src":"14852:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":8848,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:30","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:30"},"scope":9853,"src":"14796:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8898,"nodeType":"Block","src":"15360:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8874,"src":"15374:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8881,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":8880,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":8884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:30","memberName":"max","nodeType":"MemberAccess","src":"15382:16:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8892,"nodeType":"IfStatement","src":"15370:103:30","trueBody":{"id":8891,"nodeType":"Block","src":"15400:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8888,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8874,"src":"15456:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8886,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"15421:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8890,"nodeType":"RevertStatement","src":"15414:48:30"}]}},{"expression":{"arguments":[{"id":8895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8874,"src":"15496:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":8893,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:30","typeDescriptions":{}}},"id":8896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":8878,"id":8897,"nodeType":"Return","src":"15482:20:30"}]},"documentation":{"id":8872,"nodeType":"StructuredDocumentation","src":"15015:276:30","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8899,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:30","nodeType":"FunctionDefinition","parameters":{"id":8875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8874,"mutability":"mutable","name":"value","nameLocation":"15322:5:30","nodeType":"VariableDeclaration","scope":8899,"src":"15314:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8873,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:30"},"returnParameters":{"id":8878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8899,"src":"15352:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":8876,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:30","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:30"},"scope":9853,"src":"15296:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8926,"nodeType":"Block","src":"15860:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"15874:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8910,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8909,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":8908,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":8912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:30","memberName":"max","nodeType":"MemberAccess","src":"15882:16:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8920,"nodeType":"IfStatement","src":"15870:103:30","trueBody":{"id":8919,"nodeType":"Block","src":"15900:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:30","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"15956:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8914,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"15921:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8918,"nodeType":"RevertStatement","src":"15914:48:30"}]}},{"expression":{"arguments":[{"id":8923,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8902,"src":"15996:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":8921,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:30","typeDescriptions":{}}},"id":8924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":8906,"id":8925,"nodeType":"Return","src":"15982:20:30"}]},"documentation":{"id":8900,"nodeType":"StructuredDocumentation","src":"15515:276:30","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8927,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:30","nodeType":"FunctionDefinition","parameters":{"id":8903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8902,"mutability":"mutable","name":"value","nameLocation":"15822:5:30","nodeType":"VariableDeclaration","scope":8927,"src":"15814:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8901,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:30"},"returnParameters":{"id":8906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8905,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8927,"src":"15852:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":8904,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:30"},"scope":9853,"src":"15796:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8954,"nodeType":"Block","src":"16360:149:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8935,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"16374:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8937,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":8936,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":8940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:30","memberName":"max","nodeType":"MemberAccess","src":"16382:16:30","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8948,"nodeType":"IfStatement","src":"16370:103:30","trueBody":{"id":8947,"nodeType":"Block","src":"16400:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"16456:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8942,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"16421:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8946,"nodeType":"RevertStatement","src":"16414:48:30"}]}},{"expression":{"arguments":[{"id":8951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8930,"src":"16496:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":8949,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:30","typeDescriptions":{}}},"id":8952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":8934,"id":8953,"nodeType":"Return","src":"16482:20:30"}]},"documentation":{"id":8928,"nodeType":"StructuredDocumentation","src":"16015:276:30","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8955,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:30","nodeType":"FunctionDefinition","parameters":{"id":8931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8930,"mutability":"mutable","name":"value","nameLocation":"16322:5:30","nodeType":"VariableDeclaration","scope":8955,"src":"16314:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8929,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:30"},"returnParameters":{"id":8934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8955,"src":"16352:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":8932,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:30","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:30"},"scope":9853,"src":"16296:213:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8982,"nodeType":"Block","src":"16854:146:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8963,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8958,"src":"16868:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":8966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8965,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":8964,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":8968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:30","memberName":"max","nodeType":"MemberAccess","src":"16876:15:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8976,"nodeType":"IfStatement","src":"16864:101:30","trueBody":{"id":8975,"nodeType":"Block","src":"16893:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8958,"src":"16948:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8970,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8098,"src":"16914:30:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":8973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8974,"nodeType":"RevertStatement","src":"16907:47:30"}]}},{"expression":{"arguments":[{"id":8979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8958,"src":"16987:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":8977,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:30","typeDescriptions":{}}},"id":8980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":8962,"id":8981,"nodeType":"Return","src":"16974:19:30"}]},"documentation":{"id":8956,"nodeType":"StructuredDocumentation","src":"16515:272:30","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8983,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:30","nodeType":"FunctionDefinition","parameters":{"id":8959,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8958,"mutability":"mutable","name":"value","nameLocation":"16817:5:30","nodeType":"VariableDeclaration","scope":8983,"src":"16809:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8957,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:30"},"returnParameters":{"id":8962,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8961,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8983,"src":"16847:5:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":8960,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:30"},"scope":9853,"src":"16792:208:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9005,"nodeType":"Block","src":"17236:128:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"17250:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":8992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8999,"nodeType":"IfStatement","src":"17246:81:30","trueBody":{"id":8998,"nodeType":"Block","src":"17261:66:30","statements":[{"errorCall":{"arguments":[{"id":8995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"17310:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8994,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8103,"src":"17282:27:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":8996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":8997,"nodeType":"RevertStatement","src":"17275:41:30"}]}},{"expression":{"arguments":[{"id":9002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8986,"src":"17351:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9000,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:30","typeDescriptions":{}}},"id":9003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8990,"id":9004,"nodeType":"Return","src":"17336:21:30"}]},"documentation":{"id":8984,"nodeType":"StructuredDocumentation","src":"17006:160:30","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":9006,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:30","nodeType":"FunctionDefinition","parameters":{"id":8987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8986,"mutability":"mutable","name":"value","nameLocation":"17197:5:30","nodeType":"VariableDeclaration","scope":9006,"src":"17190:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8985,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:30"},"returnParameters":{"id":8990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9006,"src":"17227:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8988,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:30"},"scope":9853,"src":"17171:193:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9031,"nodeType":"Block","src":"17761:150:30","statements":[{"expression":{"id":9019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9012,"src":"17771:10:30","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9009,"src":"17791:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":9015,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:30","typeDescriptions":{}}},"id":9018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:30","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":9020,"nodeType":"ExpressionStatement","src":"17771:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9021,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9012,"src":"17811:10:30","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9009,"src":"17825:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9030,"nodeType":"IfStatement","src":"17807:98:30","trueBody":{"id":9029,"nodeType":"Block","src":"17832:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":9025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:30","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":9026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9009,"src":"17888:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9024,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"17853:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9028,"nodeType":"RevertStatement","src":"17846:48:30"}]}}]},"documentation":{"id":9007,"nodeType":"StructuredDocumentation","src":"17370:312:30","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":9032,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:30","nodeType":"FunctionDefinition","parameters":{"id":9010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9009,"mutability":"mutable","name":"value","nameLocation":"17712:5:30","nodeType":"VariableDeclaration","scope":9032,"src":"17705:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9008,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:30"},"returnParameters":{"id":9013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9012,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:30","nodeType":"VariableDeclaration","scope":9032,"src":"17742:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":9011,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:30","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:30"},"scope":9853,"src":"17687:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9057,"nodeType":"Block","src":"18308:150:30","statements":[{"expression":{"id":9045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9038,"src":"18318:10:30","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9035,"src":"18338:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":9041,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:30","typeDescriptions":{}}},"id":9044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:30","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":9046,"nodeType":"ExpressionStatement","src":"18318:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9047,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9038,"src":"18358:10:30","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9035,"src":"18372:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9056,"nodeType":"IfStatement","src":"18354:98:30","trueBody":{"id":9055,"nodeType":"Block","src":"18379:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":9051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:30","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":9052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9035,"src":"18435:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9050,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"18400:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9054,"nodeType":"RevertStatement","src":"18393:48:30"}]}}]},"documentation":{"id":9033,"nodeType":"StructuredDocumentation","src":"17917:312:30","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":9058,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:30","nodeType":"FunctionDefinition","parameters":{"id":9036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9035,"mutability":"mutable","name":"value","nameLocation":"18259:5:30","nodeType":"VariableDeclaration","scope":9058,"src":"18252:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9034,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:30"},"returnParameters":{"id":9039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9038,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:30","nodeType":"VariableDeclaration","scope":9058,"src":"18289:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":9037,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:30","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:30"},"scope":9853,"src":"18234:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9083,"nodeType":"Block","src":"18855:150:30","statements":[{"expression":{"id":9071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"18865:10:30","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9061,"src":"18885:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":9067,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:30","typeDescriptions":{}}},"id":9070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:30","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":9072,"nodeType":"ExpressionStatement","src":"18865:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9073,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9064,"src":"18905:10:30","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9061,"src":"18919:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9082,"nodeType":"IfStatement","src":"18901:98:30","trueBody":{"id":9081,"nodeType":"Block","src":"18926:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":9077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:30","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":9078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9061,"src":"18982:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9076,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"18947:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9080,"nodeType":"RevertStatement","src":"18940:48:30"}]}}]},"documentation":{"id":9059,"nodeType":"StructuredDocumentation","src":"18464:312:30","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":9084,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:30","nodeType":"FunctionDefinition","parameters":{"id":9062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9061,"mutability":"mutable","name":"value","nameLocation":"18806:5:30","nodeType":"VariableDeclaration","scope":9084,"src":"18799:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9060,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:30"},"returnParameters":{"id":9065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9064,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:30","nodeType":"VariableDeclaration","scope":9084,"src":"18836:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":9063,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:30","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:30"},"scope":9853,"src":"18781:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9109,"nodeType":"Block","src":"19402:150:30","statements":[{"expression":{"id":9097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9090,"src":"19412:10:30","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9087,"src":"19432:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":9093,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:30","typeDescriptions":{}}},"id":9096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:30","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":9098,"nodeType":"ExpressionStatement","src":"19412:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9099,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9090,"src":"19452:10:30","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9087,"src":"19466:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9108,"nodeType":"IfStatement","src":"19448:98:30","trueBody":{"id":9107,"nodeType":"Block","src":"19473:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":9103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:30","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":9104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9087,"src":"19529:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9102,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"19494:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9106,"nodeType":"RevertStatement","src":"19487:48:30"}]}}]},"documentation":{"id":9085,"nodeType":"StructuredDocumentation","src":"19011:312:30","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":9110,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:30","nodeType":"FunctionDefinition","parameters":{"id":9088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9087,"mutability":"mutable","name":"value","nameLocation":"19353:5:30","nodeType":"VariableDeclaration","scope":9110,"src":"19346:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9086,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:30"},"returnParameters":{"id":9091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9090,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:30","nodeType":"VariableDeclaration","scope":9110,"src":"19383:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":9089,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:30","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:30"},"scope":9853,"src":"19328:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9135,"nodeType":"Block","src":"19949:150:30","statements":[{"expression":{"id":9123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9116,"src":"19959:10:30","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9113,"src":"19979:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":9119,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:30","typeDescriptions":{}}},"id":9122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:30","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":9124,"nodeType":"ExpressionStatement","src":"19959:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9125,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9116,"src":"19999:10:30","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9113,"src":"20013:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9134,"nodeType":"IfStatement","src":"19995:98:30","trueBody":{"id":9133,"nodeType":"Block","src":"20020:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":9129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:30","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":9130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9113,"src":"20076:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9128,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"20041:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9132,"nodeType":"RevertStatement","src":"20034:48:30"}]}}]},"documentation":{"id":9111,"nodeType":"StructuredDocumentation","src":"19558:312:30","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":9136,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:30","nodeType":"FunctionDefinition","parameters":{"id":9114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9113,"mutability":"mutable","name":"value","nameLocation":"19900:5:30","nodeType":"VariableDeclaration","scope":9136,"src":"19893:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9112,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:30"},"returnParameters":{"id":9117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9116,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:30","nodeType":"VariableDeclaration","scope":9136,"src":"19930:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":9115,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:30","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:30"},"scope":9853,"src":"19875:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9161,"nodeType":"Block","src":"20496:150:30","statements":[{"expression":{"id":9149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9142,"src":"20506:10:30","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9139,"src":"20526:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":9145,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:30","typeDescriptions":{}}},"id":9148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:30","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":9150,"nodeType":"ExpressionStatement","src":"20506:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9151,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9142,"src":"20546:10:30","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9139,"src":"20560:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9160,"nodeType":"IfStatement","src":"20542:98:30","trueBody":{"id":9159,"nodeType":"Block","src":"20567:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":9155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:30","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":9156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9139,"src":"20623:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9154,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"20588:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9158,"nodeType":"RevertStatement","src":"20581:48:30"}]}}]},"documentation":{"id":9137,"nodeType":"StructuredDocumentation","src":"20105:312:30","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":9162,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:30","nodeType":"FunctionDefinition","parameters":{"id":9140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9139,"mutability":"mutable","name":"value","nameLocation":"20447:5:30","nodeType":"VariableDeclaration","scope":9162,"src":"20440:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9138,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:30"},"returnParameters":{"id":9143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9142,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:30","nodeType":"VariableDeclaration","scope":9162,"src":"20477:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":9141,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:30","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:30"},"scope":9853,"src":"20422:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9187,"nodeType":"Block","src":"21043:150:30","statements":[{"expression":{"id":9175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9168,"src":"21053:10:30","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9165,"src":"21073:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":9171,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:30","typeDescriptions":{}}},"id":9174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:30","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":9176,"nodeType":"ExpressionStatement","src":"21053:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9177,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9168,"src":"21093:10:30","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9165,"src":"21107:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9186,"nodeType":"IfStatement","src":"21089:98:30","trueBody":{"id":9185,"nodeType":"Block","src":"21114:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":9181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:30","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":9182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9165,"src":"21170:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9180,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"21135:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9184,"nodeType":"RevertStatement","src":"21128:48:30"}]}}]},"documentation":{"id":9163,"nodeType":"StructuredDocumentation","src":"20652:312:30","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":9188,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:30","nodeType":"FunctionDefinition","parameters":{"id":9166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9165,"mutability":"mutable","name":"value","nameLocation":"20994:5:30","nodeType":"VariableDeclaration","scope":9188,"src":"20987:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9164,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:30"},"returnParameters":{"id":9169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9168,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:30","nodeType":"VariableDeclaration","scope":9188,"src":"21024:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":9167,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:30","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:30"},"scope":9853,"src":"20969:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9213,"nodeType":"Block","src":"21590:150:30","statements":[{"expression":{"id":9201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9196,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9194,"src":"21600:10:30","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9191,"src":"21620:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":9197,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:30","typeDescriptions":{}}},"id":9200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:30","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":9202,"nodeType":"ExpressionStatement","src":"21600:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9203,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9194,"src":"21640:10:30","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9191,"src":"21654:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9212,"nodeType":"IfStatement","src":"21636:98:30","trueBody":{"id":9211,"nodeType":"Block","src":"21661:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":9207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:30","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":9208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9191,"src":"21717:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9206,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"21682:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9210,"nodeType":"RevertStatement","src":"21675:48:30"}]}}]},"documentation":{"id":9189,"nodeType":"StructuredDocumentation","src":"21199:312:30","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":9214,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:30","nodeType":"FunctionDefinition","parameters":{"id":9192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9191,"mutability":"mutable","name":"value","nameLocation":"21541:5:30","nodeType":"VariableDeclaration","scope":9214,"src":"21534:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9190,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:30"},"returnParameters":{"id":9195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9194,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:30","nodeType":"VariableDeclaration","scope":9214,"src":"21571:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":9193,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:30","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:30"},"scope":9853,"src":"21516:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9239,"nodeType":"Block","src":"22137:150:30","statements":[{"expression":{"id":9227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9220,"src":"22147:10:30","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9217,"src":"22167:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":9223,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:30","typeDescriptions":{}}},"id":9226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:30","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":9228,"nodeType":"ExpressionStatement","src":"22147:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9229,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9220,"src":"22187:10:30","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9217,"src":"22201:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9238,"nodeType":"IfStatement","src":"22183:98:30","trueBody":{"id":9237,"nodeType":"Block","src":"22208:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":9233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:30","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":9234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9217,"src":"22264:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9232,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"22229:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9236,"nodeType":"RevertStatement","src":"22222:48:30"}]}}]},"documentation":{"id":9215,"nodeType":"StructuredDocumentation","src":"21746:312:30","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":9240,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:30","nodeType":"FunctionDefinition","parameters":{"id":9218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9217,"mutability":"mutable","name":"value","nameLocation":"22088:5:30","nodeType":"VariableDeclaration","scope":9240,"src":"22081:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9216,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:30"},"returnParameters":{"id":9221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9220,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:30","nodeType":"VariableDeclaration","scope":9240,"src":"22118:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":9219,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:30","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:30"},"scope":9853,"src":"22063:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9265,"nodeType":"Block","src":"22684:150:30","statements":[{"expression":{"id":9253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9248,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9246,"src":"22694:10:30","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"22714:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":9249,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:30","typeDescriptions":{}}},"id":9252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:30","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":9254,"nodeType":"ExpressionStatement","src":"22694:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9255,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9246,"src":"22734:10:30","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"22748:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9264,"nodeType":"IfStatement","src":"22730:98:30","trueBody":{"id":9263,"nodeType":"Block","src":"22755:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":9259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:30","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":9260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9243,"src":"22811:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9258,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"22776:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9262,"nodeType":"RevertStatement","src":"22769:48:30"}]}}]},"documentation":{"id":9241,"nodeType":"StructuredDocumentation","src":"22293:312:30","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":9266,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:30","nodeType":"FunctionDefinition","parameters":{"id":9244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9243,"mutability":"mutable","name":"value","nameLocation":"22635:5:30","nodeType":"VariableDeclaration","scope":9266,"src":"22628:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9242,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:30"},"returnParameters":{"id":9247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9246,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:30","nodeType":"VariableDeclaration","scope":9266,"src":"22665:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":9245,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:30","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:30"},"scope":9853,"src":"22610:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9291,"nodeType":"Block","src":"23231:150:30","statements":[{"expression":{"id":9279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9274,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9272,"src":"23241:10:30","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9269,"src":"23261:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":9275,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:30","typeDescriptions":{}}},"id":9278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:30","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":9280,"nodeType":"ExpressionStatement","src":"23241:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9281,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9272,"src":"23281:10:30","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9269,"src":"23295:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9290,"nodeType":"IfStatement","src":"23277:98:30","trueBody":{"id":9289,"nodeType":"Block","src":"23302:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":9285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:30","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":9286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9269,"src":"23358:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9284,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"23323:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9288,"nodeType":"RevertStatement","src":"23316:48:30"}]}}]},"documentation":{"id":9267,"nodeType":"StructuredDocumentation","src":"22840:312:30","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":9292,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:30","nodeType":"FunctionDefinition","parameters":{"id":9270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9269,"mutability":"mutable","name":"value","nameLocation":"23182:5:30","nodeType":"VariableDeclaration","scope":9292,"src":"23175:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9268,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:30"},"returnParameters":{"id":9273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9272,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:30","nodeType":"VariableDeclaration","scope":9292,"src":"23212:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":9271,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:30","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:30"},"scope":9853,"src":"23157:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9317,"nodeType":"Block","src":"23778:150:30","statements":[{"expression":{"id":9305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9300,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9298,"src":"23788:10:30","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9295,"src":"23808:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":9301,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:30","typeDescriptions":{}}},"id":9304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:30","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":9306,"nodeType":"ExpressionStatement","src":"23788:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9307,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9298,"src":"23828:10:30","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9295,"src":"23842:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9316,"nodeType":"IfStatement","src":"23824:98:30","trueBody":{"id":9315,"nodeType":"Block","src":"23849:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":9311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:30","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":9312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9295,"src":"23905:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9310,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"23870:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9314,"nodeType":"RevertStatement","src":"23863:48:30"}]}}]},"documentation":{"id":9293,"nodeType":"StructuredDocumentation","src":"23387:312:30","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":9318,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:30","nodeType":"FunctionDefinition","parameters":{"id":9296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9295,"mutability":"mutable","name":"value","nameLocation":"23729:5:30","nodeType":"VariableDeclaration","scope":9318,"src":"23722:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9294,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:30"},"returnParameters":{"id":9299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9298,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:30","nodeType":"VariableDeclaration","scope":9318,"src":"23759:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":9297,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:30","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:30"},"scope":9853,"src":"23704:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9343,"nodeType":"Block","src":"24325:150:30","statements":[{"expression":{"id":9331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9326,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9324,"src":"24335:10:30","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9321,"src":"24355:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":9327,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:30","typeDescriptions":{}}},"id":9330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:30","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":9332,"nodeType":"ExpressionStatement","src":"24335:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9333,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9324,"src":"24375:10:30","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9321,"src":"24389:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9342,"nodeType":"IfStatement","src":"24371:98:30","trueBody":{"id":9341,"nodeType":"Block","src":"24396:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":9337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:30","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":9338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9321,"src":"24452:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9336,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"24417:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9340,"nodeType":"RevertStatement","src":"24410:48:30"}]}}]},"documentation":{"id":9319,"nodeType":"StructuredDocumentation","src":"23934:312:30","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":9344,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:30","nodeType":"FunctionDefinition","parameters":{"id":9322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9321,"mutability":"mutable","name":"value","nameLocation":"24276:5:30","nodeType":"VariableDeclaration","scope":9344,"src":"24269:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9320,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:30"},"returnParameters":{"id":9325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9324,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:30","nodeType":"VariableDeclaration","scope":9344,"src":"24306:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":9323,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:30","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:30"},"scope":9853,"src":"24251:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9369,"nodeType":"Block","src":"24872:150:30","statements":[{"expression":{"id":9357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9352,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9350,"src":"24882:10:30","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9347,"src":"24902:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":9353,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:30","typeDescriptions":{}}},"id":9356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:30","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":9358,"nodeType":"ExpressionStatement","src":"24882:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9359,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9350,"src":"24922:10:30","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9347,"src":"24936:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9368,"nodeType":"IfStatement","src":"24918:98:30","trueBody":{"id":9367,"nodeType":"Block","src":"24943:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":9363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:30","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":9364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9347,"src":"24999:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9362,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"24964:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9366,"nodeType":"RevertStatement","src":"24957:48:30"}]}}]},"documentation":{"id":9345,"nodeType":"StructuredDocumentation","src":"24481:312:30","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":9370,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:30","nodeType":"FunctionDefinition","parameters":{"id":9348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9347,"mutability":"mutable","name":"value","nameLocation":"24823:5:30","nodeType":"VariableDeclaration","scope":9370,"src":"24816:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9346,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:30"},"returnParameters":{"id":9351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9350,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:30","nodeType":"VariableDeclaration","scope":9370,"src":"24853:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":9349,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:30","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:30"},"scope":9853,"src":"24798:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9395,"nodeType":"Block","src":"25419:150:30","statements":[{"expression":{"id":9383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9378,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9376,"src":"25429:10:30","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"25449:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":9379,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:30","typeDescriptions":{}}},"id":9382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:30","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":9384,"nodeType":"ExpressionStatement","src":"25429:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9385,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9376,"src":"25469:10:30","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"25483:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9394,"nodeType":"IfStatement","src":"25465:98:30","trueBody":{"id":9393,"nodeType":"Block","src":"25490:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":9389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:30","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":9390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9373,"src":"25546:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9388,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"25511:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9392,"nodeType":"RevertStatement","src":"25504:48:30"}]}}]},"documentation":{"id":9371,"nodeType":"StructuredDocumentation","src":"25028:312:30","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":9396,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:30","nodeType":"FunctionDefinition","parameters":{"id":9374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9373,"mutability":"mutable","name":"value","nameLocation":"25370:5:30","nodeType":"VariableDeclaration","scope":9396,"src":"25363:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9372,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:30"},"returnParameters":{"id":9377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9376,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:30","nodeType":"VariableDeclaration","scope":9396,"src":"25400:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":9375,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:30","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:30"},"scope":9853,"src":"25345:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9421,"nodeType":"Block","src":"25966:150:30","statements":[{"expression":{"id":9409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9404,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9402,"src":"25976:10:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9399,"src":"25996:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":9405,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:30","typeDescriptions":{}}},"id":9408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":9410,"nodeType":"ExpressionStatement","src":"25976:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9411,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9402,"src":"26016:10:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9399,"src":"26030:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9420,"nodeType":"IfStatement","src":"26012:98:30","trueBody":{"id":9419,"nodeType":"Block","src":"26037:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":9415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:30","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":9416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9399,"src":"26093:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9414,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"26058:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9418,"nodeType":"RevertStatement","src":"26051:48:30"}]}}]},"documentation":{"id":9397,"nodeType":"StructuredDocumentation","src":"25575:312:30","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":9422,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:30","nodeType":"FunctionDefinition","parameters":{"id":9400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9399,"mutability":"mutable","name":"value","nameLocation":"25917:5:30","nodeType":"VariableDeclaration","scope":9422,"src":"25910:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9398,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:30"},"returnParameters":{"id":9403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9402,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:30","nodeType":"VariableDeclaration","scope":9422,"src":"25947:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":9401,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:30","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:30"},"scope":9853,"src":"25892:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9447,"nodeType":"Block","src":"26513:150:30","statements":[{"expression":{"id":9435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9430,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9428,"src":"26523:10:30","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9425,"src":"26543:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":9431,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:30","typeDescriptions":{}}},"id":9434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:30","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":9436,"nodeType":"ExpressionStatement","src":"26523:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9437,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9428,"src":"26563:10:30","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9425,"src":"26577:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9446,"nodeType":"IfStatement","src":"26559:98:30","trueBody":{"id":9445,"nodeType":"Block","src":"26584:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":9441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:30","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":9442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9425,"src":"26640:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9440,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"26605:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9444,"nodeType":"RevertStatement","src":"26598:48:30"}]}}]},"documentation":{"id":9423,"nodeType":"StructuredDocumentation","src":"26122:312:30","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":9448,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:30","nodeType":"FunctionDefinition","parameters":{"id":9426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9425,"mutability":"mutable","name":"value","nameLocation":"26464:5:30","nodeType":"VariableDeclaration","scope":9448,"src":"26457:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9424,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:30"},"returnParameters":{"id":9429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9428,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:30","nodeType":"VariableDeclaration","scope":9448,"src":"26494:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":9427,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:30","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:30"},"scope":9853,"src":"26439:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9473,"nodeType":"Block","src":"27060:150:30","statements":[{"expression":{"id":9461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9456,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9454,"src":"27070:10:30","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9451,"src":"27090:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":9457,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:30","typeDescriptions":{}}},"id":9460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:30","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":9462,"nodeType":"ExpressionStatement","src":"27070:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9463,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9454,"src":"27110:10:30","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9451,"src":"27124:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9472,"nodeType":"IfStatement","src":"27106:98:30","trueBody":{"id":9471,"nodeType":"Block","src":"27131:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":9467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:30","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":9468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9451,"src":"27187:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9466,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"27152:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9470,"nodeType":"RevertStatement","src":"27145:48:30"}]}}]},"documentation":{"id":9449,"nodeType":"StructuredDocumentation","src":"26669:312:30","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":9474,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:30","nodeType":"FunctionDefinition","parameters":{"id":9452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9451,"mutability":"mutable","name":"value","nameLocation":"27011:5:30","nodeType":"VariableDeclaration","scope":9474,"src":"27004:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9450,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:30"},"returnParameters":{"id":9455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9454,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:30","nodeType":"VariableDeclaration","scope":9474,"src":"27041:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":9453,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:30","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:30"},"scope":9853,"src":"26986:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9499,"nodeType":"Block","src":"27607:150:30","statements":[{"expression":{"id":9487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9482,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"27617:10:30","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9477,"src":"27637:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":9483,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:30","typeDescriptions":{}}},"id":9486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:30","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":9488,"nodeType":"ExpressionStatement","src":"27617:26:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9489,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9480,"src":"27657:10:30","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9477,"src":"27671:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9498,"nodeType":"IfStatement","src":"27653:98:30","trueBody":{"id":9497,"nodeType":"Block","src":"27678:73:30","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":9493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:30","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":9494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9477,"src":"27734:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9492,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"27699:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9496,"nodeType":"RevertStatement","src":"27692:48:30"}]}}]},"documentation":{"id":9475,"nodeType":"StructuredDocumentation","src":"27216:312:30","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":9500,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:30","nodeType":"FunctionDefinition","parameters":{"id":9478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9477,"mutability":"mutable","name":"value","nameLocation":"27558:5:30","nodeType":"VariableDeclaration","scope":9500,"src":"27551:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9476,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:30"},"returnParameters":{"id":9481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9480,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:30","nodeType":"VariableDeclaration","scope":9500,"src":"27588:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":9479,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:30","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:30"},"scope":9853,"src":"27533:224:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9525,"nodeType":"Block","src":"28147:148:30","statements":[{"expression":{"id":9513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9508,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9506,"src":"28157:10:30","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9503,"src":"28176:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":9509,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:30","typeDescriptions":{}}},"id":9512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:30","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":9514,"nodeType":"ExpressionStatement","src":"28157:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9515,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9506,"src":"28196:10:30","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9503,"src":"28210:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9524,"nodeType":"IfStatement","src":"28192:97:30","trueBody":{"id":9523,"nodeType":"Block","src":"28217:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":9519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:30","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":9520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9503,"src":"28272:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9518,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"28238:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9522,"nodeType":"RevertStatement","src":"28231:47:30"}]}}]},"documentation":{"id":9501,"nodeType":"StructuredDocumentation","src":"27763:307:30","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":9526,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:30","nodeType":"FunctionDefinition","parameters":{"id":9504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9503,"mutability":"mutable","name":"value","nameLocation":"28099:5:30","nodeType":"VariableDeclaration","scope":9526,"src":"28092:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9502,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:30"},"returnParameters":{"id":9507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9506,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:30","nodeType":"VariableDeclaration","scope":9526,"src":"28129:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":9505,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:30","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:30"},"scope":9853,"src":"28075:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9551,"nodeType":"Block","src":"28685:148:30","statements":[{"expression":{"id":9539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9534,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9532,"src":"28695:10:30","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9529,"src":"28714:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":9535,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:30","typeDescriptions":{}}},"id":9538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:30","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":9540,"nodeType":"ExpressionStatement","src":"28695:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9541,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9532,"src":"28734:10:30","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9529,"src":"28748:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9550,"nodeType":"IfStatement","src":"28730:97:30","trueBody":{"id":9549,"nodeType":"Block","src":"28755:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":9545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:30","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":9546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9529,"src":"28810:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9544,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"28776:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9548,"nodeType":"RevertStatement","src":"28769:47:30"}]}}]},"documentation":{"id":9527,"nodeType":"StructuredDocumentation","src":"28301:307:30","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":9552,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:30","nodeType":"FunctionDefinition","parameters":{"id":9530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9529,"mutability":"mutable","name":"value","nameLocation":"28637:5:30","nodeType":"VariableDeclaration","scope":9552,"src":"28630:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9528,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:30"},"returnParameters":{"id":9533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9532,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:30","nodeType":"VariableDeclaration","scope":9552,"src":"28667:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":9531,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:30","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:30"},"scope":9853,"src":"28613:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9577,"nodeType":"Block","src":"29223:148:30","statements":[{"expression":{"id":9565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9560,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9558,"src":"29233:10:30","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9555,"src":"29252:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":9561,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:30","typeDescriptions":{}}},"id":9564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:30","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":9566,"nodeType":"ExpressionStatement","src":"29233:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9567,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9558,"src":"29272:10:30","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9555,"src":"29286:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9576,"nodeType":"IfStatement","src":"29268:97:30","trueBody":{"id":9575,"nodeType":"Block","src":"29293:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":9571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:30","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":9572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9555,"src":"29348:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9570,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"29314:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9574,"nodeType":"RevertStatement","src":"29307:47:30"}]}}]},"documentation":{"id":9553,"nodeType":"StructuredDocumentation","src":"28839:307:30","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":9578,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:30","nodeType":"FunctionDefinition","parameters":{"id":9556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9555,"mutability":"mutable","name":"value","nameLocation":"29175:5:30","nodeType":"VariableDeclaration","scope":9578,"src":"29168:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9554,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:30"},"returnParameters":{"id":9559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9558,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:30","nodeType":"VariableDeclaration","scope":9578,"src":"29205:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":9557,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:30","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:30"},"scope":9853,"src":"29151:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9603,"nodeType":"Block","src":"29761:148:30","statements":[{"expression":{"id":9591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9586,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9584,"src":"29771:10:30","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9581,"src":"29790:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":9587,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:30","typeDescriptions":{}}},"id":9590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:30","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":9592,"nodeType":"ExpressionStatement","src":"29771:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9593,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9584,"src":"29810:10:30","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9594,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9581,"src":"29824:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9602,"nodeType":"IfStatement","src":"29806:97:30","trueBody":{"id":9601,"nodeType":"Block","src":"29831:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":9597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:30","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":9598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9581,"src":"29886:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9596,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"29852:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9600,"nodeType":"RevertStatement","src":"29845:47:30"}]}}]},"documentation":{"id":9579,"nodeType":"StructuredDocumentation","src":"29377:307:30","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":9604,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:30","nodeType":"FunctionDefinition","parameters":{"id":9582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9581,"mutability":"mutable","name":"value","nameLocation":"29713:5:30","nodeType":"VariableDeclaration","scope":9604,"src":"29706:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9580,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:30"},"returnParameters":{"id":9585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9584,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:30","nodeType":"VariableDeclaration","scope":9604,"src":"29743:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":9583,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:30","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:30"},"scope":9853,"src":"29689:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9629,"nodeType":"Block","src":"30299:148:30","statements":[{"expression":{"id":9617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9612,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9610,"src":"30309:10:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9615,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9607,"src":"30328:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":9613,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:30","typeDescriptions":{}}},"id":9616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":9618,"nodeType":"ExpressionStatement","src":"30309:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9619,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9610,"src":"30348:10:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9607,"src":"30362:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9628,"nodeType":"IfStatement","src":"30344:97:30","trueBody":{"id":9627,"nodeType":"Block","src":"30369:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":9623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:30","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":9624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9607,"src":"30424:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9622,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"30390:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9626,"nodeType":"RevertStatement","src":"30383:47:30"}]}}]},"documentation":{"id":9605,"nodeType":"StructuredDocumentation","src":"29915:307:30","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":9630,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:30","nodeType":"FunctionDefinition","parameters":{"id":9608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9607,"mutability":"mutable","name":"value","nameLocation":"30251:5:30","nodeType":"VariableDeclaration","scope":9630,"src":"30244:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9606,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:30"},"returnParameters":{"id":9611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9610,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:30","nodeType":"VariableDeclaration","scope":9630,"src":"30281:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":9609,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:30","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:30"},"scope":9853,"src":"30227:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9655,"nodeType":"Block","src":"30837:148:30","statements":[{"expression":{"id":9643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9638,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9636,"src":"30847:10:30","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9633,"src":"30866:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":9639,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:30","typeDescriptions":{}}},"id":9642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:30","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":9644,"nodeType":"ExpressionStatement","src":"30847:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9645,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9636,"src":"30886:10:30","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9646,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9633,"src":"30900:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9654,"nodeType":"IfStatement","src":"30882:97:30","trueBody":{"id":9653,"nodeType":"Block","src":"30907:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":9649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:30","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":9650,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9633,"src":"30962:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9648,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"30928:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9652,"nodeType":"RevertStatement","src":"30921:47:30"}]}}]},"documentation":{"id":9631,"nodeType":"StructuredDocumentation","src":"30453:307:30","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":9656,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:30","nodeType":"FunctionDefinition","parameters":{"id":9634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9633,"mutability":"mutable","name":"value","nameLocation":"30789:5:30","nodeType":"VariableDeclaration","scope":9656,"src":"30782:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9632,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:30"},"returnParameters":{"id":9637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9636,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:30","nodeType":"VariableDeclaration","scope":9656,"src":"30819:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":9635,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:30","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:30"},"scope":9853,"src":"30765:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9681,"nodeType":"Block","src":"31375:148:30","statements":[{"expression":{"id":9669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9664,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9662,"src":"31385:10:30","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9667,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9659,"src":"31404:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":9665,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:30","typeDescriptions":{}}},"id":9668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:30","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":9670,"nodeType":"ExpressionStatement","src":"31385:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9671,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9662,"src":"31424:10:30","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9659,"src":"31438:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9680,"nodeType":"IfStatement","src":"31420:97:30","trueBody":{"id":9679,"nodeType":"Block","src":"31445:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":9675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:30","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":9676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9659,"src":"31500:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9674,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"31466:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9678,"nodeType":"RevertStatement","src":"31459:47:30"}]}}]},"documentation":{"id":9657,"nodeType":"StructuredDocumentation","src":"30991:307:30","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":9682,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:30","nodeType":"FunctionDefinition","parameters":{"id":9660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9659,"mutability":"mutable","name":"value","nameLocation":"31327:5:30","nodeType":"VariableDeclaration","scope":9682,"src":"31320:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9658,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:30"},"returnParameters":{"id":9663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9662,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:30","nodeType":"VariableDeclaration","scope":9682,"src":"31357:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":9661,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:30","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:30"},"scope":9853,"src":"31303:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9707,"nodeType":"Block","src":"31913:148:30","statements":[{"expression":{"id":9695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9690,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9688,"src":"31923:10:30","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9693,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9685,"src":"31942:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":9691,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:30","typeDescriptions":{}}},"id":9694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:30","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":9696,"nodeType":"ExpressionStatement","src":"31923:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9697,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9688,"src":"31962:10:30","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9685,"src":"31976:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9706,"nodeType":"IfStatement","src":"31958:97:30","trueBody":{"id":9705,"nodeType":"Block","src":"31983:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":9701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:30","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":9702,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9685,"src":"32038:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9700,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"32004:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9704,"nodeType":"RevertStatement","src":"31997:47:30"}]}}]},"documentation":{"id":9683,"nodeType":"StructuredDocumentation","src":"31529:307:30","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":9708,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:30","nodeType":"FunctionDefinition","parameters":{"id":9686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9685,"mutability":"mutable","name":"value","nameLocation":"31865:5:30","nodeType":"VariableDeclaration","scope":9708,"src":"31858:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9684,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:30"},"returnParameters":{"id":9689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9688,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:30","nodeType":"VariableDeclaration","scope":9708,"src":"31895:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":9687,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:30","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:30"},"scope":9853,"src":"31841:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9733,"nodeType":"Block","src":"32451:148:30","statements":[{"expression":{"id":9721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9716,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9714,"src":"32461:10:30","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9719,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9711,"src":"32480:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":9717,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:30","typeDescriptions":{}}},"id":9720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:30","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":9722,"nodeType":"ExpressionStatement","src":"32461:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9723,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9714,"src":"32500:10:30","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9711,"src":"32514:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9732,"nodeType":"IfStatement","src":"32496:97:30","trueBody":{"id":9731,"nodeType":"Block","src":"32521:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":9727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:30","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":9728,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9711,"src":"32576:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9726,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"32542:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9730,"nodeType":"RevertStatement","src":"32535:47:30"}]}}]},"documentation":{"id":9709,"nodeType":"StructuredDocumentation","src":"32067:307:30","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":9734,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:30","nodeType":"FunctionDefinition","parameters":{"id":9712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9711,"mutability":"mutable","name":"value","nameLocation":"32403:5:30","nodeType":"VariableDeclaration","scope":9734,"src":"32396:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9710,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:30"},"returnParameters":{"id":9715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9714,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:30","nodeType":"VariableDeclaration","scope":9734,"src":"32433:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":9713,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:30","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:30"},"scope":9853,"src":"32379:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9759,"nodeType":"Block","src":"32989:148:30","statements":[{"expression":{"id":9747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9742,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9740,"src":"32999:10:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9737,"src":"33018:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":9743,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:30","typeDescriptions":{}}},"id":9746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":9748,"nodeType":"ExpressionStatement","src":"32999:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9749,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9740,"src":"33038:10:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9750,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9737,"src":"33052:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9758,"nodeType":"IfStatement","src":"33034:97:30","trueBody":{"id":9757,"nodeType":"Block","src":"33059:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":9753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:30","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":9754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9737,"src":"33114:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9752,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"33080:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9756,"nodeType":"RevertStatement","src":"33073:47:30"}]}}]},"documentation":{"id":9735,"nodeType":"StructuredDocumentation","src":"32605:307:30","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":9760,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:30","nodeType":"FunctionDefinition","parameters":{"id":9738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9737,"mutability":"mutable","name":"value","nameLocation":"32941:5:30","nodeType":"VariableDeclaration","scope":9760,"src":"32934:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9736,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:30"},"returnParameters":{"id":9741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9740,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:30","nodeType":"VariableDeclaration","scope":9760,"src":"32971:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":9739,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:30"},"scope":9853,"src":"32917:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9785,"nodeType":"Block","src":"33527:148:30","statements":[{"expression":{"id":9773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9768,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"33537:10:30","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9771,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9763,"src":"33556:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9770,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":9769,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:30","typeDescriptions":{}}},"id":9772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:30","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":9774,"nodeType":"ExpressionStatement","src":"33537:25:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9775,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9766,"src":"33576:10:30","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9776,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9763,"src":"33590:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9784,"nodeType":"IfStatement","src":"33572:97:30","trueBody":{"id":9783,"nodeType":"Block","src":"33597:72:30","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":9779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:30","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":9780,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9763,"src":"33652:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9778,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"33618:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9782,"nodeType":"RevertStatement","src":"33611:47:30"}]}}]},"documentation":{"id":9761,"nodeType":"StructuredDocumentation","src":"33143:307:30","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":9786,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:30","nodeType":"FunctionDefinition","parameters":{"id":9764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9763,"mutability":"mutable","name":"value","nameLocation":"33479:5:30","nodeType":"VariableDeclaration","scope":9786,"src":"33472:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9762,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:30"},"returnParameters":{"id":9767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9766,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:30","nodeType":"VariableDeclaration","scope":9786,"src":"33509:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":9765,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:30","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:30"},"scope":9853,"src":"33455:220:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9811,"nodeType":"Block","src":"34058:146:30","statements":[{"expression":{"id":9799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9794,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9792,"src":"34068:10:30","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9789,"src":"34086:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9796,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":9795,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:30","typeDescriptions":{}}},"id":9798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:30","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":9800,"nodeType":"ExpressionStatement","src":"34068:24:30"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9801,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9792,"src":"34106:10:30","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":9802,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9789,"src":"34120:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9810,"nodeType":"IfStatement","src":"34102:96:30","trueBody":{"id":9809,"nodeType":"Block","src":"34127:71:30","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":9805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:30","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":9806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9789,"src":"34181:5:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9804,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8110,"src":"34148:29:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":9807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9808,"nodeType":"RevertStatement","src":"34141:46:30"}]}}]},"documentation":{"id":9787,"nodeType":"StructuredDocumentation","src":"33681:302:30","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":9812,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:30","nodeType":"FunctionDefinition","parameters":{"id":9790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9789,"mutability":"mutable","name":"value","nameLocation":"34011:5:30","nodeType":"VariableDeclaration","scope":9812,"src":"34004:12:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9788,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:30"},"returnParameters":{"id":9793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9792,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:30","nodeType":"VariableDeclaration","scope":9812,"src":"34041:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":9791,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:30","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:30"},"scope":9853,"src":"33988:216:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9841,"nodeType":"Block","src":"34444:250:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9820,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"34557:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":9825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9824,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":9823,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":9826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":9827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:30","memberName":"max","nodeType":"MemberAccess","src":"34573:16:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9821,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:30","typeDescriptions":{}}},"id":9828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9835,"nodeType":"IfStatement","src":"34553:105:30","trueBody":{"id":9834,"nodeType":"Block","src":"34592:66:30","statements":[{"errorCall":{"arguments":[{"id":9831,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"34641:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9830,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8115,"src":"34613:27:30","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":9832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9833,"nodeType":"RevertStatement","src":"34606:41:30"}]}},{"expression":{"arguments":[{"id":9838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9815,"src":"34681:5:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9836,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:30","typeDescriptions":{}}},"id":9839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9819,"id":9840,"nodeType":"Return","src":"34667:20:30"}]},"documentation":{"id":9813,"nodeType":"StructuredDocumentation","src":"34210:165:30","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":9842,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:30","nodeType":"FunctionDefinition","parameters":{"id":9816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9815,"mutability":"mutable","name":"value","nameLocation":"34406:5:30","nodeType":"VariableDeclaration","scope":9842,"src":"34398:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9814,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:30"},"returnParameters":{"id":9819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9842,"src":"34436:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9817,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:30"},"scope":9853,"src":"34380:314:30","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9851,"nodeType":"Block","src":"34853:87:30","statements":[{"AST":{"nativeSrc":"34888:46:30","nodeType":"YulBlock","src":"34888:46:30","statements":[{"nativeSrc":"34902:22:30","nodeType":"YulAssignment","src":"34902:22:30","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:30","nodeType":"YulIdentifier","src":"34921:1:30"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:30","nodeType":"YulIdentifier","src":"34914:6:30"},"nativeSrc":"34914:9:30","nodeType":"YulFunctionCall","src":"34914:9:30"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:30","nodeType":"YulIdentifier","src":"34907:6:30"},"nativeSrc":"34907:17:30","nodeType":"YulFunctionCall","src":"34907:17:30"},"variableNames":[{"name":"u","nativeSrc":"34902:1:30","nodeType":"YulIdentifier","src":"34902:1:30"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":9845,"isOffset":false,"isSlot":false,"src":"34921:1:30","valueSize":1},{"declaration":9848,"isOffset":false,"isSlot":false,"src":"34902:1:30","valueSize":1}],"flags":["memory-safe"],"id":9850,"nodeType":"InlineAssembly","src":"34863:71:30"}]},"documentation":{"id":9843,"nodeType":"StructuredDocumentation","src":"34700:90:30","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":9852,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:30","nodeType":"FunctionDefinition","parameters":{"id":9846,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9845,"mutability":"mutable","name":"b","nameLocation":"34816:1:30","nodeType":"VariableDeclaration","scope":9852,"src":"34811:6:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9844,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:30"},"returnParameters":{"id":9849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9848,"mutability":"mutable","name":"u","nameLocation":"34850:1:30","nodeType":"VariableDeclaration","scope":9852,"src":"34842:9:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9847,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:30"},"scope":9853,"src":"34795:145:30","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9854,"src":"769:34173:30","usedErrors":[8098,8103,8110,8115],"usedEvents":[]}],"src":"192:34751:30"},"id":30},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[9853],"SignedMath":[9997]},"id":9998,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9855,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:31"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":9857,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9998,"sourceUnit":9854,"src":"135:40:31","symbolAliases":[{"foreign":{"id":9856,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"143:8:31","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":9858,"nodeType":"StructuredDocumentation","src":"177:80:31","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":9997,"linearizedBaseContracts":[9997],"name":"SignedMath","nameLocation":"266:10:31","nodeType":"ContractDefinition","nodes":[{"body":{"id":9887,"nodeType":"Block","src":"746:215:31","statements":[{"id":9886,"nodeType":"UncheckedBlock","src":"756:199:31","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9870,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9865,"src":"894:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9871,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9863,"src":"900:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9872,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9865,"src":"904:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9874,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":9879,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9861,"src":"932:9:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":9877,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9853,"src":"916:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$9853_$","typeString":"type(library SafeCast)"}},"id":9878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:31","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":9852,"src":"916:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":9880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9876,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9875,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:31","typeDescriptions":{}}},"id":9881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9883,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9869,"id":9885,"nodeType":"Return","src":"887:57:31"}]}]},"documentation":{"id":9859,"nodeType":"StructuredDocumentation","src":"283:374:31","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":9888,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:31","nodeType":"FunctionDefinition","parameters":{"id":9866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9861,"mutability":"mutable","name":"condition","nameLocation":"684:9:31","nodeType":"VariableDeclaration","scope":9888,"src":"679:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9860,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":9863,"mutability":"mutable","name":"a","nameLocation":"702:1:31","nodeType":"VariableDeclaration","scope":9888,"src":"695:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9862,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9865,"mutability":"mutable","name":"b","nameLocation":"712:1:31","nodeType":"VariableDeclaration","scope":9888,"src":"705:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9864,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:31"},"returnParameters":{"id":9869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9868,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9888,"src":"738:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9867,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:31"},"scope":9997,"src":"662:299:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9906,"nodeType":"Block","src":"1102:44:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9899,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9891,"src":"1127:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":9900,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9893,"src":"1131:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9902,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9891,"src":"1134:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9903,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9893,"src":"1137:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9898,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9888,"src":"1119:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9897,"id":9905,"nodeType":"Return","src":"1112:27:31"}]},"documentation":{"id":9889,"nodeType":"StructuredDocumentation","src":"967:66:31","text":" @dev Returns the largest of two signed numbers."},"id":9907,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:31","nodeType":"FunctionDefinition","parameters":{"id":9894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9891,"mutability":"mutable","name":"a","nameLocation":"1058:1:31","nodeType":"VariableDeclaration","scope":9907,"src":"1051:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9890,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9893,"mutability":"mutable","name":"b","nameLocation":"1068:1:31","nodeType":"VariableDeclaration","scope":9907,"src":"1061:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9892,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:31"},"returnParameters":{"id":9897,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9896,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9907,"src":"1094:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9895,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:31"},"scope":9997,"src":"1038:108:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9925,"nodeType":"Block","src":"1288:44:31","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9918,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9910,"src":"1313:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":9919,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9912,"src":"1317:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":9921,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9910,"src":"1320:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":9922,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9912,"src":"1323:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9917,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9888,"src":"1305:7:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":9923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9916,"id":9924,"nodeType":"Return","src":"1298:27:31"}]},"documentation":{"id":9908,"nodeType":"StructuredDocumentation","src":"1152:67:31","text":" @dev Returns the smallest of two signed numbers."},"id":9926,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:31","nodeType":"FunctionDefinition","parameters":{"id":9913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9910,"mutability":"mutable","name":"a","nameLocation":"1244:1:31","nodeType":"VariableDeclaration","scope":9926,"src":"1237:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9909,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9912,"mutability":"mutable","name":"b","nameLocation":"1254:1:31","nodeType":"VariableDeclaration","scope":9926,"src":"1247:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9911,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:31"},"returnParameters":{"id":9916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9926,"src":"1280:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9914,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:31"},"scope":9997,"src":"1224:108:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9969,"nodeType":"Block","src":"1537:162:31","statements":[{"assignments":[9937],"declarations":[{"constant":false,"id":9937,"mutability":"mutable","name":"x","nameLocation":"1606:1:31","nodeType":"VariableDeclaration","scope":9969,"src":"1599:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9936,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9950,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9938,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9929,"src":"1611:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":9939,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9931,"src":"1615:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9941,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9942,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9929,"src":"1622:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9943,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9931,"src":"1626:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":9946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:31"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9951,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9937,"src":"1651:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":9956,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9937,"src":"1671:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9954,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:31","typeDescriptions":{}}},"id":9957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:31","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:31","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":9952,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:31","typeDescriptions":{}}},"id":9960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9961,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9929,"src":"1685:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9962,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9931,"src":"1689:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9966,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":9935,"id":9968,"nodeType":"Return","src":"1644:48:31"}]},"documentation":{"id":9927,"nodeType":"StructuredDocumentation","src":"1338:126:31","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":9970,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:31","nodeType":"FunctionDefinition","parameters":{"id":9932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9929,"mutability":"mutable","name":"a","nameLocation":"1493:1:31","nodeType":"VariableDeclaration","scope":9970,"src":"1486:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9928,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":9931,"mutability":"mutable","name":"b","nameLocation":"1503:1:31","nodeType":"VariableDeclaration","scope":9970,"src":"1496:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9930,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:31"},"returnParameters":{"id":9935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9934,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9970,"src":"1529:6:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9933,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:31"},"scope":9997,"src":"1469:230:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":9995,"nodeType":"Block","src":"1843:767:31","statements":[{"id":9994,"nodeType":"UncheckedBlock","src":"1853:751:31","statements":[{"assignments":[9979],"declarations":[{"constant":false,"id":9979,"mutability":"mutable","name":"mask","nameLocation":"2424:4:31","nodeType":"VariableDeclaration","scope":9994,"src":"2417:11:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9978,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":9983,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9980,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"2431:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":9981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:31","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:31"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":9988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9986,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9973,"src":"2576:1:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":9987,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9979,"src":"2580:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":9989,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":9990,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9979,"src":"2588:4:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":9985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:31","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":9984,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:31","typeDescriptions":{}}},"id":9992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9977,"id":9993,"nodeType":"Return","src":"2560:33:31"}]}]},"documentation":{"id":9971,"nodeType":"StructuredDocumentation","src":"1705:78:31","text":" @dev Returns the absolute unsigned value of a signed value."},"id":9996,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:31","nodeType":"FunctionDefinition","parameters":{"id":9974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9973,"mutability":"mutable","name":"n","nameLocation":"1808:1:31","nodeType":"VariableDeclaration","scope":9996,"src":"1801:8:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":9972,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:31","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:31"},"returnParameters":{"id":9977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9976,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9996,"src":"1834:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9975,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:31"},"scope":9997,"src":"1788:822:31","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":9998,"src":"258:2354:31","usedErrors":[],"usedEvents":[]}],"src":"109:2504:31"},"id":31},"contracts/GameNFT.sol":{"ast":{"absolutePath":"contracts/GameNFT.sol","exportedSymbols":{"Context":[4654],"ERC165":[6455],"ERC721":[3347],"ERC721Utils":[3614],"GameNFT":[10034],"IERC165":[6467],"IERC721":[3464],"IERC721Errors":[391],"IERC721Metadata":[3510],"Strings":[6431]},"id":10035,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9999,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:32"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":10000,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10035,"sourceUnit":3348,"src":"58:57:32","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10001,"name":"ERC721","nameLocations":["137:6:32"],"nodeType":"IdentifierPath","referencedDeclaration":3347,"src":"137:6:32"},"id":10002,"nodeType":"InheritanceSpecifier","src":"137:6:32"}],"canonicalName":"GameNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10034,"linearizedBaseContracts":[10034,3347,391,3510,3464,6455,6467,4654],"name":"GameNFT","nameLocation":"126:7:32","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10004,"mutability":"mutable","name":"tokenId","nameLocation":"166:7:32","nodeType":"VariableDeclaration","scope":10034,"src":"150:23:32","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10003,"name":"uint256","nodeType":"ElementaryTypeName","src":"150:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":10032,"nodeType":"Block","src":"221:165:32","statements":[{"body":{"id":10030,"nodeType":"Block","src":"306:74:32","statements":[{"expression":{"arguments":[{"expression":{"id":10022,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"326:3:32","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"330:6:32","memberName":"sender","nodeType":"MemberAccess","src":"326:10:32","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10024,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10004,"src":"338:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10021,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"320:5:32","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"320:26:32","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10026,"nodeType":"ExpressionStatement","src":"320:26:32"},{"expression":{"id":10028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"360:9:32","subExpression":{"id":10027,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10004,"src":"360:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10029,"nodeType":"ExpressionStatement","src":"360:9:32"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10015,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10012,"src":"292:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313030","id":10016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"296:3:32","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"292:7:32","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10031,"initializationExpression":{"assignments":[10012],"declarations":[{"constant":false,"id":10012,"mutability":"mutable","name":"i","nameLocation":"285:1:32","nodeType":"VariableDeclaration","scope":10031,"src":"277:9:32","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10011,"name":"uint256","nodeType":"ElementaryTypeName","src":"277:7:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10014,"initialValue":{"hexValue":"30","id":10013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"289:1:32","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"277:13:32"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"301:3:32","subExpression":{"id":10018,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10012,"src":"301:1:32","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10020,"nodeType":"ExpressionStatement","src":"301:3:32"},"nodeType":"ForStatement","src":"272:108:32"}]},"id":10033,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"47616d65204e4654","id":10007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"201:10:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_f5aa436b81acb83174f9eeae001aecd31112a0cd5305fa963ef0899278ca911e","typeString":"literal_string \"Game NFT\""},"value":"Game NFT"},{"hexValue":"474e4654","id":10008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"213:6:32","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d4f6661688b6d6b8cad7b9db53472051c5baf1f0e8fce986be24ab47fef0d56","typeString":"literal_string \"GNFT\""},"value":"GNFT"}],"id":10009,"kind":"baseConstructorSpecifier","modifierName":{"id":10006,"name":"ERC721","nameLocations":["194:6:32"],"nodeType":"IdentifierPath","referencedDeclaration":3347,"src":"194:6:32"},"nodeType":"ModifierInvocation","src":"194:26:32"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10005,"nodeType":"ParameterList","parameters":[],"src":"191:2:32"},"returnParameters":{"id":10010,"nodeType":"ParameterList","parameters":[],"src":"221:0:32"},"scope":10034,"src":"180:206:32","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":10035,"src":"117:271:32","usedErrors":[349,354,363,368,373,380,385,390],"usedEvents":[3363,3372,3381]}],"src":"32:356:32"},"id":32},"contracts/Gameitem.sol":{"ast":{"absolutePath":"contracts/Gameitem.sol","exportedSymbols":{"Arrays":[4592],"Context":[4654],"ERC1155":[1355],"ERC1155Utils":[1771],"ERC165":[6455],"GameItem":[10055],"IERC1155":[1478],"IERC1155Errors":[438],"IERC1155MetadataURI":[1536],"IERC165":[6467]},"id":10056,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10036,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:33"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":10037,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10056,"sourceUnit":1356,"src":"58:59:33","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10038,"name":"ERC1155","nameLocations":["140:7:33"],"nodeType":"IdentifierPath","referencedDeclaration":1355,"src":"140:7:33"},"id":10039,"nodeType":"InheritanceSpecifier","src":"140:7:33"}],"canonicalName":"GameItem","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10055,"linearizedBaseContracts":[10055,1355,438,1536,1478,6455,6467,4654],"name":"GameItem","nameLocation":"128:8:33","nodeType":"ContractDefinition","nodes":[{"body":{"id":10053,"nodeType":"Block","src":"219:96:33","statements":[{"expression":{"arguments":[{"expression":{"id":10046,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"284:3:33","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"288:6:33","memberName":"sender","nodeType":"MemberAccess","src":"284:10:33","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":10048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"296:1:33","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"31303030","id":10049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"299:4:33","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},{"hexValue":"","id":10050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"305:2:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":10045,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1168,"src":"278:5:33","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":10051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"278:30:33","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10052,"nodeType":"ExpressionStatement","src":"278:30:33"}]},"id":10054,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69647d2e6a736f6e","id":10042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"176:41:33","typeDescriptions":{"typeIdentifier":"t_stringliteral_9be393994f02169c966a8f7d954e5f555f9d6fdea83c170362ff79cf2c5ce4f1","typeString":"literal_string \"https://game.example/api/item/{id}.json\""},"value":"https://game.example/api/item/{id}.json"}],"id":10043,"kind":"baseConstructorSpecifier","modifierName":{"id":10041,"name":"ERC1155","nameLocations":["168:7:33"],"nodeType":"IdentifierPath","referencedDeclaration":1355,"src":"168:7:33"},"nodeType":"ModifierInvocation","src":"168:50:33"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10040,"nodeType":"ParameterList","parameters":[],"src":"165:2:33"},"returnParameters":{"id":10044,"nodeType":"ParameterList","parameters":[],"src":"219:0:33"},"scope":10055,"src":"154:161:33","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":10056,"src":"119:198:33","usedErrors":[403,408,413,420,425,430,437],"usedEvents":[1375,1390,1399,1406]}],"src":"32:285:33"},"id":33},"contracts/Gametoken.sol":{"ast":{"absolutePath":"contracts/Gametoken.sol","exportedSymbols":{"Context":[4654],"ERC20":[2286],"GameToken":[10079],"IERC20":[2364],"IERC20Errors":[343],"IERC20Metadata":[2390]},"id":10080,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10057,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:34"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":10058,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":10080,"sourceUnit":2287,"src":"58:55:34","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10059,"name":"ERC20","nameLocations":["137:5:34"],"nodeType":"IdentifierPath","referencedDeclaration":2286,"src":"137:5:34"},"id":10060,"nodeType":"InheritanceSpecifier","src":"137:5:34"}],"canonicalName":"GameToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":10079,"linearizedBaseContracts":[10079,2286,343,2390,2364,4654],"name":"GameToken","nameLocation":"124:9:34","nodeType":"ContractDefinition","nodes":[{"body":{"id":10077,"nodeType":"Block","src":"189:72:34","statements":[{"expression":{"arguments":[{"expression":{"id":10068,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"205:3:34","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"209:6:34","memberName":"sender","nodeType":"MemberAccess","src":"205:10:34","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"},"id":10074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31303030303030","id":10070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"217:7:34","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"value":"1000000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":10073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":10071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"227:2:34","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":10072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"233:2:34","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"227:8:34","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"217:18:34","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1000000000000000000000000_by_1","typeString":"int_const 1000000000000000000000000"}],"id":10067,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"199:5:34","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"199:37:34","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10076,"nodeType":"ExpressionStatement","src":"199:37:34"}]},"id":10078,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"47616d6520546f6b656e","id":10063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"169:12:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebd19fbfd9cac099805799e53e1b6f0f0a4929dc86feba390ca3ff8715a405d0","typeString":"literal_string \"Game Token\""},"value":"Game Token"},{"hexValue":"4754","id":10064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"183:4:34","typeDescriptions":{"typeIdentifier":"t_stringliteral_b275d0555485319643a6e39fae791932db6d1bb57b5529b0f8111f703023fe74","typeString":"literal_string \"GT\""},"value":"GT"}],"id":10065,"kind":"baseConstructorSpecifier","modifierName":{"id":10062,"name":"ERC20","nameLocations":["163:5:34"],"nodeType":"IdentifierPath","referencedDeclaration":2286,"src":"163:5:34"},"nodeType":"ModifierInvocation","src":"163:25:34"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10061,"nodeType":"ParameterList","parameters":[],"src":"160:2:34"},"returnParameters":{"id":10066,"nodeType":"ParameterList","parameters":[],"src":"189:0:34"},"scope":10079,"src":"149:112:34","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":10080,"src":"115:148:34","usedErrors":[313,318,323,332,337,342],"usedEvents":[2298,2307]}],"src":"32:231:34"},"id":34},"contracts/LootBox.sol":{"ast":{"absolutePath":"contracts/LootBox.sol","exportedSymbols":{"Context":[4654],"ERC1155Holder":[1617],"ERC165":[6455],"ERC721Holder":[3537],"IERC1155":[1478],"IERC1155Receiver":[1520],"IERC165":[6467],"IERC20":[2364],"IERC721":[3464],"IERC721Receiver":[3482],"LootBox":[11176],"Ownable":[301],"ReentrancyGuard":[4775],"VRFConsumerBaseV2":[57],"VRFCoordinatorV2Interface":[153]},"id":11177,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":10081,"literals":["solidity","^","0.8",".28"],"nodeType":"PragmaDirective","src":"32:24:35"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":10082,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11177,"sourceUnit":2365,"src":"58:56:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":10083,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11177,"sourceUnit":3465,"src":"115:58:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","id":10084,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11177,"sourceUnit":1479,"src":"174:60:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol","file":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol","id":10085,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11177,"sourceUnit":1618,"src":"235:71:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol","file":"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol","id":10086,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11177,"sourceUnit":3538,"src":"307:69:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":10087,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11177,"sourceUnit":302,"src":"377:52:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":10088,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11177,"sourceUnit":4776,"src":"430:59:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","file":"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol","id":10089,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11177,"sourceUnit":58,"src":"490:65:35","symbolAliases":[],"unitAlias":""},{"absolutePath":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","file":"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol","id":10090,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":11177,"sourceUnit":154,"src":"556:84:35","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":10091,"name":"VRFConsumerBaseV2","nameLocations":["662:17:35"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"662:17:35"},"id":10092,"nodeType":"InheritanceSpecifier","src":"662:17:35"},{"baseName":{"id":10093,"name":"ERC1155Holder","nameLocations":["681:13:35"],"nodeType":"IdentifierPath","referencedDeclaration":1617,"src":"681:13:35"},"id":10094,"nodeType":"InheritanceSpecifier","src":"681:13:35"},{"baseName":{"id":10095,"name":"ERC721Holder","nameLocations":["696:12:35"],"nodeType":"IdentifierPath","referencedDeclaration":3537,"src":"696:12:35"},"id":10096,"nodeType":"InheritanceSpecifier","src":"696:12:35"},{"baseName":{"id":10097,"name":"Ownable","nameLocations":["710:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":301,"src":"710:7:35"},"id":10098,"nodeType":"InheritanceSpecifier","src":"710:7:35"},{"baseName":{"id":10099,"name":"ReentrancyGuard","nameLocations":["719:15:35"],"nodeType":"IdentifierPath","referencedDeclaration":4775,"src":"719:15:35"},"id":10100,"nodeType":"InheritanceSpecifier","src":"719:15:35"}],"canonicalName":"LootBox","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":11176,"linearizedBaseContracts":[11176,4775,301,4654,3537,3482,1617,1520,6455,6467,57],"name":"LootBox","nameLocation":"651:7:35","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":10103,"mutability":"mutable","name":"COORDINATOR","nameLocation":"772:11:35","nodeType":"VariableDeclaration","scope":11176,"src":"746:37:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"},"typeName":{"id":10102,"nodeType":"UserDefinedTypeName","pathNode":{"id":10101,"name":"VRFCoordinatorV2Interface","nameLocations":["746:25:35"],"nodeType":"IdentifierPath","referencedDeclaration":153,"src":"746:25:35"},"referencedDeclaration":153,"src":"746:25:35","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"visibility":"internal"},{"constant":false,"id":10105,"mutability":"mutable","name":"subscriptionId","nameLocation":"796:14:35","nodeType":"VariableDeclaration","scope":11176,"src":"789:21:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":10104,"name":"uint64","nodeType":"ElementaryTypeName","src":"789:6:35","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":10108,"mutability":"mutable","name":"vrfCoordinator","nameLocation":"824:14:35","nodeType":"VariableDeclaration","scope":11176,"src":"816:67:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10106,"name":"address","nodeType":"ElementaryTypeName","src":"816:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"hexValue":"307839446466614361383138336334316164353533323942646565443946364138643533313638423142","id":10107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:42:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"value":"0x9DdfaCa8183c41ad55329BdeeD9F6A8d53168B1B"},"visibility":"internal"},{"constant":false,"id":10111,"mutability":"mutable","name":"keyHash","nameLocation":"908:7:35","nodeType":"VariableDeclaration","scope":11176,"src":"900:84:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":10109,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307837383764373463616561313062326233353737393064356235323437633266363364316439313537326139383436663738303630366534643935333637376165","id":10110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"918:66:35","typeDescriptions":{"typeIdentifier":"t_rational_54499203786224664545214975898555686073558526619289911036465919174612406925230_by_1","typeString":"int_const 5449...(69 digits omitted)...5230"},"value":"0x787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae"},"visibility":"internal"},{"constant":false,"id":10114,"mutability":"mutable","name":"callbackGasLimit","nameLocation":"997:16:35","nodeType":"VariableDeclaration","scope":11176,"src":"990:32:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10112,"name":"uint32","nodeType":"ElementaryTypeName","src":"990:6:35","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"323030303030","id":10113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1016:6:35","typeDescriptions":{"typeIdentifier":"t_rational_200000_by_1","typeString":"int_const 200000"},"value":"200000"},"visibility":"internal"},{"constant":false,"id":10117,"mutability":"mutable","name":"requestConfirmations","nameLocation":"1059:20:35","nodeType":"VariableDeclaration","scope":11176,"src":"1052:31:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":10115,"name":"uint16","nodeType":"ElementaryTypeName","src":"1052:6:35","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"value":{"hexValue":"33","id":10116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1082:1:35","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"visibility":"internal"},{"constant":false,"id":10120,"mutability":"mutable","name":"numWords","nameLocation":"1096:8:35","nodeType":"VariableDeclaration","scope":11176,"src":"1089:19:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":10118,"name":"uint32","nodeType":"ElementaryTypeName","src":"1089:6:35","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"value":{"hexValue":"31","id":10119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1107:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"internal"},{"canonicalName":"LootBox.RewardTier","id":10129,"members":[{"constant":false,"id":10122,"mutability":"mutable","name":"weight","nameLocation":"1176:6:35","nodeType":"VariableDeclaration","scope":10129,"src":"1168:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10121,"name":"uint256","nodeType":"ElementaryTypeName","src":"1168:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10124,"mutability":"mutable","name":"minAmount","nameLocation":"1200:9:35","nodeType":"VariableDeclaration","scope":10129,"src":"1192:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10123,"name":"uint256","nodeType":"ElementaryTypeName","src":"1192:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10126,"mutability":"mutable","name":"maxAmount","nameLocation":"1227:9:35","nodeType":"VariableDeclaration","scope":10129,"src":"1219:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10125,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10128,"mutability":"mutable","name":"active","nameLocation":"1251:6:35","nodeType":"VariableDeclaration","scope":10129,"src":"1246:11:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10127,"name":"bool","nodeType":"ElementaryTypeName","src":"1246:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"RewardTier","nameLocation":"1147:10:35","nodeType":"StructDefinition","scope":11176,"src":"1140:124:35","visibility":"public"},{"canonicalName":"LootBox.TokenContracts","id":10141,"members":[{"constant":false,"id":10132,"mutability":"mutable","name":"erc20Token","nameLocation":"1309:10:35","nodeType":"VariableDeclaration","scope":10141,"src":"1302:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2364","typeString":"contract IERC20"},"typeName":{"id":10131,"nodeType":"UserDefinedTypeName","pathNode":{"id":10130,"name":"IERC20","nameLocations":["1302:6:35"],"nodeType":"IdentifierPath","referencedDeclaration":2364,"src":"1302:6:35"},"referencedDeclaration":2364,"src":"1302:6:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2364","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":10135,"mutability":"mutable","name":"erc721Token","nameLocation":"1337:11:35","nodeType":"VariableDeclaration","scope":10141,"src":"1329:19:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$3464","typeString":"contract IERC721"},"typeName":{"id":10134,"nodeType":"UserDefinedTypeName","pathNode":{"id":10133,"name":"IERC721","nameLocations":["1329:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":3464,"src":"1329:7:35"},"referencedDeclaration":3464,"src":"1329:7:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$3464","typeString":"contract IERC721"}},"visibility":"internal"},{"constant":false,"id":10138,"mutability":"mutable","name":"erc1155Token","nameLocation":"1367:12:35","nodeType":"VariableDeclaration","scope":10141,"src":"1358:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155_$1478","typeString":"contract IERC1155"},"typeName":{"id":10137,"nodeType":"UserDefinedTypeName","pathNode":{"id":10136,"name":"IERC1155","nameLocations":["1358:8:35"],"nodeType":"IdentifierPath","referencedDeclaration":1478,"src":"1358:8:35"},"referencedDeclaration":1478,"src":"1358:8:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155_$1478","typeString":"contract IERC1155"}},"visibility":"internal"},{"constant":false,"id":10140,"mutability":"mutable","name":"erc1155TokenId","nameLocation":"1397:14:35","nodeType":"VariableDeclaration","scope":10141,"src":"1389:22:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10139,"name":"uint256","nodeType":"ElementaryTypeName","src":"1389:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"TokenContracts","nameLocation":"1277:14:35","nodeType":"StructDefinition","scope":11176,"src":"1270:148:35","visibility":"public"},{"constant":false,"functionSelector":"9d63848a","id":10144,"mutability":"mutable","name":"tokens","nameLocation":"1446:6:35","nodeType":"VariableDeclaration","scope":11176,"src":"1424:28:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts"},"typeName":{"id":10143,"nodeType":"UserDefinedTypeName","pathNode":{"id":10142,"name":"TokenContracts","nameLocations":["1424:14:35"],"nodeType":"IdentifierPath","referencedDeclaration":10141,"src":"1424:14:35"},"referencedDeclaration":10141,"src":"1424:14:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage_ptr","typeString":"struct LootBox.TokenContracts"}},"visibility":"public"},{"constant":false,"functionSelector":"a6482858","id":10147,"mutability":"mutable","name":"boxPrice","nameLocation":"1500:8:35","nodeType":"VariableDeclaration","scope":11176,"src":"1485:36:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10145,"name":"uint256","nodeType":"ElementaryTypeName","src":"1485:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"302e3031","id":10146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1511:10:35","subdenomination":"ether","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"value":"0.01"},"visibility":"public"},{"constant":false,"functionSelector":"ff201114","id":10151,"mutability":"mutable","name":"rewardTiers","nameLocation":"1596:11:35","nodeType":"VariableDeclaration","scope":11176,"src":"1576:31:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier[]"},"typeName":{"baseType":{"id":10149,"nodeType":"UserDefinedTypeName","pathNode":{"id":10148,"name":"RewardTier","nameLocations":["1576:10:35"],"nodeType":"IdentifierPath","referencedDeclaration":10129,"src":"1576:10:35"},"referencedDeclaration":10129,"src":"1576:10:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage_ptr","typeString":"struct LootBox.RewardTier"}},"id":10150,"nodeType":"ArrayTypeName","src":"1576:12:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage_ptr","typeString":"struct LootBox.RewardTier[]"}},"visibility":"public"},{"constant":false,"functionSelector":"96c82e57","id":10153,"mutability":"mutable","name":"totalWeight","nameLocation":"1628:11:35","nodeType":"VariableDeclaration","scope":11176,"src":"1613:26:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10152,"name":"uint256","nodeType":"ElementaryTypeName","src":"1613:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"aa10b2f4","id":10157,"mutability":"mutable","name":"availableERC721Tokens","nameLocation":"1711:21:35","nodeType":"VariableDeclaration","scope":11176,"src":"1676:56:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"typeName":{"id":10156,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10154,"name":"uint256","nodeType":"ElementaryTypeName","src":"1684:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1676:27:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10155,"name":"uint256","nodeType":"ElementaryTypeName","src":"1695:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"9d32d2f7","id":10159,"mutability":"mutable","name":"availableERC721Count","nameLocation":"1777:20:35","nodeType":"VariableDeclaration","scope":11176,"src":"1762:35:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10158,"name":"uint256","nodeType":"ElementaryTypeName","src":"1762:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"canonicalName":"LootBox.PendingRequest","id":10166,"members":[{"constant":false,"id":10161,"mutability":"mutable","name":"user","nameLocation":"1876:4:35","nodeType":"VariableDeclaration","scope":10166,"src":"1868:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10160,"name":"address","nodeType":"ElementaryTypeName","src":"1868:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10163,"mutability":"mutable","name":"timestamp","nameLocation":"1898:9:35","nodeType":"VariableDeclaration","scope":10166,"src":"1890:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10162,"name":"uint256","nodeType":"ElementaryTypeName","src":"1890:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10165,"mutability":"mutable","name":"fulfilled","nameLocation":"1922:9:35","nodeType":"VariableDeclaration","scope":10166,"src":"1917:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10164,"name":"bool","nodeType":"ElementaryTypeName","src":"1917:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"PendingRequest","nameLocation":"1843:14:35","nodeType":"StructDefinition","scope":11176,"src":"1836:102:35","visibility":"public"},{"constant":false,"functionSelector":"3c652a9a","id":10171,"mutability":"mutable","name":"pendingRequests","nameLocation":"1985:15:35","nodeType":"VariableDeclaration","scope":11176,"src":"1943:57:35","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PendingRequest_$10166_storage_$","typeString":"mapping(uint256 => struct LootBox.PendingRequest)"},"typeName":{"id":10170,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":10167,"name":"uint256","nodeType":"ElementaryTypeName","src":"1951:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1943:34:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PendingRequest_$10166_storage_$","typeString":"mapping(uint256 => struct LootBox.PendingRequest)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":10169,"nodeType":"UserDefinedTypeName","pathNode":{"id":10168,"name":"PendingRequest","nameLocations":["1962:14:35"],"nodeType":"IdentifierPath","referencedDeclaration":10166,"src":"1962:14:35"},"referencedDeclaration":10166,"src":"1962:14:35","typeDescriptions":{"typeIdentifier":"t_struct$_PendingRequest_$10166_storage_ptr","typeString":"struct LootBox.PendingRequest"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"b73d415d4554d9bc64f3fadea1d75caaeb0f4db5b74538b5e5dcbce2660e6240","id":10177,"name":"BoxOpened","nameLocation":"2031:9:35","nodeType":"EventDefinition","parameters":{"id":10176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10173,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2057:4:35","nodeType":"VariableDeclaration","scope":10177,"src":"2041:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10172,"name":"address","nodeType":"ElementaryTypeName","src":"2041:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10175,"indexed":false,"mutability":"mutable","name":"requestId","nameLocation":"2071:9:35","nodeType":"VariableDeclaration","scope":10177,"src":"2063:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10174,"name":"uint256","nodeType":"ElementaryTypeName","src":"2063:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2040:41:35"},"src":"2025:57:35"},{"anonymous":false,"eventSelector":"bfa71c1f3eab9b9afac3b012c5023dc1113afdcd4a99f488b769ed7b283faaec","id":10187,"name":"RewardAssigned","nameLocation":"2093:14:35","nodeType":"EventDefinition","parameters":{"id":10186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10179,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2124:4:35","nodeType":"VariableDeclaration","scope":10187,"src":"2108:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10178,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10181,"indexed":false,"mutability":"mutable","name":"rewardType","nameLocation":"2137:10:35","nodeType":"VariableDeclaration","scope":10187,"src":"2130:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10180,"name":"string","nodeType":"ElementaryTypeName","src":"2130:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10183,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2157:6:35","nodeType":"VariableDeclaration","scope":10187,"src":"2149:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10182,"name":"uint256","nodeType":"ElementaryTypeName","src":"2149:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10185,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2173:7:35","nodeType":"VariableDeclaration","scope":10187,"src":"2165:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10184,"name":"uint256","nodeType":"ElementaryTypeName","src":"2165:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2107:74:35"},"src":"2087:95:35"},{"anonymous":false,"eventSelector":"eaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d","id":10193,"name":"FundsWithdrawn","nameLocation":"2193:14:35","nodeType":"EventDefinition","parameters":{"id":10192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10189,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2224:5:35","nodeType":"VariableDeclaration","scope":10193,"src":"2208:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10188,"name":"address","nodeType":"ElementaryTypeName","src":"2208:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10191,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2239:6:35","nodeType":"VariableDeclaration","scope":10193,"src":"2231:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10190,"name":"uint256","nodeType":"ElementaryTypeName","src":"2231:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2207:39:35"},"src":"2187:60:35"},{"anonymous":false,"eventSelector":"66c998c4f16e6680d6471c293823ebfb3b9f053a14111a2e24f54578c4c7975f","id":10203,"name":"RewardTierUpdated","nameLocation":"2258:17:35","nodeType":"EventDefinition","parameters":{"id":10202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10195,"indexed":true,"mutability":"mutable","name":"tierId","nameLocation":"2292:6:35","nodeType":"VariableDeclaration","scope":10203,"src":"2276:22:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10194,"name":"uint256","nodeType":"ElementaryTypeName","src":"2276:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10197,"indexed":false,"mutability":"mutable","name":"weight","nameLocation":"2308:6:35","nodeType":"VariableDeclaration","scope":10203,"src":"2300:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10196,"name":"uint256","nodeType":"ElementaryTypeName","src":"2300:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10199,"indexed":false,"mutability":"mutable","name":"minAmount","nameLocation":"2324:9:35","nodeType":"VariableDeclaration","scope":10203,"src":"2316:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10198,"name":"uint256","nodeType":"ElementaryTypeName","src":"2316:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10201,"indexed":false,"mutability":"mutable","name":"maxAmount","nameLocation":"2343:9:35","nodeType":"VariableDeclaration","scope":10203,"src":"2335:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10200,"name":"uint256","nodeType":"ElementaryTypeName","src":"2335:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2275:78:35"},"src":"2252:102:35"},{"anonymous":false,"eventSelector":"fc333481437d78e9325f635584c23b08b3a65462687211c81ff8da3891851d90","id":10213,"name":"TokenContractsUpdated","nameLocation":"2365:21:35","nodeType":"EventDefinition","parameters":{"id":10212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10205,"indexed":false,"mutability":"mutable","name":"erc20","nameLocation":"2395:5:35","nodeType":"VariableDeclaration","scope":10213,"src":"2387:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10204,"name":"address","nodeType":"ElementaryTypeName","src":"2387:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10207,"indexed":false,"mutability":"mutable","name":"erc721","nameLocation":"2410:6:35","nodeType":"VariableDeclaration","scope":10213,"src":"2402:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10206,"name":"address","nodeType":"ElementaryTypeName","src":"2402:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10209,"indexed":false,"mutability":"mutable","name":"erc1155","nameLocation":"2426:7:35","nodeType":"VariableDeclaration","scope":10213,"src":"2418:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10208,"name":"address","nodeType":"ElementaryTypeName","src":"2418:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10211,"indexed":false,"mutability":"mutable","name":"erc1155TokenId","nameLocation":"2443:14:35","nodeType":"VariableDeclaration","scope":10213,"src":"2435:22:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10210,"name":"uint256","nodeType":"ElementaryTypeName","src":"2435:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2386:72:35"},"src":"2359:100:35"},{"anonymous":false,"eventSelector":"6cda8e8be956b74ed7e2d0f733d6dddfcc7b34ce982e77240ad42816639056f5","id":10219,"name":"InventoryReplenished","nameLocation":"2470:20:35","nodeType":"EventDefinition","parameters":{"id":10218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10215,"indexed":false,"mutability":"mutable","name":"tokenType","nameLocation":"2498:9:35","nodeType":"VariableDeclaration","scope":10219,"src":"2491:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":10214,"name":"string","nodeType":"ElementaryTypeName","src":"2491:6:35","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":10217,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2517:6:35","nodeType":"VariableDeclaration","scope":10219,"src":"2509:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10216,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2490:34:35"},"src":"2464:61:35"},{"errorSelector":"cd1c8867","id":10221,"name":"InsufficientPayment","nameLocation":"2562:19:35","nodeType":"ErrorDefinition","parameters":{"id":10220,"nodeType":"ParameterList","parameters":[],"src":"2581:2:35"},"src":"2556:28:35"},{"errorSelector":"8b2024a5","id":10223,"name":"InsufficientInventory","nameLocation":"2595:21:35","nodeType":"ErrorDefinition","parameters":{"id":10222,"nodeType":"ParameterList","parameters":[],"src":"2616:2:35"},"src":"2589:30:35"},{"errorSelector":"41abc801","id":10225,"name":"InvalidRequest","nameLocation":"2630:14:35","nodeType":"ErrorDefinition","parameters":{"id":10224,"nodeType":"ParameterList","parameters":[],"src":"2644:2:35"},"src":"2624:23:35"},{"errorSelector":"90b8ec18","id":10227,"name":"TransferFailed","nameLocation":"2658:14:35","nodeType":"ErrorDefinition","parameters":{"id":10226,"nodeType":"ParameterList","parameters":[],"src":"2672:2:35"},"src":"2652:23:35"},{"errorSelector":"adf8131b","id":10229,"name":"InvalidTierConfiguration","nameLocation":"2686:24:35","nodeType":"ErrorDefinition","parameters":{"id":10228,"nodeType":"ParameterList","parameters":[],"src":"2710:2:35"},"src":"2680:33:35"},{"body":{"id":10277,"nodeType":"Block","src":"2946:435:35","statements":[{"expression":{"id":10253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10249,"name":"COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10103,"src":"2956:11:35","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10251,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10108,"src":"2996:14:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10250,"name":"VRFCoordinatorV2Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"2970:25:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_VRFCoordinatorV2Interface_$153_$","typeString":"type(contract VRFCoordinatorV2Interface)"}},"id":10252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:41:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"src":"2956:55:35","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"id":10254,"nodeType":"ExpressionStatement","src":"2956:55:35"},{"expression":{"id":10257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10255,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10105,"src":"3021:14:35","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10256,"name":"_subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10231,"src":"3038:15:35","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"3021:32:35","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":10258,"nodeType":"ExpressionStatement","src":"3021:32:35"},{"expression":{"id":10272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10259,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"3072:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":10262,"name":"_erc20Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10233,"src":"3129:11:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10261,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"3122:6:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2364_$","typeString":"type(contract IERC20)"}},"id":10263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3122:19:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2364","typeString":"contract IERC20"}},{"arguments":[{"id":10265,"name":"_erc721Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10235,"src":"3176:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10264,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"3168:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$3464_$","typeString":"type(contract IERC721)"}},"id":10266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3168:21:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$3464","typeString":"contract IERC721"}},{"arguments":[{"id":10268,"name":"_erc1155Token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10237,"src":"3226:13:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10267,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"3217:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1478_$","typeString":"type(contract IERC1155)"}},"id":10269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3217:23:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155_$1478","typeString":"contract IERC1155"}},{"id":10270,"name":"_erc1155TokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10239,"src":"3270:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$2364","typeString":"contract IERC20"},{"typeIdentifier":"t_contract$_IERC721_$3464","typeString":"contract IERC721"},{"typeIdentifier":"t_contract$_IERC1155_$1478","typeString":"contract IERC1155"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10260,"name":"TokenContracts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10141,"src":"3081:14:35","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TokenContracts_$10141_storage_ptr_$","typeString":"type(struct LootBox.TokenContracts storage pointer)"}},"id":10271,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3110:10:35","3155:11:35","3203:12:35","3254:14:35"],"names":["erc20Token","erc721Token","erc1155Token","erc1155TokenId"],"nodeType":"FunctionCall","src":"3081:215:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_memory_ptr","typeString":"struct LootBox.TokenContracts memory"}},"src":"3072:224:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10273,"nodeType":"ExpressionStatement","src":"3072:224:35"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10274,"name":"_initializeRewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10326,"src":"3350:22:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3350:24:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10276,"nodeType":"ExpressionStatement","src":"3350:24:35"}]},"id":10278,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":10242,"name":"vrfCoordinator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10108,"src":"2910:14:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10243,"kind":"baseConstructorSpecifier","modifierName":{"id":10241,"name":"VRFConsumerBaseV2","nameLocations":["2892:17:35"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"2892:17:35"},"nodeType":"ModifierInvocation","src":"2892:33:35"},{"arguments":[{"expression":{"id":10245,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2934:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2938:6:35","memberName":"sender","nodeType":"MemberAccess","src":"2934:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":10247,"kind":"baseConstructorSpecifier","modifierName":{"id":10244,"name":"Ownable","nameLocations":["2926:7:35"],"nodeType":"IdentifierPath","referencedDeclaration":301,"src":"2926:7:35"},"nodeType":"ModifierInvocation","src":"2926:19:35"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":10240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10231,"mutability":"mutable","name":"_subscriptionId","nameLocation":"2747:15:35","nodeType":"VariableDeclaration","scope":10278,"src":"2740:22:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":10230,"name":"uint64","nodeType":"ElementaryTypeName","src":"2740:6:35","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":10233,"mutability":"mutable","name":"_erc20Token","nameLocation":"2780:11:35","nodeType":"VariableDeclaration","scope":10278,"src":"2772:19:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10232,"name":"address","nodeType":"ElementaryTypeName","src":"2772:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10235,"mutability":"mutable","name":"_erc721Token","nameLocation":"2809:12:35","nodeType":"VariableDeclaration","scope":10278,"src":"2801:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10234,"name":"address","nodeType":"ElementaryTypeName","src":"2801:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10237,"mutability":"mutable","name":"_erc1155Token","nameLocation":"2839:13:35","nodeType":"VariableDeclaration","scope":10278,"src":"2831:21:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10236,"name":"address","nodeType":"ElementaryTypeName","src":"2831:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10239,"mutability":"mutable","name":"_erc1155TokenId","nameLocation":"2870:15:35","nodeType":"VariableDeclaration","scope":10278,"src":"2862:23:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10238,"name":"uint256","nodeType":"ElementaryTypeName","src":"2862:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2730:161:35"},"returnParameters":{"id":10248,"nodeType":"ParameterList","parameters":[],"src":"2946:0:35"},"scope":11176,"src":"2719:662:35","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":10325,"nodeType":"Block","src":"3429:689:35","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"3530","id":10285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3539:2:35","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},{"commonType":{"typeIdentifier":"t_rational_50000000000000000000_by_1","typeString":"int_const 50000000000000000000"},"id":10290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3530","id":10286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3566:2:35","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"50"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":10289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":10287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3571:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":10288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:2:35","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3571:6:35","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"3566:11:35","typeDescriptions":{"typeIdentifier":"t_rational_50000000000000000000_by_1","typeString":"int_const 50000000000000000000"}},{"commonType":{"typeIdentifier":"t_rational_200000000000000000000_by_1","typeString":"int_const 200000000000000000000"},"id":10295,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"323030","id":10291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3602:3:35","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"},"id":10294,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":10292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3608:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3138","id":10293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3612:2:35","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"3608:6:35","typeDescriptions":{"typeIdentifier":"t_rational_1000000000000000000_by_1","typeString":"int_const 1000000000000000000"}},"src":"3602:12:35","typeDescriptions":{"typeIdentifier":"t_rational_200000000000000000000_by_1","typeString":"int_const 200000000000000000000"}},{"hexValue":"74727565","id":10296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3636:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},{"typeIdentifier":"t_rational_50000000000000000000_by_1","typeString":"int_const 50000000000000000000"},{"typeIdentifier":"t_rational_200000000000000000000_by_1","typeString":"int_const 200000000000000000000"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10284,"name":"RewardTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10129,"src":"3506:10:35","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RewardTier_$10129_storage_ptr_$","typeString":"type(struct LootBox.RewardTier storage pointer)"}},"id":10297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3531:6:35","3555:9:35","3591:9:35","3628:6:35"],"names":["weight","minAmount","maxAmount","active"],"nodeType":"FunctionCall","src":"3506:145:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_memory_ptr","typeString":"struct LootBox.RewardTier memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RewardTier_$10129_memory_ptr","typeString":"struct LootBox.RewardTier memory"}],"expression":{"id":10281,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"3489:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":10283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3501:4:35","memberName":"push","nodeType":"MemberAccess","src":"3489:16:35","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage_ptr_$_t_struct$_RewardTier_$10129_storage_$returns$__$attached_to$_t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage_ptr_$","typeString":"function (struct LootBox.RewardTier storage ref[] storage pointer,struct LootBox.RewardTier storage ref)"}},"id":10298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3489:163:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10299,"nodeType":"ExpressionStatement","src":"3489:163:35"},{"expression":{"arguments":[{"arguments":[{"hexValue":"3330","id":10304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3770:2:35","typeDescriptions":{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},"value":"30"},{"hexValue":"31","id":10305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3797:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"3130","id":10306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3823:2:35","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},{"hexValue":"74727565","id":10307,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3847:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_30_by_1","typeString":"int_const 30"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10303,"name":"RewardTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10129,"src":"3737:10:35","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RewardTier_$10129_storage_ptr_$","typeString":"type(struct LootBox.RewardTier storage pointer)"}},"id":10308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3762:6:35","3786:9:35","3812:9:35","3839:6:35"],"names":["weight","minAmount","maxAmount","active"],"nodeType":"FunctionCall","src":"3737:125:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_memory_ptr","typeString":"struct LootBox.RewardTier memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RewardTier_$10129_memory_ptr","typeString":"struct LootBox.RewardTier memory"}],"expression":{"id":10300,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"3720:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":10302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3732:4:35","memberName":"push","nodeType":"MemberAccess","src":"3720:16:35","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage_ptr_$_t_struct$_RewardTier_$10129_storage_$returns$__$attached_to$_t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage_ptr_$","typeString":"function (struct LootBox.RewardTier storage ref[] storage pointer,struct LootBox.RewardTier storage ref)"}},"id":10309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3720:143:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10310,"nodeType":"ExpressionStatement","src":"3720:143:35"},{"expression":{"arguments":[{"arguments":[{"hexValue":"3230","id":10315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3975:2:35","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},{"hexValue":"31","id":10316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4002:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"31","id":10317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4028:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"74727565","id":10318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4051:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10314,"name":"RewardTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10129,"src":"3942:10:35","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RewardTier_$10129_storage_ptr_$","typeString":"type(struct LootBox.RewardTier storage pointer)"}},"id":10319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3967:6:35","3991:9:35","4017:9:35","4043:6:35"],"names":["weight","minAmount","maxAmount","active"],"nodeType":"FunctionCall","src":"3942:124:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_memory_ptr","typeString":"struct LootBox.RewardTier memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_RewardTier_$10129_memory_ptr","typeString":"struct LootBox.RewardTier memory"}],"expression":{"id":10311,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"3925:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":10313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3937:4:35","memberName":"push","nodeType":"MemberAccess","src":"3925:16:35","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage_ptr_$_t_struct$_RewardTier_$10129_storage_$returns$__$attached_to$_t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage_ptr_$","typeString":"function (struct LootBox.RewardTier storage ref[] storage pointer,struct LootBox.RewardTier storage ref)"}},"id":10320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3925:142:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10321,"nodeType":"ExpressionStatement","src":"3925:142:35"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10322,"name":"_recalculateTotalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11034,"src":"4086:23:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10324,"nodeType":"ExpressionStatement","src":"4086:25:35"}]},"id":10326,"implemented":true,"kind":"function","modifiers":[],"name":"_initializeRewardTiers","nameLocation":"3396:22:35","nodeType":"FunctionDefinition","parameters":{"id":10279,"nodeType":"ParameterList","parameters":[],"src":"3418:2:35"},"returnParameters":{"id":10280,"nodeType":"ParameterList","parameters":[],"src":"3429:0:35"},"scope":11176,"src":"3387:731:35","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":10393,"nodeType":"Block","src":"4173:795:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10331,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4187:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4191:5:35","memberName":"value","nodeType":"MemberAccess","src":"4187:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10333,"name":"boxPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10147,"src":"4199:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4187:20:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10338,"nodeType":"IfStatement","src":"4183:54:35","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10335,"name":"InsufficientPayment","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10221,"src":"4216:19:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4216:21:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10337,"nodeType":"RevertStatement","src":"4209:28:35"}},{"condition":{"id":10341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4310:23:35","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":10339,"name":"_hasAvailableRewards","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10824,"src":"4311:20:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":10340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4311:22:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10345,"nodeType":"IfStatement","src":"4306:59:35","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10342,"name":"InsufficientInventory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10223,"src":"4342:21:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4342:23:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10344,"nodeType":"RevertStatement","src":"4335:30:35"}},{"assignments":[10347],"declarations":[{"constant":false,"id":10347,"mutability":"mutable","name":"requestId","nameLocation":"4392:9:35","nodeType":"VariableDeclaration","scope":10393,"src":"4384:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10346,"name":"uint256","nodeType":"ElementaryTypeName","src":"4384:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10356,"initialValue":{"arguments":[{"id":10350,"name":"keyHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10111,"src":"4448:7:35","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":10351,"name":"subscriptionId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10105,"src":"4469:14:35","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},{"id":10352,"name":"requestConfirmations","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10117,"src":"4497:20:35","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},{"id":10353,"name":"callbackGasLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10114,"src":"4531:16:35","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},{"id":10354,"name":"numWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10120,"src":"4561:8:35","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint64","typeString":"uint64"},{"typeIdentifier":"t_uint16","typeString":"uint16"},{"typeIdentifier":"t_uint32","typeString":"uint32"},{"typeIdentifier":"t_uint32","typeString":"uint32"}],"expression":{"id":10348,"name":"COORDINATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10103,"src":"4404:11:35","typeDescriptions":{"typeIdentifier":"t_contract$_VRFCoordinatorV2Interface_$153","typeString":"contract VRFCoordinatorV2Interface"}},"id":10349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4416:18:35","memberName":"requestRandomWords","nodeType":"MemberAccess","referencedDeclaration":86,"src":"4404:30:35","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_bytes32_$_t_uint64_$_t_uint16_$_t_uint32_$_t_uint32_$returns$_t_uint256_$","typeString":"function (bytes32,uint64,uint16,uint32,uint32) external returns (uint256)"}},"id":10355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4404:175:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4384:195:35"},{"expression":{"id":10367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10357,"name":"pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10171,"src":"4598:15:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PendingRequest_$10166_storage_$","typeString":"mapping(uint256 => struct LootBox.PendingRequest storage ref)"}},"id":10359,"indexExpression":{"id":10358,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10347,"src":"4614:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4598:26:35","typeDescriptions":{"typeIdentifier":"t_struct$_PendingRequest_$10166_storage","typeString":"struct LootBox.PendingRequest storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":10361,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4662:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4666:6:35","memberName":"sender","nodeType":"MemberAccess","src":"4662:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10363,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4697:5:35","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":10364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4703:9:35","memberName":"timestamp","nodeType":"MemberAccess","src":"4697:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":10365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4737:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10360,"name":"PendingRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10166,"src":"4627:14:35","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PendingRequest_$10166_storage_ptr_$","typeString":"type(struct LootBox.PendingRequest storage pointer)"}},"id":10366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4656:4:35","4686:9:35","4726:9:35"],"names":["user","timestamp","fulfilled"],"nodeType":"FunctionCall","src":"4627:126:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PendingRequest_$10166_memory_ptr","typeString":"struct LootBox.PendingRequest memory"}},"src":"4598:155:35","typeDescriptions":{"typeIdentifier":"t_struct$_PendingRequest_$10166_storage","typeString":"struct LootBox.PendingRequest storage ref"}},"id":10368,"nodeType":"ExpressionStatement","src":"4598:155:35"},{"eventCall":{"arguments":[{"expression":{"id":10370,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4787:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4791:6:35","memberName":"sender","nodeType":"MemberAccess","src":"4787:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10372,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10347,"src":"4799:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10369,"name":"BoxOpened","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10177,"src":"4777:9:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:32:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10374,"nodeType":"EmitStatement","src":"4772:37:35"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10375,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4865:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4869:5:35","memberName":"value","nodeType":"MemberAccess","src":"4865:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":10377,"name":"boxPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10147,"src":"4877:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4865:20:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10392,"nodeType":"IfStatement","src":"4861:101:35","trueBody":{"id":10391,"nodeType":"Block","src":"4887:75:35","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10385,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4930:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4934:5:35","memberName":"value","nodeType":"MemberAccess","src":"4930:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":10387,"name":"boxPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10147,"src":"4942:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4930:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":10381,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4909:3:35","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":10382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4913:6:35","memberName":"sender","nodeType":"MemberAccess","src":"4909:10:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4901:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":10379,"name":"address","nodeType":"ElementaryTypeName","src":"4901:8:35","stateMutability":"payable","typeDescriptions":{}}},"id":10383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4901:19:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":10384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4921:8:35","memberName":"transfer","nodeType":"MemberAccess","src":"4901:28:35","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":10389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4901:50:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10390,"nodeType":"ExpressionStatement","src":"4901:50:35"}]}}]},"functionSelector":"c2e952c7","id":10394,"implemented":true,"kind":"function","modifiers":[{"id":10329,"kind":"modifierInvocation","modifierName":{"id":10328,"name":"nonReentrant","nameLocations":["4160:12:35"],"nodeType":"IdentifierPath","referencedDeclaration":4739,"src":"4160:12:35"},"nodeType":"ModifierInvocation","src":"4160:12:35"}],"name":"openBox","nameLocation":"4133:7:35","nodeType":"FunctionDefinition","parameters":{"id":10327,"nodeType":"ParameterList","parameters":[],"src":"4140:2:35"},"returnParameters":{"id":10330,"nodeType":"ParameterList","parameters":[],"src":"4173:0:35"},"scope":11176,"src":"4124:844:35","stateMutability":"payable","virtual":false,"visibility":"external"},{"baseFunctions":[30],"body":{"id":10488,"nodeType":"Block","src":"5069:725:35","statements":[{"assignments":[10405],"declarations":[{"constant":false,"id":10405,"mutability":"mutable","name":"request","nameLocation":"5102:7:35","nodeType":"VariableDeclaration","scope":10488,"src":"5079:30:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_PendingRequest_$10166_storage_ptr","typeString":"struct LootBox.PendingRequest"},"typeName":{"id":10404,"nodeType":"UserDefinedTypeName","pathNode":{"id":10403,"name":"PendingRequest","nameLocations":["5079:14:35"],"nodeType":"IdentifierPath","referencedDeclaration":10166,"src":"5079:14:35"},"referencedDeclaration":10166,"src":"5079:14:35","typeDescriptions":{"typeIdentifier":"t_struct$_PendingRequest_$10166_storage_ptr","typeString":"struct LootBox.PendingRequest"}},"visibility":"internal"}],"id":10409,"initialValue":{"baseExpression":{"id":10406,"name":"pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10171,"src":"5112:15:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PendingRequest_$10166_storage_$","typeString":"mapping(uint256 => struct LootBox.PendingRequest storage ref)"}},"id":10408,"indexExpression":{"id":10407,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10396,"src":"5128:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5112:26:35","typeDescriptions":{"typeIdentifier":"t_struct$_PendingRequest_$10166_storage","typeString":"struct LootBox.PendingRequest storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5079:59:35"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10410,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10405,"src":"5152:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_PendingRequest_$10166_storage_ptr","typeString":"struct LootBox.PendingRequest storage pointer"}},"id":10411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5160:4:35","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":10161,"src":"5152:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":10414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5176:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5168:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10412,"name":"address","nodeType":"ElementaryTypeName","src":"5168:7:35","typeDescriptions":{}}},"id":10415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5168:10:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5152:26:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"expression":{"id":10417,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10405,"src":"5182:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_PendingRequest_$10166_storage_ptr","typeString":"struct LootBox.PendingRequest storage pointer"}},"id":10418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5190:9:35","memberName":"fulfilled","nodeType":"MemberAccess","referencedDeclaration":10165,"src":"5182:17:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5152:47:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10423,"nodeType":"IfStatement","src":"5148:76:35","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10420,"name":"InvalidRequest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10225,"src":"5208:14:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5208:16:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10422,"nodeType":"RevertStatement","src":"5201:23:35"}},{"expression":{"id":10428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10424,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10405,"src":"5243:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_PendingRequest_$10166_storage_ptr","typeString":"struct LootBox.PendingRequest storage pointer"}},"id":10426,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5251:9:35","memberName":"fulfilled","nodeType":"MemberAccess","referencedDeclaration":10165,"src":"5243:17:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":10427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5263:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5243:24:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10429,"nodeType":"ExpressionStatement","src":"5243:24:35"},{"assignments":[10431],"declarations":[{"constant":false,"id":10431,"mutability":"mutable","name":"user","nameLocation":"5285:4:35","nodeType":"VariableDeclaration","scope":10488,"src":"5277:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10430,"name":"address","nodeType":"ElementaryTypeName","src":"5277:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":10434,"initialValue":{"expression":{"id":10432,"name":"request","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10405,"src":"5292:7:35","typeDescriptions":{"typeIdentifier":"t_struct$_PendingRequest_$10166_storage_ptr","typeString":"struct LootBox.PendingRequest storage pointer"}},"id":10433,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5300:4:35","memberName":"user","nodeType":"MemberAccess","referencedDeclaration":10161,"src":"5292:12:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5277:27:35"},{"assignments":[10436],"declarations":[{"constant":false,"id":10436,"mutability":"mutable","name":"randomValue","nameLocation":"5364:11:35","nodeType":"VariableDeclaration","scope":10488,"src":"5356:19:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10435,"name":"uint256","nodeType":"ElementaryTypeName","src":"5356:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10442,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10437,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10399,"src":"5378:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10439,"indexExpression":{"hexValue":"30","id":10438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5390:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5378:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":10440,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"5395:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5378:28:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5356:50:35"},{"assignments":[10444],"declarations":[{"constant":false,"id":10444,"mutability":"mutable","name":"cumulativeWeight","nameLocation":"5424:16:35","nodeType":"VariableDeclaration","scope":10488,"src":"5416:24:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10443,"name":"uint256","nodeType":"ElementaryTypeName","src":"5416:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10446,"initialValue":{"hexValue":"30","id":10445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5443:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5416:28:35"},{"body":{"id":10486,"nodeType":"Block","src":"5512:276:35","statements":[{"condition":{"id":10462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5530:22:35","subExpression":{"expression":{"baseExpression":{"id":10458,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"5531:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":10460,"indexExpression":{"id":10459,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10448,"src":"5543:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5531:14:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage","typeString":"struct LootBox.RewardTier storage ref"}},"id":10461,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5546:6:35","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":10128,"src":"5531:21:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10464,"nodeType":"IfStatement","src":"5526:36:35","trueBody":{"id":10463,"nodeType":"Continue","src":"5554:8:35"}},{"expression":{"id":10470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10465,"name":"cumulativeWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10444,"src":"5589:16:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":10466,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"5609:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":10468,"indexExpression":{"id":10467,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10448,"src":"5621:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5609:14:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage","typeString":"struct LootBox.RewardTier storage ref"}},"id":10469,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5624:6:35","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":10122,"src":"5609:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5589:41:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10471,"nodeType":"ExpressionStatement","src":"5589:41:35"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10472,"name":"randomValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10436,"src":"5648:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10473,"name":"cumulativeWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10444,"src":"5662:16:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5648:30:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10485,"nodeType":"IfStatement","src":"5644:134:35","trueBody":{"id":10484,"nodeType":"Block","src":"5680:98:35","statements":[{"expression":{"arguments":[{"id":10476,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10431,"src":"5716:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10477,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10448,"src":"5722:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":10478,"name":"randomWords","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10399,"src":"5725:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":10480,"indexExpression":{"hexValue":"30","id":10479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5737:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5725:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10475,"name":"_distributeReward","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10586,"src":"5698:17:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256)"}},"id":10481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5698:42:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10482,"nodeType":"ExpressionStatement","src":"5698:42:35"},{"id":10483,"nodeType":"Break","src":"5758:5:35"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10448,"src":"5483:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10452,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"5487:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":10453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5499:6:35","memberName":"length","nodeType":"MemberAccess","src":"5487:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5483:22:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10487,"initializationExpression":{"assignments":[10448],"declarations":[{"constant":false,"id":10448,"mutability":"mutable","name":"i","nameLocation":"5476:1:35","nodeType":"VariableDeclaration","scope":10487,"src":"5468:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10447,"name":"uint256","nodeType":"ElementaryTypeName","src":"5468:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10450,"initialValue":{"hexValue":"30","id":10449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5480:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5468:13:35"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5507:3:35","subExpression":{"id":10455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10448,"src":"5507:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10457,"nodeType":"ExpressionStatement","src":"5507:3:35"},"nodeType":"ForStatement","src":"5463:325:35"}]},"id":10489,"implemented":true,"kind":"function","modifiers":[],"name":"fulfillRandomWords","nameLocation":"4983:18:35","nodeType":"FunctionDefinition","overrides":{"id":10401,"nodeType":"OverrideSpecifier","overrides":[],"src":"5060:8:35"},"parameters":{"id":10400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10396,"mutability":"mutable","name":"requestId","nameLocation":"5010:9:35","nodeType":"VariableDeclaration","scope":10489,"src":"5002:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10395,"name":"uint256","nodeType":"ElementaryTypeName","src":"5002:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10399,"mutability":"mutable","name":"randomWords","nameLocation":"5038:11:35","nodeType":"VariableDeclaration","scope":10489,"src":"5021:28:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10397,"name":"uint256","nodeType":"ElementaryTypeName","src":"5021:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10398,"nodeType":"ArrayTypeName","src":"5021:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5001:49:35"},"returnParameters":{"id":10402,"nodeType":"ParameterList","parameters":[],"src":"5069:0:35"},"scope":11176,"src":"4974:820:35","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":10585,"nodeType":"Block","src":"5885:804:35","statements":[{"assignments":[10500],"declarations":[{"constant":false,"id":10500,"mutability":"mutable","name":"tier","nameLocation":"5914:4:35","nodeType":"VariableDeclaration","scope":10585,"src":"5895:23:35","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage_ptr","typeString":"struct LootBox.RewardTier"},"typeName":{"id":10499,"nodeType":"UserDefinedTypeName","pathNode":{"id":10498,"name":"RewardTier","nameLocations":["5895:10:35"],"nodeType":"IdentifierPath","referencedDeclaration":10129,"src":"5895:10:35"},"referencedDeclaration":10129,"src":"5895:10:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage_ptr","typeString":"struct LootBox.RewardTier"}},"visibility":"internal"}],"id":10504,"initialValue":{"baseExpression":{"id":10501,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"5921:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":10503,"indexExpression":{"id":10502,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10493,"src":"5933:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5921:19:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage","typeString":"struct LootBox.RewardTier storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5895:45:35"},{"assignments":[10506],"declarations":[{"constant":false,"id":10506,"mutability":"mutable","name":"amount","nameLocation":"5958:6:35","nodeType":"VariableDeclaration","scope":10585,"src":"5950:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10505,"name":"uint256","nodeType":"ElementaryTypeName","src":"5950:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10509,"initialValue":{"expression":{"id":10507,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"5967:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage_ptr","typeString":"struct LootBox.RewardTier storage pointer"}},"id":10508,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5972:9:35","memberName":"minAmount","nodeType":"MemberAccess","referencedDeclaration":10124,"src":"5967:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5950:31:35"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10510,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"6004:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage_ptr","typeString":"struct LootBox.RewardTier storage pointer"}},"id":10511,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6009:9:35","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":10126,"src":"6004:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":10512,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"6021:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage_ptr","typeString":"struct LootBox.RewardTier storage pointer"}},"id":10513,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6026:9:35","memberName":"minAmount","nodeType":"MemberAccess","referencedDeclaration":10124,"src":"6021:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6004:31:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10530,"nodeType":"IfStatement","src":"6000:124:35","trueBody":{"id":10529,"nodeType":"Block","src":"6037:87:35","statements":[{"expression":{"id":10527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10515,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10506,"src":"6051:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10516,"name":"randomSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10495,"src":"6062:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":10517,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"6076:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage_ptr","typeString":"struct LootBox.RewardTier storage pointer"}},"id":10518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6081:9:35","memberName":"maxAmount","nodeType":"MemberAccess","referencedDeclaration":10126,"src":"6076:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":10519,"name":"tier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10500,"src":"6093:4:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage_ptr","typeString":"struct LootBox.RewardTier storage pointer"}},"id":10520,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6098:9:35","memberName":"minAmount","nodeType":"MemberAccess","referencedDeclaration":10124,"src":"6093:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6076:31:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":10522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6110:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6076:35:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10524,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6075:37:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6062:50:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":10526,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6061:52:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6051:62:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10528,"nodeType":"ExpressionStatement","src":"6051:62:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10531,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10493,"src":"6146:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6156:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6146:11:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10547,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10493,"src":"6311:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":10548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6321:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6311:11:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10564,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10493,"src":"6502:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":10565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6512:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"6502:11:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10582,"nodeType":"IfStatement","src":"6498:185:35","trueBody":{"id":10581,"nodeType":"Block","src":"6515:168:35","statements":[{"assignments":[10568],"declarations":[{"constant":false,"id":10568,"mutability":"mutable","name":"tokenId","nameLocation":"6566:7:35","nodeType":"VariableDeclaration","scope":10581,"src":"6558:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10567,"name":"uint256","nodeType":"ElementaryTypeName","src":"6558:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10573,"initialValue":{"arguments":[{"id":10570,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10491,"src":"6594:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10571,"name":"randomSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10495,"src":"6600:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10569,"name":"_distributeERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10758,"src":"6576:17:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) returns (uint256)"}},"id":10572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6576:35:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6558:53:35"},{"eventCall":{"arguments":[{"id":10575,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10491,"src":"6645:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"455243373231","id":10576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6651:8:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_73ad2146b3d3a286642c794379d750360a2d53a3459a11b3e5d6cc900f55f44a","typeString":"literal_string \"ERC721\""},"value":"ERC721"},{"hexValue":"31","id":10577,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6661:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"id":10578,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10568,"src":"6664:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_73ad2146b3d3a286642c794379d750360a2d53a3459a11b3e5d6cc900f55f44a","typeString":"literal_string \"ERC721\""},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10574,"name":"RewardAssigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"6630:14:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,string memory,uint256,uint256)"}},"id":10579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6630:42:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10580,"nodeType":"EmitStatement","src":"6625:47:35"}]}},"id":10583,"nodeType":"IfStatement","src":"6307:376:35","trueBody":{"id":10563,"nodeType":"Block","src":"6324:168:35","statements":[{"expression":{"arguments":[{"id":10551,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10491,"src":"6387:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10552,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10506,"src":"6393:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10550,"name":"_distributeERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10671,"src":"6368:18:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6368:32:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10554,"nodeType":"ExpressionStatement","src":"6368:32:35"},{"eventCall":{"arguments":[{"id":10556,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10491,"src":"6434:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"45524331313535","id":10557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6440:9:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_973bb64086f173ec8099b7ed3d43da984f4a332e4417a08bc6a286e6402b0586","typeString":"literal_string \"ERC1155\""},"value":"ERC1155"},{"id":10558,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10506,"src":"6451:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":10559,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"6459:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10560,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6466:14:35","memberName":"erc1155TokenId","nodeType":"MemberAccess","referencedDeclaration":10140,"src":"6459:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_973bb64086f173ec8099b7ed3d43da984f4a332e4417a08bc6a286e6402b0586","typeString":"literal_string \"ERC1155\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10555,"name":"RewardAssigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"6419:14:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,string memory,uint256,uint256)"}},"id":10561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:62:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10562,"nodeType":"EmitStatement","src":"6414:67:35"}]}},"id":10584,"nodeType":"IfStatement","src":"6142:541:35","trueBody":{"id":10546,"nodeType":"Block","src":"6159:142:35","statements":[{"expression":{"arguments":[{"id":10535,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10491,"src":"6218:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10536,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10506,"src":"6224:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10534,"name":"_distributeERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10627,"src":"6201:16:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":10537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6201:30:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10538,"nodeType":"ExpressionStatement","src":"6201:30:35"},{"eventCall":{"arguments":[{"id":10540,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10491,"src":"6265:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"4552433230","id":10541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6271:7:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_8ae85d849167ff996c04040c44924fd364217285e4cad818292c7ac37c0a345b","typeString":"literal_string \"ERC20\""},"value":"ERC20"},{"id":10542,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10506,"src":"6280:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":10543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6288:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_stringliteral_8ae85d849167ff996c04040c44924fd364217285e4cad818292c7ac37c0a345b","typeString":"literal_string \"ERC20\""},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":10539,"name":"RewardAssigned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10187,"src":"6250:14:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,string memory,uint256,uint256)"}},"id":10544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6250:40:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10545,"nodeType":"EmitStatement","src":"6245:45:35"}]}}]},"id":10586,"implemented":true,"kind":"function","modifiers":[],"name":"_distributeReward","nameLocation":"5809:17:35","nodeType":"FunctionDefinition","parameters":{"id":10496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10491,"mutability":"mutable","name":"user","nameLocation":"5835:4:35","nodeType":"VariableDeclaration","scope":10586,"src":"5827:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10490,"name":"address","nodeType":"ElementaryTypeName","src":"5827:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10493,"mutability":"mutable","name":"tierId","nameLocation":"5849:6:35","nodeType":"VariableDeclaration","scope":10586,"src":"5841:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10492,"name":"uint256","nodeType":"ElementaryTypeName","src":"5841:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10495,"mutability":"mutable","name":"randomSeed","nameLocation":"5865:10:35","nodeType":"VariableDeclaration","scope":10586,"src":"5857:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10494,"name":"uint256","nodeType":"ElementaryTypeName","src":"5857:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5826:50:35"},"returnParameters":{"id":10497,"nodeType":"ParameterList","parameters":[],"src":"5885:0:35"},"scope":11176,"src":"5800:889:35","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":10626,"nodeType":"Block","src":"6759:260:35","statements":[{"assignments":[10594],"declarations":[{"constant":false,"id":10594,"mutability":"mutable","name":"balance","nameLocation":"6777:7:35","nodeType":"VariableDeclaration","scope":10626,"src":"6769:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10593,"name":"uint256","nodeType":"ElementaryTypeName","src":"6769:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10603,"initialValue":{"arguments":[{"arguments":[{"id":10600,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6823:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}],"id":10599,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6815:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10598,"name":"address","nodeType":"ElementaryTypeName","src":"6815:7:35","typeDescriptions":{}}},"id":10601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6815:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":10595,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"6787:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6794:10:35","memberName":"erc20Token","nodeType":"MemberAccess","referencedDeclaration":10132,"src":"6787:17:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2364","typeString":"contract IERC20"}},"id":10597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6805:9:35","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2321,"src":"6787:27:35","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":10602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6787:42:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6769:60:35"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10604,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10594,"src":"6843:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10605,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10590,"src":"6853:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6843:16:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10610,"nodeType":"IfStatement","src":"6839:52:35","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10607,"name":"InsufficientInventory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10223,"src":"6868:21:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6868:23:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10609,"nodeType":"RevertStatement","src":"6861:30:35"}},{"assignments":[10612],"declarations":[{"constant":false,"id":10612,"mutability":"mutable","name":"success","nameLocation":"6915:7:35","nodeType":"VariableDeclaration","scope":10626,"src":"6910:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10611,"name":"bool","nodeType":"ElementaryTypeName","src":"6910:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":10619,"initialValue":{"arguments":[{"id":10616,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10588,"src":"6952:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10617,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10590,"src":"6958:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":10613,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"6925:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10614,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6932:10:35","memberName":"erc20Token","nodeType":"MemberAccess","referencedDeclaration":10132,"src":"6925:17:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2364","typeString":"contract IERC20"}},"id":10615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6943:8:35","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"6925:26:35","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":10618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6925:40:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"6910:55:35"},{"condition":{"id":10621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6979:8:35","subExpression":{"id":10620,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10612,"src":"6980:7:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10625,"nodeType":"IfStatement","src":"6975:37:35","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10622,"name":"TransferFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10227,"src":"6996:14:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6996:16:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10624,"nodeType":"RevertStatement","src":"6989:23:35"}}]},"id":10627,"implemented":true,"kind":"function","modifiers":[],"name":"_distributeERC20","nameLocation":"6704:16:35","nodeType":"FunctionDefinition","parameters":{"id":10591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10588,"mutability":"mutable","name":"user","nameLocation":"6729:4:35","nodeType":"VariableDeclaration","scope":10627,"src":"6721:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10587,"name":"address","nodeType":"ElementaryTypeName","src":"6721:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10590,"mutability":"mutable","name":"amount","nameLocation":"6743:6:35","nodeType":"VariableDeclaration","scope":10627,"src":"6735:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10589,"name":"uint256","nodeType":"ElementaryTypeName","src":"6735:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6720:30:35"},"returnParameters":{"id":10592,"nodeType":"ParameterList","parameters":[],"src":"6759:0:35"},"scope":11176,"src":"6695:324:35","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":10670,"nodeType":"Block","src":"7091:275:35","statements":[{"assignments":[10635],"declarations":[{"constant":false,"id":10635,"mutability":"mutable","name":"balance","nameLocation":"7109:7:35","nodeType":"VariableDeclaration","scope":10670,"src":"7101:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10634,"name":"uint256","nodeType":"ElementaryTypeName","src":"7101:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10646,"initialValue":{"arguments":[{"arguments":[{"id":10641,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7157:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}],"id":10640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7149:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10639,"name":"address","nodeType":"ElementaryTypeName","src":"7149:7:35","typeDescriptions":{}}},"id":10642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7149:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10643,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"7164:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10644,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7171:14:35","memberName":"erc1155TokenId","nodeType":"MemberAccess","referencedDeclaration":10140,"src":"7164:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":10636,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"7119:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10637,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7126:12:35","memberName":"erc1155Token","nodeType":"MemberAccess","referencedDeclaration":10138,"src":"7119:19:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155_$1478","typeString":"contract IERC1155"}},"id":10638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7139:9:35","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1416,"src":"7119:29:35","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":10645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7119:67:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7101:85:35"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10647,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10635,"src":"7200:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10648,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10631,"src":"7210:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7200:16:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10653,"nodeType":"IfStatement","src":"7196:52:35","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10650,"name":"InsufficientInventory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10223,"src":"7225:21:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7225:23:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10652,"nodeType":"RevertStatement","src":"7218:30:35"}},{"expression":{"arguments":[{"arguments":[{"id":10661,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7312:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}],"id":10660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7304:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10659,"name":"address","nodeType":"ElementaryTypeName","src":"7304:7:35","typeDescriptions":{}}},"id":10662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7304:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10663,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10629,"src":"7319:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10664,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"7325:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7332:14:35","memberName":"erc1155TokenId","nodeType":"MemberAccess","referencedDeclaration":10140,"src":"7325:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10666,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10631,"src":"7348:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":10667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7356:2:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"expression":{"id":10654,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"7267:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7274:12:35","memberName":"erc1155Token","nodeType":"MemberAccess","referencedDeclaration":10138,"src":"7267:19:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155_$1478","typeString":"contract IERC1155"}},"id":10658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7287:16:35","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"7267:36:35","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory) external"}},"id":10668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7267:92:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10669,"nodeType":"ExpressionStatement","src":"7267:92:35"}]},"id":10671,"implemented":true,"kind":"function","modifiers":[],"name":"_distributeERC1155","nameLocation":"7034:18:35","nodeType":"FunctionDefinition","parameters":{"id":10632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10629,"mutability":"mutable","name":"user","nameLocation":"7061:4:35","nodeType":"VariableDeclaration","scope":10671,"src":"7053:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10628,"name":"address","nodeType":"ElementaryTypeName","src":"7053:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10631,"mutability":"mutable","name":"amount","nameLocation":"7075:6:35","nodeType":"VariableDeclaration","scope":10671,"src":"7067:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10630,"name":"uint256","nodeType":"ElementaryTypeName","src":"7067:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7052:30:35"},"returnParameters":{"id":10633,"nodeType":"ParameterList","parameters":[],"src":"7091:0:35"},"scope":11176,"src":"7025:341:35","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":10757,"nodeType":"Block","src":"7459:897:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10680,"name":"availableERC721Count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"7473:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7497:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7473:25:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10686,"nodeType":"IfStatement","src":"7469:61:35","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10683,"name":"InsufficientInventory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10223,"src":"7507:21:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7507:23:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10685,"nodeType":"RevertStatement","src":"7500:30:35"}},{"assignments":[10688],"declarations":[{"constant":false,"id":10688,"mutability":"mutable","name":"randomIndex","nameLocation":"7598:11:35","nodeType":"VariableDeclaration","scope":10757,"src":"7590:19:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10687,"name":"uint256","nodeType":"ElementaryTypeName","src":"7590:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10692,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10689,"name":"randomSeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10675,"src":"7612:10:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":10690,"name":"availableERC721Count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"7625:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7612:33:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7590:55:35"},{"assignments":[10694],"declarations":[{"constant":false,"id":10694,"mutability":"mutable","name":"currentIndex","nameLocation":"7663:12:35","nodeType":"VariableDeclaration","scope":10757,"src":"7655:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10693,"name":"uint256","nodeType":"ElementaryTypeName","src":"7655:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10696,"initialValue":{"hexValue":"30","id":10695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7678:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7655:24:35"},{"assignments":[10698],"declarations":[{"constant":false,"id":10698,"mutability":"mutable","name":"selectedTokenId","nameLocation":"7697:15:35","nodeType":"VariableDeclaration","scope":10757,"src":"7689:23:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10697,"name":"uint256","nodeType":"ElementaryTypeName","src":"7689:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10700,"initialValue":{"hexValue":"30","id":10699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7715:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7689:27:35"},{"body":{"id":10731,"nodeType":"Block","src":"7788:280:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10711,"name":"availableERC721Tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10157,"src":"7832:21:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10713,"indexExpression":{"id":10712,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10702,"src":"7854:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7832:30:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7832:34:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10730,"nodeType":"IfStatement","src":"7828:230:35","trueBody":{"id":10729,"nodeType":"Block","src":"7868:190:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10716,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10694,"src":"7890:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":10717,"name":"randomIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10688,"src":"7906:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:27:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10725,"nodeType":"IfStatement","src":"7886:126:35","trueBody":{"id":10724,"nodeType":"Block","src":"7919:93:35","statements":[{"expression":{"id":10721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10719,"name":"selectedTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10698,"src":"7941:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10720,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10702,"src":"7959:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7941:25:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10722,"nodeType":"ExpressionStatement","src":"7941:25:35"},{"id":10723,"nodeType":"Break","src":"7988:5:35"}]}},{"expression":{"id":10727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8029:14:35","subExpression":{"id":10726,"name":"currentIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10694,"src":"8029:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10728,"nodeType":"ExpressionStatement","src":"8029:14:35"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10705,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10702,"src":"7761:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"31303030","id":10706,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7771:4:35","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"7761:14:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10732,"initializationExpression":{"assignments":[10702],"declarations":[{"constant":false,"id":10702,"mutability":"mutable","name":"tokenId","nameLocation":"7748:7:35","nodeType":"VariableDeclaration","scope":10732,"src":"7740:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10701,"name":"uint256","nodeType":"ElementaryTypeName","src":"7740:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10704,"initialValue":{"hexValue":"30","id":10703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7758:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7740:19:35"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"7777:9:35","subExpression":{"id":10708,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10702,"src":"7777:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10710,"nodeType":"ExpressionStatement","src":"7777:9:35"},"nodeType":"ForStatement","src":"7735:333:35"},{"expression":{"arguments":[{"arguments":[{"id":10740,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8158:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}],"id":10739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8150:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10738,"name":"address","nodeType":"ElementaryTypeName","src":"8150:7:35","typeDescriptions":{}}},"id":10741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8150:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10742,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10673,"src":"8165:4:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10743,"name":"selectedTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10698,"src":"8171:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":10733,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"8114:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10736,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8121:11:35","memberName":"erc721Token","nodeType":"MemberAccess","referencedDeclaration":10135,"src":"8114:18:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$3464","typeString":"contract IERC721"}},"id":10737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8133:16:35","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"8114:35:35","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":10744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8114:73:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10745,"nodeType":"ExpressionStatement","src":"8114:73:35"},{"expression":{"id":10750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10746,"name":"availableERC721Tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10157,"src":"8234:21:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10748,"indexExpression":{"id":10747,"name":"selectedTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10698,"src":"8256:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8234:38:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":10749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8275:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8234:42:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10751,"nodeType":"ExpressionStatement","src":"8234:42:35"},{"expression":{"id":10753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"8286:22:35","subExpression":{"id":10752,"name":"availableERC721Count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"8286:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10754,"nodeType":"ExpressionStatement","src":"8286:22:35"},{"expression":{"id":10755,"name":"selectedTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10698,"src":"8334:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":10679,"id":10756,"nodeType":"Return","src":"8327:22:35"}]},"id":10758,"implemented":true,"kind":"function","modifiers":[],"name":"_distributeERC721","nameLocation":"7381:17:35","nodeType":"FunctionDefinition","parameters":{"id":10676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10673,"mutability":"mutable","name":"user","nameLocation":"7407:4:35","nodeType":"VariableDeclaration","scope":10758,"src":"7399:12:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10672,"name":"address","nodeType":"ElementaryTypeName","src":"7399:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10675,"mutability":"mutable","name":"randomSeed","nameLocation":"7421:10:35","nodeType":"VariableDeclaration","scope":10758,"src":"7413:18:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10674,"name":"uint256","nodeType":"ElementaryTypeName","src":"7413:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7398:34:35"},"returnParameters":{"id":10679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10758,"src":"7450:7:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10677,"name":"uint256","nodeType":"ElementaryTypeName","src":"7450:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7449:9:35"},"scope":11176,"src":"7372:984:35","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":10823,"nodeType":"Block","src":"8422:545:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":10763,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"8459:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":10765,"indexExpression":{"hexValue":"30","id":10764,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8459:14:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage","typeString":"struct LootBox.RewardTier storage ref"}},"id":10766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8474:6:35","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":10128,"src":"8459:21:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10772,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8520:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}],"id":10771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8512:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10770,"name":"address","nodeType":"ElementaryTypeName","src":"8512:7:35","typeDescriptions":{}}},"id":10773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8512:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":10767,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"8484:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10768,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8491:10:35","memberName":"erc20Token","nodeType":"MemberAccess","referencedDeclaration":10132,"src":"8484:17:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2364","typeString":"contract IERC20"}},"id":10769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8502:9:35","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2321,"src":"8484:27:35","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":10774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8484:42:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":10775,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"8530:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":10777,"indexExpression":{"hexValue":"30","id":10776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8542:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8530:14:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage","typeString":"struct LootBox.RewardTier storage ref"}},"id":10778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8545:9:35","memberName":"minAmount","nodeType":"MemberAccess","referencedDeclaration":10124,"src":"8530:24:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8484:70:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8459:95:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10784,"nodeType":"IfStatement","src":"8455:137:35","trueBody":{"id":10783,"nodeType":"Block","src":"8556:36:35","statements":[{"expression":{"hexValue":"74727565","id":10781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8577:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":10762,"id":10782,"nodeType":"Return","src":"8570:11:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":10785,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"8639:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":10787,"indexExpression":{"hexValue":"31","id":10786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8651:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8639:14:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage","typeString":"struct LootBox.RewardTier storage ref"}},"id":10788,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8654:6:35","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":10128,"src":"8639:21:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":10794,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8702:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}],"id":10793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8694:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10792,"name":"address","nodeType":"ElementaryTypeName","src":"8694:7:35","typeDescriptions":{}}},"id":10795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8694:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":10796,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"8709:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10797,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8716:14:35","memberName":"erc1155TokenId","nodeType":"MemberAccess","referencedDeclaration":10140,"src":"8709:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":10789,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"8664:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10790,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8671:12:35","memberName":"erc1155Token","nodeType":"MemberAccess","referencedDeclaration":10138,"src":"8664:19:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155_$1478","typeString":"contract IERC1155"}},"id":10791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8684:9:35","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1416,"src":"8664:29:35","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":10798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8664:67:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":10799,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"8735:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":10801,"indexExpression":{"hexValue":"31","id":10800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8735:14:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage","typeString":"struct LootBox.RewardTier storage ref"}},"id":10802,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8750:9:35","memberName":"minAmount","nodeType":"MemberAccess","referencedDeclaration":10124,"src":"8735:24:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8664:95:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8639:120:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10808,"nodeType":"IfStatement","src":"8635:162:35","trueBody":{"id":10807,"nodeType":"Block","src":"8761:36:35","statements":[{"expression":{"hexValue":"74727565","id":10805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8782:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":10762,"id":10806,"nodeType":"Return","src":"8775:11:35"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":10809,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"8843:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":10811,"indexExpression":{"hexValue":"32","id":10810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8855:1:35","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8843:14:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage","typeString":"struct LootBox.RewardTier storage ref"}},"id":10812,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8858:6:35","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":10128,"src":"8843:21:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10813,"name":"availableERC721Count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"8868:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":10814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8891:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8868:24:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8843:49:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10820,"nodeType":"IfStatement","src":"8839:91:35","trueBody":{"id":10819,"nodeType":"Block","src":"8894:36:35","statements":[{"expression":{"hexValue":"74727565","id":10817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8915:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":10762,"id":10818,"nodeType":"Return","src":"8908:11:35"}]}},{"expression":{"hexValue":"66616c7365","id":10821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8955:5:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":10762,"id":10822,"nodeType":"Return","src":"8948:12:35"}]},"id":10824,"implemented":true,"kind":"function","modifiers":[],"name":"_hasAvailableRewards","nameLocation":"8371:20:35","nodeType":"FunctionDefinition","parameters":{"id":10759,"nodeType":"ParameterList","parameters":[],"src":"8391:2:35"},"returnParameters":{"id":10762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":10824,"src":"8416:4:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10760,"name":"bool","nodeType":"ElementaryTypeName","src":"8416:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8415:6:35"},"scope":11176,"src":"8362:605:35","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":10875,"nodeType":"Block","src":"9124:455:35","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10839,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10826,"src":"9138:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":10840,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"9148:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":10841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9160:6:35","memberName":"length","nodeType":"MemberAccess","src":"9148:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9138:28:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10846,"nodeType":"IfStatement","src":"9134:67:35","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10843,"name":"InvalidTierConfiguration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10229,"src":"9175:24:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9175:26:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10845,"nodeType":"RevertStatement","src":"9168:33:35"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10847,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10832,"src":"9215:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":10848,"name":"minAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10830,"src":"9227:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9215:21:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10853,"nodeType":"IfStatement","src":"9211:60:35","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":10850,"name":"InvalidTierConfiguration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10229,"src":"9245:24:35","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":10851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9245:26:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":10852,"nodeType":"RevertStatement","src":"9238:33:35"}},{"expression":{"id":10863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10854,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"9290:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":10856,"indexExpression":{"id":10855,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10826,"src":"9302:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9290:19:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage","typeString":"struct LootBox.RewardTier storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10858,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10828,"src":"9345:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10859,"name":"minAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10830,"src":"9376:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10860,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10832,"src":"9410:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10861,"name":"active","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10834,"src":"9441:6:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":10857,"name":"RewardTier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10129,"src":"9312:10:35","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_RewardTier_$10129_storage_ptr_$","typeString":"type(struct LootBox.RewardTier storage pointer)"}},"id":10862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["9337:6:35","9365:9:35","9399:9:35","9433:6:35"],"names":["weight","minAmount","maxAmount","active"],"nodeType":"FunctionCall","src":"9312:146:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_memory_ptr","typeString":"struct LootBox.RewardTier memory"}},"src":"9290:168:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage","typeString":"struct LootBox.RewardTier storage ref"}},"id":10864,"nodeType":"ExpressionStatement","src":"9290:168:35"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":10865,"name":"_recalculateTotalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11034,"src":"9477:23:35","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":10866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9477:25:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10867,"nodeType":"ExpressionStatement","src":"9477:25:35"},{"eventCall":{"arguments":[{"id":10869,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10826,"src":"9535:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10870,"name":"weight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10828,"src":"9543:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10871,"name":"minAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10830,"src":"9551:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":10872,"name":"maxAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10832,"src":"9562:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10868,"name":"RewardTierUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10203,"src":"9517:17:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,uint256)"}},"id":10873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9517:55:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10874,"nodeType":"EmitStatement","src":"9512:60:35"}]},"functionSelector":"bcd554f6","id":10876,"implemented":true,"kind":"function","modifiers":[{"id":10837,"kind":"modifierInvocation","modifierName":{"id":10836,"name":"onlyOwner","nameLocations":["9114:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"9114:9:35"},"nodeType":"ModifierInvocation","src":"9114:9:35"}],"name":"updateRewardTier","nameLocation":"9005:16:35","nodeType":"FunctionDefinition","parameters":{"id":10835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10826,"mutability":"mutable","name":"tierId","nameLocation":"9030:6:35","nodeType":"VariableDeclaration","scope":10876,"src":"9022:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10825,"name":"uint256","nodeType":"ElementaryTypeName","src":"9022:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10828,"mutability":"mutable","name":"weight","nameLocation":"9046:6:35","nodeType":"VariableDeclaration","scope":10876,"src":"9038:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10827,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10830,"mutability":"mutable","name":"minAmount","nameLocation":"9062:9:35","nodeType":"VariableDeclaration","scope":10876,"src":"9054:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10829,"name":"uint256","nodeType":"ElementaryTypeName","src":"9054:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10832,"mutability":"mutable","name":"maxAmount","nameLocation":"9081:9:35","nodeType":"VariableDeclaration","scope":10876,"src":"9073:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10831,"name":"uint256","nodeType":"ElementaryTypeName","src":"9073:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":10834,"mutability":"mutable","name":"active","nameLocation":"9097:6:35","nodeType":"VariableDeclaration","scope":10876,"src":"9092:11:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":10833,"name":"bool","nodeType":"ElementaryTypeName","src":"9092:4:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9021:83:35"},"returnParameters":{"id":10838,"nodeType":"ParameterList","parameters":[],"src":"9124:0:35"},"scope":11176,"src":"8996:583:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10926,"nodeType":"Block","src":"9710:286:35","statements":[{"expression":{"id":10895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10889,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"9720:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10891,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9727:10:35","memberName":"erc20Token","nodeType":"MemberAccess","referencedDeclaration":10132,"src":"9720:17:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2364","typeString":"contract IERC20"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10893,"name":"_erc20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10878,"src":"9747:6:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10892,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"9740:6:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2364_$","typeString":"type(contract IERC20)"}},"id":10894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9740:14:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2364","typeString":"contract IERC20"}},"src":"9720:34:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2364","typeString":"contract IERC20"}},"id":10896,"nodeType":"ExpressionStatement","src":"9720:34:35"},{"expression":{"id":10903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10897,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"9764:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9771:11:35","memberName":"erc721Token","nodeType":"MemberAccess","referencedDeclaration":10135,"src":"9764:18:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$3464","typeString":"contract IERC721"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10901,"name":"_erc721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10880,"src":"9793:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10900,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"9785:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$3464_$","typeString":"type(contract IERC721)"}},"id":10902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9785:16:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$3464","typeString":"contract IERC721"}},"src":"9764:37:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$3464","typeString":"contract IERC721"}},"id":10904,"nodeType":"ExpressionStatement","src":"9764:37:35"},{"expression":{"id":10911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10905,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"9811:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10907,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9818:12:35","memberName":"erc1155Token","nodeType":"MemberAccess","referencedDeclaration":10138,"src":"9811:19:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155_$1478","typeString":"contract IERC1155"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":10909,"name":"_erc1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10882,"src":"9842:8:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":10908,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"9833:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1478_$","typeString":"type(contract IERC1155)"}},"id":10910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9833:18:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155_$1478","typeString":"contract IERC1155"}},"src":"9811:40:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155_$1478","typeString":"contract IERC1155"}},"id":10912,"nodeType":"ExpressionStatement","src":"9811:40:35"},{"expression":{"id":10917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":10913,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"9861:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10915,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9868:14:35","memberName":"erc1155TokenId","nodeType":"MemberAccess","referencedDeclaration":10140,"src":"9861:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10916,"name":"_erc1155TokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10884,"src":"9885:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9861:39:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10918,"nodeType":"ExpressionStatement","src":"9861:39:35"},{"eventCall":{"arguments":[{"id":10920,"name":"_erc20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10878,"src":"9946:6:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10921,"name":"_erc721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10880,"src":"9954:7:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10922,"name":"_erc1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10882,"src":"9963:8:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":10923,"name":"_erc1155TokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10884,"src":"9973:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10919,"name":"TokenContractsUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10213,"src":"9924:21:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256)"}},"id":10924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9924:65:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10925,"nodeType":"EmitStatement","src":"9919:70:35"}]},"functionSelector":"2f65e98c","id":10927,"implemented":true,"kind":"function","modifiers":[{"id":10887,"kind":"modifierInvocation","modifierName":{"id":10886,"name":"onlyOwner","nameLocations":["9700:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"9700:9:35"},"nodeType":"ModifierInvocation","src":"9700:9:35"}],"name":"updateTokenContracts","nameLocation":"9594:20:35","nodeType":"FunctionDefinition","parameters":{"id":10885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10878,"mutability":"mutable","name":"_erc20","nameLocation":"9623:6:35","nodeType":"VariableDeclaration","scope":10927,"src":"9615:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10877,"name":"address","nodeType":"ElementaryTypeName","src":"9615:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10880,"mutability":"mutable","name":"_erc721","nameLocation":"9639:7:35","nodeType":"VariableDeclaration","scope":10927,"src":"9631:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10879,"name":"address","nodeType":"ElementaryTypeName","src":"9631:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10882,"mutability":"mutable","name":"_erc1155","nameLocation":"9656:8:35","nodeType":"VariableDeclaration","scope":10927,"src":"9648:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10881,"name":"address","nodeType":"ElementaryTypeName","src":"9648:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":10884,"mutability":"mutable","name":"_erc1155TokenId","nameLocation":"9674:15:35","nodeType":"VariableDeclaration","scope":10927,"src":"9666:23:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10883,"name":"uint256","nodeType":"ElementaryTypeName","src":"9666:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9614:76:35"},"returnParameters":{"id":10888,"nodeType":"ParameterList","parameters":[],"src":"9710:0:35"},"scope":11176,"src":"9585:411:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10938,"nodeType":"Block","src":"10063:36:35","statements":[{"expression":{"id":10936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":10934,"name":"boxPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10147,"src":"10073:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":10935,"name":"newPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10929,"src":"10084:8:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10073:19:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10937,"nodeType":"ExpressionStatement","src":"10073:19:35"}]},"functionSelector":"afa92d0d","id":10939,"implemented":true,"kind":"function","modifiers":[{"id":10932,"kind":"modifierInvocation","modifierName":{"id":10931,"name":"onlyOwner","nameLocations":["10053:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"10053:9:35"},"nodeType":"ModifierInvocation","src":"10053:9:35"}],"name":"updateBoxPrice","nameLocation":"10011:14:35","nodeType":"FunctionDefinition","parameters":{"id":10930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10929,"mutability":"mutable","name":"newPrice","nameLocation":"10034:8:35","nodeType":"VariableDeclaration","scope":10939,"src":"10026:16:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10928,"name":"uint256","nodeType":"ElementaryTypeName","src":"10026:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10025:18:35"},"returnParameters":{"id":10933,"nodeType":"ParameterList","parameters":[],"src":"10063:0:35"},"scope":11176,"src":"10002:97:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":10999,"nodeType":"Block","src":"10187:395:35","statements":[{"body":{"id":10991,"nodeType":"Block","src":"10243:271:35","statements":[{"assignments":[10959],"declarations":[{"constant":false,"id":10959,"mutability":"mutable","name":"tokenId","nameLocation":"10265:7:35","nodeType":"VariableDeclaration","scope":10991,"src":"10257:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10958,"name":"uint256","nodeType":"ElementaryTypeName","src":"10257:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10963,"initialValue":{"baseExpression":{"id":10960,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10942,"src":"10275:8:35","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10962,"indexExpression":{"id":10961,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"10284:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10275:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10257:29:35"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":10979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":10973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":10967,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10959,"src":"10331:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":10964,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"10304:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":10965,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10311:11:35","memberName":"erc721Token","nodeType":"MemberAccess","referencedDeclaration":10135,"src":"10304:18:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$3464","typeString":"contract IERC721"}},"id":10966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10323:7:35","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":3397,"src":"10304:26:35","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":10968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10304:35:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":10971,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10351:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}],"id":10970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10343:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":10969,"name":"address","nodeType":"ElementaryTypeName","src":"10343:7:35","typeDescriptions":{}}},"id":10972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10343:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10304:52:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":10974,"name":"availableERC721Tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10157,"src":"10360:21:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10976,"indexExpression":{"id":10975,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10959,"src":"10382:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10360:30:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":10977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10394:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10360:35:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10304:91:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10990,"nodeType":"IfStatement","src":"10300:204:35","trueBody":{"id":10989,"nodeType":"Block","src":"10397:107:35","statements":[{"expression":{"id":10984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":10980,"name":"availableERC721Tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10157,"src":"10415:21:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_uint256_$","typeString":"mapping(uint256 => uint256)"}},"id":10982,"indexExpression":{"id":10981,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10959,"src":"10437:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10415:30:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":10983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10448:1:35","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10415:34:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10985,"nodeType":"ExpressionStatement","src":"10415:34:35"},{"expression":{"id":10987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10467:22:35","subExpression":{"id":10986,"name":"availableERC721Count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"10467:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10988,"nodeType":"ExpressionStatement","src":"10467:22:35"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":10954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":10951,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"10217:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":10952,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10942,"src":"10221:8:35","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10230:6:35","memberName":"length","nodeType":"MemberAccess","src":"10221:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10217:19:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":10992,"initializationExpression":{"assignments":[10948],"declarations":[{"constant":false,"id":10948,"mutability":"mutable","name":"i","nameLocation":"10210:1:35","nodeType":"VariableDeclaration","scope":10992,"src":"10202:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":10947,"name":"uint256","nodeType":"ElementaryTypeName","src":"10202:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":10950,"initialValue":{"hexValue":"30","id":10949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10214:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10202:13:35"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":10956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10238:3:35","subExpression":{"id":10955,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10948,"src":"10238:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10957,"nodeType":"ExpressionStatement","src":"10238:3:35"},"nodeType":"ForStatement","src":"10197:317:35"},{"eventCall":{"arguments":[{"hexValue":"455243373231","id":10994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10549:8:35","typeDescriptions":{"typeIdentifier":"t_stringliteral_73ad2146b3d3a286642c794379d750360a2d53a3459a11b3e5d6cc900f55f44a","typeString":"literal_string \"ERC721\""},"value":"ERC721"},{"expression":{"id":10995,"name":"tokenIds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10942,"src":"10559:8:35","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":10996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10568:6:35","memberName":"length","nodeType":"MemberAccess","src":"10559:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73ad2146b3d3a286642c794379d750360a2d53a3459a11b3e5d6cc900f55f44a","typeString":"literal_string \"ERC721\""},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":10993,"name":"InventoryReplenished","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10219,"src":"10528:20:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,uint256)"}},"id":10997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10528:47:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":10998,"nodeType":"EmitStatement","src":"10523:52:35"}]},"functionSelector":"c225fbd1","id":11000,"implemented":true,"kind":"function","modifiers":[{"id":10945,"kind":"modifierInvocation","modifierName":{"id":10944,"name":"onlyOwner","nameLocations":["10177:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"10177:9:35"},"nodeType":"ModifierInvocation","src":"10177:9:35"}],"name":"replenishERC721Inventory","nameLocation":"10114:24:35","nodeType":"FunctionDefinition","parameters":{"id":10943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":10942,"mutability":"mutable","name":"tokenIds","nameLocation":"10158:8:35","nodeType":"VariableDeclaration","scope":11000,"src":"10139:27:35","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":10940,"name":"uint256","nodeType":"ElementaryTypeName","src":"10139:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":10941,"nodeType":"ArrayTypeName","src":"10139:9:35","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"10138:29:35"},"returnParameters":{"id":10946,"nodeType":"ParameterList","parameters":[],"src":"10187:0:35"},"scope":11176,"src":"10105:477:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11033,"nodeType":"Block","src":"10631:210:35","statements":[{"expression":{"id":11005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11003,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"10641:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":11004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10655:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10641:15:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11006,"nodeType":"ExpressionStatement","src":"10641:15:35"},{"body":{"id":11031,"nodeType":"Block","src":"10715:120:35","statements":[{"condition":{"expression":{"baseExpression":{"id":11018,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"10733:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":11020,"indexExpression":{"id":11019,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11008,"src":"10745:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10733:14:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage","typeString":"struct LootBox.RewardTier storage ref"}},"id":11021,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10748:6:35","memberName":"active","nodeType":"MemberAccess","referencedDeclaration":10128,"src":"10733:21:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11030,"nodeType":"IfStatement","src":"10729:96:35","trueBody":{"id":11029,"nodeType":"Block","src":"10756:69:35","statements":[{"expression":{"id":11027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11022,"name":"totalWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10153,"src":"10774:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"baseExpression":{"id":11023,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"10789:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":11025,"indexExpression":{"id":11024,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11008,"src":"10801:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10789:14:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage","typeString":"struct LootBox.RewardTier storage ref"}},"id":11026,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10804:6:35","memberName":"weight","nodeType":"MemberAccess","referencedDeclaration":10122,"src":"10789:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10774:36:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11028,"nodeType":"ExpressionStatement","src":"10774:36:35"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":11014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":11011,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11008,"src":"10686:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":11012,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"10690:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":11013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10702:6:35","memberName":"length","nodeType":"MemberAccess","src":"10690:18:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10686:22:35","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11032,"initializationExpression":{"assignments":[11008],"declarations":[{"constant":false,"id":11008,"mutability":"mutable","name":"i","nameLocation":"10679:1:35","nodeType":"VariableDeclaration","scope":11032,"src":"10671:9:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11007,"name":"uint256","nodeType":"ElementaryTypeName","src":"10671:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11010,"initialValue":{"hexValue":"30","id":11009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10683:1:35","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10671:13:35"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":11016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10710:3:35","subExpression":{"id":11015,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11008,"src":"10710:1:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11017,"nodeType":"ExpressionStatement","src":"10710:3:35"},"nodeType":"ForStatement","src":"10666:169:35"}]},"id":11034,"implemented":true,"kind":"function","modifiers":[],"name":"_recalculateTotalWeight","nameLocation":"10597:23:35","nodeType":"FunctionDefinition","parameters":{"id":11001,"nodeType":"ParameterList","parameters":[],"src":"10620:2:35"},"returnParameters":{"id":11002,"nodeType":"ParameterList","parameters":[],"src":"10631:0:35"},"scope":11176,"src":"10588:253:35","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":11052,"nodeType":"Block","src":"10957:56:35","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":11047,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"10990:5:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":11048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10990:7:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11049,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11038,"src":"10999:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":11044,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11036,"src":"10974:5:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11043,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"10967:6:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$2364_$","typeString":"type(contract IERC20)"}},"id":11045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10967:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2364","typeString":"contract IERC20"}},"id":11046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10981:8:35","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":2331,"src":"10967:22:35","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":11050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10967:39:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":11051,"nodeType":"ExpressionStatement","src":"10967:39:35"}]},"functionSelector":"917bb998","id":11053,"implemented":true,"kind":"function","modifiers":[{"id":11041,"kind":"modifierInvocation","modifierName":{"id":11040,"name":"onlyOwner","nameLocations":["10947:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"10947:9:35"},"nodeType":"ModifierInvocation","src":"10947:9:35"}],"name":"emergencyWithdrawTokens","nameLocation":"10883:23:35","nodeType":"FunctionDefinition","parameters":{"id":11039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11036,"mutability":"mutable","name":"token","nameLocation":"10915:5:35","nodeType":"VariableDeclaration","scope":11053,"src":"10907:13:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11035,"name":"address","nodeType":"ElementaryTypeName","src":"10907:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11038,"mutability":"mutable","name":"amount","nameLocation":"10930:6:35","nodeType":"VariableDeclaration","scope":11053,"src":"10922:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11037,"name":"uint256","nodeType":"ElementaryTypeName","src":"10922:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10906:31:35"},"returnParameters":{"id":11042,"nodeType":"ParameterList","parameters":[],"src":"10957:0:35"},"scope":11176,"src":"10874:139:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11075,"nodeType":"Block","src":"11106:87:35","statements":[{"expression":{"arguments":[{"arguments":[{"id":11068,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11162:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}],"id":11067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11154:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11066,"name":"address","nodeType":"ElementaryTypeName","src":"11154:7:35","typeDescriptions":{}}},"id":11069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11154:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":11070,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"11169:5:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":11071,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11169:7:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11072,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11057,"src":"11178:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":11063,"name":"nftContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11055,"src":"11124:11:35","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11062,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"11116:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$3464_$","typeString":"type(contract IERC721)"}},"id":11064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11116:20:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$3464","typeString":"contract IERC721"}},"id":11065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11137:16:35","memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":3419,"src":"11116:37:35","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) external"}},"id":11073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11116:70:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11074,"nodeType":"ExpressionStatement","src":"11116:70:35"}]},"functionSelector":"922b8079","id":11076,"implemented":true,"kind":"function","modifiers":[{"id":11060,"kind":"modifierInvocation","modifierName":{"id":11059,"name":"onlyOwner","nameLocations":["11096:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"11096:9:35"},"nodeType":"ModifierInvocation","src":"11096:9:35"}],"name":"emergencyWithdrawNFT","nameLocation":"11028:20:35","nodeType":"FunctionDefinition","parameters":{"id":11058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11055,"mutability":"mutable","name":"nftContract","nameLocation":"11057:11:35","nodeType":"VariableDeclaration","scope":11076,"src":"11049:19:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":11054,"name":"address","nodeType":"ElementaryTypeName","src":"11049:7:35","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11057,"mutability":"mutable","name":"tokenId","nameLocation":"11078:7:35","nodeType":"VariableDeclaration","scope":11076,"src":"11070:15:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11056,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11048:38:35"},"returnParameters":{"id":11061,"nodeType":"ParameterList","parameters":[],"src":"11106:0:35"},"scope":11176,"src":"11019:174:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11106,"nodeType":"Block","src":"11251:144:35","statements":[{"assignments":[11084],"declarations":[{"constant":false,"id":11084,"mutability":"mutable","name":"amount","nameLocation":"11269:6:35","nodeType":"VariableDeclaration","scope":11106,"src":"11261:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11083,"name":"uint256","nodeType":"ElementaryTypeName","src":"11261:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":11090,"initialValue":{"expression":{"arguments":[{"id":11087,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11286:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}],"id":11086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11278:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11085,"name":"address","nodeType":"ElementaryTypeName","src":"11278:7:35","typeDescriptions":{}}},"id":11088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11278:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":11089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11292:7:35","memberName":"balance","nodeType":"MemberAccess","src":"11278:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11261:38:35"},{"expression":{"arguments":[{"id":11097,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11084,"src":"11335:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":11093,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"11317:5:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":11094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11317:7:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":11092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11309:8:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":11091,"name":"address","nodeType":"ElementaryTypeName","src":"11309:8:35","stateMutability":"payable","typeDescriptions":{}}},"id":11095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11309:16:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":11096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11326:8:35","memberName":"transfer","nodeType":"MemberAccess","src":"11309:25:35","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":11098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11309:33:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11099,"nodeType":"ExpressionStatement","src":"11309:33:35"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":11101,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"11372:5:35","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":11102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11372:7:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":11103,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11084,"src":"11381:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":11100,"name":"FundsWithdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10193,"src":"11357:14:35","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":11104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11357:31:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":11105,"nodeType":"EmitStatement","src":"11352:36:35"}]},"functionSelector":"3ccfd60b","id":11107,"implemented":true,"kind":"function","modifiers":[{"id":11079,"kind":"modifierInvocation","modifierName":{"id":11078,"name":"onlyOwner","nameLocations":["11228:9:35"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"11228:9:35"},"nodeType":"ModifierInvocation","src":"11228:9:35"},{"id":11081,"kind":"modifierInvocation","modifierName":{"id":11080,"name":"nonReentrant","nameLocations":["11238:12:35"],"nodeType":"IdentifierPath","referencedDeclaration":4739,"src":"11238:12:35"},"nodeType":"ModifierInvocation","src":"11238:12:35"}],"name":"withdraw","nameLocation":"11208:8:35","nodeType":"FunctionDefinition","parameters":{"id":11077,"nodeType":"ParameterList","parameters":[],"src":"11216:2:35"},"returnParameters":{"id":11082,"nodeType":"ParameterList","parameters":[],"src":"11251:0:35"},"scope":11176,"src":"11199:196:35","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":11119,"nodeType":"Block","src":"11504:43:35","statements":[{"expression":{"baseExpression":{"id":11115,"name":"rewardTiers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10151,"src":"11521:11:35","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_RewardTier_$10129_storage_$dyn_storage","typeString":"struct LootBox.RewardTier storage ref[] storage ref"}},"id":11117,"indexExpression":{"id":11116,"name":"tierId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11109,"src":"11533:6:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11521:19:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage","typeString":"struct LootBox.RewardTier storage ref"}},"functionReturnParameters":11114,"id":11118,"nodeType":"Return","src":"11514:26:35"}]},"functionSelector":"eb586cae","id":11120,"implemented":true,"kind":"function","modifiers":[],"name":"getRewardTier","nameLocation":"11432:13:35","nodeType":"FunctionDefinition","parameters":{"id":11110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11109,"mutability":"mutable","name":"tierId","nameLocation":"11454:6:35","nodeType":"VariableDeclaration","scope":11120,"src":"11446:14:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11108,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:16:35"},"returnParameters":{"id":11114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11120,"src":"11485:17:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_memory_ptr","typeString":"struct LootBox.RewardTier"},"typeName":{"id":11112,"nodeType":"UserDefinedTypeName","pathNode":{"id":11111,"name":"RewardTier","nameLocations":["11485:10:35"],"nodeType":"IdentifierPath","referencedDeclaration":10129,"src":"11485:10:35"},"referencedDeclaration":10129,"src":"11485:10:35","typeDescriptions":{"typeIdentifier":"t_struct$_RewardTier_$10129_storage_ptr","typeString":"struct LootBox.RewardTier"}},"visibility":"internal"}],"src":"11484:19:35"},"scope":11176,"src":"11423:124:35","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11132,"nodeType":"Block","src":"11645:50:35","statements":[{"expression":{"baseExpression":{"id":11128,"name":"pendingRequests","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10171,"src":"11662:15:35","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_PendingRequest_$10166_storage_$","typeString":"mapping(uint256 => struct LootBox.PendingRequest storage ref)"}},"id":11130,"indexExpression":{"id":11129,"name":"requestId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11122,"src":"11678:9:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11662:26:35","typeDescriptions":{"typeIdentifier":"t_struct$_PendingRequest_$10166_storage","typeString":"struct LootBox.PendingRequest storage ref"}},"functionReturnParameters":11127,"id":11131,"nodeType":"Return","src":"11655:33:35"}]},"functionSelector":"daf484e0","id":11133,"implemented":true,"kind":"function","modifiers":[],"name":"getPendingRequest","nameLocation":"11562:17:35","nodeType":"FunctionDefinition","parameters":{"id":11123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11122,"mutability":"mutable","name":"requestId","nameLocation":"11588:9:35","nodeType":"VariableDeclaration","scope":11133,"src":"11580:17:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11121,"name":"uint256","nodeType":"ElementaryTypeName","src":"11580:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11579:19:35"},"returnParameters":{"id":11127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":11133,"src":"11622:21:35","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PendingRequest_$10166_memory_ptr","typeString":"struct LootBox.PendingRequest"},"typeName":{"id":11125,"nodeType":"UserDefinedTypeName","pathNode":{"id":11124,"name":"PendingRequest","nameLocations":["11622:14:35"],"nodeType":"IdentifierPath","referencedDeclaration":10166,"src":"11622:14:35"},"referencedDeclaration":10166,"src":"11622:14:35","typeDescriptions":{"typeIdentifier":"t_struct$_PendingRequest_$10166_storage_ptr","typeString":"struct LootBox.PendingRequest"}},"visibility":"internal"}],"src":"11621:23:35"},"scope":11176,"src":"11553:142:35","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11170,"nodeType":"Block","src":"11821:212:35","statements":[{"expression":{"id":11151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11142,"name":"erc20Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11136,"src":"11831:12:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":11148,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11882:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}],"id":11147,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11874:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11146,"name":"address","nodeType":"ElementaryTypeName","src":"11874:7:35","typeDescriptions":{}}},"id":11149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11874:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"expression":{"id":11143,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"11846:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":11144,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11853:10:35","memberName":"erc20Token","nodeType":"MemberAccess","referencedDeclaration":10132,"src":"11846:17:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$2364","typeString":"contract IERC20"}},"id":11145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11864:9:35","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":2321,"src":"11846:27:35","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":11150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11846:42:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11831:57:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11152,"nodeType":"ExpressionStatement","src":"11831:57:35"},{"expression":{"id":11164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11153,"name":"erc1155Balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11138,"src":"11898:14:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":11159,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11953:4:35","typeDescriptions":{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_LootBox_$11176","typeString":"contract LootBox"}],"id":11158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11945:7:35","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":11157,"name":"address","nodeType":"ElementaryTypeName","src":"11945:7:35","typeDescriptions":{}}},"id":11160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11945:13:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":11161,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"11960:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":11162,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11967:14:35","memberName":"erc1155TokenId","nodeType":"MemberAccess","referencedDeclaration":10140,"src":"11960:21:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":11154,"name":"tokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10144,"src":"11915:6:35","typeDescriptions":{"typeIdentifier":"t_struct$_TokenContracts_$10141_storage","typeString":"struct LootBox.TokenContracts storage ref"}},"id":11155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11922:12:35","memberName":"erc1155Token","nodeType":"MemberAccess","referencedDeclaration":10138,"src":"11915:19:35","typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155_$1478","typeString":"contract IERC1155"}},"id":11156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11935:9:35","memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1416,"src":"11915:29:35","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view external returns (uint256)"}},"id":11163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11915:67:35","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11898:84:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11165,"nodeType":"ExpressionStatement","src":"11898:84:35"},{"expression":{"id":11168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":11166,"name":"erc721Count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":11140,"src":"11992:11:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":11167,"name":"availableERC721Count","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10159,"src":"12006:20:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11992:34:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":11169,"nodeType":"ExpressionStatement","src":"11992:34:35"}]},"functionSelector":"b2becc21","id":11171,"implemented":true,"kind":"function","modifiers":[],"name":"getInventoryStatus","nameLocation":"11710:18:35","nodeType":"FunctionDefinition","parameters":{"id":11134,"nodeType":"ParameterList","parameters":[],"src":"11728:2:35"},"returnParameters":{"id":11141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11136,"mutability":"mutable","name":"erc20Balance","nameLocation":"11762:12:35","nodeType":"VariableDeclaration","scope":11171,"src":"11754:20:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11135,"name":"uint256","nodeType":"ElementaryTypeName","src":"11754:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11138,"mutability":"mutable","name":"erc1155Balance","nameLocation":"11784:14:35","nodeType":"VariableDeclaration","scope":11171,"src":"11776:22:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11137,"name":"uint256","nodeType":"ElementaryTypeName","src":"11776:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":11140,"mutability":"mutable","name":"erc721Count","nameLocation":"11808:11:35","nodeType":"VariableDeclaration","scope":11171,"src":"11800:19:35","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":11139,"name":"uint256","nodeType":"ElementaryTypeName","src":"11800:7:35","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11753:67:35"},"scope":11176,"src":"11701:332:35","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":11174,"nodeType":"Block","src":"12066:2:35","statements":[]},"id":11175,"implemented":true,"kind":"receive","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":11172,"nodeType":"ParameterList","parameters":[],"src":"12046:2:35"},"returnParameters":{"id":11173,"nodeType":"ParameterList","parameters":[],"src":"12066:0:35"},"scope":11176,"src":"12039:29:35","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":11177,"src":"642:11428:35","usedErrors":[8,167,172,4720,10221,10223,10225,10227,10229],"usedEvents":[178,10177,10187,10193,10203,10213,10219]}],"src":"32:12038:35"},"id":35}},"contracts":{"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol":{"VRFConsumerBaseV2":{"abi":[{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"rawFulfillRandomWords(uint256,uint256[])":"1fe543e3"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"PURPOSEReggie the Random Oracle (not his real job) wants to provide randomnessto Vera the verifier in such a way that Vera can be sure he's notmaking his output up to suit himself. Reggie provides Vera a public keyto which he knows the secret key. Each time Vera provides a seed toReggie, he gives back a value which is computed completelydeterministically from the seed and the secret key.Reggie provides a proof by which Vera can verify that the output wascorrectly computed once Reggie tells it to her, but without that proof,the output is indistinguishable to her from a uniform random samplefrom the output space.The purpose of this contract is to make it easy for unrelated contractsto talk to Vera the verifier about the work Reggie is doing, to providesimple access to a verifiable source of randomness. It ensures 2 things:1. The fulfillment came from the VRFCoordinator2. The consumer contract implements fulfillRandomWords. *****************************************************************************USAGECalling contracts must inherit from VRFConsumerBase, and caninitialize VRFConsumerBase's attributes in their constructor asshown:contract VRFConsumer {constructor(<other arguments>, address _vrfCoordinator, address _link)VRFConsumerBase(_vrfCoordinator) public {<initialization with other arguments goes here>}}The oracle will have given you an ID for the VRF keypair they havecommitted to (let's call it keyHash). Create subscription, fund itand your consumer contract as a consumer of it (see VRFCoordinatorInterfacesubscription management functions).Call requestRandomWords(keyHash, subId, minimumRequestConfirmations,callbackGasLimit, numWords),see (VRFCoordinatorInterface for a description of the arguments).Once the VRFCoordinator has received and validated the oracle's responseto your request, it will call your contract's fulfillRandomWords method.The randomness argument to fulfillRandomWords is a set of random wordsgenerated from your requestId and the blockHash of the request.If your contract could have concurrent requests open, you can use therequestId returned from requestRandomWords to track which response is associatedwith which randomness request.See \\\"SECURITY CONSIDERATIONS\\\" for principles to keep in mind,if your contract could have multiple requests in flight simultaneously.Colliding `requestId`s are cryptographically impossible as long as seedsdiffer. *****************************************************************************SECURITY CONSIDERATIONSA method with the ability to call your fulfillRandomness method directlycould spoof a VRF response with any random value, so it's critical thatit cannot be directly called by anything other than this base contract(specifically, by the VRFConsumerBase.rawFulfillRandomness method).For your users to trust that your contract's random behavior is freefrom malicious interference, it's best if you can write it so that allbehaviors implied by a VRF response are executed *during* yourfulfillRandomness method. If your contract must store the response (oranything derived from it) and use it later, you must ensure that anyuser-significant behavior which depends on that stored value cannot bemanipulated by a subsequent VRF request.Similarly, both miners and the VRF oracle itself have some influenceover the order in which VRF responses appear on the blockchain, so ifyour contract could have multiple VRF requests in flight simultaneously,you must ensure that the order in which the VRF responses arrive cannotbe used to manipulate your contract's user-significant behavior.Since the block hash of the block which contains the requestRandomnesscall is mixed into the input to the VRF *last*, a sufficiently powerfulminer could, in principle, fork the blockchain to evict the blockcontaining the request, forcing the request to be included in adifferent block with a different hash, and therefore a different inputto the VRF. However, such an attack would incur a substantial economiccost. This cost scales with the number of blocks the VRF oracle waitsuntil it calls responds to a request. It is for this reason thatthat you can signal to an oracle you'd like them to wait longer beforeresponding to the request (however this is not enforced in the contractand so remains effective only in the case of unmodified oracle software).\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_vrfCoordinator\":\"address of VRFCoordinator contract\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"****************************************************************************Interface for contracts using VRF randomness *****************************************************************************\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":\"VRFConsumerBaseV2\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03385e076f6c2ad534bffe7c655cf259242e0f133f0ebfd56f914c0dde4a3f4\",\"dweb:/ipfs/QmWkQVSoAoRu1LXQTfDeic9QESjQkjT4G5Kt1VptTaxQDP\"]}},\"version\":1}"}},"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol":{"VRFCoordinatorV2Interface":{"abi":[{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"acceptSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"addConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"to","type":"address"}],"name":"cancelSubscription","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"createSubscription","outputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getRequestConfig","outputs":[{"internalType":"uint16","name":"","type":"uint16"},{"internalType":"uint32","name":"","type":"uint32"},{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"getSubscription","outputs":[{"internalType":"uint96","name":"balance","type":"uint96"},{"internalType":"uint64","name":"reqCount","type":"uint64"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"address[]","name":"consumers","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"}],"name":"pendingRequestExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"consumer","type":"address"}],"name":"removeConsumer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"keyHash","type":"bytes32"},{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"uint16","name":"minimumRequestConfirmations","type":"uint16"},{"internalType":"uint32","name":"callbackGasLimit","type":"uint32"},{"internalType":"uint32","name":"numWords","type":"uint32"}],"name":"requestRandomWords","outputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint64","name":"subId","type":"uint64"},{"internalType":"address","name":"newOwner","type":"address"}],"name":"requestSubscriptionOwnerTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"acceptSubscriptionOwnerTransfer(uint64)":"82359740","addConsumer(uint64,address)":"7341c10c","cancelSubscription(uint64,address)":"d7ae1d30","createSubscription()":"a21a23e4","getRequestConfig()":"00012291","getSubscription(uint64)":"a47c7696","pendingRequestExists(uint64)":"e82ad7d4","removeConsumer(uint64,address)":"9f87fad7","requestRandomWords(bytes32,uint64,uint16,uint32,uint32)":"5d3b1d30","requestSubscriptionOwnerTransfer(uint64,address)":"04c357cb"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"acceptSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"addConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"cancelSubscription\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createSubscription\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRequestConfig\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"getSubscription\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"balance\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"reqCount\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"consumers\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"}],\"name\":\"pendingRequestExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"consumer\",\"type\":\"address\"}],\"name\":\"removeConsumer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"uint16\",\"name\":\"minimumRequestConfirmations\",\"type\":\"uint16\"},{\"internalType\":\"uint32\",\"name\":\"callbackGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"numWords\",\"type\":\"uint32\"}],\"name\":\"requestRandomWords\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"subId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"requestSubscriptionOwnerTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"details\":\"will revert if original owner of subId has not requested that msg.sender become the new owner.\",\"params\":{\"subId\":\"- ID of the subscription\"}},\"addConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- New consumer which can use the subscription\",\"subId\":\"- ID of the subscription\"}},\"cancelSubscription(uint64,address)\":{\"params\":{\"subId\":\"- ID of the subscription\",\"to\":\"- Where to send the remaining LINK to\"}},\"createSubscription()\":{\"details\":\"You can manage the consumer set dynamically with addConsumer/removeConsumer.Note to fund the subscription, use transferAndCall. For exampleLINKTOKEN.transferAndCall(address(COORDINATOR),amount,abi.encode(subId));\",\"returns\":{\"subId\":\"- A unique subscription id.\"}},\"getRequestConfig()\":{\"returns\":{\"_0\":\"minimumRequestConfirmations global min for request confirmations\",\"_1\":\"maxGasLimit global max for request gas limit\",\"_2\":\"s_provingKeyHashes list of registered key hashes\"}},\"getSubscription(uint64)\":{\"params\":{\"subId\":\"- ID of the subscription\"},\"returns\":{\"balance\":\"- LINK balance of the subscription in juels.\",\"consumers\":\"- list of consumer address which are able to use this subscription.\",\"owner\":\"- owner of the subscription.\",\"reqCount\":\"- number of requests for this subscription, determines fee tier.\"}},\"removeConsumer(uint64,address)\":{\"params\":{\"consumer\":\"- Consumer to remove from the subscription\",\"subId\":\"- ID of the subscription\"}},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"params\":{\"callbackGasLimit\":\"- How much gas you'd like to receive in your fulfillRandomWords callback. Note that gasleft() inside fulfillRandomWords may be slightly less than this amount because of gas used calling the function (argument decoding etc.), so you may need to request slightly more than you expect to have inside fulfillRandomWords. The acceptable range is [0, maxGasLimit]\",\"keyHash\":\"- Corresponds to a particular oracle job which uses that key for generating the VRF proof. Different keyHash's have different gas price ceilings, so you can select a specific one to bound your maximum per request cost.\",\"minimumRequestConfirmations\":\"- How many blocks you'd like the oracle to wait before responding to the request. See SECURITY CONSIDERATIONS for why you may want to request more. The acceptable range is [minimumRequestBlockConfirmations, 200].\",\"numWords\":\"- The number of uint256 random values you'd like to receive in your fulfillRandomWords callback. Note these numbers are expanded in a secure way by the VRFCoordinator from a single random value supplied by the oracle.\",\"subId\":\"- The ID of the VRF subscription. Must be funded with the minimum subscription balance required for the selected keyHash.\"},\"returns\":{\"requestId\":\"- A unique identifier of the request. Can be used to match a request to a response in fulfillRandomWords.\"}},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"params\":{\"newOwner\":\"- proposed new owner of the subscription\",\"subId\":\"- ID of the subscription\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"acceptSubscriptionOwnerTransfer(uint64)\":{\"notice\":\"Request subscription owner transfer.\"},\"addConsumer(uint64,address)\":{\"notice\":\"Add a consumer to a VRF subscription.\"},\"cancelSubscription(uint64,address)\":{\"notice\":\"Cancel a subscription\"},\"createSubscription()\":{\"notice\":\"Create a VRF subscription.\"},\"getRequestConfig()\":{\"notice\":\"Get configuration relevant for making requests\"},\"getSubscription(uint64)\":{\"notice\":\"Get a VRF subscription.\"},\"removeConsumer(uint64,address)\":{\"notice\":\"Remove a consumer from a VRF subscription.\"},\"requestRandomWords(bytes32,uint64,uint16,uint32,uint32)\":{\"notice\":\"Request a set of random words.\"},\"requestSubscriptionOwnerTransfer(uint64,address)\":{\"notice\":\"Request subscription owner transfer.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":\"VRFCoordinatorV2Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0x619d9d975540d65ef8d6332a67cbd0dda5b0f95b120b8da56695ed50c2f9fc30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d13e94e2c3a7e72241c0f10684274b9509d005bc50b247a8a2442b0c12760bc1\",\"dweb:/ipfs/QmXxTc8ngzwFX9RbSe9Fuso8sSScHDUBfgyTvBcgstJiKt\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol":{"ERC1155Holder":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x845cd93ae5216fb91ab3085c632006cdff95460134dd83f3519c1b08cc3e1b4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1ce223213ad3f92b14a3a36e18bc9ca5de815f43121db298a4ca6faecb8498f\",\"dweb:/ipfs/QmR5o4LeKx1UNgoM5pXpm6Cxjgf9H8DXHcx4SYaUM1K7je\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203cafd533321ce91705239be50488f77dba00d42c60fe4736215e4f0376e4c2aa64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xAF 0xD5 CALLER ORIGIN SHR 0xE9 OR SDIV 0x23 SWAP12 0xE5 DIV DUP9 0xF7 PUSH30 0xBA00D42C60FE4736215E4F0376E4C2AA64736F6C634300081C0033000000 ","sourceMap":"439:3114:9:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203cafd533321ce91705239be50488f77dba00d42c60fe4736215e4f0376e4c2aa64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0xAF 0xD5 CALLER ORIGIN SHR 0xE9 OR SDIV 0x23 SWAP12 0xE5 DIV DUP9 0xF7 PUSH30 0xBA00D42C60FE4736215E4F0376E4C2AA64736F6C634300081C0033000000 ","sourceMap":"439:3114:9:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol":{"ERC721Holder":{"abi":[{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC721Receiver} interface. Accepts all token transfers. Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":\"ERC721Holder\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xaad20f8713b5cd98114278482d5d91b9758f9727048527d582e8e88fd4901fd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5396e8dbb000c2fada59b7d2093b9c7c870fd09413ab0fdaba45d882959c6244\",\"dweb:/ipfs/QmXQn5XckSiUsUBpMYuiFeqnojRX4rKa9jmgjCPeTuPmhh\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220d64d89826f4ecaac2e80b1d23951111b20139725f167341c12bbe69d456c305064736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0x4D DUP10 DUP3 PUSH16 0x4ECAAC2E80B1D23951111B20139725F1 PUSH8 0x341C12BBE69D456C ADDRESS POP PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"431:1490:18:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220d64d89826f4ecaac2e80b1d23951111b20139725f167341c12bbe69d456c305064736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0x4D DUP10 DUP3 PUSH16 0x4ECAAC2E80B1D23951111B20139725F1 PUSH8 0x341C12BBE69D456C ADDRESS POP PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"431:1490:18:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220df84ebeadd3c87123d9af68ce0a1e245bc033664f46637b451505f49857c1e0e64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF DUP5 0xEB 0xEA 0xDD EXTCODECOPY DUP8 SLT RETURNDATASIZE SWAP11 0xF6 DUP13 0xE0 LOG1 0xE2 GASLIMIT 0xBC SUB CALLDATASIZE PUSH5 0xF46637B451 POP PUSH0 BLOBHASH DUP6 PUSH29 0x1E0E64736F6C634300081C003300000000000000000000000000000000 ","sourceMap":"459:20446:19:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220df84ebeadd3c87123d9af68ce0a1e245bc033664f46637b451505f49857c1e0e64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF DUP5 0xEB 0xEA 0xDD EXTCODECOPY DUP8 SLT RETURNDATASIZE SWAP11 0xF6 DUP13 0xE0 LOG1 0xE2 GASLIMIT 0xBC SUB CALLDATASIZE PUSH5 0xF46637B451 POP PUSH0 BLOBHASH DUP6 PUSH29 0x1E0E64736F6C634300081C003300000000000000000000000000000000 ","sourceMap":"459:20446:19:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220dcc7b1074bdd17b5d16c43b897d7c2fbc1478a04a4d904fe6b62de993bca78fb64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xC7 0xB1 SMOD 0x4B 0xDD OR 0xB5 0xD1 PUSH13 0x43B897D7C2FBC1478A04A4D904 INVALID PUSH12 0x62DE993BCA78FB64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"224:218:20:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220dcc7b1074bdd17b5d16c43b897d7c2fbc1478a04a4d904fe6b62de993bca78fb64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC 0xC7 0xB1 SMOD 0x4B 0xDD OR 0xB5 0xD1 PUSH13 0x43B897D7C2FBC1478A04A4D904 INVALID PUSH12 0x62DE993BCA78FB64736F6C63 NUMBER STOP ADDMOD SHR STOP CALLER ","sourceMap":"224:218:20:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212207a34c2eef62c6e83829e81894afb95995147f98c6b0092b8b777b768044045ff64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x34C2EEF62C6E83829E81894AFB95995147F98C6B0092B8B777B768 DIV BLOCKHASH GASLIMIT SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:22:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212207a34c2eef62c6e83829e81894afb95995147f98c6b0092b8b777b768044045ff64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH27 0x34C2EEF62C6E83829E81894AFB95995147F98C6B0092B8B777B768 DIV BLOCKHASH GASLIMIT SELFDESTRUCT PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"657:1315:22:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220dc1174838f9bca5adeb3de9228bfdf2fcc0f88fde7be600d7b95bdf624ce1e9d64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC GT PUSH21 0x838F9BCA5ADEB3DE9228BFDF2FCC0F88FDE7BE600D PUSH28 0x95BDF624CE1E9D64736F6C634300081C003300000000000000000000 ","sourceMap":"1599:3723:24:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220dc1174838f9bca5adeb3de9228bfdf2fcc0f88fde7be600d7b95bdf624ce1e9d64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC GT PUSH21 0x838F9BCA5ADEB3DE9228BFDF2FCC0F88FDE7BE600D PUSH28 0x95BDF624CE1E9D64736F6C634300081C003300000000000000000000 ","sourceMap":"1599:3723:24:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea264697066735822122075ff3ee7558f3370d11093f8b835cf8b00825d1f592fd2c0f3cc239fbf6babf164736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xFF3EE7558F3370D11093F8B835CF8B00825D1F592FD2 0xC0 RETURN 0xCC 0x23 SWAP16 0xBF PUSH12 0xABF164736F6C634300081C00 CALLER ","sourceMap":"1407:2774:25:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea264697066735822122075ff3ee7558f3370d11093f8b835cf8b00825d1f592fd2c0f3cc239fbf6babf164736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH22 0xFF3EE7558F3370D11093F8B835CF8B00825D1F592FD2 0xC0 RETURN 0xCC 0x23 SWAP16 0xBF PUSH12 0xABF164736F6C634300081C00 CALLER ","sourceMap":"1407:2774:25:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220ee555a33cc7d68771af0b1cff60ef9d7fa7a17f74877d13899be135ea69b83ee64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SSTORE GAS CALLER 0xCC PUSH30 0x68771AF0B1CFF60EF9D7FA7A17F74877D13899BE135EA69B83EE64736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"297:18982:26:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220ee555a33cc7d68771af0b1cff60ef9d7fa7a17f74877d13899be135ea69b83ee64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE SSTORE GAS CALLER 0xCC PUSH30 0x68771AF0B1CFF60EF9D7FA7A17F74877D13899BE135EA69B83EE64736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"297:18982:26:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220df7c34c847ba92759d2a0c5ebd36a4f354bd94607b28b5d202bd0af5b720cf9664736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH29 0x34C847BA92759D2A0C5EBD36A4F354BD94607B28B5D202BD0AF5B720CF SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:31863:29:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220df7c34c847ba92759d2a0c5ebd36a4f354bd94607b28b5d202bd0af5b720cf9664736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF PUSH29 0x34C847BA92759D2A0C5EBD36A4F354BD94607B28B5D202BD0AF5B720CF SWAP7 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"281:31863:29:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220e11824dc518bd9c2a5a3ab4e9d5db12b47445e46a8a3b31b60f70a072affa9c164736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 XOR 0x24 0xDC MLOAD DUP12 0xD9 0xC2 0xA5 LOG3 0xAB 0x4E SWAP14 TSTORE 0xB1 0x2B SELFBALANCE PREVRANDAO MCOPY CHAINID 0xA8 LOG3 0xB3 SHL PUSH1 0xF7 EXP SMOD 0x2A SELFDESTRUCT 0xA9 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:30:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220e11824dc518bd9c2a5a3ab4e9d5db12b47445e46a8a3b31b60f70a072affa9c164736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 XOR 0x24 0xDC MLOAD DUP12 0xD9 0xC2 0xA5 LOG3 0xAB 0x4E SWAP14 TSTORE 0xB1 0x2B SELFBALANCE PREVRANDAO MCOPY CHAINID 0xA8 LOG3 0xB3 SHL PUSH1 0xF7 EXP SMOD 0x2A SELFDESTRUCT 0xA9 0xC1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ","sourceMap":"769:34173:30:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea2646970667358221220beea8e313b980f7f2fa28d2fb9eba3a2e0c80b95eab03c9e520eb063d168b2ea64736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xEA DUP15 BALANCE EXTCODESIZE SWAP9 0xF PUSH32 0x2FA28D2FB9EBA3A2E0C80B95EAB03C9E520EB063D168B2EA64736F6C63430008 SHR STOP CALLER ","sourceMap":"258:2354:31:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220beea8e313b980f7f2fa28d2fb9eba3a2e0c80b95eab03c9e520eb063d168b2ea64736f6c634300081c0033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE 0xEA DUP15 BALANCE EXTCODESIZE SWAP9 0xF PUSH32 0x2FA28D2FB9EBA3A2E0C80B95EAB03C9E520EB063D168B2EA64736F6C63430008 SHR STOP CALLER ","sourceMap":"258:2354:31:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/GameNFT.sol":{"GameNFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60806040523461045e57604080519081016001600160401b0381118282101761036b576040908152600882526711d85b594813919560c21b602083015280519081016001600160401b0381118282101761036b57604052600481526311d3919560e21b602082015281516001600160401b03811161036b57600054600181811c91168015610454575b602082101461034b57601f81116103f0575b50602092601f821160011461038c5792819293600092610381575b50508160011b916000199060031b1c1916176000555b80516001600160401b03811161036b57600154600181811c91168015610361575b602082101461034b57601f81116102e6575b50602091601f821160011461028257918192600092610277575b50508160011b916000199060031b1c1916176001555b3315801560005b6064811061014c57604051610b2f90816104648239f35b60065483610261576000818152600260205260409020546001600160a01b031680151591908483610229575b61020f575b600082815260026020526040812080546001600160a01b0319163390811790915591907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9080a46101f9576006549060001982146101e357600180920160065501610135565b634e487b7160e01b600052601160045260246000fd5b6339e3563760e11b600052600060045260246000fd5b33600052600360205260406000206001815401905561017d565b50600082815260046020908152604080832080546001600160a01b031916905583835260039091529020805460001901905584610178565b633250574960e11b600052600060045260246000fd5b015190503880610118565b601f198216926001600052806000209160005b8581106102ce575083600195106102b5575b505050811b0160015561012e565b015160001960f88460031b161c191690553880806102a7565b91926020600181928685015181550194019201610295565b60016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f830160051c81019160208410610341575b601f0160051c01905b81811061033557506100fe565b60008155600101610328565b909150819061031f565b634e487b7160e01b600052602260045260246000fd5b90607f16906100ec565b634e487b7160e01b600052604160045260246000fd5b0151905038806100b5565b601f1982169360008052806000209160005b8681106103d857508360019596106103bf575b505050811b016000556100cb565b015160001960f88460031b161c191690553880806103b1565b9192602060018192868501518155019401920161039e565b600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f830160051c8101916020841061044a575b601f0160051c01905b81811061043e575061009a565b60008155600101610431565b9091508190610428565b90607f1690610088565b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a7146106525750806306fdde0314610597578063081812fc1461055a578063095ea7b31461047257806323b872dd1461045a57806342842e0e146104305780636352211e146103ff57806370a08231146103ac57806395d89b411461029f578063a22cb465146101fd578063b88d4fde14610168578063c87b56dd1461010c5763e985e9c5146100b057600080fd5b346101095760403660031901126101095760406100cb610700565b916100d461071b565b9260018060a01b031681526005602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b80fd5b503461010957602036600319011261010957610129600435610ac2565b508060405161013960208261076b565b525061016460405161014c60208261076b565b600081526040519182916020835260208301906106bf565b0390f35b503461010957608036600319011261010957610182610700565b61018a61071b565b906064359067ffffffffffffffff82116101f957366023830112156101f957816004013592846101b9856107a3565b936101c7604051958661076b565b85855236602487830101116101f557856101f29660246020930183880137850101526044359161097b565b80f35b5080fd5b8380fd5b503461010957604036600319011261010957610217610700565b6024359081151580920361029b576001600160a01b0316908115610287573383526005602052604083208284526020526040832060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b630b61174360e31b83526004829052602483fd5b8280fd5b50346101095780600319360112610109576040519080600154908160011c916001811680156103a2575b60208410811461038e57838652908115610367575060011461030a575b610164846102f68186038261076b565b6040519182916020835260208301906106bf565b600181527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6939250905b80821061034d575090915081016020016102f6826102e6565b919260018160209254838588010152019101909291610334565b60ff191660208087019190915292151560051b850190920192506102f691508390506102e6565b634e487b7160e01b83526022600452602483fd5b92607f16926102c9565b5034610109576020366003190112610109576001600160a01b036103ce610700565b1680156103eb578160409160209352600383522054604051908152f35b6322718ad960e21b82526004829052602482fd5b503461010957602036600319011261010957602061041e600435610ac2565b6040516001600160a01b039091168152f35b5034610109576101f261044236610731565b906040519261045260208561076b565b85845261097b565b5034610109576101f261046c36610731565b916107bf565b50346101095760403660031901126101095761048c610700565b60243561049881610ac2565b33151580610547575b8061051c575b6105095781906001600160a01b0384811691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258680a4825260046020526040822080546001600160a01b0319166001600160a01b0390921691909117905580f35b63a9fbf51f60e01b845233600452602484fd5b506001600160a01b038116845260056020908152604080862033875290915284205460ff16156104a7565b506001600160a01b0381163314156104a1565b50346101095760203660031901126101095760209060043561057b81610ac2565b50815260048252604060018060a01b0391205416604051908152f35b503461010957806003193601126101095760405190808054908160011c91600181168015610648575b60208410811461038e5783865290811561036757506001146105ec57610164846102f68186038261076b565b8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563939250905b80821061062e575090915081016020016102f6826102e6565b919260018160209254838588010152019101909291610615565b92607f16926105c0565b9050346101f55760203660031901126101f55760043563ffffffff60e01b811680910361029b57602092506380ac58cd60e01b81149081156106ae575b811561069d575b5015158152f35b6301ffc9a760e01b14905038610696565b635b5e139f60e01b8114915061068f565b919082519283825260005b8481106106eb575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016106ca565b600435906001600160a01b038216820361071657565b600080fd5b602435906001600160a01b038216820361071657565b6060906003190112610716576004356001600160a01b038116810361071657906024356001600160a01b0381168103610716579060443590565b90601f8019910116810190811067ffffffffffffffff82111761078d57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161078d57601f01601f191660200190565b6001600160a01b0390911691908215610965576000828152600260205260409020546001600160a01b0316928290331515806108ca575b508461088c575b8060005260036020526040600020600181540190558160005260026020526040600020816bffffffffffffffffffffffff60a01b825416179055847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001600160a01b031680830361087257505050565b6364283d7b60e01b60005260045260245260445260646000fd5b81600052600460205260406000206bffffffffffffffffffffffff60a01b8154169055846000526003602052604060002060001981540190556107fd565b90915080610912575b156108e0578290386107f6565b82846108fa57637e27328960e01b60005260045260246000fd5b63177e802f60e01b6000523360045260245260446000fd5b503384148015610942575b806108d357506000838152600460205260409020546001600160a01b031633146108d3565b50600084815260056020908152604080832033845290915290205460ff1661091d565b633250574960e11b600052600060045260246000fd5b92916109888183866107bf565b813b610995575b50505050565b604051630a85bd0160e11b81523360048201526001600160a01b03948516602482015260448101919091526080606482015292169190602090829081906109e09060848301906106bf565b03816000865af18091600091610a7f575b5090610a4a57503d15610a43573d610a08816107a3565b90610a16604051928361076b565b81523d6000602083013e5b80519081610a3e5782633250574960e11b60005260045260246000fd5b602001fd5b6060610a21565b6001600160e01b03191663757a42ff60e11b01610a6b57503880808061098f565b633250574960e11b60005260045260246000fd5b6020813d602011610aba575b81610a986020938361076b565b810103126101f55751906001600160e01b0319821682036101095750386109f1565b3d9150610a8b565b6000818152600260205260409020546001600160a01b0316908115610ae5575090565b637e27328960e01b60005260045260246000fdfea2646970667358221220ccfa01564cb3e95afb11a615b48d68ba8cbfb1338d3ff639925112f8d03f2d6164736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x45E JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x36B JUMPI PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0x8 DUP3 MSTORE PUSH8 0x11D85B5948139195 PUSH1 0xC2 SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x36B JUMPI PUSH1 0x40 MSTORE PUSH1 0x4 DUP2 MSTORE PUSH4 0x11D39195 PUSH1 0xE2 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x36B JUMPI PUSH1 0x0 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x454 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x34B JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x3F0 JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x38C JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x381 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x0 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x36B JUMPI PUSH1 0x1 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x361 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x34B JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x2E6 JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x282 JUMPI SWAP2 DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x277 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x1 SSTORE JUMPDEST CALLER ISZERO DUP1 ISZERO PUSH1 0x0 JUMPDEST PUSH1 0x64 DUP2 LT PUSH2 0x14C JUMPI PUSH1 0x40 MLOAD PUSH2 0xB2F SWAP1 DUP2 PUSH2 0x464 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x6 SLOAD DUP4 PUSH2 0x261 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO ISZERO SWAP2 SWAP1 DUP5 DUP4 PUSH2 0x229 JUMPI JUMPDEST PUSH2 0x20F JUMPI JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP1 LOG4 PUSH2 0x1F9 JUMPI PUSH1 0x6 SLOAD SWAP1 PUSH1 0x0 NOT DUP3 EQ PUSH2 0x1E3 JUMPI PUSH1 0x1 DUP1 SWAP3 ADD PUSH1 0x6 SSTORE ADD PUSH2 0x135 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x39E35637 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x17D JUMP JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE DUP4 DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x0 NOT ADD SWAP1 SSTORE DUP5 PUSH2 0x178 JUMP JUMPDEST PUSH4 0x32505749 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x118 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x2CE JUMPI POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x2B5 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x1 SSTORE PUSH2 0x12E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2A7 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x295 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x341 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x335 JUMPI POP PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x328 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x31F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xEC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH1 0x0 DUP1 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x3D8 JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x3BF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x0 SSTORE PUSH2 0xCB JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x3B1 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x39E JUMP JUMPDEST PUSH1 0x0 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x44A JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x43E JUMPI POP PUSH2 0x9A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x431 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x428 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x88 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x652 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x597 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x10C JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH1 0x40 PUSH2 0xCB PUSH2 0x700 JUMP JUMPDEST SWAP2 PUSH2 0xD4 PUSH2 0x71B JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH2 0x129 PUSH1 0x4 CALLDATALOAD PUSH2 0xAC2 JUMP JUMPDEST POP DUP1 PUSH1 0x40 MLOAD PUSH2 0x139 PUSH1 0x20 DUP3 PUSH2 0x76B JUMP JUMPDEST MSTORE POP PUSH2 0x164 PUSH1 0x40 MLOAD PUSH2 0x14C PUSH1 0x20 DUP3 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x6BF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH2 0x182 PUSH2 0x700 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x71B JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1F9 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1F9 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP3 DUP5 PUSH2 0x1B9 DUP6 PUSH2 0x7A3 JUMP JUMPDEST SWAP4 PUSH2 0x1C7 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x76B JUMP JUMPDEST DUP6 DUP6 MSTORE CALLDATASIZE PUSH1 0x24 DUP8 DUP4 ADD ADD GT PUSH2 0x1F5 JUMPI DUP6 PUSH2 0x1F2 SWAP7 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x97B JUMP JUMPDEST DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH2 0x217 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x29B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x287 JUMPI CALLER DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH4 0xB611743 PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x1 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x3A2 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x38E JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x367 JUMPI POP PUSH1 0x1 EQ PUSH2 0x30A JUMPI JUMPDEST PUSH2 0x164 DUP5 PUSH2 0x2F6 DUP2 DUP7 SUB DUP3 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x34D JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x2F6 DUP3 PUSH2 0x2E6 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x334 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x2F6 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x2E6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x2C9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3CE PUSH2 0x700 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x3EB JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP4 MSTORE PUSH1 0x3 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH1 0x20 PUSH2 0x41E PUSH1 0x4 CALLDATALOAD PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH2 0x1F2 PUSH2 0x442 CALLDATASIZE PUSH2 0x731 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x452 PUSH1 0x20 DUP6 PUSH2 0x76B JUMP JUMPDEST DUP6 DUP5 MSTORE PUSH2 0x97B JUMP JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH2 0x1F2 PUSH2 0x46C CALLDATASIZE PUSH2 0x731 JUMP JUMPDEST SWAP2 PUSH2 0x7BF JUMP JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH2 0x48C PUSH2 0x700 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x498 DUP2 PUSH2 0xAC2 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x547 JUMPI JUMPDEST DUP1 PUSH2 0x51C JUMPI JUMPDEST PUSH2 0x509 JUMPI DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP7 DUP1 LOG4 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP5 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 CALLER DUP8 MSTORE SWAP1 SWAP2 MSTORE DUP5 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x4A1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x57B DUP2 PUSH2 0xAC2 JUMP JUMPDEST POP DUP2 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 DUP1 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x648 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x38E JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x367 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5EC JUMPI PUSH2 0x164 DUP5 PUSH2 0x2F6 DUP2 DUP7 SUB DUP3 PUSH2 0x76B JUMP JUMPDEST DUP1 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x62E JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x2F6 DUP3 PUSH2 0x2E6 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x615 JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x5C0 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1F5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x29B JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x6AE JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x69D JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x696 JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x68F JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x6EB JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x716 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x716 JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x716 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x716 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x716 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x78D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x78D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 ISZERO PUSH2 0x965 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP3 SWAP1 CALLER ISZERO ISZERO DUP1 PUSH2 0x8CA JUMPI JUMPDEST POP DUP5 PUSH2 0x88C JUMPI JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD ADD SWAP1 SSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 SUB PUSH2 0x872 JUMPI POP POP POP JUMP JUMPDEST PUSH4 0x64283D7B PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP2 SLOAD AND SWAP1 SSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x7FD JUMP JUMPDEST SWAP1 SWAP2 POP DUP1 PUSH2 0x912 JUMPI JUMPDEST ISZERO PUSH2 0x8E0 JUMPI DUP3 SWAP1 CODESIZE PUSH2 0x7F6 JUMP JUMPDEST DUP3 DUP5 PUSH2 0x8FA JUMPI PUSH4 0x7E273289 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x177E802F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST POP CALLER DUP5 EQ DUP1 ISZERO PUSH2 0x942 JUMPI JUMPDEST DUP1 PUSH2 0x8D3 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8D3 JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x91D JUMP JUMPDEST PUSH4 0x32505749 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 PUSH2 0x988 DUP2 DUP4 DUP7 PUSH2 0x7BF JUMP JUMPDEST DUP2 EXTCODESIZE PUSH2 0x995 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE SWAP3 AND SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x9E0 SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x6BF JUMP JUMPDEST SUB DUP2 PUSH1 0x0 DUP7 GAS CALL DUP1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xA7F JUMPI JUMPDEST POP SWAP1 PUSH2 0xA4A JUMPI POP RETURNDATASIZE ISZERO PUSH2 0xA43 JUMPI RETURNDATASIZE PUSH2 0xA08 DUP2 PUSH2 0x7A3 JUMP JUMPDEST SWAP1 PUSH2 0xA16 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x76B JUMP JUMPDEST DUP2 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0xA3E JUMPI DUP3 PUSH4 0x32505749 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x60 PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x757A42FF PUSH1 0xE1 SHL ADD PUSH2 0xA6B JUMPI POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x98F JUMP JUMPDEST PUSH4 0x32505749 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xABA JUMPI JUMPDEST DUP2 PUSH2 0xA98 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x76B JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1F5 JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0x109 JUMPI POP CODESIZE PUSH2 0x9F1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xAE5 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x7E273289 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC STATICCALL ADD JUMP 0x4C 0xB3 0xE9 GAS 0xFB GT 0xA6 ISZERO 0xB4 DUP14 PUSH9 0xBA8CBFB1338D3FF639 SWAP3 MLOAD SLT 0xF8 0xD0 EXTCODEHASH 0x2D PUSH2 0x6473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"117:271:32:-:0;;;;;;;;;;;;-1:-1:-1;;;;;117:271:32;;;;;;;;;;;;;;;-1:-1:-1;;;117:271:32;;;;;;;;;-1:-1:-1;;;;;117:271:32;;;;;;;;;;;;;-1:-1:-1;;;117:271:32;;;;;;-1:-1:-1;;;;;117:271:32;;;;-1:-1:-1;117:271:32;;;;;;;;;;;-1:-1:-1;117:271:32;;;;;;;;;;;-1:-1:-1;117:271:32;;;;;;;;;;;;;;-1:-1:-1;117:271:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:271:32;;;;-1:-1:-1;;;;;117:271:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:271:32;;;;;;;;;;;;;;;;;;;;;;326:10;9691:16:13;9096;;-1:-1:-1;292:7:32;296:3;292:7;;;;117:271;;;;;;;;;301:3;338:7;117:271;;9687:87:13;;-1:-1:-1;117:271:32;;;5470:7:13;117:271:32;;;;;;-1:-1:-1;;;;;117:271:32;8830:18:13;;;;117:271:32;;8830:18:13;8826:256;;301:3:32;9092:107:13;;301:3:32;-1:-1:-1;117:271:32;;;5470:7:13;117:271:32;;;;;;;-1:-1:-1;;;;;;117:271:32;326:10;117:271;;;;;;326:10;9246:27:13;;;-1:-1:-1;9246:27:13;9849:96;;338:7:32;117:271;;-1:-1:-1;;117:271:32;;;;;;;;338:7;117:271;;277:13;;117:271;;;;-1:-1:-1;117:271:32;;;;;-1:-1:-1;117:271:32;9849:96:13;9903:31;;;-1:-1:-1;9903:31:13;-1:-1:-1;117:271:32;;;-1:-1:-1;9903:31:13;9092:107;326:10:32;-1:-1:-1;117:271:32;9156:9:13;117:271:32;;;-1:-1:-1;117:271:32;;;;;;;9092:107:13;;8826:256;-1:-1:-1;;117:271:32;;;;;;;;;;;;;;-1:-1:-1;;;;;;117:271:32;;;;;;9037:9:13;117:271:32;;;;;;;-1:-1:-1;;117:271:32;;;;8826:256:13;;9687:87;9730:33;;;-1:-1:-1;9730:33:13;-1:-1:-1;117:271:32;;;-1:-1:-1;9730:33:13;117:271:32;;;;-1:-1:-1;117:271:32;;;;;;;;;;;-1:-1:-1;117:271:32;;-1:-1:-1;117:271:32;;-1:-1:-1;117:271:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:271:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:271:32;;;;;;;;;-1:-1:-1;117:271:32;;;;;;;;-1:-1:-1;117:271:32;;;;;-1:-1:-1;117:271:32;;;;;;;;;;;;-1:-1:-1;117:271:32;;;;;-1:-1:-1;117:271:32;;;;;-1:-1:-1;117:271:32;;;;;;;;;;-1:-1:-1;117:271:32;;;-1:-1:-1;117:271:32;;-1:-1:-1;117:271:32;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:271:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:271:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:271:32;;;;;;;;;-1:-1:-1;117:271:32;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1792,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_7335":{"entryPoint":1819,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_addresst_addresst_uint256":{"entryPoint":1841,"id":null,"parameterSlots":1,"returnSlots":3},"abi_encode_string":{"entryPoint":1727,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":1955,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":1899,"id":null,"parameterSlots":2,"returnSlots":0},"fun_requireOwned":{"entryPoint":2754,"id":3346,"parameterSlots":1,"returnSlots":1},"fun_safeTransferFrom":{"entryPoint":2427,"id":2755,"parameterSlots":4,"returnSlots":0},"fun_transferFrom":{"entryPoint":1983,"id":2707,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b600090813560e01c90816301ffc9a7146106525750806306fdde0314610597578063081812fc1461055a578063095ea7b31461047257806323b872dd1461045a57806342842e0e146104305780636352211e146103ff57806370a08231146103ac57806395d89b411461029f578063a22cb465146101fd578063b88d4fde14610168578063c87b56dd1461010c5763e985e9c5146100b057600080fd5b346101095760403660031901126101095760406100cb610700565b916100d461071b565b9260018060a01b031681526005602052209060018060a01b0316600052602052602060ff604060002054166040519015158152f35b80fd5b503461010957602036600319011261010957610129600435610ac2565b508060405161013960208261076b565b525061016460405161014c60208261076b565b600081526040519182916020835260208301906106bf565b0390f35b503461010957608036600319011261010957610182610700565b61018a61071b565b906064359067ffffffffffffffff82116101f957366023830112156101f957816004013592846101b9856107a3565b936101c7604051958661076b565b85855236602487830101116101f557856101f29660246020930183880137850101526044359161097b565b80f35b5080fd5b8380fd5b503461010957604036600319011261010957610217610700565b6024359081151580920361029b576001600160a01b0316908115610287573383526005602052604083208284526020526040832060ff1981541660ff83161790556040519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b630b61174360e31b83526004829052602483fd5b8280fd5b50346101095780600319360112610109576040519080600154908160011c916001811680156103a2575b60208410811461038e57838652908115610367575060011461030a575b610164846102f68186038261076b565b6040519182916020835260208301906106bf565b600181527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6939250905b80821061034d575090915081016020016102f6826102e6565b919260018160209254838588010152019101909291610334565b60ff191660208087019190915292151560051b850190920192506102f691508390506102e6565b634e487b7160e01b83526022600452602483fd5b92607f16926102c9565b5034610109576020366003190112610109576001600160a01b036103ce610700565b1680156103eb578160409160209352600383522054604051908152f35b6322718ad960e21b82526004829052602482fd5b503461010957602036600319011261010957602061041e600435610ac2565b6040516001600160a01b039091168152f35b5034610109576101f261044236610731565b906040519261045260208561076b565b85845261097b565b5034610109576101f261046c36610731565b916107bf565b50346101095760403660031901126101095761048c610700565b60243561049881610ac2565b33151580610547575b8061051c575b6105095781906001600160a01b0384811691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258680a4825260046020526040822080546001600160a01b0319166001600160a01b0390921691909117905580f35b63a9fbf51f60e01b845233600452602484fd5b506001600160a01b038116845260056020908152604080862033875290915284205460ff16156104a7565b506001600160a01b0381163314156104a1565b50346101095760203660031901126101095760209060043561057b81610ac2565b50815260048252604060018060a01b0391205416604051908152f35b503461010957806003193601126101095760405190808054908160011c91600181168015610648575b60208410811461038e5783865290811561036757506001146105ec57610164846102f68186038261076b565b8080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563939250905b80821061062e575090915081016020016102f6826102e6565b919260018160209254838588010152019101909291610615565b92607f16926105c0565b9050346101f55760203660031901126101f55760043563ffffffff60e01b811680910361029b57602092506380ac58cd60e01b81149081156106ae575b811561069d575b5015158152f35b6301ffc9a760e01b14905038610696565b635b5e139f60e01b8114915061068f565b919082519283825260005b8481106106eb575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016106ca565b600435906001600160a01b038216820361071657565b600080fd5b602435906001600160a01b038216820361071657565b6060906003190112610716576004356001600160a01b038116810361071657906024356001600160a01b0381168103610716579060443590565b90601f8019910116810190811067ffffffffffffffff82111761078d57604052565b634e487b7160e01b600052604160045260246000fd5b67ffffffffffffffff811161078d57601f01601f191660200190565b6001600160a01b0390911691908215610965576000828152600260205260409020546001600160a01b0316928290331515806108ca575b508461088c575b8060005260036020526040600020600181540190558160005260026020526040600020816bffffffffffffffffffffffff60a01b825416179055847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a46001600160a01b031680830361087257505050565b6364283d7b60e01b60005260045260245260445260646000fd5b81600052600460205260406000206bffffffffffffffffffffffff60a01b8154169055846000526003602052604060002060001981540190556107fd565b90915080610912575b156108e0578290386107f6565b82846108fa57637e27328960e01b60005260045260246000fd5b63177e802f60e01b6000523360045260245260446000fd5b503384148015610942575b806108d357506000838152600460205260409020546001600160a01b031633146108d3565b50600084815260056020908152604080832033845290915290205460ff1661091d565b633250574960e11b600052600060045260246000fd5b92916109888183866107bf565b813b610995575b50505050565b604051630a85bd0160e11b81523360048201526001600160a01b03948516602482015260448101919091526080606482015292169190602090829081906109e09060848301906106bf565b03816000865af18091600091610a7f575b5090610a4a57503d15610a43573d610a08816107a3565b90610a16604051928361076b565b81523d6000602083013e5b80519081610a3e5782633250574960e11b60005260045260246000fd5b602001fd5b6060610a21565b6001600160e01b03191663757a42ff60e11b01610a6b57503880808061098f565b633250574960e11b60005260045260246000fd5b6020813d602011610aba575b81610a986020938361076b565b810103126101f55751906001600160e01b0319821682036101095750386109f1565b3d9150610a8b565b6000818152600260205260409020546001600160a01b0316908115610ae5575090565b637e27328960e01b60005260045260246000fdfea2646970667358221220ccfa01564cb3e95afb11a615b48d68ba8cbfb1338d3ff639925112f8d03f2d6164736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x652 JUMPI POP DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x597 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x55A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x45A JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x430 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x10C JUMPI PUSH4 0xE985E9C5 EQ PUSH2 0xB0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH1 0x40 PUSH2 0xCB PUSH2 0x700 JUMP JUMPDEST SWAP2 PUSH2 0xD4 PUSH2 0x71B JUMP JUMPDEST SWAP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH2 0x129 PUSH1 0x4 CALLDATALOAD PUSH2 0xAC2 JUMP JUMPDEST POP DUP1 PUSH1 0x40 MLOAD PUSH2 0x139 PUSH1 0x20 DUP3 PUSH2 0x76B JUMP JUMPDEST MSTORE POP PUSH2 0x164 PUSH1 0x40 MLOAD PUSH2 0x14C PUSH1 0x20 DUP3 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x0 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x6BF JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH2 0x182 PUSH2 0x700 JUMP JUMPDEST PUSH2 0x18A PUSH2 0x71B JUMP JUMPDEST SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x1F9 JUMPI CALLDATASIZE PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x1F9 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD SWAP3 DUP5 PUSH2 0x1B9 DUP6 PUSH2 0x7A3 JUMP JUMPDEST SWAP4 PUSH2 0x1C7 PUSH1 0x40 MLOAD SWAP6 DUP7 PUSH2 0x76B JUMP JUMPDEST DUP6 DUP6 MSTORE CALLDATASIZE PUSH1 0x24 DUP8 DUP4 ADD ADD GT PUSH2 0x1F5 JUMPI DUP6 PUSH2 0x1F2 SWAP7 PUSH1 0x24 PUSH1 0x20 SWAP4 ADD DUP4 DUP9 ADD CALLDATACOPY DUP6 ADD ADD MSTORE PUSH1 0x44 CALLDATALOAD SWAP2 PUSH2 0x97B JUMP JUMPDEST DUP1 RETURN JUMPDEST POP DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH2 0x217 PUSH2 0x700 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 DUP2 ISZERO ISZERO DUP1 SWAP3 SUB PUSH2 0x29B JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x287 JUMPI CALLER DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 DUP3 DUP5 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND PUSH1 0xFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x20 CALLER SWAP3 LOG3 DUP1 RETURN JUMPDEST PUSH4 0xB611743 PUSH1 0xE3 SHL DUP4 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 PUSH1 0x1 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x3A2 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x38E JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x367 JUMPI POP PUSH1 0x1 EQ PUSH2 0x30A JUMPI JUMPDEST PUSH2 0x164 DUP5 PUSH2 0x2F6 DUP2 DUP7 SUB DUP3 PUSH2 0x76B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH32 0xB10E2D527612073B26EECDFD717E6A320CF44B4AFAC2B0732D9FCBE2B7FA0CF6 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x34D JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x2F6 DUP3 PUSH2 0x2E6 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x334 JUMP JUMPDEST PUSH1 0xFF NOT AND PUSH1 0x20 DUP1 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 ISZERO ISZERO PUSH1 0x5 SHL DUP6 ADD SWAP1 SWAP3 ADD SWAP3 POP PUSH2 0x2F6 SWAP2 POP DUP4 SWAP1 POP PUSH2 0x2E6 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP4 REVERT JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x2C9 JUMP JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x3CE PUSH2 0x700 JUMP JUMPDEST AND DUP1 ISZERO PUSH2 0x3EB JUMPI DUP2 PUSH1 0x40 SWAP2 PUSH1 0x20 SWAP4 MSTORE PUSH1 0x3 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x22718AD9 PUSH1 0xE2 SHL DUP3 MSTORE PUSH1 0x4 DUP3 SWAP1 MSTORE PUSH1 0x24 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH1 0x20 PUSH2 0x41E PUSH1 0x4 CALLDATALOAD PUSH2 0xAC2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH2 0x1F2 PUSH2 0x442 CALLDATASIZE PUSH2 0x731 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x452 PUSH1 0x20 DUP6 PUSH2 0x76B JUMP JUMPDEST DUP6 DUP5 MSTORE PUSH2 0x97B JUMP JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH2 0x1F2 PUSH2 0x46C CALLDATASIZE PUSH2 0x731 JUMP JUMPDEST SWAP2 PUSH2 0x7BF JUMP JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH2 0x48C PUSH2 0x700 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH2 0x498 DUP2 PUSH2 0xAC2 JUMP JUMPDEST CALLER ISZERO ISZERO DUP1 PUSH2 0x547 JUMPI JUMPDEST DUP1 PUSH2 0x51C JUMPI JUMPDEST PUSH2 0x509 JUMPI DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP7 DUP1 LOG4 DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP1 RETURN JUMPDEST PUSH4 0xA9FBF51F PUSH1 0xE0 SHL DUP5 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP5 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP7 KECCAK256 CALLER DUP8 MSTORE SWAP1 SWAP2 MSTORE DUP5 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4A7 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ ISZERO PUSH2 0x4A1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x109 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x57B DUP2 PUSH2 0xAC2 JUMP JUMPDEST POP DUP2 MSTORE PUSH1 0x4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP2 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x109 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x109 JUMPI PUSH1 0x40 MLOAD SWAP1 DUP1 DUP1 SLOAD SWAP1 DUP2 PUSH1 0x1 SHR SWAP2 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x648 JUMPI JUMPDEST PUSH1 0x20 DUP5 LT DUP2 EQ PUSH2 0x38E JUMPI DUP4 DUP7 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x367 JUMPI POP PUSH1 0x1 EQ PUSH2 0x5EC JUMPI PUSH2 0x164 DUP5 PUSH2 0x2F6 DUP2 DUP7 SUB DUP3 PUSH2 0x76B JUMP JUMPDEST DUP1 DUP1 MSTORE PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 SWAP4 SWAP3 POP SWAP1 JUMPDEST DUP1 DUP3 LT PUSH2 0x62E JUMPI POP SWAP1 SWAP2 POP DUP2 ADD PUSH1 0x20 ADD PUSH2 0x2F6 DUP3 PUSH2 0x2E6 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP3 SWAP2 PUSH2 0x615 JUMP JUMPDEST SWAP3 PUSH1 0x7F AND SWAP3 PUSH2 0x5C0 JUMP JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x1F5 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1F5 JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0x29B JUMPI PUSH1 0x20 SWAP3 POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x6AE JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x69D JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x696 JUMP JUMPDEST PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP2 EQ SWAP2 POP PUSH2 0x68F JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x6EB JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x716 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x716 JUMPI JUMP JUMPDEST PUSH1 0x60 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x716 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x716 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x716 JUMPI SWAP1 PUSH1 0x44 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x78D JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x78D JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 DUP3 ISZERO PUSH2 0x965 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP3 SWAP1 CALLER ISZERO ISZERO DUP1 PUSH2 0x8CA JUMPI JUMPDEST POP DUP5 PUSH2 0x88C JUMPI JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP2 SLOAD ADD SWAP1 SSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE DUP5 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 DUP4 SUB PUSH2 0x872 JUMPI POP POP POP JUMP JUMPDEST PUSH4 0x64283D7B PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP2 SLOAD AND SWAP1 SSTORE DUP5 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 NOT DUP2 SLOAD ADD SWAP1 SSTORE PUSH2 0x7FD JUMP JUMPDEST SWAP1 SWAP2 POP DUP1 PUSH2 0x912 JUMPI JUMPDEST ISZERO PUSH2 0x8E0 JUMPI DUP3 SWAP1 CODESIZE PUSH2 0x7F6 JUMP JUMPDEST DUP3 DUP5 PUSH2 0x8FA JUMPI PUSH4 0x7E273289 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x177E802F PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST POP CALLER DUP5 EQ DUP1 ISZERO PUSH2 0x942 JUMPI JUMPDEST DUP1 PUSH2 0x8D3 JUMPI POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8D3 JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x91D JUMP JUMPDEST PUSH4 0x32505749 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 PUSH2 0x988 DUP2 DUP4 DUP7 PUSH2 0x7BF JUMP JUMPDEST DUP2 EXTCODESIZE PUSH2 0x995 JUMPI JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 PUSH1 0x64 DUP3 ADD MSTORE SWAP3 AND SWAP2 SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 DUP2 SWAP1 PUSH2 0x9E0 SWAP1 PUSH1 0x84 DUP4 ADD SWAP1 PUSH2 0x6BF JUMP JUMPDEST SUB DUP2 PUSH1 0x0 DUP7 GAS CALL DUP1 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0xA7F JUMPI JUMPDEST POP SWAP1 PUSH2 0xA4A JUMPI POP RETURNDATASIZE ISZERO PUSH2 0xA43 JUMPI RETURNDATASIZE PUSH2 0xA08 DUP2 PUSH2 0x7A3 JUMP JUMPDEST SWAP1 PUSH2 0xA16 PUSH1 0x40 MLOAD SWAP3 DUP4 PUSH2 0x76B JUMP JUMPDEST DUP2 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP4 ADD RETURNDATACOPY JUMPDEST DUP1 MLOAD SWAP1 DUP2 PUSH2 0xA3E JUMPI DUP3 PUSH4 0x32505749 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x60 PUSH2 0xA21 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x757A42FF PUSH1 0xE1 SHL ADD PUSH2 0xA6B JUMPI POP CODESIZE DUP1 DUP1 DUP1 PUSH2 0x98F JUMP JUMPDEST PUSH4 0x32505749 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xABA JUMPI JUMPDEST DUP2 PUSH2 0xA98 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x76B JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1F5 JUMPI MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND DUP3 SUB PUSH2 0x109 JUMPI POP CODESIZE PUSH2 0x9F1 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA8B JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0xAE5 JUMPI POP SWAP1 JUMP JUMPDEST PUSH4 0x7E273289 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC STATICCALL ADD JUMP 0x4C 0xB3 0xE9 GAS 0xFB GT 0xA6 ISZERO 0xB4 DUP14 PUSH9 0xBA8CBFB1338D3FF639 SWAP3 MLOAD SLT 0xF8 0xD0 EXTCODEHASH 0x2D PUSH2 0x6473 PUSH16 0x6C634300081C00330000000000000000 ","sourceMap":"117:271:32:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:271:32;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;3776:18:13;117:271:32;;;3776:35:13;117:271:32;;;;;;-1:-1:-1;117:271:32;;;;;;-1:-1:-1;117:271:32;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:271:32;;;;2618:22:13;117:271:32;;2618:22:13;:::i;:::-;;117:271:32;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;2702:75:13;117:271:32;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;117:271:32;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:271:32;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;117:271:32;;15418:22:13;;15414:91;;735:10:21;117:271:32;;15514:18:13;117:271:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15575:41:13;117:271:32;735:10:21;15575:41:13;;117:271:32;;15414:91:13;-1:-1:-1;;;15463:31:13;;117:271:32;;;;;15463:31:13;;117:271:32;;;;;;;;;;;;;;;;;;;;;2473:7:13;117:271:32;;;2473:7:13;117:271:32;;2473:7:13;117:271:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2473:7:13;117:271:32;;;;;-1:-1:-1;117:271:32;;;;;;;-1:-1:-1;117:271:32;;-1:-1:-1;117:271:32;;;;;;;;;;;2473:7:13;117:271:32;;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:271:32;;;;;;;;;;;;;;;;;;;;-1:-1:-1;117:271:32;;-1:-1:-1;117:271:32;;-1:-1:-1;117:271:32;;;-1:-1:-1;;;117:271:32;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:271:32;;;;-1:-1:-1;;;;;117:271:32;;:::i;:::-;;1947:19:13;;1943:87;;117:271:32;;;;;;2046:9:13;117:271:32;;;;;;;;;;1943:87:13;-1:-1:-1;;;1989:30:13;;117:271:32;;;;;1989:30:13;;117:271:32;;;;;;;-1:-1:-1;;117:271:32;;;;;2192:22:13;117:271:32;;2192:22:13;:::i;:::-;117:271:32;;-1:-1:-1;;;;;117:271:32;;;;;;;;;;;4550:39:13;117:271:32;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;4550:39:13;:::i;117:271:32:-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;-1:-1:-1;;117:271:32;;;;;;:::i;:::-;;;14663:22:13;;;:::i;:::-;735:10:21;14813:18:13;;:35;;;117:271:32;14813:69:13;;;117:271:32;14809:142:13;;117:271:32;;-1:-1:-1;;;;;117:271:32;;;;;15003:28:13;;;;117:271:32;;;;;;;;;;-1:-1:-1;;;;;;117:271:32;-1:-1:-1;;;;;117:271:32;;;;;;;;;;;14809:142:13;-1:-1:-1;;;14909:27:13;;735:10:21;117:271:32;;;14909:27:13;;14813:69;-1:-1:-1;;;;;;117:271:32;;;;3776:18:13;117:271:32;;;;;;;;735:10:21;117:271:32;;;;;;;;;;14852:30:13;14813:69;;:35;-1:-1:-1;;;;;;117:271:32;;735:10:21;14835:13:13;;14813:35;;117:271:32;;;;;;;-1:-1:-1;;117:271:32;;;;;;;;3385:22:13;;;:::i;:::-;;117:271:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;117:271:32;;;;;;;-1:-1:-1;117:271:32;;-1:-1:-1;117:271:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;117:271:32;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1664:40:13;;;:104;;;;117:271:32;1664:156:13;;;;117:271:32;;;;;;;1664:156:13;-1:-1:-1;;;829:40:27;;-1:-1:-1;1664:156:13;;;:104;-1:-1:-1;;;1720:48:13;;;-1:-1:-1;1664:104:13;;117:271:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;117:271:32;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;;;;117:271:32;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;117:271:32;;;;;;;;;-1:-1:-1;;;;;117:271:32;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;117:271:32;;;;;-1:-1:-1;117:271:32;;;;;;;;;-1:-1:-1;;117:271:32;;;;:::o;3852:578:13:-;-1:-1:-1;;;;;117:271:32;;;;3852:578:13;3946:16;;3942:87;;3960:1;117:271:32;;;5470:7:13;117:271:32;;;;;;-1:-1:-1;;;;;117:271:32;;;;735:10:21;8704:18:13;;;8700:86;;3852:578;8830:18;;8826:256;;3852:578;117:271:32;3960:1:13;117:271:32;9156:9:13;117:271:32;;;3960:1:13;117:271:32;9096:16:13;117:271:32;;;;;;3960:1:13;117:271:32;5470:7:13;117:271:32;;;3960:1:13;117:271:32;;;;;;;;;;;9246:27:13;;3960:1;9246:27;;-1:-1:-1;;;;;117:271:32;4319:21:13;;;4315:109;;3852:578;;;:::o;4315:109::-;4363:50;;;3960:1;4363:50;;117:271:32;;;;;;3960:1:13;4363:50;8826:256;117:271:32;3960:1:13;117:271:32;15066:15:13;117:271:32;;;3960:1:13;117:271:32;;;;;;;;;;3960:1:13;117:271:32;9037:9:13;117:271:32;;;3960:1:13;117:271:32;;;;;;;;8826:256:13;;8700:86;6185:127;;-1:-1:-1;6185:127:13;;;8700:86;6862:39;6858:255;;8700:86;;;;;6858:255;6921:19;;117:271:32;;6967:31:13;;;3960:1;6967:31;;117:271:32;;3960:1:13;6967:31;6917:186;7044:44;;;3960:1;7044:44;735:10:21;7044:44:13;117:271:32;;;;3960:1:13;7044:44;6185:127;735:10:21;;6223:16:13;;:52;;;;6185:127;6223:88;6185:127;6223:88;-1:-1:-1;3960:1:13;117:271:32;;;5705:15:13;117:271:32;;;;;;-1:-1:-1;;;;;117:271:32;735:10:21;6279:32:13;6185:127;;6223:52;-1:-1:-1;3960:1:13;117:271:32;;;3776:18:13;117:271:32;;;;;;;;735:10:21;117:271:32;;;;;;;;;;6223:52:13;;3942:87;3985:33;;;3960:1;3985:33;3960:1;3985:33;117:271:32;;3960:1:13;3985:33;4630:233;;;4766:7;;;;;:::i;:::-;1173:14:18;;1169:744;;4630:233:13;;;;;:::o;1169:744:18:-;117:271:32;;-1:-1:-1;;;1211:67:18;;735:10:21;1211:67:18;;;117:271:32;-1:-1:-1;;;;;117:271:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1211:67:18;;1190:1;1211:67;;;;;1190:1;1211:67;;;1169:744;-1:-1:-1;1207:696:18;;;-1:-1:-1;117:271:32;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;1190:1:18;117:271:32;;;;;;;;1568:18:18;;;3985:33:13;;;;1190:1:18;1672:39;1211:67;117:271:32;;1190:1:18;1672:39;1564:325;117:271:32;1758:113:18;;117:271:32;;;;1207:696:18;-1:-1:-1;;;;;;117:271:32;-1:-1:-1;;;1325:51:18;1321:182;;1207:696;1169:744;;;;;;1321:182;3985:33:13;;;1190:1:18;1445:39;1211:67;117:271:32;;1190:1:18;1445:39;1211:67;117:271:32;1211:67:18;;117:271:32;1211:67:18;;;;;;117:271:32;1211:67:18;;;:::i;:::-;;;117:271:32;;;;;;-1:-1:-1;;;;;;117:271:32;;;;;;1211:67:18;;;;;;;-1:-1:-1;1211:67:18;;15858:241:13;-1:-1:-1;117:271:32;;;5470:7:13;117:271:32;;;;;;-1:-1:-1;;;;;117:271:32;;15987:19:13;;15983:88;;16080:12;15858:241;:::o;15983:88::-;6967:31;;;-1:-1:-1;16029:31:13;;117:271:32;;-1:-1:-1;16029:31:13"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GameNFT.sol\":\"GameNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/GameNFT.sol\":{\"keccak256\":\"0xbcb8b1d3b60496199aca3be4017f03e24a4df01b24aa1eca57d12fbb2ad65eac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0c5753d940be3d89f3874c7517b00fdaf4a623c303356fffe1441ae6be2eeea\",\"dweb:/ipfs/QmSBeVZpK64oLS2TNertd2eTZZJjjz1wGXuQX4g6QFEbBg\"]}},\"version\":1}"}},"contracts/Gameitem.sol":{"GameItem":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_bytes4_fromMemory":{"entryPoint":1018,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes":{"entryPoint":1115,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes":{"entryPoint":1499,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":926,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_array_uint256_dyn":{"entryPoint":978,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes":{"entryPoint":1050,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_2516":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory_array_string":{"entryPoint":305,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_string":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"checked_add_uint256":{"entryPoint":891,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":796,"id":null,"parameterSlots":1,"returnSlots":0},"extract_byte_array_length":{"entryPoint":738,"id":null,"parameterSlots":1,"returnSlots":1},"extract_returndata":{"entryPoint":1198,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":238,"id":null,"parameterSlots":2,"returnSlots":0},"fun_checkOnERC1155BatchReceived":{"entryPoint":1246,"id":1770,"parameterSlots":5,"returnSlots":0},"fun_checkOnERC1155Received":{"entryPoint":1556,"id":1696,"parameterSlots":5,"returnSlots":0},"fun_mint":{"entryPoint":326,"id":1168,"parameterSlots":2,"returnSlots":0},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x41":{"entryPoint":216,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"6080604052346100d3576040516100176060826100ee565b602781527f68747470733a2f2f67616d652e6578616d706c652f6170692f6974656d2f7b69602082015266323e973539b7b760c91b604082015261006461005f6002546102e2565b61031c565b60026000526020906000805160206114b38339815191529160005b602081106100bb575001516001600160c81b0319169055604f6002556100ac6100a6610131565b33610146565b604051610dfd90816106b68239f35b9092602060018192868601518155019401910161007f565b600080fd5b634e487b7160e01b600052604160045260246000fd5b601f909101601f19168101906001600160401b0382119082101761011157604052565b6100d8565b6001600160401b03811161011157601f01601f191660200190565b604051906101406020836100ee565b60008252565b90916001600160a01b038216919082156102cc576040519360018552602085019060018252604086016001815260608701906103e882526080880160405287518151908181036102b557505060005b88518110156101f3578060019160051b8a016101eb6101e38a6101cc60606020860151950151946000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b91825461037b565b905501610195565b5091949396909295600182511460001461027957600087517fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6261024c875160405191829133958360209093929193604081019481520152565b0390a45b805160010361026b575050610269935190519133610614565b565b9150916102699450336104de565b60006040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb3391806102ad8888836103d2565b0390a4610250565b635b05999160e01b60005260045260245260446000fd5b632bfa23e760e11b600052600060045260246000fd5b90600182811c92168015610312575b60208310146102fc57565b634e487b7160e01b600052602260045260246000fd5b91607f16916102f1565b601f81116103275750565b6002600052601f0160051c6000805160206114b3833981519152017f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad05b81811061036f575050565b60008155600101610364565b9190820180921161038857565b634e487b7160e01b600052601160045260246000fd5b906020808351928381520192019060005b8181106103bc5750505090565b82518452602093840193909201916001016103af565b90916103e96103f79360408452604084019061039e565b91602081840391015261039e565b90565b908160209103126100d357516001600160e01b0319811681036100d35790565b919082519283825260005b848110610446575050826000602080949584010152601f8019910116010190565b80602080928401015182828601015201610425565b6001600160a01b0391821681529116602082015260a0604082018190526103f794919391926104a09291610492919086019061039e565b90848203606086015261039e565b91608081840391015261041a565b3d156104d9573d906104bf82610116565b916104cd60405193846100ee565b82523d6000602084013e565b606090565b939093929192843b6104f2575b5050505050565b610516600092602094604051968795869563bc197c8160e01b87526004870161045b565b038160006001600160a01b0387165af1600091816105aa575b5061056b575061053d6104ae565b805191908261056457632bfa23e760e11b6000526001600160a01b03821660045260246000fd5b6020915001fd5b6001600160e01b0319166343e6837f60e01b0161058d575038808080806104eb565b632bfa23e760e11b6000526001600160a01b031660045260246000fd5b6105cd91925060203d6020116105d4575b6105c581836100ee565b8101906103fa565b903861052f565b503d6105bb565b6001600160a01b039182168152911660208201526040810191909152606081019190915260a0608082018190526103f79291019061041a565b939093929192843b610627575050505050565b61064b600092602094604051968795869563f23a6e6160e01b8752600487016105db565b038160006001600160a01b0387165af160009181610694575b50610672575061053d6104ae565b6001600160e01b031916630dc5919f60e01b0161058d575038808080806104eb565b6106ae91925060203d6020116105d4576105c581836100ee565b903861066456fe6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461009657806301ffc9a7146100915780630e89341c1461008c5780632eb2c2d6146100875780634e1273f414610082578063a22cb4651461007d578063e985e9c5146100785763f242432a1461007357600080fd5b6106b4565b610657565b61059d565b6104dc565b610408565b6101fd565b61013a565b346100e35760403660031901126100e35760206100da6100b46100e8565b6024356000526000835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b600080fd5b600435906001600160a01b03821682036100e357565b602435906001600160a01b03821682036100e357565b35906001600160a01b03821682036100e357565b6001600160e01b03198116036100e357565b346100e35760203660031901126100e357602060043561015981610128565b63ffffffff60e01b16636cdb3d1360e11b8114908115610197575b8115610186575b506040519015158152f35b6301ffc9a760e01b1490503861017b565b6303a24d0760e21b81149150610174565b919082519283825260005b8481106101d4575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016101b3565b9060206101fa9281815201906101a8565b90565b346100e35760203660031901126100e35760405160006002548060011c90600181169081156102e9575b6020831082146102d55782855260208501919081156102bc5750600114610269575b6102658461025981860382610309565b604051918291826101e9565b0390f35b600260009081529250907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8184106102a85750500161025982610249565b805484840152602090930192600101610295565b60ff191682525090151560051b01905061025982610249565b634e487b7160e01b84526022600452602484fd5b91607f1691610227565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761032b57604052565b6102f3565b67ffffffffffffffff811161032b5760051b60200190565b9080601f830112156100e357813561035f81610330565b9261036d6040519485610309565b81845260208085019260051b8201019283116100e357602001905b8282106103955750505090565b8135815260209182019101610388565b67ffffffffffffffff811161032b57601f01601f191660200190565b81601f820112156100e3578035906103d8826103a5565b926103e66040519485610309565b828452602083830101116100e357816000926020809301838601378301015290565b346100e35760a03660031901126100e3576104216100e8565b6104296100fe565b9060443567ffffffffffffffff81116100e35761044a903690600401610348565b60643567ffffffffffffffff81116100e35761046a903690600401610348565b906084359367ffffffffffffffff85116100e35761048f6104959536906004016103c1565b936107ba565b005b906020808351928381520192019060005b8181106104b55750505090565b82518452602093840193909201916001016104a8565b9060206101fa928181520190610497565b346100e35760403660031901126100e35760043567ffffffffffffffff81116100e357366023820112156100e35780600401359061051982610330565b916105276040519384610309565b8083526024602084019160051b830101913683116100e357602401905b828210610585578360243567ffffffffffffffff81116100e35761026591610573610579923690600401610348565b90610843565b604051918291826104cb565b6020809161059284610114565b815201910190610544565b346100e35760403660031901126100e3576105b66100e8565b6024358015158082036100e3576001600160a01b038316928315610642573360009081526001602090815260408083206001600160a01b039094168352929052209060ff801983541691161790557f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c316040518061063d339482919091602081019215159052565b0390a3005b62ced3e160e81b600052600060045260246000fd5b346100e35760403660031901126100e357602060ff6106a86106776100e8565b61067f6100fe565b6001600160a01b0391821660009081526001865260408082209290931681526020919091522090565b54166040519015158152f35b346100e35760a03660031901126100e3576106cd6100e8565b6106d56100fe565b60643560443560843567ffffffffffffffff81116100e3576106fb9036906004016103c1565b926001600160a01b0385163381141580610796575b61077e576001600160a01b0382161561076857156107535761049594604051926001845260208401526040830193600185526060840152608083016040526108fb565b626a0d4560e21b600052600060045260246000fd5b632bfa23e760e11b600052600060045260246000fd5b63711bec9160e11b6000523360045260245260446000fd5b50600081815260016020908152604080832033845290915290205460ff1615610710565b939291906001600160a01b03851633811415806107f5575b61077e576001600160a01b038216156107685715610753576107f3946108fb565b565b50600081815260016020908152604080832033845290915290205460ff16156107d2565b805182101561082d5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b919091805183518082036108e457505080519061085f82610330565b9161086d6040519384610309565b80835261087c601f1991610330565b0136602084013760005b81518110156108dd57806108cc60019260051b60208082870101519189010151906000918252602082815260408084206001600160a01b03909316845291905290205490565b6108d68286610819565b5201610886565b5090925050565b635b05999160e01b60005260045260245260446000fd5b9493929091938451825190818103610afb5750506001600160a01b0386811695861515959185168015159391929060005b8451811015610a2d578060051b90898988602080868b010151958c010151926109a6575b93600194610962575b5050500161092c565b61099c9161097d610994926000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b918254610b12565b9055388981610959565b505090916109c28d61097d836000526000602052604060002090565b548281106109f6578291898f6109ed600197968f95039161097d856000526000602052604060002090565b55909450610950565b6040516303dee4c560e01b81526001600160a01b038f16600482015260248101919091526044810183905260648101829052608490fd5b509198959392979096506001885114600014610ac15760208881015186820151604080519283529282015233917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b610a8a575b5050505050565b8451600103610ab057602080610aa69601519201519233610d27565b3880808080610a83565b610abc94919233610bf2565b610aa6565b6040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180610af3898d83610b35565b0390a4610a7e565b635b05999160e01b60005260045260245260446000fd5b91908201809211610b1f57565b634e487b7160e01b600052601160045260246000fd5b9091610b4c6101fa93604084526040840190610497565b916020818403910152610497565b908160209103126100e357516101fa81610128565b6001600160a01b0391821681529116602082015260a0604082018190526101fa9491939192610bb49291610ba69190860190610497565b908482036060860152610497565b9160808184039101526101a8565b3d15610bed573d90610bd3826103a5565b91610be16040519384610309565b82523d6000602084013e565b606090565b9091949293853b610c06575b505050505050565b602093610c2891604051968795869563bc197c8160e01b875260048701610b6f565b038160006001600160a01b0387165af160009181610cbd575b50610c7d5750610c4f610bc2565b8051919082610c7657632bfa23e760e11b6000526001600160a01b03821660045260246000fd5b6020915001fd5b6001600160e01b0319166343e6837f60e01b01610ca05750388080808080610bfe565b632bfa23e760e11b6000526001600160a01b031660045260246000fd5b610ce091925060203d602011610ce7575b610cd88183610309565b810190610b5a565b9038610c41565b503d610cce565b6001600160a01b039182168152911660208201526040810191909152606081019190915260a0608082018190526101fa929101906101a8565b9091949293853b610d3a57505050505050565b602093610d5c91604051968795869563f23a6e6160e01b875260048701610cee565b038160006001600160a01b0387165af160009181610da6575b50610d835750610c4f610bc2565b6001600160e01b031916630dc5919f60e01b01610ca05750388080808080610bfe565b610dc091925060203d602011610ce757610cd88183610309565b9038610d7556fea264697066735822122054adbff72471b21ce9e6c594c4cafd83adb5d1e0b90ae748d12eab911569341364736f6c634300081c0033405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH2 0x17 PUSH1 0x60 DUP3 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x27 DUP2 MSTORE PUSH32 0x68747470733A2F2F67616D652E6578616D706C652F6170692F6974656D2F7B69 PUSH1 0x20 DUP3 ADD MSTORE PUSH7 0x323E973539B7B7 PUSH1 0xC9 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x64 PUSH2 0x5F PUSH1 0x2 SLOAD PUSH2 0x2E2 JUMP JUMPDEST PUSH2 0x31C JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14B3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 PUSH1 0x0 JUMPDEST PUSH1 0x20 DUP2 LT PUSH2 0xBB JUMPI POP ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4F PUSH1 0x2 SSTORE PUSH2 0xAC PUSH2 0xA6 PUSH2 0x131 JUMP JUMPDEST CALLER PUSH2 0x146 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDFD SWAP1 DUP2 PUSH2 0x6B6 DUP3 CODECOPY RETURN JUMPDEST SWAP1 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP2 ADD PUSH2 0x7F JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT SWAP1 DUP3 LT OR PUSH2 0x111 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0xD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x111 JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH2 0x140 PUSH1 0x20 DUP4 PUSH2 0xEE JUMP JUMPDEST PUSH1 0x0 DUP3 MSTORE JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP2 SWAP1 DUP3 ISZERO PUSH2 0x2CC JUMPI PUSH1 0x40 MLOAD SWAP4 PUSH1 0x1 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP1 PUSH1 0x1 DUP3 MSTORE PUSH1 0x40 DUP7 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x60 DUP8 ADD SWAP1 PUSH2 0x3E8 DUP3 MSTORE PUSH1 0x80 DUP9 ADD PUSH1 0x40 MSTORE DUP8 MLOAD DUP2 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0x2B5 JUMPI POP POP PUSH1 0x0 JUMPDEST DUP9 MLOAD DUP2 LT ISZERO PUSH2 0x1F3 JUMPI DUP1 PUSH1 0x1 SWAP2 PUSH1 0x5 SHL DUP11 ADD PUSH2 0x1EB PUSH2 0x1E3 DUP11 PUSH2 0x1CC PUSH1 0x60 PUSH1 0x20 DUP7 ADD MLOAD SWAP6 ADD MLOAD SWAP5 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0x37B JUMP JUMPDEST SWAP1 SSTORE ADD PUSH2 0x195 JUMP JUMPDEST POP SWAP2 SWAP5 SWAP4 SWAP7 SWAP1 SWAP3 SWAP6 PUSH1 0x1 DUP3 MLOAD EQ PUSH1 0x0 EQ PUSH2 0x279 JUMPI PUSH1 0x0 DUP8 MLOAD PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 PUSH2 0x24C DUP8 MLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 CALLER SWAP6 DUP4 PUSH1 0x20 SWAP1 SWAP4 SWAP3 SWAP2 SWAP4 PUSH1 0x40 DUP2 ADD SWAP5 DUP2 MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG4 JUMPDEST DUP1 MLOAD PUSH1 0x1 SUB PUSH2 0x26B JUMPI POP POP PUSH2 0x269 SWAP4 MLOAD SWAP1 MLOAD SWAP2 CALLER PUSH2 0x614 JUMP JUMPDEST JUMP JUMPDEST SWAP2 POP SWAP2 PUSH2 0x269 SWAP5 POP CALLER PUSH2 0x4DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0x2AD DUP9 DUP9 DUP4 PUSH2 0x3D2 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0x250 JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x312 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2FC JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2F1 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x327 JUMPI POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 MSTORE PUSH1 0x1F ADD PUSH1 0x5 SHR PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x14B3 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE ADD PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5AD0 JUMPDEST DUP2 DUP2 LT PUSH2 0x36F JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x364 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x388 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x3BC JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x3AF JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x3E9 PUSH2 0x3F7 SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x39E JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x39E JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xD3 JUMPI MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 SUB PUSH2 0xD3 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x446 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x425 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x3F7 SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 PUSH2 0x4A0 SWAP3 SWAP2 PUSH2 0x492 SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x39E JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x39E JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x41A JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0x4D9 JUMPI RETURNDATASIZE SWAP1 PUSH2 0x4BF DUP3 PUSH2 0x116 JUMP JUMPDEST SWAP2 PUSH2 0x4CD PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0xEE JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 DUP5 EXTCODESIZE PUSH2 0x4F2 JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x516 PUSH1 0x0 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x45B JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x5AA JUMPI JUMPDEST POP PUSH2 0x56B JUMPI POP PUSH2 0x53D PUSH2 0x4AE JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0x564 JUMPI PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43E6837F PUSH1 0xE0 SHL ADD PUSH2 0x58D JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x4EB JUMP JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x5CD SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5D4 JUMPI JUMPDEST PUSH2 0x5C5 DUP2 DUP4 PUSH2 0xEE JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x3FA JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x52F JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x3F7 SWAP3 SWAP2 ADD SWAP1 PUSH2 0x41A JUMP JUMPDEST SWAP4 SWAP1 SWAP4 SWAP3 SWAP2 SWAP3 DUP5 EXTCODESIZE PUSH2 0x627 JUMPI POP POP POP POP POP JUMP JUMPDEST PUSH2 0x64B PUSH1 0x0 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0x5DB JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0x694 JUMPI JUMPDEST POP PUSH2 0x672 JUMPI POP PUSH2 0x53D PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xDC5919F PUSH1 0xE0 SHL ADD PUSH2 0x58D JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0x4EB JUMP JUMPDEST PUSH2 0x6AE SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5D4 JUMPI PUSH2 0x5C5 DUP2 DUP4 PUSH2 0xEE JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0x664 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x78 JUMPI PUSH4 0xF242432A EQ PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH1 0x20 PUSH2 0xDA PUSH2 0xB4 PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE3 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE3 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE3 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0xE3 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x159 DUP2 PUSH2 0x128 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x197 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x186 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x17B JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP PUSH2 0x174 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1D4 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x1B3 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x1FA SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1A8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x2 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2E9 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP3 EQ PUSH2 0x2D5 JUMPI DUP3 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP2 SWAP1 DUP2 ISZERO PUSH2 0x2BC JUMPI POP PUSH1 0x1 EQ PUSH2 0x269 JUMPI JUMPDEST PUSH2 0x265 DUP5 PUSH2 0x259 DUP2 DUP7 SUB DUP3 PUSH2 0x309 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1E9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP SWAP1 PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP2 DUP5 LT PUSH2 0x2A8 JUMPI POP POP ADD PUSH2 0x259 DUP3 PUSH2 0x249 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x295 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP3 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 POP PUSH2 0x259 DUP3 PUSH2 0x249 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x227 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x32B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x32B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xE3 JUMPI DUP2 CALLDATALOAD PUSH2 0x35F DUP2 PUSH2 0x330 JUMP JUMPDEST SWAP3 PUSH2 0x36D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x309 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0xE3 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x395 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x388 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x32B JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xE3 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x3D8 DUP3 PUSH2 0x3A5 JUMP JUMPDEST SWAP3 PUSH2 0x3E6 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x309 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xE3 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH2 0x421 PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x429 PUSH2 0xFE JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE3 JUMPI PUSH2 0x44A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE3 JUMPI PUSH2 0x46A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x348 JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0xE3 JUMPI PUSH2 0x48F PUSH2 0x495 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3C1 JUMP JUMPDEST SWAP4 PUSH2 0x7BA JUMP JUMPDEST STOP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4B5 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4A8 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x1FA SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x497 JUMP JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE3 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xE3 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x519 DUP3 PUSH2 0x330 JUMP JUMPDEST SWAP2 PUSH2 0x527 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x309 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xE3 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x585 JUMPI DUP4 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE3 JUMPI PUSH2 0x265 SWAP2 PUSH2 0x573 PUSH2 0x579 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x348 JUMP JUMPDEST SWAP1 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x592 DUP5 PUSH2 0x114 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x544 JUMP JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH2 0x5B6 PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 DUP3 SUB PUSH2 0xE3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x642 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x40 MLOAD DUP1 PUSH2 0x63D CALLER SWAP5 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH3 0xCED3E1 PUSH1 0xE8 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x6A8 PUSH2 0x677 PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x67F PUSH2 0xFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH2 0x6CD PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x6D5 PUSH2 0xFE JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE3 JUMPI PUSH2 0x6FB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3C1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER DUP2 EQ ISZERO DUP1 PUSH2 0x796 JUMPI JUMPDEST PUSH2 0x77E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x768 JUMPI ISZERO PUSH2 0x753 JUMPI PUSH2 0x495 SWAP5 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP4 PUSH1 0x1 DUP6 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE PUSH2 0x8FB JUMP JUMPDEST PUSH3 0x6A0D45 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x711BEC91 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x710 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER DUP2 EQ ISZERO DUP1 PUSH2 0x7F5 JUMPI JUMPDEST PUSH2 0x77E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x768 JUMPI ISZERO PUSH2 0x753 JUMPI PUSH2 0x7F3 SWAP5 PUSH2 0x8FB JUMP JUMPDEST JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7D2 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x82D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x8E4 JUMPI POP POP DUP1 MLOAD SWAP1 PUSH2 0x85F DUP3 PUSH2 0x330 JUMP JUMPDEST SWAP2 PUSH2 0x86D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x309 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x87C PUSH1 0x1F NOT SWAP2 PUSH2 0x330 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x8DD JUMPI DUP1 PUSH2 0x8CC PUSH1 0x1 SWAP3 PUSH1 0x5 SHL PUSH1 0x20 DUP1 DUP3 DUP8 ADD ADD MLOAD SWAP2 DUP10 ADD ADD MLOAD SWAP1 PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8D6 DUP3 DUP7 PUSH2 0x819 JUMP JUMPDEST MSTORE ADD PUSH2 0x886 JUMP JUMPDEST POP SWAP1 SWAP3 POP POP JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST SWAP5 SWAP4 SWAP3 SWAP1 SWAP2 SWAP4 DUP5 MLOAD DUP3 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0xAFB JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP6 DUP7 ISZERO ISZERO SWAP6 SWAP2 DUP6 AND DUP1 ISZERO ISZERO SWAP4 SWAP2 SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA2D JUMPI DUP1 PUSH1 0x5 SHL SWAP1 DUP10 DUP10 DUP9 PUSH1 0x20 DUP1 DUP7 DUP12 ADD ADD MLOAD SWAP6 DUP13 ADD ADD MLOAD SWAP3 PUSH2 0x9A6 JUMPI JUMPDEST SWAP4 PUSH1 0x1 SWAP5 PUSH2 0x962 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x92C JUMP JUMPDEST PUSH2 0x99C SWAP2 PUSH2 0x97D PUSH2 0x994 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0xB12 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP10 DUP2 PUSH2 0x959 JUMP JUMPDEST POP POP SWAP1 SWAP2 PUSH2 0x9C2 DUP14 PUSH2 0x97D DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP3 DUP2 LT PUSH2 0x9F6 JUMPI DUP3 SWAP2 DUP10 DUP16 PUSH2 0x9ED PUSH1 0x1 SWAP8 SWAP7 DUP16 SWAP6 SUB SWAP2 PUSH2 0x97D DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE SWAP1 SWAP5 POP PUSH2 0x950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP2 SWAP9 SWAP6 SWAP4 SWAP3 SWAP8 SWAP1 SWAP7 POP PUSH1 0x1 DUP9 MLOAD EQ PUSH1 0x0 EQ PUSH2 0xAC1 JUMPI PUSH1 0x20 DUP9 DUP2 ADD MLOAD DUP7 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH2 0xA8A JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0xAB0 JUMPI PUSH1 0x20 DUP1 PUSH2 0xAA6 SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0xD27 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0xABC SWAP5 SWAP2 SWAP3 CALLER PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0xAF3 DUP10 DUP14 DUP4 PUSH2 0xB35 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0xA7E JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xB1F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0xB4C PUSH2 0x1FA SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x497 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x497 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xE3 JUMPI MLOAD PUSH2 0x1FA DUP2 PUSH2 0x128 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1FA SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 PUSH2 0xBB4 SWAP3 SWAP2 PUSH2 0xBA6 SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x497 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x497 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1A8 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE SWAP1 PUSH2 0xBD3 DUP3 PUSH2 0x3A5 JUMP JUMPDEST SWAP2 PUSH2 0xBE1 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x309 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP3 SWAP4 DUP6 EXTCODESIZE PUSH2 0xC06 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH2 0xC28 SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0xB6F JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xCBD JUMPI JUMPDEST POP PUSH2 0xC7D JUMPI POP PUSH2 0xC4F PUSH2 0xBC2 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0xC76 JUMPI PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43E6837F PUSH1 0xE0 SHL ADD PUSH2 0xCA0 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0xBFE JUMP JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xCE0 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCE7 JUMPI JUMPDEST PUSH2 0xCD8 DUP2 DUP4 PUSH2 0x309 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB5A JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xC41 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1FA SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1A8 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP3 SWAP4 DUP6 EXTCODESIZE PUSH2 0xD3A JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH2 0xD5C SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0xCEE JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xDA6 JUMPI JUMPDEST POP PUSH2 0xD83 JUMPI POP PUSH2 0xC4F PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xDC5919F PUSH1 0xE0 SHL ADD PUSH2 0xCA0 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0xBFE JUMP JUMPDEST PUSH2 0xDC0 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCE7 JUMPI PUSH2 0xCD8 DUP2 DUP4 PUSH2 0x309 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xD75 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xAD 0xBF 0xF7 0x24 PUSH18 0xB21CE9E6C594C4CAFD83ADB5D1E0B90AE748 0xD1 0x2E 0xAB SWAP2 ISZERO PUSH10 0x341364736F6C63430008 SHR STOP CALLER BLOCKHASH JUMPI DUP8 STATICCALL SLT 0xA8 0x23 0xE0 CALLCODE 0xB7 PUSH4 0x1CC41B3B 0xA8 DUP3 DUP12 CALLER 0x21 0xCA DUP2 GT GT STATICCALL PUSH22 0xCD3AA3BB5ACE00000000000000000000000000000000 ","sourceMap":"119:198:33:-:0;;;;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;119:198:33;;;;;;10164:13:4;119:198:33;;:::i;:::-;;:::i;:::-;10164:13:4;119:198:33;;;;-1:-1:-1;;;;;;;;;;;119:198:33;-1:-1:-1;119:198:33;;;;;;-1:-1:-1;119:198:33;;-1:-1:-1;;;;;;119:198:33;;;;10164:13:4;119:198:33;278:30;119:198;;:::i;:::-;284:10;278:30;:::i;:::-;119:198;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;119:198:33;;;;-1:-1:-1;;;;;119:198:33;;;;;;;;;;:::o;:::-;;:::i;:::-;-1:-1:-1;;;;;119:198:33;;;;;;-1:-1:-1;;119:198:33;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::o;10562:346:4:-;;;-1:-1:-1;;;;;119:198:33;;;10562:346:4;10658:16;;10654:88;;13683:648;;;296:1:33;13683:648:4;;;;;;296:1:33;13683:648:4;;;;;296:1:33;13683:648:4;;;;;;299:4:33;13683:648:4;;;;;;;119:198:33;;;;5071:27:4;;;;5067:117;;5241:13;;10672:1;5272:3;119:198:33;;5256:14:4;;;;;17992:82:19;296:1:33;17992:82:19;;;;;5876:26:4;:17;17992:82:19;5876:13:4;13683:648;;17992:82:19;;;;;;5876:13:4;10672:1;119:198:33;10672:1:4;119:198:33;;;10672:1:4;119:198:33;;;5876:13:4;119:198:33;;;;;;;;;;;;;;;;5876:17:4;119:198:33;;;5876:26:4;:::i;:::-;119:198:33;;;5241:13:4;;5256:14;;;;;;;;;296:1:33;119:198;;5941:15:4;5937:288;296:1:33;;;10672::4;17992:82:19;;6087:45:4;;17992:82:19;;13683:648:4;119:198:33;735:10:21;;;;6087:45:4;;119:198:33;;;;;;;;;;;;;;;6087:45:4;;;;5937:288;119:198:33;;296:1;7136:15:4;296:1:33;;17992:82:19;;7356:4:4;17992:82:19;;;;735:10:21;;7356:4:4;:::i;:::-;10562:346::o;7132:362::-;735:10:21;;;7474:4:4;735:10:21;;;7474:4:4;:::i;5937:288::-;10672:1;13683:648;119:198:33;6168:46:4;735:10:21;6168:46:4;;;;;;;:::i;:::-;;;;5937:288;;5067:117;-1:-1:-1;;;10672:1:4;5121:52;;119:198:33;;;;10672:1:4;5121:52;10654:88;10697:34;;;10672:1;10697:34;10672:1;10697:34;119:198:33;;10672:1:4;10697:34;119:198:33;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;10164:13:4;-1:-1:-1;119:198:33;;;;;-1:-1:-1;;;;;;;;;;;119:198:33;;;;;;;;;;:::o;:::-;-1:-1:-1;119:198:33;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;119:198:33;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;;119:198:33;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;119:198:33;;;;;;;;;-1:-1:-1;119:198:33;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;119:198:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;119:198:33;;;;:::o;:::-;;;:::o;2523:1028:9:-;;;;;;;2747:14;;2743:802;;2523:1028;;;;;;:::o;2743:802::-;2785:78;119:198:33;;2785:78:9;119:198:33;;;;;;;;;;;2785:78:9;;;;;;:::i;:::-;;119:198:33;;-1:-1:-1;;;;;119:198:33;;2785:78:9;;119:198:33;;2785:78:9;;;2743:802;-1:-1:-1;2781:754:9;;3147:388;;;:::i;:::-;119:198:33;;;;3197:18:9;;;-1:-1:-1;;;119:198:33;3302:41:9;-1:-1:-1;;;;;119:198:33;;2785:78:9;119:198:33;;10672:1:4;5121:52;3193:328:9;2785:78;3390:113;;;;2781:754;-1:-1:-1;;;;;;119:198:33;-1:-1:-1;;;2942:60:9;2938:194;;2781:754;2743:802;;;;;;;2938:194;-1:-1:-1;;;119:198:33;3072:41:9;-1:-1:-1;;;;;119:198:33;2785:78:9;119:198:33;;10672:1:4;5121:52;2785:78:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;119:198:33;-1:-1:-1;;;;;119:198:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1006:961:9:-;;;;;;;1205:14;;1201:760;;1006:961;;;;;:::o;1201:760::-;1243:71;119:198:33;;1243:71:9;119:198:33;;;;;;;;;;;1243:71:9;;;;;;:::i;:::-;;119:198:33;;-1:-1:-1;;;;;119:198:33;;1243:71:9;;119:198:33;;1243:71:9;;;1201:760;-1:-1:-1;1239:712:9;;1563:388;;;:::i;1239:712::-;-1:-1:-1;;;;;;119:198:33;-1:-1:-1;;;1363:55:9;1359:189;;1239:712;1201:760;;;;;;;1243:71;;;;;;;;;;;;;;;:::i;:::-;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":276,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_address_4366":{"entryPoint":232,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_4373":{"entryPoint":254,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":840,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes4_fromMemory":{"entryPoint":2906,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_uint256":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256_4379":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_uint256_4380":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_address_address_array_uint256_dyn_array_uint256_dyn_bytes":{"entryPoint":2927,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_address_uint256_uint256_bytes":{"entryPoint":3310,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_address_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_array_uint256_dyn":{"entryPoint":1227,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_uint256_dyn_array_uint256_dyn":{"entryPoint":2869,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_array_uint256_dyn_memory_ptr":{"entryPoint":1175,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string":{"entryPoint":489,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_string_memory_ptr":{"entryPoint":424,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint256_uint256_4382":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_allocation_size_array_uint256_dyn":{"entryPoint":816,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":933,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_string":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":2834,"id":null,"parameterSlots":2,"returnSlots":1},"external_fun_balanceOfBatch":{"entryPoint":1244,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_isApprovedForAll":{"entryPoint":1623,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeBatchTransferFrom":{"entryPoint":1032,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_safeTransferFrom":{"entryPoint":1716,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_setApprovalForAll":{"entryPoint":1437,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_supportsInterface":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"external_fun_uri":{"entryPoint":509,"id":null,"parameterSlots":0,"returnSlots":0},"extract_returndata":{"entryPoint":3010,"id":null,"parameterSlots":0,"returnSlots":1},"finalize_allocation":{"entryPoint":777,"id":null,"parameterSlots":2,"returnSlots":0},"fun_balanceOf":{"entryPoint":null,"id":558,"parameterSlots":2,"returnSlots":1},"fun_balanceOfBatch":{"entryPoint":2115,"id":628,"parameterSlots":2,"returnSlots":1},"fun_checkOnERC1155BatchReceived":{"entryPoint":3058,"id":1770,"parameterSlots":6,"returnSlots":0},"fun_checkOnERC1155Received":{"entryPoint":3367,"id":1696,"parameterSlots":6,"returnSlots":0},"fun_safeBatchTransferFrom":{"entryPoint":1978,"id":751,"parameterSlots":5,"returnSlots":0},"fun_updateWithAcceptanceCheck":{"entryPoint":2299,"id":984,"parameterSlots":5,"returnSlots":0},"mapping_index_access_mapping_address_uint256_of_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"mapping_index_access_mapping_uint256_mapping_address_uint256_of_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":2073,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":755,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_bytes4":{"entryPoint":296,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436101561001257600080fd5b60003560e01c8062fdd58e1461009657806301ffc9a7146100915780630e89341c1461008c5780632eb2c2d6146100875780634e1273f414610082578063a22cb4651461007d578063e985e9c5146100785763f242432a1461007357600080fd5b6106b4565b610657565b61059d565b6104dc565b610408565b6101fd565b61013a565b346100e35760403660031901126100e35760206100da6100b46100e8565b6024356000526000835260406000209060018060a01b0316600052602052604060002090565b54604051908152f35b600080fd5b600435906001600160a01b03821682036100e357565b602435906001600160a01b03821682036100e357565b35906001600160a01b03821682036100e357565b6001600160e01b03198116036100e357565b346100e35760203660031901126100e357602060043561015981610128565b63ffffffff60e01b16636cdb3d1360e11b8114908115610197575b8115610186575b506040519015158152f35b6301ffc9a760e01b1490503861017b565b6303a24d0760e21b81149150610174565b919082519283825260005b8481106101d4575050826000602080949584010152601f8019910116010190565b806020809284010151828286010152016101b3565b9060206101fa9281815201906101a8565b90565b346100e35760203660031901126100e35760405160006002548060011c90600181169081156102e9575b6020831082146102d55782855260208501919081156102bc5750600114610269575b6102658461025981860382610309565b604051918291826101e9565b0390f35b600260009081529250907f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8184106102a85750500161025982610249565b805484840152602090930192600101610295565b60ff191682525090151560051b01905061025982610249565b634e487b7160e01b84526022600452602484fd5b91607f1691610227565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761032b57604052565b6102f3565b67ffffffffffffffff811161032b5760051b60200190565b9080601f830112156100e357813561035f81610330565b9261036d6040519485610309565b81845260208085019260051b8201019283116100e357602001905b8282106103955750505090565b8135815260209182019101610388565b67ffffffffffffffff811161032b57601f01601f191660200190565b81601f820112156100e3578035906103d8826103a5565b926103e66040519485610309565b828452602083830101116100e357816000926020809301838601378301015290565b346100e35760a03660031901126100e3576104216100e8565b6104296100fe565b9060443567ffffffffffffffff81116100e35761044a903690600401610348565b60643567ffffffffffffffff81116100e35761046a903690600401610348565b906084359367ffffffffffffffff85116100e35761048f6104959536906004016103c1565b936107ba565b005b906020808351928381520192019060005b8181106104b55750505090565b82518452602093840193909201916001016104a8565b9060206101fa928181520190610497565b346100e35760403660031901126100e35760043567ffffffffffffffff81116100e357366023820112156100e35780600401359061051982610330565b916105276040519384610309565b8083526024602084019160051b830101913683116100e357602401905b828210610585578360243567ffffffffffffffff81116100e35761026591610573610579923690600401610348565b90610843565b604051918291826104cb565b6020809161059284610114565b815201910190610544565b346100e35760403660031901126100e3576105b66100e8565b6024358015158082036100e3576001600160a01b038316928315610642573360009081526001602090815260408083206001600160a01b039094168352929052209060ff801983541691161790557f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c316040518061063d339482919091602081019215159052565b0390a3005b62ced3e160e81b600052600060045260246000fd5b346100e35760403660031901126100e357602060ff6106a86106776100e8565b61067f6100fe565b6001600160a01b0391821660009081526001865260408082209290931681526020919091522090565b54166040519015158152f35b346100e35760a03660031901126100e3576106cd6100e8565b6106d56100fe565b60643560443560843567ffffffffffffffff81116100e3576106fb9036906004016103c1565b926001600160a01b0385163381141580610796575b61077e576001600160a01b0382161561076857156107535761049594604051926001845260208401526040830193600185526060840152608083016040526108fb565b626a0d4560e21b600052600060045260246000fd5b632bfa23e760e11b600052600060045260246000fd5b63711bec9160e11b6000523360045260245260446000fd5b50600081815260016020908152604080832033845290915290205460ff1615610710565b939291906001600160a01b03851633811415806107f5575b61077e576001600160a01b038216156107685715610753576107f3946108fb565b565b50600081815260016020908152604080832033845290915290205460ff16156107d2565b805182101561082d5760209160051b010190565b634e487b7160e01b600052603260045260246000fd5b919091805183518082036108e457505080519061085f82610330565b9161086d6040519384610309565b80835261087c601f1991610330565b0136602084013760005b81518110156108dd57806108cc60019260051b60208082870101519189010151906000918252602082815260408084206001600160a01b03909316845291905290205490565b6108d68286610819565b5201610886565b5090925050565b635b05999160e01b60005260045260245260446000fd5b9493929091938451825190818103610afb5750506001600160a01b0386811695861515959185168015159391929060005b8451811015610a2d578060051b90898988602080868b010151958c010151926109a6575b93600194610962575b5050500161092c565b61099c9161097d610994926000526000602052604060002090565b9060018060a01b0316600052602052604060002090565b918254610b12565b9055388981610959565b505090916109c28d61097d836000526000602052604060002090565b548281106109f6578291898f6109ed600197968f95039161097d856000526000602052604060002090565b55909450610950565b6040516303dee4c560e01b81526001600160a01b038f16600482015260248101919091526044810183905260648101829052608490fd5b509198959392979096506001885114600014610ac15760208881015186820151604080519283529282015233917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6291a45b610a8a575b5050505050565b8451600103610ab057602080610aa69601519201519233610d27565b3880808080610a83565b610abc94919233610bf2565b610aa6565b6040517f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb339180610af3898d83610b35565b0390a4610a7e565b635b05999160e01b60005260045260245260446000fd5b91908201809211610b1f57565b634e487b7160e01b600052601160045260246000fd5b9091610b4c6101fa93604084526040840190610497565b916020818403910152610497565b908160209103126100e357516101fa81610128565b6001600160a01b0391821681529116602082015260a0604082018190526101fa9491939192610bb49291610ba69190860190610497565b908482036060860152610497565b9160808184039101526101a8565b3d15610bed573d90610bd3826103a5565b91610be16040519384610309565b82523d6000602084013e565b606090565b9091949293853b610c06575b505050505050565b602093610c2891604051968795869563bc197c8160e01b875260048701610b6f565b038160006001600160a01b0387165af160009181610cbd575b50610c7d5750610c4f610bc2565b8051919082610c7657632bfa23e760e11b6000526001600160a01b03821660045260246000fd5b6020915001fd5b6001600160e01b0319166343e6837f60e01b01610ca05750388080808080610bfe565b632bfa23e760e11b6000526001600160a01b031660045260246000fd5b610ce091925060203d602011610ce7575b610cd88183610309565b810190610b5a565b9038610c41565b503d610cce565b6001600160a01b039182168152911660208201526040810191909152606081019190915260a0608082018190526101fa929101906101a8565b9091949293853b610d3a57505050505050565b602093610d5c91604051968795869563f23a6e6160e01b875260048701610cee565b038160006001600160a01b0387165af160009181610da6575b50610d835750610c4f610bc2565b6001600160e01b031916630dc5919f60e01b01610ca05750388080808080610bfe565b610dc091925060203d602011610ce757610cd88183610309565b9038610d7556fea264697066735822122054adbff72471b21ce9e6c594c4cafd83adb5d1e0b90ae748d12eab911569341364736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xFDD58E EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x91 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x87 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x78 JUMPI PUSH4 0xF242432A EQ PUSH2 0x73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6B4 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH2 0x59D JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH2 0x408 JUMP JUMPDEST PUSH2 0x1FD JUMP JUMPDEST PUSH2 0x13A JUMP JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH1 0x20 PUSH2 0xDA PUSH2 0xB4 PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE3 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE3 JUMPI JUMP JUMPDEST CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xE3 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND SUB PUSH2 0xE3 JUMPI JUMP JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH2 0x159 DUP2 PUSH2 0x128 JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x197 JUMPI JUMPDEST DUP2 ISZERO PUSH2 0x186 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP CODESIZE PUSH2 0x17B JUMP JUMPDEST PUSH4 0x3A24D07 PUSH1 0xE2 SHL DUP2 EQ SWAP2 POP PUSH2 0x174 JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1D4 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x1B3 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x1FA SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x1A8 JUMP JUMPDEST SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x2 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x2E9 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP3 EQ PUSH2 0x2D5 JUMPI DUP3 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP2 SWAP1 DUP2 ISZERO PUSH2 0x2BC JUMPI POP PUSH1 0x1 EQ PUSH2 0x269 JUMPI JUMPDEST PUSH2 0x265 DUP5 PUSH2 0x259 DUP2 DUP7 SUB DUP3 PUSH2 0x309 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1E9 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 POP SWAP1 PUSH32 0x405787FA12A823E0F2B7631CC41B3BA8828B3321CA811111FA75CD3AA3BB5ACE JUMPDEST DUP2 DUP5 LT PUSH2 0x2A8 JUMPI POP POP ADD PUSH2 0x259 DUP3 PUSH2 0x249 JUMP JUMPDEST DUP1 SLOAD DUP5 DUP5 ADD MSTORE PUSH1 0x20 SWAP1 SWAP4 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x295 JUMP JUMPDEST PUSH1 0xFF NOT AND DUP3 MSTORE POP SWAP1 ISZERO ISZERO PUSH1 0x5 SHL ADD SWAP1 POP PUSH2 0x259 DUP3 PUSH2 0x249 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x227 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x32B JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x2F3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x32B JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0xE3 JUMPI DUP2 CALLDATALOAD PUSH2 0x35F DUP2 PUSH2 0x330 JUMP JUMPDEST SWAP3 PUSH2 0x36D PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x309 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0xE3 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x395 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x388 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x32B JUMPI PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xE3 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH2 0x3D8 DUP3 PUSH2 0x3A5 JUMP JUMPDEST SWAP3 PUSH2 0x3E6 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x309 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xE3 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH2 0x421 PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x429 PUSH2 0xFE JUMP JUMPDEST SWAP1 PUSH1 0x44 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE3 JUMPI PUSH2 0x44A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x348 JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE3 JUMPI PUSH2 0x46A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x348 JUMP JUMPDEST SWAP1 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH8 0xFFFFFFFFFFFFFFFF DUP6 GT PUSH2 0xE3 JUMPI PUSH2 0x48F PUSH2 0x495 SWAP6 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3C1 JUMP JUMPDEST SWAP4 PUSH2 0x7BA JUMP JUMPDEST STOP JUMPDEST SWAP1 PUSH1 0x20 DUP1 DUP4 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP3 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x4B5 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP3 MLOAD DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4A8 JUMP JUMPDEST SWAP1 PUSH1 0x20 PUSH2 0x1FA SWAP3 DUP2 DUP2 MSTORE ADD SWAP1 PUSH2 0x497 JUMP JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH1 0x4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE3 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xE3 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH2 0x519 DUP3 PUSH2 0x330 JUMP JUMPDEST SWAP2 PUSH2 0x527 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x309 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x24 PUSH1 0x20 DUP5 ADD SWAP2 PUSH1 0x5 SHL DUP4 ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xE3 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x585 JUMPI DUP4 PUSH1 0x24 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE3 JUMPI PUSH2 0x265 SWAP2 PUSH2 0x573 PUSH2 0x579 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x348 JUMP JUMPDEST SWAP1 PUSH2 0x843 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x4CB JUMP JUMPDEST PUSH1 0x20 DUP1 SWAP2 PUSH2 0x592 DUP5 PUSH2 0x114 JUMP JUMPDEST DUP2 MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x544 JUMP JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH2 0x5B6 PUSH2 0xE8 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 DUP3 SUB PUSH2 0xE3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP3 DUP4 ISZERO PUSH2 0x642 JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 PUSH1 0x40 MLOAD DUP1 PUSH2 0x63D CALLER SWAP5 DUP3 SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 ADD SWAP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST SUB SWAP1 LOG3 STOP JUMPDEST PUSH3 0xCED3E1 PUSH1 0xE8 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH2 0x6A8 PUSH2 0x677 PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x67F PUSH2 0xFE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 DUP7 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP3 SWAP1 SWAP4 AND DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 JUMP JUMPDEST SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xE3 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xE3 JUMPI PUSH2 0x6CD PUSH2 0xE8 JUMP JUMPDEST PUSH2 0x6D5 PUSH2 0xFE JUMP JUMPDEST PUSH1 0x64 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x84 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0xE3 JUMPI PUSH2 0x6FB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x3C1 JUMP JUMPDEST SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER DUP2 EQ ISZERO DUP1 PUSH2 0x796 JUMPI JUMPDEST PUSH2 0x77E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x768 JUMPI ISZERO PUSH2 0x753 JUMPI PUSH2 0x495 SWAP5 PUSH1 0x40 MLOAD SWAP3 PUSH1 0x1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD SWAP4 PUSH1 0x1 DUP6 MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD PUSH1 0x40 MSTORE PUSH2 0x8FB JUMP JUMPDEST PUSH3 0x6A0D45 PUSH1 0xE2 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x711BEC91 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x710 JUMP JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER DUP2 EQ ISZERO DUP1 PUSH2 0x7F5 JUMPI JUMPDEST PUSH2 0x77E JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x768 JUMPI ISZERO PUSH2 0x753 JUMPI PUSH2 0x7F3 SWAP5 PUSH2 0x8FB JUMP JUMPDEST JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7D2 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x82D JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 DUP1 MLOAD DUP4 MLOAD DUP1 DUP3 SUB PUSH2 0x8E4 JUMPI POP POP DUP1 MLOAD SWAP1 PUSH2 0x85F DUP3 PUSH2 0x330 JUMP JUMPDEST SWAP2 PUSH2 0x86D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x309 JUMP JUMPDEST DUP1 DUP4 MSTORE PUSH2 0x87C PUSH1 0x1F NOT SWAP2 PUSH2 0x330 JUMP JUMPDEST ADD CALLDATASIZE PUSH1 0x20 DUP5 ADD CALLDATACOPY PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x8DD JUMPI DUP1 PUSH2 0x8CC PUSH1 0x1 SWAP3 PUSH1 0x5 SHL PUSH1 0x20 DUP1 DUP3 DUP8 ADD ADD MLOAD SWAP2 DUP10 ADD ADD MLOAD SWAP1 PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8D6 DUP3 DUP7 PUSH2 0x819 JUMP JUMPDEST MSTORE ADD PUSH2 0x886 JUMP JUMPDEST POP SWAP1 SWAP3 POP POP JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST SWAP5 SWAP4 SWAP3 SWAP1 SWAP2 SWAP4 DUP5 MLOAD DUP3 MLOAD SWAP1 DUP2 DUP2 SUB PUSH2 0xAFB JUMPI POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP6 DUP7 ISZERO ISZERO SWAP6 SWAP2 DUP6 AND DUP1 ISZERO ISZERO SWAP4 SWAP2 SWAP3 SWAP1 PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xA2D JUMPI DUP1 PUSH1 0x5 SHL SWAP1 DUP10 DUP10 DUP9 PUSH1 0x20 DUP1 DUP7 DUP12 ADD ADD MLOAD SWAP6 DUP13 ADD ADD MLOAD SWAP3 PUSH2 0x9A6 JUMPI JUMPDEST SWAP4 PUSH1 0x1 SWAP5 PUSH2 0x962 JUMPI JUMPDEST POP POP POP ADD PUSH2 0x92C JUMP JUMPDEST PUSH2 0x99C SWAP2 PUSH2 0x97D PUSH2 0x994 SWAP3 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP3 SLOAD PUSH2 0xB12 JUMP JUMPDEST SWAP1 SSTORE CODESIZE DUP10 DUP2 PUSH2 0x959 JUMP JUMPDEST POP POP SWAP1 SWAP2 PUSH2 0x9C2 DUP14 PUSH2 0x97D DUP4 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SLOAD DUP3 DUP2 LT PUSH2 0x9F6 JUMPI DUP3 SWAP2 DUP10 DUP16 PUSH2 0x9ED PUSH1 0x1 SWAP8 SWAP7 DUP16 SWAP6 SUB SWAP2 PUSH2 0x97D DUP6 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SSTORE SWAP1 SWAP5 POP PUSH2 0x950 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x3DEE4C5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP16 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST POP SWAP2 SWAP9 SWAP6 SWAP4 SWAP3 SWAP8 SWAP1 SWAP7 POP PUSH1 0x1 DUP9 MLOAD EQ PUSH1 0x0 EQ PUSH2 0xAC1 JUMPI PUSH1 0x20 DUP9 DUP2 ADD MLOAD DUP7 DUP3 ADD MLOAD PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP3 DUP3 ADD MSTORE CALLER SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 LOG4 JUMPDEST PUSH2 0xA8A JUMPI JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP5 MLOAD PUSH1 0x1 SUB PUSH2 0xAB0 JUMPI PUSH1 0x20 DUP1 PUSH2 0xAA6 SWAP7 ADD MLOAD SWAP3 ADD MLOAD SWAP3 CALLER PUSH2 0xD27 JUMP JUMPDEST CODESIZE DUP1 DUP1 DUP1 DUP1 PUSH2 0xA83 JUMP JUMPDEST PUSH2 0xABC SWAP5 SWAP2 SWAP3 CALLER PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB CALLER SWAP2 DUP1 PUSH2 0xAF3 DUP10 DUP14 DUP4 PUSH2 0xB35 JUMP JUMPDEST SUB SWAP1 LOG4 PUSH2 0xA7E JUMP JUMPDEST PUSH4 0x5B059991 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0xB1F JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 SWAP2 PUSH2 0xB4C PUSH2 0x1FA SWAP4 PUSH1 0x40 DUP5 MSTORE PUSH1 0x40 DUP5 ADD SWAP1 PUSH2 0x497 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x497 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0xE3 JUMPI MLOAD PUSH2 0x1FA DUP2 PUSH2 0x128 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1FA SWAP5 SWAP2 SWAP4 SWAP2 SWAP3 PUSH2 0xBB4 SWAP3 SWAP2 PUSH2 0xBA6 SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x497 JUMP JUMPDEST SWAP1 DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x497 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP2 DUP5 SUB SWAP2 ADD MSTORE PUSH2 0x1A8 JUMP JUMPDEST RETURNDATASIZE ISZERO PUSH2 0xBED JUMPI RETURNDATASIZE SWAP1 PUSH2 0xBD3 DUP3 PUSH2 0x3A5 JUMP JUMPDEST SWAP2 PUSH2 0xBE1 PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x309 JUMP JUMPDEST DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY JUMP JUMPDEST PUSH1 0x60 SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP3 SWAP4 DUP6 EXTCODESIZE PUSH2 0xC06 JUMPI JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH2 0xC28 SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0xB6F JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xCBD JUMPI JUMPDEST POP PUSH2 0xC7D JUMPI POP PUSH2 0xC4F PUSH2 0xBC2 JUMP JUMPDEST DUP1 MLOAD SWAP2 SWAP1 DUP3 PUSH2 0xC76 JUMPI PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 SWAP2 POP ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0x43E6837F PUSH1 0xE0 SHL ADD PUSH2 0xCA0 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0xBFE JUMP JUMPDEST PUSH4 0x2BFA23E7 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xCE0 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCE7 JUMPI JUMPDEST PUSH2 0xCD8 DUP2 DUP4 PUSH2 0x309 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0xB5A JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xC41 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH2 0x1FA SWAP3 SWAP2 ADD SWAP1 PUSH2 0x1A8 JUMP JUMPDEST SWAP1 SWAP2 SWAP5 SWAP3 SWAP4 DUP6 EXTCODESIZE PUSH2 0xD3A JUMPI POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 SWAP4 PUSH2 0xD5C SWAP2 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x4 DUP8 ADD PUSH2 0xCEE JUMP JUMPDEST SUB DUP2 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND GAS CALL PUSH1 0x0 SWAP2 DUP2 PUSH2 0xDA6 JUMPI JUMPDEST POP PUSH2 0xD83 JUMPI POP PUSH2 0xC4F PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xDC5919F PUSH1 0xE0 SHL ADD PUSH2 0xCA0 JUMPI POP CODESIZE DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0xBFE JUMP JUMPDEST PUSH2 0xDC0 SWAP2 SWAP3 POP PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xCE7 JUMPI PUSH2 0xCD8 DUP2 DUP4 PUSH2 0x309 JUMP JUMPDEST SWAP1 CODESIZE PUSH2 0xD75 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xAD 0xBF 0xF7 0x24 PUSH18 0xB21CE9E6C594C4CAFD83ADB5D1E0B90AE748 0xD1 0x2E 0xAB SWAP2 ISZERO PUSH10 0x341364736F6C63430008 SHR STOP CALLER ","sourceMap":"119:198:33:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;-1:-1:-1;;119:198:33;;;;;2290:22:4;119:198:33;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;2290:22:4;119:198:33;;;;;;;;;;;;;;;-1:-1:-1;;;;;119:198:33;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;119:198:33;;;;;;:::o;:::-;;;-1:-1:-1;;;;;119:198:33;;;;;;:::o;:::-;-1:-1:-1;;;;;;119:198:33;;;;;:::o;:::-;;;;;;-1:-1:-1;;119:198:33;;;;;;;;;;:::i;:::-;;;;;1497:26:4;;;1482:41;;:109;;;;;119:198:33;1482:161:4;;;;119:198:33;;;;;;;;;;1482:161:4;-1:-1:-1;;;829:40:27;;-1:-1:-1;1482:161:4;;;:109;-1:-1:-1;;;1539:52:4;;;-1:-1:-1;1482:109:4;;119:198:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;-1:-1:-1;;119:198:33;;;;;;-1:-1:-1;2141:4:4;119:198:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;2141:4:4;119:198:33;;;;;-1:-1:-1;119:198:33;;;;;;;;-1:-1:-1;;119:198:33;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;119:198:33;;;-1:-1:-1;119:198:33;;;;;;;-1:-1:-1;119:198:33;;;;;-1:-1:-1;;;119:198:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;119:198:33;;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;119:198:33;;;;;;;;;;;;;;:::o;:::-;;;;;;-1:-1:-1;;119:198:33;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;119:198:33;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;119:198:33;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;119:198:33;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;119:198:33;;;13191:22:4;;13187:94;;735:10:21;-1:-1:-1;119:198:33;;;13290:18:4;119:198:33;;;;;;;;-1:-1:-1;;;;;119:198:33;;;;;;;;;;;;;;;;;;;;;13351:41:4;119:198:33;;735:10:21;13351:41:4;735:10:21;13351:41:4;;119:198:33;;;;;;;;;;;;13351:41:4;;;;119:198:33;13187:94:4;13236:34;;;-1:-1:-1;13236:34:4;-1:-1:-1;119:198:33;;;-1:-1:-1;13236:34:4;119:198:33;;;;;;-1:-1:-1;;119:198:33;;;;;;3355:37:4;119:198:33;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;119:198:33;;;-1:-1:-1;119:198:33;;;;;;;;;;;;;;;;-1:-1:-1;119:198:33;;;;;;;3355:37:4;119:198:33;;;;;;;;;;;;;;;;-1:-1:-1;;119:198:33;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:::i;:::-;;-1:-1:-1;;;;;119:198:33;;735:10:21;3600:14:4;;;;:49;;119:198:33;3596:129:4;;-1:-1:-1;;;;;119:198:33;;8089:16:4;8085:88;;8186:18;8182:88;;8418:4;13683:648;119:198:33;13683:648:4;;;;;119:198:33;13683:648:4;;;119:198:33;13683:648:4;;;;;;119:198:33;13683:648:4;;;119:198:33;13683:648:4;;119:198:33;13683:648:4;8418:4;:::i;8182:88::-;8227:32;;;-1:-1:-1;8227:32:4;-1:-1:-1;119:198:33;;;-1:-1:-1;8227:32:4;8085:88;8128:34;;;-1:-1:-1;8128:34:4;-1:-1:-1;119:198:33;;;-1:-1:-1;8128:34:4;3596:129;3672:42;;;-1:-1:-1;3672:42:4;735:10:21;119:198:33;;;;;-1:-1:-1;3672:42:4;3600:49;-1:-1:-1;;119:198:33;;;3355:18:4;119:198:33;;;;;;;;735:10:21;119:198:33;;;;;;;;;;3618:31:4;3600:49;;3820:429;;;;;-1:-1:-1;;;;;119:198:33;;735:10:21;4057:14:4;;;;:49;;3820:429;4053:129;;-1:-1:-1;;;;;119:198:33;;9024:16:4;9020:88;;9121:18;9117:88;;9264:4;;;:::i;:::-;3820:429::o;4057:49::-;-1:-1:-1;;119:198:33;;;3355:18:4;119:198:33;;;;;;;;735:10:21;119:198:33;;;;;;;;;;4075:31:4;4057:49;;119:198:33;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;2476:552:4;;;;119:198:33;;;;2632:29:4;;;2628:121;;119:198:33;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;2874:3:4;119:198:33;;2853:19:4;;;;;17194:82:19;2912:68:4;119:198:33;17194:82:19;;;119:198:33;17194:82:19;;;;;;17992;;;;;2912:68:4;2290:9;119:198:33;;;;;;;;;;;-1:-1:-1;;;;;119:198:33;;;;;;;;;;;2187:132:4;;2912:68;2893:87;;;;:::i;:::-;119:198:33;;2838:13:4;;2853:19;-1:-1:-1;2853:19:4;;-1:-1:-1;;2476:552:4:o;2628:121::-;2684:54;;;-1:-1:-1;2684:54:4;;119:198:33;;;;-1:-1:-1;2684:54:4;6810:700;;;;;;;119:198:33;;;;5071:27:4;;;;5067:117;;-1:-1:-1;;;;;;;119:198:33;;;;5406:18:4;;;;119:198:33;;;5840:16:4;;;;5241:13;;119:198:33;-1:-1:-1;5272:3:4;119:198:33;;5256:14:4;;;;;17992:82:19;;;;;;;;;;;;;;;;;;;5402:420:4;;;5272:3;5836:81;119:198:33;5836:81:4;;;5272:3;;;;119:198:33;5241:13:4;;5836:81;5876:26;:13;;:17;:13;5253:1;119:198:33;5253:1:4;119:198:33;;;5253:1:4;119:198:33;;;5876:13:4;119:198:33;;;;;;;;;;;;;;;;5876:17:4;119:198:33;;;5876:26:4;:::i;:::-;119:198:33;;5836:81:4;;;;;5402:420;5466:13;;;;:19;:13;;;5253:1;119:198:33;5253:1:4;119:198:33;;;5253:1:4;119:198:33;;;5466:19:4;119:198:33;5507:19:4;;;5503:129;;119:198:33;;;;5748:19:4;119:198:33;;;;;;5748:13:4;;;5253:1;119:198:33;5253:1:4;119:198:33;;;5253:1:4;119:198:33;;;5748:19:4;119:198:33;5402:420:4;;;;;5503:129;119:198:33;;-1:-1:-1;;;5557:56:4;;-1:-1:-1;;;;;119:198:33;;5557:56:4;;;119:198:33;;;;;;;;;;;;;;;;;;;;;;5557:56:4;5256:14;;;;;;;;;;;119:198:33;;;5941:15:4;5937:288;119:198:33;;;17992:82:19;;;;;;;;;119:198:33;;;;;;;;;;735:10:21;;6087:45:4;;;5937:288;7051:453;;5937:288;6810:700;;;;;:::o;7051:453::-;119:198:33;;;7136:15:4;119:198:33;;17992:82:19;;7356:4:4;17992:82:19;;;;;;735:10:21;;7356:4:4;:::i;:::-;7051:453;;;;;;;7132:362;7474:4;735:10:21;;;;7474:4:4;:::i;:::-;7132:362;;5937:288;119:198:33;;6168:46:4;735:10:21;6168:46:4;;;;;;;:::i;:::-;;;;5937:288;;5067:117;-1:-1:-1;;;;5121:52:4;;119:198:33;;;;-1:-1:-1;5121:52:4;119:198:33;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;119:198:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;-1:-1:-1;119:198:33;;;;:::o;:::-;;;:::o;2523:1028:9:-;;;;;;2747:14;;2743:802;;2523:1028;;;;;;;:::o;2743:802::-;2785:78;119:198:33;2785:78:9;119:198:33;;;;;;;;;;;2785:78:9;;;;;;:::i;:::-;;119:198:33;2764:1:9;-1:-1:-1;;;;;119:198:33;;2785:78:9;;2764:1;;2785:78;;;2743:802;-1:-1:-1;2781:754:9;;3147:388;;;:::i;:::-;119:198:33;;;;3197:18:9;;;-1:-1:-1;;;2764:1:9;3302:41;-1:-1:-1;;;;;119:198:33;;2785:78:9;119:198:33;;-1:-1:-1;5121:52:4;3193:328:9;2785:78;3390:113;;;;2781:754;-1:-1:-1;;;;;;119:198:33;-1:-1:-1;;;2942:60:9;2938:194;;2781:754;2743:802;;;;;;;;2938:194;-1:-1:-1;;;2764:1:9;3072:41;-1:-1:-1;;;;;119:198:33;2785:78:9;119:198:33;;-1:-1:-1;5121:52:4;2785:78:9;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;119:198:33;-1:-1:-1;;;;;119:198:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1006:961:9:-;;;;;;1205:14;;1201:760;;1006:961;;;;;;:::o;1201:760::-;1243:71;119:198:33;1243:71:9;119:198:33;;;;;;;;;;;1243:71:9;;;;;;:::i;:::-;;119:198:33;1222:1:9;-1:-1:-1;;;;;119:198:33;;1243:71:9;;1222:1;;1243:71;;;1201:760;-1:-1:-1;1239:712:9;;1563:388;;;:::i;1239:712::-;-1:-1:-1;;;;;;119:198:33;-1:-1:-1;;;1363:55:9;1359:189;;1239:712;1201:760;;;;;;;;1243:71;;;;;;;;;;;;;;;:::i;:::-;;;;"},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gameitem.sol\":\"GameItem\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0xb90916a13c108291699c6e6ddb4b1277ea860dfac118a60568a6f432baedcf68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90719e236eafdcbdf56d830f460714668f95eb76c534edf140bb2948d9f8a048\",\"dweb:/ipfs/QmU8QmdKUHBejNeYGuJ913L7xhcysyr5MZLnNnPy9Jqrdx\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x98c32de9b02f43eba7c0aba9fadf331cffb35a8d2076dce1d556c8f2cad704aa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38f68f76e741cce3ca4e0f8ece5ab9d69a203829311a403bafc8f7b95a7e6d63\",\"dweb:/ipfs/QmZ8PrDXU5DiZ7fzEoRN7vHMQdemtsqvYVV5AdvAnScS4o\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0xaeca1511f7da49bdb16e44aa0f09dca76b51ba079bd068b2f80b8fe6d22b5fa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://542fe084e72e14f4298954f70c407d5795c1207a02c049f9b91e15f3b9a525a5\",\"dweb:/ipfs/QmbPQMVUVZBE9R9Va6FNfZBTrUY51nrjm8qxpeoAoRrPrQ\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/Gameitem.sol\":{\"keccak256\":\"0x1eca34799b9847fa8080e0b688ff7b07845623f3bb1f1d0cacb801fe6c45a4d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91160f97758632bb4eb6e110162b395580c605d15264fb6d7be7d1e8b4b64337\",\"dweb:/ipfs/QmQxobwwdvH6Rb8Efxci6nEg9LSXTRRUP9KP7Pkq1BbK6k\"]}},\"version\":1}"}},"contracts/Gametoken.sol":{"GameToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080604052346103c657604080519081016001600160401b038111828210176102d1576040908152600a82526923b0b6b2902a37b5b2b760b11b602083015280519081016001600160401b038111828210176102d157604052600281526111d560f21b602082015281516001600160401b0381116102d157600354600181811c911680156103bc575b60208210146102b157601f8111610357575b50602092601f82116001146102f257928192936000926102e7575b50508160011b916000199060031b1c1916176003555b80516001600160401b0381116102d157600454600181811c911680156102c7575b60208210146102b157601f811161024c575b50602091601f82116001146101e8579181926000926101dd575b50508160011b916000199060031b1c1916176004555b33156101c75760025469d3c21bcecceda100000081018091116101b1576002556000338152806020526040812069d3c21bcecceda100000081540190556040519069d3c21bcecceda100000082527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a360405161065490816103cc8239f35b634e487b7160e01b600052601160045260246000fd5b63ec442f0560e01b600052600060045260246000fd5b015190503880610118565b601f198216926004600052806000209160005b8581106102345750836001951061021b575b505050811b0160045561012e565b015160001960f88460031b161c1916905538808061020d565b919260206001819286850151815501940192016101fb565b60046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c810191602084106102a7575b601f0160051c01905b81811061029b57506100fe565b6000815560010161028e565b9091508190610285565b634e487b7160e01b600052602260045260246000fd5b90607f16906100ec565b634e487b7160e01b600052604160045260246000fd5b0151905038806100b5565b601f198216936003600052806000209160005b86811061033f5750836001959610610326575b505050811b016003556100cb565b015160001960f88460031b161c19169055388080610318565b91926020600181928685015181550194019201610305565b60036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c810191602084106103b2575b601f0160051c01905b8181106103a6575061009a565b60008155600101610399565b9091508190610390565b90607f1690610088565b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461041157508063095ea7b31461038b57806318160ddd1461036d57806323b872dd14610280578063313ce5671461026457806370a082311461022a57806395d89b4114610109578063a9059cbb146100d85763dd62ed3e1461008257600080fd5b346100d35760403660031901126100d35761009b61052d565b6100a3610543565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100d35760403660031901126100d3576100fe6100f461052d565b6024359033610559565b602060405160018152f35b346100d35760003660031901126100d35760405160006004548060011c90600181168015610220575b60208310811461020c578285529081156101f05750600114610199575b50819003601f01601f191681019067ffffffffffffffff8211818310176101835761017f829182604052826104e4565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106101da5750602091508201018261014f565b60018160209254838588010152019101906101c5565b90506020925060ff191682840152151560051b8201018261014f565b634e487b7160e01b84526022600452602484fd5b91607f1691610132565b346100d35760203660031901126100d3576001600160a01b0361024b61052d565b1660005260006020526020604060002054604051908152f35b346100d35760003660031901126100d357602060405160128152f35b346100d35760603660031901126100d35761029961052d565b6102a1610543565b6001600160a01b03821660008181526001602090815260408083203384529091529020549092604435929160001981106102e1575b506100fe9350610559565b83811061035057841561033a573315610324576100fe946000526001602052604060002060018060a01b03331660005260205283604060002091039055846102d6565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b346100d35760003660031901126100d3576020600254604051908152f35b346100d35760403660031901126100d3576103a461052d565b60243590331561033a576001600160a01b031690811561032457336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100d35760003660031901126100d35760006003548060011c906001811680156104da575b60208310811461020c578285529081156101f057506001146104835750819003601f01601f191681019067ffffffffffffffff8211818310176101835761017f829182604052826104e4565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b8282106104c45750602091508201018261014f565b60018160209254838588010152019101906104af565b91607f1691610437565b91909160208152825180602083015260005b818110610517575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016104f6565b600435906001600160a01b03821682036100d357565b602435906001600160a01b03821682036100d357565b6001600160a01b0316908115610608576001600160a01b03169182156105f25760008281528060205260408120548281106105d85791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b63ec442f0560e01b600052600060045260246000fd5b634b637e8f60e11b600052600060045260246000fdfea2646970667358221220a463daaf0d16f8a2a779ca1d1fc0b3f20cd8f3f2bc1f2e59ee218495f47ac04464736f6c634300081c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x3C6 JUMPI PUSH1 0x40 DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x2D1 JUMPI PUSH1 0x40 SWAP1 DUP2 MSTORE PUSH1 0xA DUP3 MSTORE PUSH10 0x23B0B6B2902A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x20 DUP4 ADD MSTORE DUP1 MLOAD SWAP1 DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR PUSH2 0x2D1 JUMPI PUSH1 0x40 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x11D5 PUSH1 0xF2 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D1 JUMPI PUSH1 0x3 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x3BC JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x2B1 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x357 JUMPI JUMPDEST POP PUSH1 0x20 SWAP3 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x2F2 JUMPI SWAP3 DUP2 SWAP3 SWAP4 PUSH1 0x0 SWAP3 PUSH2 0x2E7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2D1 JUMPI PUSH1 0x4 SLOAD PUSH1 0x1 DUP2 DUP2 SHR SWAP2 AND DUP1 ISZERO PUSH2 0x2C7 JUMPI JUMPDEST PUSH1 0x20 DUP3 LT EQ PUSH2 0x2B1 JUMPI PUSH1 0x1F DUP2 GT PUSH2 0x24C JUMPI JUMPDEST POP PUSH1 0x20 SWAP2 PUSH1 0x1F DUP3 GT PUSH1 0x1 EQ PUSH2 0x1E8 JUMPI SWAP2 DUP2 SWAP3 PUSH1 0x0 SWAP3 PUSH2 0x1DD JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x4 SSTORE JUMPDEST CALLER ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x2 SLOAD PUSH10 0xD3C21BCECCEDA1000000 DUP2 ADD DUP1 SWAP2 GT PUSH2 0x1B1 JUMPI PUSH1 0x2 SSTORE PUSH1 0x0 CALLER DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH10 0xD3C21BCECCEDA1000000 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH10 0xD3C21BCECCEDA1000000 DUP3 MSTORE PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x20 CALLER SWAP4 LOG3 PUSH1 0x40 MLOAD PUSH2 0x654 SWAP1 DUP2 PUSH2 0x3CC DUP3 CODECOPY RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x118 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP3 PUSH1 0x4 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT PUSH2 0x234 JUMPI POP DUP4 PUSH1 0x1 SWAP6 LT PUSH2 0x21B JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x4 SSTORE PUSH2 0x12E JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x20D JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x1FB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x2A7 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x29B JUMPI POP PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x28E JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x285 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0xEC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0xB5 JUMP JUMPDEST PUSH1 0x1F NOT DUP3 AND SWAP4 PUSH1 0x3 PUSH1 0x0 MSTORE DUP1 PUSH1 0x0 KECCAK256 SWAP2 PUSH1 0x0 JUMPDEST DUP7 DUP2 LT PUSH2 0x33F JUMPI POP DUP4 PUSH1 0x1 SWAP6 SWAP7 LT PUSH2 0x326 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 SSTORE PUSH2 0xCB JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x318 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x305 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP5 LT PUSH2 0x3B2 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x3A6 JUMPI POP PUSH2 0x9A JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x399 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x390 JUMP JUMPDEST SWAP1 PUSH1 0x7F AND SWAP1 PUSH2 0x88 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x411 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD8 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x9B PUSH2 0x52D JUMP JUMPDEST PUSH2 0xA3 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0xFE PUSH2 0xF4 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x559 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x220 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x20C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x199 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x183 JUMPI PUSH2 0x17F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x4E4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1DA JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x132 JUMP JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x24B PUSH2 0x52D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x299 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x2E1 JUMPI JUMPDEST POP PUSH2 0xFE SWAP4 POP PUSH2 0x559 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x350 JUMPI DUP5 ISZERO PUSH2 0x33A JUMPI CALLER ISZERO PUSH2 0x324 JUMPI PUSH2 0xFE SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x2D6 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x3A4 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x33A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x324 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x4DA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x20C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x483 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x183 JUMPI PUSH2 0x17F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4C4 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x4AF JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x437 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x517 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x608 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x5D8 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 PUSH4 0xDAAF0D16 0xF8 LOG2 0xA7 PUSH26 0xCA1D1FC0B3F20CD8F3F2BC1F2E59EE218495F47AC04464736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"115:148:34:-:0;;;;;;;;;;;;-1:-1:-1;;;;;115:148:34;;;;;;;;;;;;;;;-1:-1:-1;;;115:148:34;;;;;;;;;-1:-1:-1;;;;;115:148:34;;;;;;;;;;;;;-1:-1:-1;;;115:148:34;;;;;;-1:-1:-1;;;;;115:148:34;;;;1648:13:10;115:148:34;;;;;;;;;;;-1:-1:-1;115:148:34;;;;;;;;;;;-1:-1:-1;115:148:34;;;;;;;;;;;;;;-1:-1:-1;115:148:34;;;;;;;;;;;;;1648:13:10;115:148:34;;;;;1648:13:10;115:148:34;;;;-1:-1:-1;;;;;115:148:34;;;;1671:17:10;115:148:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:148:34;;;;;;;;;;;;;1648:13:10;115:148:34;;;;;1671:17:10;115:148:34;;205:10;7432:21:10;7428:91;;115:148:34;;217:18;115:148;;;;;;;;;-1:-1:-1;205:10:34;115:148;;;;;;;;217:18;115:148;;;;;;;;217:18;115:148;;6987:25:10;115:148:34;205:10;6987:25:10;;115:148:34;;;;;;;;;;;;;-1:-1:-1;115:148:34;;1671:17:10;115:148:34;;-1:-1:-1;115:148:34;7428:91:10;7476:32;;;-1:-1:-1;7476:32:10;-1:-1:-1;1671:17:10;115:148:34;;-1:-1:-1;7476:32:10;115:148:34;;;;-1:-1:-1;115:148:34;;;;;;;;;;1671:17:10;-1:-1:-1;115:148:34;;-1:-1:-1;115:148:34;;-1:-1:-1;115:148:34;;;;;;;;;;;;;;;;;;;;1671:17:10;115:148:34;;;;;;;;;;1648:13:10;115:148:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1671:17:10;-1:-1:-1;115:148:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:148:34;;;;;;;;;-1:-1:-1;115:148:34;;;;;;;;-1:-1:-1;115:148:34;;1671:17:10;115:148:34;;-1:-1:-1;115:148:34;;;;;;;;;;;;-1:-1:-1;115:148:34;;1671:17:10;115:148:34;;-1:-1:-1;115:148:34;;;;;-1:-1:-1;115:148:34;;;;;;;;;;1648:13:10;-1:-1:-1;115:148:34;;-1:-1:-1;115:148:34;;-1:-1:-1;115:148:34;;;;;;;;;;;;;;;;;;;;;1648:13:10;115:148:34;;;;;;;;;;1648:13:10;115:148:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1648:13:10;-1:-1:-1;115:148:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:148:34;;;;;;;;;-1:-1:-1;115:148:34;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":1347,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_3378":{"entryPoint":1325,"id":null,"parameterSlots":0,"returnSlots":1},"abi_encode_string":{"entryPoint":1252,"id":null,"parameterSlots":2,"returnSlots":1},"fun_transfer":{"entryPoint":1369,"id":2016,"parameterSlots":3,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"608080604052600436101561001357600080fd5b60003560e01c90816306fdde031461041157508063095ea7b31461038b57806318160ddd1461036d57806323b872dd14610280578063313ce5671461026457806370a082311461022a57806395d89b4114610109578063a9059cbb146100d85763dd62ed3e1461008257600080fd5b346100d35760403660031901126100d35761009b61052d565b6100a3610543565b6001600160a01b039182166000908152600160209081526040808320949093168252928352819020549051908152f35b600080fd5b346100d35760403660031901126100d3576100fe6100f461052d565b6024359033610559565b602060405160018152f35b346100d35760003660031901126100d35760405160006004548060011c90600181168015610220575b60208310811461020c578285529081156101f05750600114610199575b50819003601f01601f191681019067ffffffffffffffff8211818310176101835761017f829182604052826104e4565b0390f35b634e487b7160e01b600052604160045260246000fd5b905060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b6000905b8282106101da5750602091508201018261014f565b60018160209254838588010152019101906101c5565b90506020925060ff191682840152151560051b8201018261014f565b634e487b7160e01b84526022600452602484fd5b91607f1691610132565b346100d35760203660031901126100d3576001600160a01b0361024b61052d565b1660005260006020526020604060002054604051908152f35b346100d35760003660031901126100d357602060405160128152f35b346100d35760603660031901126100d35761029961052d565b6102a1610543565b6001600160a01b03821660008181526001602090815260408083203384529091529020549092604435929160001981106102e1575b506100fe9350610559565b83811061035057841561033a573315610324576100fe946000526001602052604060002060018060a01b03331660005260205283604060002091039055846102d6565b634a1406b160e11b600052600060045260246000fd5b63e602df0560e01b600052600060045260246000fd5b8390637dc7a0d960e11b6000523360045260245260445260646000fd5b346100d35760003660031901126100d3576020600254604051908152f35b346100d35760403660031901126100d3576103a461052d565b60243590331561033a576001600160a01b031690811561032457336000526001602052604060002082600052602052806040600020556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100d35760003660031901126100d35760006003548060011c906001811680156104da575b60208310811461020c578285529081156101f057506001146104835750819003601f01601f191681019067ffffffffffffffff8211818310176101835761017f829182604052826104e4565b905060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b6000905b8282106104c45750602091508201018261014f565b60018160209254838588010152019101906104af565b91607f1691610437565b91909160208152825180602083015260005b818110610517575060409293506000838284010152601f8019910116010190565b80602080928701015160408286010152016104f6565b600435906001600160a01b03821682036100d357565b602435906001600160a01b03821682036100d357565b6001600160a01b0316908115610608576001600160a01b03169182156105f25760008281528060205260408120548281106105d85791604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815280845220818154019055604051908152a3565b916064928463391434e360e21b8452600452602452604452fd5b63ec442f0560e01b600052600060045260246000fd5b634b637e8f60e11b600052600060045260246000fdfea2646970667358221220a463daaf0d16f8a2a779ca1d1fc0b3f20cd8f3f2bc1f2e59ee218495f47ac04464736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x6FDDE03 EQ PUSH2 0x411 JUMPI POP DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x36D JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0xD8 JUMPI PUSH4 0xDD62ED3E EQ PUSH2 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x9B PUSH2 0x52D JUMP JUMPDEST PUSH2 0xA3 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP4 AND DUP3 MSTORE SWAP3 DUP4 MSTORE DUP2 SWAP1 KECCAK256 SLOAD SWAP1 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0xFE PUSH2 0xF4 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER PUSH2 0x559 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x4 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x220 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x20C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x199 JUMPI JUMPDEST POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x183 JUMPI PUSH2 0x17F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x4E4 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1DA JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x1C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 DUP5 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x132 JUMP JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x24B PUSH2 0x52D JUMP JUMPDEST AND PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x299 PUSH2 0x52D JUMP JUMPDEST PUSH2 0x2A1 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 PUSH1 0x44 CALLDATALOAD SWAP3 SWAP2 PUSH1 0x0 NOT DUP2 LT PUSH2 0x2E1 JUMPI JUMPDEST POP PUSH2 0xFE SWAP4 POP PUSH2 0x559 JUMP JUMPDEST DUP4 DUP2 LT PUSH2 0x350 JUMPI DUP5 ISZERO PUSH2 0x33A JUMPI CALLER ISZERO PUSH2 0x324 JUMPI PUSH2 0xFE SWAP5 PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP4 PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP5 PUSH2 0x2D6 JUMP JUMPDEST PUSH4 0x4A1406B1 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xE602DF05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 SWAP1 PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE PUSH1 0x64 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH2 0x3A4 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 CALLER ISZERO PUSH2 0x33A JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x324 JUMPI CALLER PUSH1 0x0 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP3 PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 PUSH1 0x0 KECCAK256 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x20 CALLER SWAP3 LOG3 PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xD3 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xD3 JUMPI PUSH1 0x0 PUSH1 0x3 SLOAD DUP1 PUSH1 0x1 SHR SWAP1 PUSH1 0x1 DUP2 AND DUP1 ISZERO PUSH2 0x4DA JUMPI JUMPDEST PUSH1 0x20 DUP4 LT DUP2 EQ PUSH2 0x20C JUMPI DUP3 DUP6 MSTORE SWAP1 DUP2 ISZERO PUSH2 0x1F0 JUMPI POP PUSH1 0x1 EQ PUSH2 0x483 JUMPI POP DUP2 SWAP1 SUB PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT DUP2 DUP4 LT OR PUSH2 0x183 JUMPI PUSH2 0x17F DUP3 SWAP2 DUP3 PUSH1 0x40 MSTORE DUP3 PUSH2 0x4E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x3 PUSH1 0x0 MSTORE PUSH32 0xC2575A0E9E593C00F959F8C92F12DB2869C3395A3B0502D05E2516446F71F85B PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x4C4 JUMPI POP PUSH1 0x20 SWAP2 POP DUP3 ADD ADD DUP3 PUSH2 0x14F JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x20 SWAP3 SLOAD DUP4 DUP6 DUP9 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 PUSH2 0x4AF JUMP JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x437 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x517 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xD3 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 ISZERO PUSH2 0x608 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0x5F2 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT PUSH2 0x5D8 JUMPI SWAP2 PUSH1 0x40 DUP3 DUP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP6 DUP8 PUSH1 0x20 SWAP7 MSTORE DUP3 DUP7 MSTORE SUB DUP3 DUP3 KECCAK256 SSTORE DUP7 DUP2 MSTORE DUP1 DUP5 MSTORE KECCAK256 DUP2 DUP2 SLOAD ADD SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG3 JUMP JUMPDEST SWAP2 PUSH1 0x64 SWAP3 DUP5 PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP5 MSTORE PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 MSTORE REVERT JUMPDEST PUSH4 0xEC442F05 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4B637E8F PUSH1 0xE1 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG4 PUSH4 0xDAAF0D16 0xF8 LOG2 0xA7 PUSH26 0xCA1D1FC0B3F20CD8F3F2BC1F2E59EE218495F47AC04464736F6C PUSH4 0x4300081C STOP CALLER ","sourceMap":"115:148:34:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:148:34;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;115:148:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:148:34;;;;3388:5:10;115:148:34;;:::i;:::-;;;735:10:21;;3388:5:10;:::i;:::-;115:148:34;;;;;;;;;;;;;-1:-1:-1;;115:148:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:148:34;;;;;-1:-1:-1;;115:148:34;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;115:148:34;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:148:34;;;;-1:-1:-1;;;;;115:148:34;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;115:148:34;;;;;;;2761:2:10;115:148:34;;;;;;;;;-1:-1:-1;;115:148:34;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;115:148:34;;;;;;;;;;;;;;;735:10:21;115:148:34;;;;;;;;;;;;;;-1:-1:-1;;10484:36:10;;10480:309;;115:148:34;4890:5:10;;;;;:::i;10480:309::-;10540:24;;;10536:130;;9717:19;;9713:89;;735:10:21;9815:21:10;9811:90;;4890:5;115:148:34;;;;;;;;;;;;;;735:10:21;115:148:34;-1:-1:-1;115:148:34;;;;;-1:-1:-1;115:148:34;;;;;10480:309:10;;;9811:90;9859:31;;;115:148:34;9859:31:10;115:148:34;;;;;9859:31:10;9713:89;9759:32;;;115:148:34;9759:32:10;115:148:34;;;;;9759:32:10;10536:130;10591:60;;;;;115:148:34;10591:60:10;735:10:21;115:148:34;;;;;;;;10591:60:10;115:148:34;;;;;;-1:-1:-1;;115:148:34;;;;;2881:12:10;115:148:34;;;;;;;;;;;;;-1:-1:-1;;115:148:34;;;;;;:::i;:::-;;;735:10:21;;9717:19:10;9713:89;;-1:-1:-1;;;;;115:148:34;;9815:21:10;;9811:90;;735:10:21;115:148:34;;;;;;;;;-1:-1:-1;115:148:34;;;;;-1:-1:-1;115:148:34;;;;;;;9989:31:10;115:148:34;735:10:21;9989:31:10;;115:148:34;;;;;;;;;;;;;-1:-1:-1;;115:148:34;;;;;1837:5:10;115:148:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;115:148:34;;;;;-1:-1:-1;;115:148:34;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1837:5:10;115:148:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;115:148:34;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;115:148:34;;;;;;:::o;5297:300:10:-;-1:-1:-1;;;;;115:148:34;;5380:18:10;;5376:86;;-1:-1:-1;;;;;115:148:34;;5475:16:10;;5471:86;;5396:1;115:148:34;;;;;;;;;;6244:19:10;;;6240:115;;115:148:34;;;;6987:25:10;115:148:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6987:25:10;5297:300::o;6240:115::-;6290:50;115:148:34;6290:50:10;;;;;;;;115:148:34;;;;;6290:50:10;5471:86;5514:32;;;5396:1;5514:32;5396:1;5514:32;115:148:34;;5396:1:10;5514:32;5376:86;5421:30;;;5396:1;5421:30;5396:1;5421:30;115:148:34;;5396:1:10;5421:30"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gametoken.sol\":\"GameToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x86b7b71a6aedefdad89b607378eeab1dcc5389b9ea7d17346d08af01d7190994\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1dc2db8d94a21eac8efe03adf574c419b08536409b416057a2b5b95cb772c43c\",\"dweb:/ipfs/QmZfqJCKVU1ScuX2A7s8WZdQEaikwJbDH5JBrBdKTUT4Gu\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/Gametoken.sol\":{\"keccak256\":\"0x19ae7040e235e46777862010277075b98d25bbf5269bf377601a7b240e5af197\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee14dba606361da3567746ced88e955668bfcc95e8cd060c79c3f6833590b03\",\"dweb:/ipfs/Qma9eph9hV2RSPpcuvYve5btHyKsTCwaV8oKJapzvSDL4N\"]}},\"version\":1}"}},"contracts/LootBox.sol":{"LootBox":{"abi":[{"inputs":[{"internalType":"uint64","name":"_subscriptionId","type":"uint64"},{"internalType":"address","name":"_erc20Token","type":"address"},{"internalType":"address","name":"_erc721Token","type":"address"},{"internalType":"address","name":"_erc1155Token","type":"address"},{"internalType":"uint256","name":"_erc1155TokenId","type":"uint256"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"InsufficientInventory","type":"error"},{"inputs":[],"name":"InsufficientPayment","type":"error"},{"inputs":[],"name":"InvalidRequest","type":"error"},{"inputs":[],"name":"InvalidTierConfiguration","type":"error"},{"inputs":[{"internalType":"address","name":"have","type":"address"},{"internalType":"address","name":"want","type":"address"}],"name":"OnlyCoordinatorCanFulfill","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"ReentrancyGuardReentrantCall","type":"error"},{"inputs":[],"name":"TransferFailed","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"BoxOpened","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"FundsWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"tokenType","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"InventoryReplenished","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"string","name":"rewardType","type":"string"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"RewardAssigned","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tierId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"weight","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"minAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"maxAmount","type":"uint256"}],"name":"RewardTierUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"erc20","type":"address"},{"indexed":false,"internalType":"address","name":"erc721","type":"address"},{"indexed":false,"internalType":"address","name":"erc1155","type":"address"},{"indexed":false,"internalType":"uint256","name":"erc1155TokenId","type":"uint256"}],"name":"TokenContractsUpdated","type":"event"},{"inputs":[],"name":"availableERC721Count","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"availableERC721Tokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"boxPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"nftContract","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"emergencyWithdrawNFT","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdrawTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getInventoryStatus","outputs":[{"internalType":"uint256","name":"erc20Balance","type":"uint256"},{"internalType":"uint256","name":"erc1155Balance","type":"uint256"},{"internalType":"uint256","name":"erc721Count","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"}],"name":"getPendingRequest","outputs":[{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"fulfilled","type":"bool"}],"internalType":"struct LootBox.PendingRequest","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"}],"name":"getRewardTier","outputs":[{"components":[{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"internalType":"struct LootBox.RewardTier","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"openBox","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"pendingRequests","outputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"fulfilled","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"requestId","type":"uint256"},{"internalType":"uint256[]","name":"randomWords","type":"uint256[]"}],"name":"rawFulfillRandomWords","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tokenIds","type":"uint256[]"}],"name":"replenishERC721Inventory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"rewardTiers","outputs":[{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokens","outputs":[{"internalType":"contract IERC20","name":"erc20Token","type":"address"},{"internalType":"contract IERC721","name":"erc721Token","type":"address"},{"internalType":"contract IERC1155","name":"erc1155Token","type":"address"},{"internalType":"uint256","name":"erc1155TokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"newPrice","type":"uint256"}],"name":"updateBoxPrice","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tierId","type":"uint256"},{"internalType":"uint256","name":"weight","type":"uint256"},{"internalType":"uint256","name":"minAmount","type":"uint256"},{"internalType":"uint256","name":"maxAmount","type":"uint256"},{"internalType":"bool","name":"active","type":"bool"}],"name":"updateRewardTier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_erc20","type":"address"},{"internalType":"address","name":"_erc721","type":"address"},{"internalType":"address","name":"_erc1155","type":"address"},{"internalType":"uint256","name":"_erc1155TokenId","type":"uint256"}],"name":"updateTokenContracts","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":825,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":794,"id":null,"parameterSlots":0,"returnSlots":1},"array_push_from_struct_RewardTier_to_array_struct_RewardTier_storage_dyn_ptr":{"entryPoint":898,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_RewardTier__dyn_ptr":{"entryPoint":845,"id":null,"parameterSlots":1,"returnSlots":2}},"generatedSources":[],"linkReferences":{},"object":"60a0604052346102ff57604051601f611d7838819003918201601f19168301916001600160401b038311848410176103045780849260a0946040528339810103126102ff578051906001600160401b03821682036102ff5761006360208201610339565b9061007060408201610339565b91608061007f60608401610339565b9201516003546001600160a01b038116608052909433156102e95760008054336001600160a01b0319821681178355739ddfaca8183c41ad55329bdeed9f6a8d53168b1b94859390926001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180556001600160a01b031916176003557f787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae600455600580546601000300030d406001600160501b031991909116179055662386f26fc10000600a55600280546001600160e01b03191660a09290921b600160a01b600160e01b0316919091179190911790556001600160a01b03918216928216911683606061019861031a565b838152846020820152856040820152015260018060a01b0319600654161760065560018060a01b0319600754161760075560018060a01b031960085416176008556009556102156101e761031a565b603281526802b5e3af16b18800006020820152680ad78ebc5ac6200000604082015260016060820152610382565b61023e61022061031a565b601e815260016020820152600a604082015260016060820152610382565b61026761024961031a565b60148152600160208201526001604082015260016060820152610382565b6000600c5560005b600b548110156102d15760ff60036102868361034d565b50015416610297575b60010161026f565b6102a08161034d565b505490600c549182018092116102bb57600c9190915561028f565b634e487b7160e01b600052601160045260246000fd5b6040516119609081610418823960805181610ec60152f35b631e4fbdf760e01b600052600060045260246000fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b60405190608082016001600160401b0381118382101761030457604052565b51906001600160a01b03821682036102ff57565b600b5481101561036c57600b60005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b600b54680100000000000000008110156103045760018101600b556000600b5482101561040357600b905260021b7f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db901600360609183518155602084015160018201556040840151600282015501910151151560ff80198354169116179055565b634e487b7160e01b81526032600452602490fdfe608080604052600436101561001d575b50361561001b57600080fd5b005b60003560e01c90816301ffc9a71461147d57508063150b7a02146114285780631fe543e314610e945780632f65e98c14610dc35780633c652a9a14610d735780633ccfd60b14610ceb578063715018a614610c925780638da5cb5b14610c69578063917bb99814610bca578063922b807914610b4057806396c82e5714610b225780639d32d2f714610b045780639d63848a14610ab9578063a648285814610a9b578063aa10b2f414610a6f578063afa92d0d14610a4e578063b2becc2114610929578063bc197c8114610894578063bcd554f61461072f578063c225fbd11461057d578063c2e952c7146103a6578063daf484e01461031c578063eb586cae14610285578063f23a6e6114610230578063f2fde38b146101a75763ff20111414610148573861000f565b346101a25760203660031901126101a257600435600b548110156101a257610171608091611626565b5080549060018101549060ff6003600283015492015416916040519384526020840152604083015215156060820152f35b600080fd5b346101a25760203660031901126101a2576101c06114d0565b6101c8611732565b6001600160a01b0316801561021a57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346101a25760a03660031901126101a2576102496114d0565b506102526114e6565b506084356001600160401b0381116101a257610272903690600401611569565b5060405163f23a6e6160e01b8152602090f35b346101a25760203660031901126101a257600060606040516102a6816114fc565b828152826020820152826040820152015260806102c4600435611626565b506040516102d1816114fc565b815491828252600181015460208301908152606060ff600360028501549460408701958652015416930192151583526040519384525160208401525160408301525115156060820152f35b346101a25760203660031901126101a25760006040805161033c8161152d565b8281528260208201520152600435600052600f602052606060406000206040516103658161152d565b60018060a01b0382541691828252604060ff600260018401549360208601948552015416920191151582526040519283525160208301525115156040820152f35b60003660031901126101a2576103ba61175b565b600a54341061056c576103cb61177d565b1561055b5763ffffffff602060025460a460045460006005549360405196879586946305d3b1d360e41b865260048601526001600160401b038360a01c16602486015261ffff81891c166044860152818116606486015260301c16608484015260018060a01b03165af190811561051157600091610526575b506104af6040516104548161152d565b33815260026020820142815260408301906000825285600052600f60205260406000209360018060a01b039051166001600160601b0360a01b85541617845551600184015551151591019060ff801983541691151516179055565b6040519081527fb73d415d4554d9bc64f3fadea1d75caaeb0f4db5b74538b5e5dcbce2660e624060203392a2600a548034116104ec575b60018055005b600080806104fb8194346116eb565b81811561051d575b3390f11561051157806104e6565b6040513d6000823e3d90fd5b506108fc610503565b906020823d602011610553575b8161054060209383611548565b8101031261055057505181610444565b80fd5b3d9150610533565b638b2024a560e01b60005260046000fd5b63cd1c886760e01b60005260046000fd5b346101a25760203660031901126101a2576004356001600160401b0381116101a257366023820112156101a2578060040135906001600160401b0382116101a2573660248360051b830101116101a257906105d6611732565b6000915b818310156106d8576024926000848260051b84010135602060018060a01b0360075416604051978880926331a9108f60e11b82528560048301525afa80156106cd578290610683575b9495509293600193906001600160a01b031630148061066f575b61064c575b50500191906105da565b81604091859352600d6020522055610665600e546116dc565b600e558480610642565b50808252600d60205260408220541561063d565b50946020813d82116106c5575b8161069d60209383611548565b810103126106c15751946001600160a01b03861686036106c1579394859490610623565b5080fd5b3d9150610690565b6040513d84823e3d90fd5b7f6cda8e8be956b74ed7e2d0f733d6dddfcc7b34ce982e77240ad42816639056f58260405180916040825261072460408301604090600681526545524337323160d01b60208201520190565b9060208301520390a1005b346101a25760a03660031901126101a257600435602435604435606435916084358015158091036101a257610762611732565b600b54851015610883578284106108835760405190610780826114fc565b82825260208201918483526040810191868352606082019081526107a388611626565b93909361086d576107d69460039351855551600185015551600284015551151591019060ff801983541691151516179055565b6000600c5560005b600b54811015610825578060ff60036107f8600194611626565b50015416610807575b016107de565b61081d61081382611626565b5054600c54611725565b600c55610801565b506108687f66c998c4f16e6680d6471c293823ebfb3b9f053a14111a2e24f54578c4c7975f93604051938493846040919493926060820195825260208201520152565b0390a2005b634e487b7160e01b600052600060045260246000fd5b63adf8131b60e01b60005260046000fd5b346101a25760a03660031901126101a2576108ad6114d0565b506108b66114e6565b506044356001600160401b0381116101a2576108d69036906004016115bf565b506064356001600160401b0381116101a2576108f69036906004016115bf565b506084356001600160401b0381116101a257610916903690600401611569565b5060405163bc197c8160e01b8152602090f35b346101a25760003660031901126101a2576006546040516370a0823160e01b815230600482015290602090829060249082906001600160a01b03165afa801561051157600090610a1a575b600854600954604051627eeac760e11b81523060048201526024810191909152925060209083906001600160a01b03168180604481015b03915afa918215610511576000926109e6575b506109e2600e54604051938493846040919493926060820195825260208201520152565b0390f35b9091506020813d602011610a12575b81610a0260209383611548565b810103126101a2575190826109be565b3d91506109f5565b506020813d602011610a46575b81610a3460209383611548565b810103126101a2576109ab9051610974565b3d9150610a27565b346101a25760203660031901126101a257610a67611732565b600435600a55005b346101a25760203660031901126101a257600435600052600d6020526020604060002054604051908152f35b346101a25760003660031901126101a2576020600a54604051908152f35b346101a25760003660031901126101a257600654600754600854600954604080516001600160a01b039586168152938516602085015291909316908201526060810191909152608090f35b346101a25760003660031901126101a2576020600e54604051908152f35b346101a25760003660031901126101a2576020600c54604051908152f35b346101a25760403660031901126101a257610b596114d0565b610b61611732565b6000546001600160a01b039081169116803b156101a257604051632142170760e11b81523060048201526001600160a01b038316602480830191909152356044820152906000908290606490829084905af1801561051157610bbf57005b600061001b91611548565b346101a25760403660031901126101a25760006020610c28610bea6114d0565b610bf2611732565b835460405163a9059cbb60e01b81526001600160a01b039091166004820152602480359082015293849283919082906044820190565b03926001600160a01b03165af1801561051157610c4157005b61001b9060203d602011610c62575b610c5a8183611548565b8101906116c4565b503d610c50565b346101a25760003660031901126101a2576000546040516001600160a01b039091168152602090f35b346101a25760003660031901126101a257610cab611732565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101a25760003660031901126101a257610d04611732565b610d0c61175b565b4760008080808460018060a01b03825416828215610d6a575bf115610511576000546040519182526001600160a01b0316907feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d90602090a260018055005b506108fc610d25565b346101a25760203660031901126101a257600435600052600f6020526060604060002060018060a01b038154169060ff600260018301549201541690604051928352602083015215156040820152f35b346101a25760803660031901126101a257610ddc6114d0565b610de46114e6565b6044356001600160a01b03811691908290036101a2577ffc333481437d78e9325f635584c23b08b3a65462687211c81ff8da3891851d909260809260643591610e2b611732565b60018060a01b031692836001600160601b0360a01b600654161760065560018060a01b0316806001600160601b0360a01b6007541617600755816001600160601b0360a01b600854161760085582600955604051938452602084015260408301526060820152a1005b346101a25760403660031901126101a2576024356001600160401b0381116101a257610ec49036906004016115bf565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163381900361141057506004356000908152600f6020526040902080546001600160a01b0316919082158015611402575b6113f157600201805460ff19166001179055610f46610f3c826116f8565b51600c5490611705565b60009190825b600b5484101561001b5760ff6003610f6386611626565b50015416156113e857610f8190610f7985611626565b505490611725565b92838210610f94576001905b0192610f4c565b925050610fa0906116f8565b51610faa82611626565b5091600260018401549301548381116113b5575b50806111025750506006546040516370a0823160e01b81523060048201526001600160a01b0390911690602081602481855afa80156105115783916000916110ce575b501061055b5760405163a9059cbb60e01b81526001600160a01b03841660048201526024810183905290602090829060449082906000905af1908115610511576000916110b0575b501561109f5760a07fbfa71c1f3eab9b9afac3b012c5023dc1113afdcd4a99f488b769ed7b283faaec9160405190606082526005606083015264045524332360dc1b6080830152602082015260006040820152a2005b6312171d8360e31b60005260046000fd5b6110c8915060203d8111610c6257610c5a8183611548565b83611049565b91506020823d82116110fa575b816110e860209383611548565b81010312610550575082905185611001565b3d91506110db565b60018103611243575050600854600954604051627eeac760e11b8152306004820152602481018290526001600160a01b039092169291602081604481875afa801561051157839160009161120f575b501061055b57823b156101a25760009260c484926040519586938492637921219560e11b8452306004850152896024850152604484015286606484015260a060848401528160a48401525af1908115610511577fbfa71c1f3eab9b9afac3b012c5023dc1113afdcd4a99f488b769ed7b283faaec9260a0926111fe575b50600954604051916060835260076060840152664552433131353560c81b608084015260208301526040820152a2005b600061120991611548565b846111ce565b91506020823d821161123b575b8161122960209383611548565b81010312610550575082905186611151565b3d915061121c565b60029192501461124f57005b600e54801561055b5761126191611705565b60008091815b6103e88110611372575b50506007546001600160a01b03169050803b156101a257604051632142170760e11b81523060048201526001600160a01b038416602482015260448101839052906000908290606490829084905af1801561051157611361575b5080600052600d60205260006040812055600e5490811561134b577fbfa71c1f3eab9b9afac3b012c5023dc1113afdcd4a99f488b769ed7b283faaec9160001901600e5560405180916060825261133960608301604090600681526545524337323160d01b60208201520190565b906001602084015260408301520390a2005b634e487b7160e01b600052601160045260246000fd5b600061136c91611548565b826112cb565b80600052600d60205260406000205461138e575b600101611267565b918181146113a9576113a16001916116dc565b929050611386565b50509050828080611271565b836113c2919492946116eb565b906001820180921161134b576113db6113e19284611705565b90611725565b9184610fbe565b92600190610f8d565b6341abc80160e01b60005260046000fd5b5060ff600282015416610f1e565b63073e64fd60e21b6000523360045260245260446000fd5b346101a25760803660031901126101a2576114416114d0565b5061144a6114e6565b506064356001600160401b0381116101a25761146a903690600401611569565b50604051630a85bd0160e11b8152602090f35b346101a25760203660031901126101a2576004359063ffffffff60e01b82168092036101a257602091630271189760e51b81149081156114bf575b5015158152f35b6301ffc9a760e01b149050836114b8565b600435906001600160a01b03821682036101a257565b602435906001600160a01b03821682036101a257565b608081019081106001600160401b0382111761151757604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761151757604052565b90601f801991011681019081106001600160401b0382111761151757604052565b81601f820112156101a2578035906001600160401b038211611517576040519261159d601f8401601f191660200185611548565b828452602083830101116101a257816000926020809301838601378301015290565b9080601f830112156101a2578135916001600160401b038311611517578260051b90604051936115f26020840186611548565b84526020808501928201019283116101a257602001905b8282106116165750505090565b8135815260209182019101611609565b600b5481101561164557600b60005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b600b541561164557600b60009081527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db991565b600b546001101561164557600b60009081527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dbd91565b908160209103126101a2575180151581036101a25790565b600019811461134b5760010190565b9190820391821161134b57565b8051156116455760200190565b811561170f570690565b634e487b7160e01b600052601260045260246000fd5b9190820180921161134b57565b6000546001600160a01b0316330361174657565b63118cdaa760e01b6000523360045260246000fd5b60026001541461176c576002600155565b633ee5aeb560e01b60005260046000fd5b60ff600361178961165b565b50015416806118a7575b6117f65760ff60036117a361168e565b500154168061181a575b6117f6576000600b546002101561180657600b90527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc45460ff16806117fb575b6117f657600090565b600190565b50600e5415156117ed565b634e487b7160e01b81526032600452602490fd5b50600854600954604051627eeac760e11b8152306004820152602481019190915290602090829060449082906001600160a01b03165afa90811561051157600091611875575b50600161186b61168e565b50015411156117ad565b90506020813d60201161189f575b8161189060209383611548565b810103126101a2575138611860565b3d9150611883565b506006546040516370a0823160e01b815230600482015290602090829060249082906001600160a01b03165afa908115610511576000916118f8575b5060016118ee61165b565b5001541115611793565b90506020813d602011611922575b8161191360209383611548565b810103126101a25751386118e3565b3d915061190656fea2646970667358221220e40cd617ae7cb6001a184970a085e13227ec8c0cadc97a4293ee90c8acbe159164736f6c634300081c0033","opcodes":"PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2FF JUMPI PUSH1 0x40 MLOAD PUSH1 0x1F PUSH2 0x1D78 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x304 JUMPI DUP1 DUP5 SWAP3 PUSH1 0xA0 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x2FF JUMPI DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2FF JUMPI PUSH2 0x63 PUSH1 0x20 DUP3 ADD PUSH2 0x339 JUMP JUMPDEST SWAP1 PUSH2 0x70 PUSH1 0x40 DUP3 ADD PUSH2 0x339 JUMP JUMPDEST SWAP2 PUSH1 0x80 PUSH2 0x7F PUSH1 0x60 DUP5 ADD PUSH2 0x339 JUMP JUMPDEST SWAP3 ADD MLOAD PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x80 MSTORE SWAP1 SWAP5 CALLER ISZERO PUSH2 0x2E9 JUMPI PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH20 0x9DDFACA8183C41AD55329BDEED9F6A8D53168B1B SWAP5 DUP6 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND OR PUSH1 0x3 SSTORE PUSH32 0x787D74CAEA10B2B357790D5B5247C2F63D1D91572A9846F780606E4D953677AE PUSH1 0x4 SSTORE PUSH1 0x5 DUP1 SLOAD PUSH7 0x1000300030D40 PUSH1 0x1 PUSH1 0x1 PUSH1 0x50 SHL SUB NOT SWAP2 SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH7 0x2386F26FC10000 PUSH1 0xA SSTORE PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH1 0xA0 SWAP3 SWAP1 SWAP3 SHL PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 PUSH1 0xE0 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP3 DUP3 AND SWAP2 AND DUP4 PUSH1 0x60 PUSH2 0x198 PUSH2 0x31A JUMP JUMPDEST DUP4 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE DUP6 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB NOT PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE PUSH2 0x215 PUSH2 0x1E7 PUSH2 0x31A JUMP JUMPDEST PUSH1 0x32 DUP2 MSTORE PUSH9 0x2B5E3AF16B1880000 PUSH1 0x20 DUP3 ADD MSTORE PUSH9 0xAD78EBC5AC6200000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x382 JUMP JUMPDEST PUSH2 0x23E PUSH2 0x220 PUSH2 0x31A JUMP JUMPDEST PUSH1 0x1E DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x382 JUMP JUMPDEST PUSH2 0x267 PUSH2 0x249 PUSH2 0x31A JUMP JUMPDEST PUSH1 0x14 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x382 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x0 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x2D1 JUMPI PUSH1 0xFF PUSH1 0x3 PUSH2 0x286 DUP4 PUSH2 0x34D JUMP JUMPDEST POP ADD SLOAD AND PUSH2 0x297 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x26F JUMP JUMPDEST PUSH2 0x2A0 DUP2 PUSH2 0x34D JUMP JUMPDEST POP SLOAD SWAP1 PUSH1 0xC SLOAD SWAP2 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x2BB JUMPI PUSH1 0xC SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x28F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1960 SWAP1 DUP2 PUSH2 0x418 DUP3 CODECOPY PUSH1 0x80 MLOAD DUP2 PUSH2 0xEC6 ADD MSTORE RETURN JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP4 DUP3 LT OR PUSH2 0x304 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x2FF JUMPI JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x36C JUMPI PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xB SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x304 JUMPI PUSH1 0x1 DUP2 ADD PUSH1 0xB SSTORE PUSH1 0x0 PUSH1 0xB SLOAD DUP3 LT ISZERO PUSH2 0x403 JUMPI PUSH1 0xB SWAP1 MSTORE PUSH1 0x2 SHL PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 ADD PUSH1 0x3 PUSH1 0x60 SWAP2 DUP4 MLOAD DUP2 SSTORE PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE ADD SWAP2 ADD MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x147D JUMPI POP DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1428 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0xE94 JUMPI DUP1 PUSH4 0x2F65E98C EQ PUSH2 0xDC3 JUMPI DUP1 PUSH4 0x3C652A9A EQ PUSH2 0xD73 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xCEB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC92 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC69 JUMPI DUP1 PUSH4 0x917BB998 EQ PUSH2 0xBCA JUMPI DUP1 PUSH4 0x922B8079 EQ PUSH2 0xB40 JUMPI DUP1 PUSH4 0x96C82E57 EQ PUSH2 0xB22 JUMPI DUP1 PUSH4 0x9D32D2F7 EQ PUSH2 0xB04 JUMPI DUP1 PUSH4 0x9D63848A EQ PUSH2 0xAB9 JUMPI DUP1 PUSH4 0xA6482858 EQ PUSH2 0xA9B JUMPI DUP1 PUSH4 0xAA10B2F4 EQ PUSH2 0xA6F JUMPI DUP1 PUSH4 0xAFA92D0D EQ PUSH2 0xA4E JUMPI DUP1 PUSH4 0xB2BECC21 EQ PUSH2 0x929 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x894 JUMPI DUP1 PUSH4 0xBCD554F6 EQ PUSH2 0x72F JUMPI DUP1 PUSH4 0xC225FBD1 EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0xC2E952C7 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xDAF484E0 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xEB586CAE EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A7 JUMPI PUSH4 0xFF201114 EQ PUSH2 0x148 JUMPI CODESIZE PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1A2 JUMPI PUSH2 0x171 PUSH1 0x80 SWAP2 PUSH2 0x1626 JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x3 PUSH1 0x2 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x1C0 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x249 PUSH2 0x14D0 JUMP JUMPDEST POP PUSH2 0x252 PUSH2 0x14E6 JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x272 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1569 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x0 PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0x2A6 DUP2 PUSH2 0x14FC JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x80 PUSH2 0x2C4 PUSH1 0x4 CALLDATALOAD PUSH2 0x1626 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2D1 DUP2 PUSH2 0x14FC JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 PUSH1 0xFF PUSH1 0x3 PUSH1 0x2 DUP6 ADD SLOAD SWAP5 PUSH1 0x40 DUP8 ADD SWAP6 DUP7 MSTORE ADD SLOAD AND SWAP4 ADD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE MLOAD PUSH1 0x20 DUP5 ADD MSTORE MLOAD PUSH1 0x40 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP1 MLOAD PUSH2 0x33C DUP2 PUSH2 0x152D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x60 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x365 DUP2 PUSH2 0x152D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND SWAP2 DUP3 DUP3 MSTORE PUSH1 0x40 PUSH1 0xFF PUSH1 0x2 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 PUSH1 0x20 DUP7 ADD SWAP5 DUP6 MSTORE ADD SLOAD AND SWAP3 ADD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE MLOAD PUSH1 0x20 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x3BA PUSH2 0x175B JUMP JUMPDEST PUSH1 0xA SLOAD CALLVALUE LT PUSH2 0x56C JUMPI PUSH2 0x3CB PUSH2 0x177D JUMP JUMPDEST ISZERO PUSH2 0x55B JUMPI PUSH4 0xFFFFFFFF PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0xA4 PUSH1 0x4 SLOAD PUSH1 0x0 PUSH1 0x5 SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 PUSH1 0xA0 SHR AND PUSH1 0x24 DUP7 ADD MSTORE PUSH2 0xFFFF DUP2 DUP10 SHR AND PUSH1 0x44 DUP7 ADD MSTORE DUP2 DUP2 AND PUSH1 0x64 DUP7 ADD MSTORE PUSH1 0x30 SHR AND PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x526 JUMPI JUMPDEST POP PUSH2 0x4AF PUSH1 0x40 MLOAD PUSH2 0x454 DUP2 PUSH2 0x152D JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP3 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x0 DUP3 MSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xB73D415D4554D9BC64F3FADEA1D75CAAEB0F4DB5B74538B5E5DCBCE2660E6240 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0xA SLOAD DUP1 CALLVALUE GT PUSH2 0x4EC JUMPI JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x4FB DUP2 SWAP5 CALLVALUE PUSH2 0x16EB JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0x51D JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x511 JUMPI DUP1 PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x503 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x553 JUMPI JUMPDEST DUP2 PUSH2 0x540 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x550 JUMPI POP MLOAD DUP2 PUSH2 0x444 JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x533 JUMP JUMPDEST PUSH4 0x8B2024A5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xCD1C8867 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1A2 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x1A2 JUMPI SWAP1 PUSH2 0x5D6 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x24 SWAP3 PUSH1 0x0 DUP5 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x7 SLOAD AND PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP3 MSTORE DUP6 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x6CD JUMPI DUP3 SWAP1 PUSH2 0x683 JUMPI JUMPDEST SWAP5 SWAP6 POP SWAP3 SWAP4 PUSH1 0x1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ DUP1 PUSH2 0x66F JUMPI JUMPDEST PUSH2 0x64C JUMPI JUMPDEST POP POP ADD SWAP2 SWAP1 PUSH2 0x5DA JUMP JUMPDEST DUP2 PUSH1 0x40 SWAP2 DUP6 SWAP4 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH2 0x665 PUSH1 0xE SLOAD PUSH2 0x16DC JUMP JUMPDEST PUSH1 0xE SSTORE DUP5 DUP1 PUSH2 0x642 JUMP JUMPDEST POP DUP1 DUP3 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH2 0x63D JUMP JUMPDEST POP SWAP5 PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x6C5 JUMPI JUMPDEST DUP2 PUSH2 0x69D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6C1 JUMPI MLOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP7 SUB PUSH2 0x6C1 JUMPI SWAP4 SWAP5 DUP6 SWAP5 SWAP1 PUSH2 0x623 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x690 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x6CDA8E8BE956B74ED7E2D0F733D6DDDFCC7B34CE982E77240AD42816639056F5 DUP3 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x40 DUP3 MSTORE PUSH2 0x724 PUSH1 0x40 DUP4 ADD PUSH1 0x40 SWAP1 PUSH1 0x6 DUP2 MSTORE PUSH6 0x455243373231 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x1A2 JUMPI PUSH2 0x762 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0xB SLOAD DUP6 LT ISZERO PUSH2 0x883 JUMPI DUP3 DUP5 LT PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x780 DUP3 PUSH2 0x14FC JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 DUP5 DUP4 MSTORE PUSH1 0x40 DUP2 ADD SWAP2 DUP7 DUP4 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x7A3 DUP9 PUSH2 0x1626 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 PUSH2 0x86D JUMPI PUSH2 0x7D6 SWAP5 PUSH1 0x3 SWAP4 MLOAD DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x0 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x825 JUMPI DUP1 PUSH1 0xFF PUSH1 0x3 PUSH2 0x7F8 PUSH1 0x1 SWAP5 PUSH2 0x1626 JUMP JUMPDEST POP ADD SLOAD AND PUSH2 0x807 JUMPI JUMPDEST ADD PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x81D PUSH2 0x813 DUP3 PUSH2 0x1626 JUMP JUMPDEST POP SLOAD PUSH1 0xC SLOAD PUSH2 0x1725 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0x801 JUMP JUMPDEST POP PUSH2 0x868 PUSH32 0x66C998C4F16E6680D6471C293823EBFB3B9F053A14111A2E24F54578C4C7975F SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xADF8131B PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x8AD PUSH2 0x14D0 JUMP JUMPDEST POP PUSH2 0x8B6 PUSH2 0x14E6 JUMP JUMPDEST POP PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x8D6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x15BF JUMP JUMPDEST POP PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x8F6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x15BF JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x916 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1569 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 SWAP1 PUSH2 0xA1A JUMPI JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 POP PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP1 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x9E6 JUMPI JUMPDEST POP PUSH2 0x9E2 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA12 JUMPI JUMPDEST DUP2 PUSH2 0xA02 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD SWAP1 DUP3 PUSH2 0x9BE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x9F5 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA46 JUMPI JUMPDEST DUP2 PUSH2 0xA34 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI PUSH2 0x9AB SWAP1 MLOAD PUSH2 0x974 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA27 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0xA67 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xA SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 SWAP1 SWAP4 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0xB59 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0xB61 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x511 JUMPI PUSH2 0xBBF JUMPI STOP JUMPDEST PUSH1 0x0 PUSH2 0x1B SWAP2 PUSH2 0x1548 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x0 PUSH1 0x20 PUSH2 0xC28 PUSH2 0xBEA PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0xBF2 PUSH2 0x1732 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x511 JUMPI PUSH2 0xC41 JUMPI STOP JUMPDEST PUSH2 0x1B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC62 JUMPI JUMPDEST PUSH2 0xC5A DUP2 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x16C4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC50 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0xCAB PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0xD04 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0xD0C PUSH2 0x175B JUMP JUMPDEST SELFBALANCE PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP3 DUP3 ISZERO PUSH2 0xD6A JUMPI JUMPDEST CALL ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D SWAP1 PUSH1 0x20 SWAP1 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH2 0x8FC PUSH2 0xD25 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x60 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND SWAP1 PUSH1 0xFF PUSH1 0x2 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0xDDC PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0xDE4 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x1A2 JUMPI PUSH32 0xFC333481437D78E9325F635584C23B08B3A65462687211C81FF8DA3891851D90 SWAP3 PUSH1 0x80 SWAP3 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH2 0xE2B PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP3 PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0xEC4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x15BF JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x1410 JUMPI POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP3 ISZERO DUP1 ISZERO PUSH2 0x1402 JUMPI JUMPDEST PUSH2 0x13F1 JUMPI PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xF46 PUSH2 0xF3C DUP3 PUSH2 0x16F8 JUMP JUMPDEST MLOAD PUSH1 0xC SLOAD SWAP1 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 DUP3 JUMPDEST PUSH1 0xB SLOAD DUP5 LT ISZERO PUSH2 0x1B JUMPI PUSH1 0xFF PUSH1 0x3 PUSH2 0xF63 DUP7 PUSH2 0x1626 JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x13E8 JUMPI PUSH2 0xF81 SWAP1 PUSH2 0xF79 DUP6 PUSH2 0x1626 JUMP JUMPDEST POP SLOAD SWAP1 PUSH2 0x1725 JUMP JUMPDEST SWAP3 DUP4 DUP3 LT PUSH2 0xF94 JUMPI PUSH1 0x1 SWAP1 JUMPDEST ADD SWAP3 PUSH2 0xF4C JUMP JUMPDEST SWAP3 POP POP PUSH2 0xFA0 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST MLOAD PUSH2 0xFAA DUP3 PUSH2 0x1626 JUMP JUMPDEST POP SWAP2 PUSH1 0x2 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 ADD SLOAD DUP4 DUP2 GT PUSH2 0x13B5 JUMPI JUMPDEST POP DUP1 PUSH2 0x1102 JUMPI POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x511 JUMPI DUP4 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x10CE JUMPI JUMPDEST POP LT PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x10B0 JUMPI JUMPDEST POP ISZERO PUSH2 0x109F JUMPI PUSH1 0xA0 PUSH32 0xBFA71C1F3EAB9B9AFAC3B012C5023DC1113AFDCD4A99F488B769ED7B283FAAEC SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 MSTORE PUSH1 0x5 PUSH1 0x60 DUP4 ADD MSTORE PUSH5 0x455243323 PUSH1 0xDC SHL PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH4 0x12171D83 PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x10C8 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xC62 JUMPI PUSH2 0xC5A DUP2 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP4 PUSH2 0x1049 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x10FA JUMPI JUMPDEST DUP2 PUSH2 0x10E8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x550 JUMPI POP DUP3 SWAP1 MLOAD DUP6 PUSH2 0x1001 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1243 JUMPI POP POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP8 GAS STATICCALL DUP1 ISZERO PUSH2 0x511 JUMPI DUP4 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x120F JUMPI JUMPDEST POP LT PUSH2 0x55B JUMPI DUP3 EXTCODESIZE ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 SWAP3 PUSH1 0xC4 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x79212195 PUSH1 0xE1 SHL DUP5 MSTORE ADDRESS PUSH1 0x4 DUP6 ADD MSTORE DUP10 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE DUP7 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP5 ADD MSTORE DUP2 PUSH1 0xA4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x511 JUMPI PUSH32 0xBFA71C1F3EAB9B9AFAC3B012C5023DC1113AFDCD4A99F488B769ED7B283FAAEC SWAP3 PUSH1 0xA0 SWAP3 PUSH2 0x11FE JUMPI JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x60 DUP4 MSTORE PUSH1 0x7 PUSH1 0x60 DUP5 ADD MSTORE PUSH7 0x45524331313535 PUSH1 0xC8 SHL PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x0 PUSH2 0x1209 SWAP2 PUSH2 0x1548 JUMP JUMPDEST DUP5 PUSH2 0x11CE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x123B JUMPI JUMPDEST DUP2 PUSH2 0x1229 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x550 JUMPI POP DUP3 SWAP1 MLOAD DUP7 PUSH2 0x1151 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x121C JUMP JUMPDEST PUSH1 0x2 SWAP2 SWAP3 POP EQ PUSH2 0x124F JUMPI STOP JUMPDEST PUSH1 0xE SLOAD DUP1 ISZERO PUSH2 0x55B JUMPI PUSH2 0x1261 SWAP2 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP2 DUP2 JUMPDEST PUSH2 0x3E8 DUP2 LT PUSH2 0x1372 JUMPI JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x511 JUMPI PUSH2 0x1361 JUMPI JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0xE SLOAD SWAP1 DUP2 ISZERO PUSH2 0x134B JUMPI PUSH32 0xBFA71C1F3EAB9B9AFAC3B012C5023DC1113AFDCD4A99F488B769ED7B283FAAEC SWAP2 PUSH1 0x0 NOT ADD PUSH1 0xE SSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x60 DUP3 MSTORE PUSH2 0x1339 PUSH1 0x60 DUP4 ADD PUSH1 0x40 SWAP1 PUSH1 0x6 DUP2 MSTORE PUSH6 0x455243373231 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x136C SWAP2 PUSH2 0x1548 JUMP JUMPDEST DUP3 PUSH2 0x12CB JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x138E JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1267 JUMP JUMPDEST SWAP2 DUP2 DUP2 EQ PUSH2 0x13A9 JUMPI PUSH2 0x13A1 PUSH1 0x1 SWAP2 PUSH2 0x16DC JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x1386 JUMP JUMPDEST POP POP SWAP1 POP DUP3 DUP1 DUP1 PUSH2 0x1271 JUMP JUMPDEST DUP4 PUSH2 0x13C2 SWAP2 SWAP5 SWAP3 SWAP5 PUSH2 0x16EB JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x134B JUMPI PUSH2 0x13DB PUSH2 0x13E1 SWAP3 DUP5 PUSH2 0x1705 JUMP JUMPDEST SWAP1 PUSH2 0x1725 JUMP JUMPDEST SWAP2 DUP5 PUSH2 0xFBE JUMP JUMPDEST SWAP3 PUSH1 0x1 SWAP1 PUSH2 0xF8D JUMP JUMPDEST PUSH4 0x41ABC801 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0xF1E JUMP JUMPDEST PUSH4 0x73E64FD PUSH1 0xE2 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x1441 PUSH2 0x14D0 JUMP JUMPDEST POP PUSH2 0x144A PUSH2 0x14E6 JUMP JUMPDEST POP PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x146A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1569 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x2711897 PUSH1 0xE5 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x14BF JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1517 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x159D PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1548 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1A2 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x1517 JUMPI DUP3 PUSH1 0x5 SHL SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x15F2 PUSH1 0x20 DUP5 ADD DUP7 PUSH2 0x1548 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1A2 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1616 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1609 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1645 JUMPI PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xB SLOAD ISZERO PUSH2 0x1645 JUMPI PUSH1 0xB PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 LT ISZERO PUSH2 0x1645 JUMPI PUSH1 0xB PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DBD SWAP2 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1A2 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1A2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x134B JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x134B JUMPI JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1645 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x170F JUMPI MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x134B JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1746 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x176C JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x3 PUSH2 0x1789 PUSH2 0x165B JUMP JUMPDEST POP ADD SLOAD AND DUP1 PUSH2 0x18A7 JUMPI JUMPDEST PUSH2 0x17F6 JUMPI PUSH1 0xFF PUSH1 0x3 PUSH2 0x17A3 PUSH2 0x168E JUMP JUMPDEST POP ADD SLOAD AND DUP1 PUSH2 0x181A JUMPI JUMPDEST PUSH2 0x17F6 JUMPI PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x2 LT ISZERO PUSH2 0x1806 JUMPI PUSH1 0xB SWAP1 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC4 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x17FB JUMPI JUMPDEST PUSH2 0x17F6 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0xE SLOAD ISZERO ISZERO PUSH2 0x17ED JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1875 JUMPI JUMPDEST POP PUSH1 0x1 PUSH2 0x186B PUSH2 0x168E JUMP JUMPDEST POP ADD SLOAD GT ISZERO PUSH2 0x17AD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x189F JUMPI JUMPDEST DUP2 PUSH2 0x1890 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD CODESIZE PUSH2 0x1860 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1883 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x18F8 JUMPI JUMPDEST POP PUSH1 0x1 PUSH2 0x18EE PUSH2 0x165B JUMP JUMPDEST POP ADD SLOAD GT ISZERO PUSH2 0x1793 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1922 JUMPI JUMPDEST DUP2 PUSH2 0x1913 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD CODESIZE PUSH2 0x18E3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1906 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xC 0xD6 OR 0xAE PUSH29 0xB6001A184970A085E13227EC8C0CADC97A4293EE90C8ACBE159164736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"642:11428:35:-:0;;;;;;;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;2910:14;642:11428;-1:-1:-1;;;;;642:11428:35;;;5683:32:0;642:11428:35;;2934:10;1273:26:2;1269:95;;-1:-1:-1;642:11428:35;;2934:10;-1:-1:-1;;;;;;642:11428:35;;;;;;841:42;;;;;;-1:-1:-1;;;;;642:11428:35;;3052:40:2;;-1:-1:-1;3052:40:2;642:11428:35;;;-1:-1:-1;;;;;;642:11428:35;;2910:14;642:11428;918:66;;642:11428;1016:6;642:11428;;;-1:-1:-1;;;;;;642:11428:35;;;;;;;1511:10;;642:11428;2956:55;642:11428;;-1:-1:-1;;;;;;642:11428:35;;;;;;-1:-1:-1;;;;;;;642:11428:35;;;;;;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;;:::i;:::-;;;;3081:215;642:11428;3081:215;;642:11428;3081:215;642:11428;3081:215;;642:11428;3081:215;642:11428;;;;;;;3072:224;642:11428;;;3072:224;642:11428;;;;;;;;;;;;;;;;;;;;;;;;;;;3489:163;642:11428;;:::i;:::-;3539:2;642:11428;;3566:11;642:11428;3506:145;;642:11428;3602:12;642:11428;3506:145;;642:11428;;;3506:145;;642:11428;3489:163;:::i;:::-;3720:143;642:11428;;:::i;:::-;3770:2;642:11428;;;;3737:125;;642:11428;1511:10;642:11428;3737:125;;642:11428;;;3737:125;;642:11428;3720:143;:::i;:::-;3925:142;642:11428;;:::i;:::-;3975:2;642:11428;;;;3942:124;;642:11428;;;3942:124;;642:11428;;;3942:124;;642:11428;3925:142;:::i;:::-;-1:-1:-1;10641:15:35;642:11428;-1:-1:-1;10710:3:35;3489:11;642:11428;10686:22;;;;;642:11428;2910:14;10733;;;:::i;:::-;:21;;642:11428;;10729:96;;10710:3;642:11428;;10671:13;;10729:96;10789:14;;;:::i;:::-;642:11428;;;10641:15;642:11428;;;;;;;;;10641:15;642:11428;;;;10729:96;;642:11428;;;;-1:-1:-1;642:11428:35;;918:66;642:11428;;-1:-1:-1;642:11428:35;10686:22;642:11428;;;;;;;;;;;;;;;1269:95:2;1322:31;;;-1:-1:-1;1322:31:2;-1:-1:-1;1322:31:2;642:11428:35;;-1:-1:-1;1322:31:2;642:11428:35;-1:-1:-1;642:11428:35;;;;;;-1:-1:-1;642:11428:35;;;;;-1:-1:-1;642:11428:35;;;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;642:11428:35;;;;;;:::o;:::-;3489:11;642:11428;;;;;;3489:11;-1:-1:-1;642:11428:35;;-1:-1:-1;642:11428:35;;;;;;-1:-1:-1;642:11428:35;:::o;:::-;;;;;;;;;;;;;3489:11;642:11428;;;;;;;;;;3489:11;642:11428;-1:-1:-1;3489:11:35;642:11428;;;;;;3489:11;642:11428;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;642:11428:35;;;;;;;"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":5350,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_19789":{"entryPoint":5328,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_uint256_dyn":{"entryPoint":5567,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bool_fromMemory":{"entryPoint":5828,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_bytes":{"entryPoint":5481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_address_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_address_uint256":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_stringliteral_73ad":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_uint256_uint256_uint256":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"checked_add_uint256":{"entryPoint":5925,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_uint256":{"entryPoint":5867,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":5448,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_19804":{"entryPoint":5372,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_19808":{"entryPoint":5421,"id":null,"parameterSlots":1,"returnSlots":0},"fun_checkOwner":{"entryPoint":5938,"id":238,"parameterSlots":0,"returnSlots":0},"fun_hasAvailableRewards":{"entryPoint":6013,"id":10824,"parameterSlots":0,"returnSlots":1},"fun_nonReentrantBefore":{"entryPoint":5979,"id":4755,"parameterSlots":0,"returnSlots":0},"increment_uint256":{"entryPoint":5852,"id":null,"parameterSlots":1,"returnSlots":1},"memory_array_index_access_uint256_dyn":{"entryPoint":5880,"id":null,"parameterSlots":1,"returnSlots":1},"mod_uint256":{"entryPoint":5893,"id":null,"parameterSlots":2,"returnSlots":1},"storage_array_index_access_struct_RewardTier__dyn":{"entryPoint":5774,"id":null,"parameterSlots":0,"returnSlots":2},"storage_array_index_access_struct_RewardTier__dyn_19792":{"entryPoint":5670,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_struct_RewardTier_storage_dyn":{"entryPoint":5723,"id":null,"parameterSlots":0,"returnSlots":2},"update_storage_value_offset_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{"10":[{"length":32,"start":3782}]},"linkReferences":{},"object":"608080604052600436101561001d575b50361561001b57600080fd5b005b60003560e01c90816301ffc9a71461147d57508063150b7a02146114285780631fe543e314610e945780632f65e98c14610dc35780633c652a9a14610d735780633ccfd60b14610ceb578063715018a614610c925780638da5cb5b14610c69578063917bb99814610bca578063922b807914610b4057806396c82e5714610b225780639d32d2f714610b045780639d63848a14610ab9578063a648285814610a9b578063aa10b2f414610a6f578063afa92d0d14610a4e578063b2becc2114610929578063bc197c8114610894578063bcd554f61461072f578063c225fbd11461057d578063c2e952c7146103a6578063daf484e01461031c578063eb586cae14610285578063f23a6e6114610230578063f2fde38b146101a75763ff20111414610148573861000f565b346101a25760203660031901126101a257600435600b548110156101a257610171608091611626565b5080549060018101549060ff6003600283015492015416916040519384526020840152604083015215156060820152f35b600080fd5b346101a25760203660031901126101a2576101c06114d0565b6101c8611732565b6001600160a01b0316801561021a57600080546001600160a01b03198116831782556001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3005b631e4fbdf760e01b600052600060045260246000fd5b346101a25760a03660031901126101a2576102496114d0565b506102526114e6565b506084356001600160401b0381116101a257610272903690600401611569565b5060405163f23a6e6160e01b8152602090f35b346101a25760203660031901126101a257600060606040516102a6816114fc565b828152826020820152826040820152015260806102c4600435611626565b506040516102d1816114fc565b815491828252600181015460208301908152606060ff600360028501549460408701958652015416930192151583526040519384525160208401525160408301525115156060820152f35b346101a25760203660031901126101a25760006040805161033c8161152d565b8281528260208201520152600435600052600f602052606060406000206040516103658161152d565b60018060a01b0382541691828252604060ff600260018401549360208601948552015416920191151582526040519283525160208301525115156040820152f35b60003660031901126101a2576103ba61175b565b600a54341061056c576103cb61177d565b1561055b5763ffffffff602060025460a460045460006005549360405196879586946305d3b1d360e41b865260048601526001600160401b038360a01c16602486015261ffff81891c166044860152818116606486015260301c16608484015260018060a01b03165af190811561051157600091610526575b506104af6040516104548161152d565b33815260026020820142815260408301906000825285600052600f60205260406000209360018060a01b039051166001600160601b0360a01b85541617845551600184015551151591019060ff801983541691151516179055565b6040519081527fb73d415d4554d9bc64f3fadea1d75caaeb0f4db5b74538b5e5dcbce2660e624060203392a2600a548034116104ec575b60018055005b600080806104fb8194346116eb565b81811561051d575b3390f11561051157806104e6565b6040513d6000823e3d90fd5b506108fc610503565b906020823d602011610553575b8161054060209383611548565b8101031261055057505181610444565b80fd5b3d9150610533565b638b2024a560e01b60005260046000fd5b63cd1c886760e01b60005260046000fd5b346101a25760203660031901126101a2576004356001600160401b0381116101a257366023820112156101a2578060040135906001600160401b0382116101a2573660248360051b830101116101a257906105d6611732565b6000915b818310156106d8576024926000848260051b84010135602060018060a01b0360075416604051978880926331a9108f60e11b82528560048301525afa80156106cd578290610683575b9495509293600193906001600160a01b031630148061066f575b61064c575b50500191906105da565b81604091859352600d6020522055610665600e546116dc565b600e558480610642565b50808252600d60205260408220541561063d565b50946020813d82116106c5575b8161069d60209383611548565b810103126106c15751946001600160a01b03861686036106c1579394859490610623565b5080fd5b3d9150610690565b6040513d84823e3d90fd5b7f6cda8e8be956b74ed7e2d0f733d6dddfcc7b34ce982e77240ad42816639056f58260405180916040825261072460408301604090600681526545524337323160d01b60208201520190565b9060208301520390a1005b346101a25760a03660031901126101a257600435602435604435606435916084358015158091036101a257610762611732565b600b54851015610883578284106108835760405190610780826114fc565b82825260208201918483526040810191868352606082019081526107a388611626565b93909361086d576107d69460039351855551600185015551600284015551151591019060ff801983541691151516179055565b6000600c5560005b600b54811015610825578060ff60036107f8600194611626565b50015416610807575b016107de565b61081d61081382611626565b5054600c54611725565b600c55610801565b506108687f66c998c4f16e6680d6471c293823ebfb3b9f053a14111a2e24f54578c4c7975f93604051938493846040919493926060820195825260208201520152565b0390a2005b634e487b7160e01b600052600060045260246000fd5b63adf8131b60e01b60005260046000fd5b346101a25760a03660031901126101a2576108ad6114d0565b506108b66114e6565b506044356001600160401b0381116101a2576108d69036906004016115bf565b506064356001600160401b0381116101a2576108f69036906004016115bf565b506084356001600160401b0381116101a257610916903690600401611569565b5060405163bc197c8160e01b8152602090f35b346101a25760003660031901126101a2576006546040516370a0823160e01b815230600482015290602090829060249082906001600160a01b03165afa801561051157600090610a1a575b600854600954604051627eeac760e11b81523060048201526024810191909152925060209083906001600160a01b03168180604481015b03915afa918215610511576000926109e6575b506109e2600e54604051938493846040919493926060820195825260208201520152565b0390f35b9091506020813d602011610a12575b81610a0260209383611548565b810103126101a2575190826109be565b3d91506109f5565b506020813d602011610a46575b81610a3460209383611548565b810103126101a2576109ab9051610974565b3d9150610a27565b346101a25760203660031901126101a257610a67611732565b600435600a55005b346101a25760203660031901126101a257600435600052600d6020526020604060002054604051908152f35b346101a25760003660031901126101a2576020600a54604051908152f35b346101a25760003660031901126101a257600654600754600854600954604080516001600160a01b039586168152938516602085015291909316908201526060810191909152608090f35b346101a25760003660031901126101a2576020600e54604051908152f35b346101a25760003660031901126101a2576020600c54604051908152f35b346101a25760403660031901126101a257610b596114d0565b610b61611732565b6000546001600160a01b039081169116803b156101a257604051632142170760e11b81523060048201526001600160a01b038316602480830191909152356044820152906000908290606490829084905af1801561051157610bbf57005b600061001b91611548565b346101a25760403660031901126101a25760006020610c28610bea6114d0565b610bf2611732565b835460405163a9059cbb60e01b81526001600160a01b039091166004820152602480359082015293849283919082906044820190565b03926001600160a01b03165af1801561051157610c4157005b61001b9060203d602011610c62575b610c5a8183611548565b8101906116c4565b503d610c50565b346101a25760003660031901126101a2576000546040516001600160a01b039091168152602090f35b346101a25760003660031901126101a257610cab611732565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101a25760003660031901126101a257610d04611732565b610d0c61175b565b4760008080808460018060a01b03825416828215610d6a575bf115610511576000546040519182526001600160a01b0316907feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d90602090a260018055005b506108fc610d25565b346101a25760203660031901126101a257600435600052600f6020526060604060002060018060a01b038154169060ff600260018301549201541690604051928352602083015215156040820152f35b346101a25760803660031901126101a257610ddc6114d0565b610de46114e6565b6044356001600160a01b03811691908290036101a2577ffc333481437d78e9325f635584c23b08b3a65462687211c81ff8da3891851d909260809260643591610e2b611732565b60018060a01b031692836001600160601b0360a01b600654161760065560018060a01b0316806001600160601b0360a01b6007541617600755816001600160601b0360a01b600854161760085582600955604051938452602084015260408301526060820152a1005b346101a25760403660031901126101a2576024356001600160401b0381116101a257610ec49036906004016115bf565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163381900361141057506004356000908152600f6020526040902080546001600160a01b0316919082158015611402575b6113f157600201805460ff19166001179055610f46610f3c826116f8565b51600c5490611705565b60009190825b600b5484101561001b5760ff6003610f6386611626565b50015416156113e857610f8190610f7985611626565b505490611725565b92838210610f94576001905b0192610f4c565b925050610fa0906116f8565b51610faa82611626565b5091600260018401549301548381116113b5575b50806111025750506006546040516370a0823160e01b81523060048201526001600160a01b0390911690602081602481855afa80156105115783916000916110ce575b501061055b5760405163a9059cbb60e01b81526001600160a01b03841660048201526024810183905290602090829060449082906000905af1908115610511576000916110b0575b501561109f5760a07fbfa71c1f3eab9b9afac3b012c5023dc1113afdcd4a99f488b769ed7b283faaec9160405190606082526005606083015264045524332360dc1b6080830152602082015260006040820152a2005b6312171d8360e31b60005260046000fd5b6110c8915060203d8111610c6257610c5a8183611548565b83611049565b91506020823d82116110fa575b816110e860209383611548565b81010312610550575082905185611001565b3d91506110db565b60018103611243575050600854600954604051627eeac760e11b8152306004820152602481018290526001600160a01b039092169291602081604481875afa801561051157839160009161120f575b501061055b57823b156101a25760009260c484926040519586938492637921219560e11b8452306004850152896024850152604484015286606484015260a060848401528160a48401525af1908115610511577fbfa71c1f3eab9b9afac3b012c5023dc1113afdcd4a99f488b769ed7b283faaec9260a0926111fe575b50600954604051916060835260076060840152664552433131353560c81b608084015260208301526040820152a2005b600061120991611548565b846111ce565b91506020823d821161123b575b8161122960209383611548565b81010312610550575082905186611151565b3d915061121c565b60029192501461124f57005b600e54801561055b5761126191611705565b60008091815b6103e88110611372575b50506007546001600160a01b03169050803b156101a257604051632142170760e11b81523060048201526001600160a01b038416602482015260448101839052906000908290606490829084905af1801561051157611361575b5080600052600d60205260006040812055600e5490811561134b577fbfa71c1f3eab9b9afac3b012c5023dc1113afdcd4a99f488b769ed7b283faaec9160001901600e5560405180916060825261133960608301604090600681526545524337323160d01b60208201520190565b906001602084015260408301520390a2005b634e487b7160e01b600052601160045260246000fd5b600061136c91611548565b826112cb565b80600052600d60205260406000205461138e575b600101611267565b918181146113a9576113a16001916116dc565b929050611386565b50509050828080611271565b836113c2919492946116eb565b906001820180921161134b576113db6113e19284611705565b90611725565b9184610fbe565b92600190610f8d565b6341abc80160e01b60005260046000fd5b5060ff600282015416610f1e565b63073e64fd60e21b6000523360045260245260446000fd5b346101a25760803660031901126101a2576114416114d0565b5061144a6114e6565b506064356001600160401b0381116101a25761146a903690600401611569565b50604051630a85bd0160e11b8152602090f35b346101a25760203660031901126101a2576004359063ffffffff60e01b82168092036101a257602091630271189760e51b81149081156114bf575b5015158152f35b6301ffc9a760e01b149050836114b8565b600435906001600160a01b03821682036101a257565b602435906001600160a01b03821682036101a257565b608081019081106001600160401b0382111761151757604052565b634e487b7160e01b600052604160045260246000fd5b606081019081106001600160401b0382111761151757604052565b90601f801991011681019081106001600160401b0382111761151757604052565b81601f820112156101a2578035906001600160401b038211611517576040519261159d601f8401601f191660200185611548565b828452602083830101116101a257816000926020809301838601378301015290565b9080601f830112156101a2578135916001600160401b038311611517578260051b90604051936115f26020840186611548565b84526020808501928201019283116101a257602001905b8282106116165750505090565b8135815260209182019101611609565b600b5481101561164557600b60005260206000209060021b0190600090565b634e487b7160e01b600052603260045260246000fd5b600b541561164557600b60009081527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db991565b600b546001101561164557600b60009081527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dbd91565b908160209103126101a2575180151581036101a25790565b600019811461134b5760010190565b9190820391821161134b57565b8051156116455760200190565b811561170f570690565b634e487b7160e01b600052601260045260246000fd5b9190820180921161134b57565b6000546001600160a01b0316330361174657565b63118cdaa760e01b6000523360045260246000fd5b60026001541461176c576002600155565b633ee5aeb560e01b60005260046000fd5b60ff600361178961165b565b50015416806118a7575b6117f65760ff60036117a361168e565b500154168061181a575b6117f6576000600b546002101561180657600b90527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01dc45460ff16806117fb575b6117f657600090565b600190565b50600e5415156117ed565b634e487b7160e01b81526032600452602490fd5b50600854600954604051627eeac760e11b8152306004820152602481019190915290602090829060449082906001600160a01b03165afa90811561051157600091611875575b50600161186b61168e565b50015411156117ad565b90506020813d60201161189f575b8161189060209383611548565b810103126101a2575138611860565b3d9150611883565b506006546040516370a0823160e01b815230600482015290602090829060249082906001600160a01b03165afa908115610511576000916118f8575b5060016118ee61165b565b5001541115611793565b90506020813d602011611922575b8161191360209383611548565b810103126101a25751386118e3565b3d915061190656fea2646970667358221220e40cd617ae7cb6001a184970a085e13227ec8c0cadc97a4293ee90c8acbe159164736f6c634300081c0033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x1D JUMPI JUMPDEST POP CALLDATASIZE ISZERO PUSH2 0x1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x147D JUMPI POP DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x1428 JUMPI DUP1 PUSH4 0x1FE543E3 EQ PUSH2 0xE94 JUMPI DUP1 PUSH4 0x2F65E98C EQ PUSH2 0xDC3 JUMPI DUP1 PUSH4 0x3C652A9A EQ PUSH2 0xD73 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xCEB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xC92 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xC69 JUMPI DUP1 PUSH4 0x917BB998 EQ PUSH2 0xBCA JUMPI DUP1 PUSH4 0x922B8079 EQ PUSH2 0xB40 JUMPI DUP1 PUSH4 0x96C82E57 EQ PUSH2 0xB22 JUMPI DUP1 PUSH4 0x9D32D2F7 EQ PUSH2 0xB04 JUMPI DUP1 PUSH4 0x9D63848A EQ PUSH2 0xAB9 JUMPI DUP1 PUSH4 0xA6482858 EQ PUSH2 0xA9B JUMPI DUP1 PUSH4 0xAA10B2F4 EQ PUSH2 0xA6F JUMPI DUP1 PUSH4 0xAFA92D0D EQ PUSH2 0xA4E JUMPI DUP1 PUSH4 0xB2BECC21 EQ PUSH2 0x929 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x894 JUMPI DUP1 PUSH4 0xBCD554F6 EQ PUSH2 0x72F JUMPI DUP1 PUSH4 0xC225FBD1 EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0xC2E952C7 EQ PUSH2 0x3A6 JUMPI DUP1 PUSH4 0xDAF484E0 EQ PUSH2 0x31C JUMPI DUP1 PUSH4 0xEB586CAE EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x1A7 JUMPI PUSH4 0xFF201114 EQ PUSH2 0x148 JUMPI CODESIZE PUSH2 0xF JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1A2 JUMPI PUSH2 0x171 PUSH1 0x80 SWAP2 PUSH2 0x1626 JUMP JUMPDEST POP DUP1 SLOAD SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x3 PUSH1 0x2 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND SWAP2 PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x1C0 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 ISZERO PUSH2 0x21A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP4 OR DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 STOP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x249 PUSH2 0x14D0 JUMP JUMPDEST POP PUSH2 0x252 PUSH2 0x14E6 JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x272 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1569 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x0 PUSH1 0x60 PUSH1 0x40 MLOAD PUSH2 0x2A6 DUP2 PUSH2 0x14FC JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x80 PUSH2 0x2C4 PUSH1 0x4 CALLDATALOAD PUSH2 0x1626 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2D1 DUP2 PUSH2 0x14FC JUMP JUMPDEST DUP2 SLOAD SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 PUSH1 0xFF PUSH1 0x3 PUSH1 0x2 DUP6 ADD SLOAD SWAP5 PUSH1 0x40 DUP8 ADD SWAP6 DUP7 MSTORE ADD SLOAD AND SWAP4 ADD SWAP3 ISZERO ISZERO DUP4 MSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE MLOAD PUSH1 0x20 DUP5 ADD MSTORE MLOAD PUSH1 0x40 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x0 PUSH1 0x40 DUP1 MLOAD PUSH2 0x33C DUP2 PUSH2 0x152D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x60 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x365 DUP2 PUSH2 0x152D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND SWAP2 DUP3 DUP3 MSTORE PUSH1 0x40 PUSH1 0xFF PUSH1 0x2 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 PUSH1 0x20 DUP7 ADD SWAP5 DUP6 MSTORE ADD SLOAD AND SWAP3 ADD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE MLOAD PUSH1 0x20 DUP4 ADD MSTORE MLOAD ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x3BA PUSH2 0x175B JUMP JUMPDEST PUSH1 0xA SLOAD CALLVALUE LT PUSH2 0x56C JUMPI PUSH2 0x3CB PUSH2 0x177D JUMP JUMPDEST ISZERO PUSH2 0x55B JUMPI PUSH4 0xFFFFFFFF PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0xA4 PUSH1 0x4 SLOAD PUSH1 0x0 PUSH1 0x5 SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x5D3B1D3 PUSH1 0xE4 SHL DUP7 MSTORE PUSH1 0x4 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 PUSH1 0xA0 SHR AND PUSH1 0x24 DUP7 ADD MSTORE PUSH2 0xFFFF DUP2 DUP10 SHR AND PUSH1 0x44 DUP7 ADD MSTORE DUP2 DUP2 AND PUSH1 0x64 DUP7 ADD MSTORE PUSH1 0x30 SHR AND PUSH1 0x84 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x526 JUMPI JUMPDEST POP PUSH2 0x4AF PUSH1 0x40 MLOAD PUSH2 0x454 DUP2 PUSH2 0x152D JUMP JUMPDEST CALLER DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP3 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x0 DUP3 MSTORE DUP6 PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP6 SLOAD AND OR DUP5 SSTORE MLOAD PUSH1 0x1 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xB73D415D4554D9BC64F3FADEA1D75CAAEB0F4DB5B74538B5E5DCBCE2660E6240 PUSH1 0x20 CALLER SWAP3 LOG2 PUSH1 0xA SLOAD DUP1 CALLVALUE GT PUSH2 0x4EC JUMPI JUMPDEST PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x4FB DUP2 SWAP5 CALLVALUE PUSH2 0x16EB JUMP JUMPDEST DUP2 DUP2 ISZERO PUSH2 0x51D JUMPI JUMPDEST CALLER SWAP1 CALL ISZERO PUSH2 0x511 JUMPI DUP1 PUSH2 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x503 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x553 JUMPI JUMPDEST DUP2 PUSH2 0x540 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x550 JUMPI POP MLOAD DUP2 PUSH2 0x444 JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x533 JUMP JUMPDEST PUSH4 0x8B2024A5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xCD1C8867 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP1 PUSH1 0x4 ADD CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1A2 JUMPI CALLDATASIZE PUSH1 0x24 DUP4 PUSH1 0x5 SHL DUP4 ADD ADD GT PUSH2 0x1A2 JUMPI SWAP1 PUSH2 0x5D6 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x6D8 JUMPI PUSH1 0x24 SWAP3 PUSH1 0x0 DUP5 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD CALLDATALOAD PUSH1 0x20 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x7 SLOAD AND PUSH1 0x40 MLOAD SWAP8 DUP9 DUP1 SWAP3 PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP3 MSTORE DUP6 PUSH1 0x4 DUP4 ADD MSTORE GAS STATICCALL DUP1 ISZERO PUSH2 0x6CD JUMPI DUP3 SWAP1 PUSH2 0x683 JUMPI JUMPDEST SWAP5 SWAP6 POP SWAP3 SWAP4 PUSH1 0x1 SWAP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ADDRESS EQ DUP1 PUSH2 0x66F JUMPI JUMPDEST PUSH2 0x64C JUMPI JUMPDEST POP POP ADD SWAP2 SWAP1 PUSH2 0x5DA JUMP JUMPDEST DUP2 PUSH1 0x40 SWAP2 DUP6 SWAP4 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE KECCAK256 SSTORE PUSH2 0x665 PUSH1 0xE SLOAD PUSH2 0x16DC JUMP JUMPDEST PUSH1 0xE SSTORE DUP5 DUP1 PUSH2 0x642 JUMP JUMPDEST POP DUP1 DUP3 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD ISZERO PUSH2 0x63D JUMP JUMPDEST POP SWAP5 PUSH1 0x20 DUP2 RETURNDATASIZE DUP3 GT PUSH2 0x6C5 JUMPI JUMPDEST DUP2 PUSH2 0x69D PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x6C1 JUMPI MLOAD SWAP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP7 SUB PUSH2 0x6C1 JUMPI SWAP4 SWAP5 DUP6 SWAP5 SWAP1 PUSH2 0x623 JUMP JUMPDEST POP DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x690 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH32 0x6CDA8E8BE956B74ED7E2D0F733D6DDDFCC7B34CE982E77240AD42816639056F5 DUP3 PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x40 DUP3 MSTORE PUSH2 0x724 PUSH1 0x40 DUP4 ADD PUSH1 0x40 SWAP1 PUSH1 0x6 DUP2 MSTORE PUSH6 0x455243373231 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP4 ADD MSTORE SUB SWAP1 LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP2 PUSH1 0x84 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 SWAP2 SUB PUSH2 0x1A2 JUMPI PUSH2 0x762 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0xB SLOAD DUP6 LT ISZERO PUSH2 0x883 JUMPI DUP3 DUP5 LT PUSH2 0x883 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH2 0x780 DUP3 PUSH2 0x14FC JUMP JUMPDEST DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 DUP5 DUP4 MSTORE PUSH1 0x40 DUP2 ADD SWAP2 DUP7 DUP4 MSTORE PUSH1 0x60 DUP3 ADD SWAP1 DUP2 MSTORE PUSH2 0x7A3 DUP9 PUSH2 0x1626 JUMP JUMPDEST SWAP4 SWAP1 SWAP4 PUSH2 0x86D JUMPI PUSH2 0x7D6 SWAP5 PUSH1 0x3 SWAP4 MLOAD DUP6 SSTORE MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD PUSH1 0x2 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SSTORE PUSH1 0x0 JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x825 JUMPI DUP1 PUSH1 0xFF PUSH1 0x3 PUSH2 0x7F8 PUSH1 0x1 SWAP5 PUSH2 0x1626 JUMP JUMPDEST POP ADD SLOAD AND PUSH2 0x807 JUMPI JUMPDEST ADD PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x81D PUSH2 0x813 DUP3 PUSH2 0x1626 JUMP JUMPDEST POP SLOAD PUSH1 0xC SLOAD PUSH2 0x1725 JUMP JUMPDEST PUSH1 0xC SSTORE PUSH2 0x801 JUMP JUMPDEST POP PUSH2 0x868 PUSH32 0x66C998C4F16E6680D6471C293823EBFB3B9F053A14111A2E24F54578C4C7975F SWAP4 PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xADF8131B PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x8AD PUSH2 0x14D0 JUMP JUMPDEST POP PUSH2 0x8B6 PUSH2 0x14E6 JUMP JUMPDEST POP PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x8D6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x15BF JUMP JUMPDEST POP PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x8F6 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x15BF JUMP JUMPDEST POP PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x916 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1569 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 SWAP1 PUSH2 0xA1A JUMPI JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 POP PUSH1 0x20 SWAP1 DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 DUP1 PUSH1 0x44 DUP2 ADD JUMPDEST SUB SWAP2 GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x9E6 JUMPI JUMPDEST POP PUSH2 0x9E2 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP4 DUP5 SWAP4 DUP5 PUSH1 0x40 SWAP2 SWAP5 SWAP4 SWAP3 PUSH1 0x60 DUP3 ADD SWAP6 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA12 JUMPI JUMPDEST DUP2 PUSH2 0xA02 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD SWAP1 DUP3 PUSH2 0x9BE JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x9F5 JUMP JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xA46 JUMPI JUMPDEST DUP2 PUSH2 0xA34 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI PUSH2 0x9AB SWAP1 MLOAD PUSH2 0x974 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xA27 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0xA67 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0xA SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 PUSH1 0xA SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x6 SLOAD PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND DUP2 MSTORE SWAP4 DUP6 AND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 SWAP1 SWAP4 AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 PUSH1 0xE SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x20 PUSH1 0xC SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0xB59 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0xB61 PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND DUP1 EXTCODESIZE ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x24 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE CALLDATALOAD PUSH1 0x44 DUP3 ADD MSTORE SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x511 JUMPI PUSH2 0xBBF JUMPI STOP JUMPDEST PUSH1 0x0 PUSH2 0x1B SWAP2 PUSH2 0x1548 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x0 PUSH1 0x20 PUSH2 0xC28 PUSH2 0xBEA PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0xBF2 PUSH2 0x1732 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE SWAP4 DUP5 SWAP3 DUP4 SWAP2 SWAP1 DUP3 SWAP1 PUSH1 0x44 DUP3 ADD SWAP1 JUMP JUMPDEST SUB SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS CALL DUP1 ISZERO PUSH2 0x511 JUMPI PUSH2 0xC41 JUMPI STOP JUMPDEST PUSH2 0x1B SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xC62 JUMPI JUMPDEST PUSH2 0xC5A DUP2 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x16C4 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0xC50 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0xCAB PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0xD04 PUSH2 0x1732 JUMP JUMPDEST PUSH2 0xD0C PUSH2 0x175B JUMP JUMPDEST SELFBALANCE PUSH1 0x0 DUP1 DUP1 DUP1 DUP5 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP3 DUP3 ISZERO PUSH2 0xD6A JUMPI JUMPDEST CALL ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D SWAP1 PUSH1 0x20 SWAP1 LOG2 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST POP PUSH2 0x8FC PUSH2 0xD25 JUMP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x60 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 SLOAD AND SWAP1 PUSH1 0xFF PUSH1 0x2 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 ADD SLOAD AND SWAP1 PUSH1 0x40 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x40 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0xDDC PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0xDE4 PUSH2 0x14E6 JUMP JUMPDEST PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP2 SWAP1 DUP3 SWAP1 SUB PUSH2 0x1A2 JUMPI PUSH32 0xFC333481437D78E9325F635584C23B08B3A65462687211C81FF8DA3891851D90 SWAP3 PUSH1 0x80 SWAP3 PUSH1 0x64 CALLDATALOAD SWAP2 PUSH2 0xE2B PUSH2 0x1732 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND SWAP3 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x6 SLOAD AND OR PUSH1 0x6 SSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x7 SLOAD AND OR PUSH1 0x7 SSTORE DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x8 SLOAD AND OR PUSH1 0x8 SSTORE DUP3 PUSH1 0x9 SSTORE PUSH1 0x40 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE LOG1 STOP JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0xEC4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x15BF JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER DUP2 SWAP1 SUB PUSH2 0x1410 JUMPI POP PUSH1 0x4 CALLDATALOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 DUP3 ISZERO DUP1 ISZERO PUSH2 0x1402 JUMPI JUMPDEST PUSH2 0x13F1 JUMPI PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xF46 PUSH2 0xF3C DUP3 PUSH2 0x16F8 JUMP JUMPDEST MLOAD PUSH1 0xC SLOAD SWAP1 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 SWAP2 SWAP1 DUP3 JUMPDEST PUSH1 0xB SLOAD DUP5 LT ISZERO PUSH2 0x1B JUMPI PUSH1 0xFF PUSH1 0x3 PUSH2 0xF63 DUP7 PUSH2 0x1626 JUMP JUMPDEST POP ADD SLOAD AND ISZERO PUSH2 0x13E8 JUMPI PUSH2 0xF81 SWAP1 PUSH2 0xF79 DUP6 PUSH2 0x1626 JUMP JUMPDEST POP SLOAD SWAP1 PUSH2 0x1725 JUMP JUMPDEST SWAP3 DUP4 DUP3 LT PUSH2 0xF94 JUMPI PUSH1 0x1 SWAP1 JUMPDEST ADD SWAP3 PUSH2 0xF4C JUMP JUMPDEST SWAP3 POP POP PUSH2 0xFA0 SWAP1 PUSH2 0x16F8 JUMP JUMPDEST MLOAD PUSH2 0xFAA DUP3 PUSH2 0x1626 JUMP JUMPDEST POP SWAP2 PUSH1 0x2 PUSH1 0x1 DUP5 ADD SLOAD SWAP4 ADD SLOAD DUP4 DUP2 GT PUSH2 0x13B5 JUMPI JUMPDEST POP DUP1 PUSH2 0x1102 JUMPI POP POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x20 DUP2 PUSH1 0x24 DUP2 DUP6 GAS STATICCALL DUP1 ISZERO PUSH2 0x511 JUMPI DUP4 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x10CE JUMPI JUMPDEST POP LT PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x0 SWAP1 GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x10B0 JUMPI JUMPDEST POP ISZERO PUSH2 0x109F JUMPI PUSH1 0xA0 PUSH32 0xBFA71C1F3EAB9B9AFAC3B012C5023DC1113AFDCD4A99F488B769ED7B283FAAEC SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x60 DUP3 MSTORE PUSH1 0x5 PUSH1 0x60 DUP4 ADD MSTORE PUSH5 0x455243323 PUSH1 0xDC SHL PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH4 0x12171D83 PUSH1 0xE3 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x10C8 SWAP2 POP PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0xC62 JUMPI PUSH2 0xC5A DUP2 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP4 PUSH2 0x1049 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x10FA JUMPI JUMPDEST DUP2 PUSH2 0x10E8 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x550 JUMPI POP DUP3 SWAP1 MLOAD DUP6 PUSH2 0x1001 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x10DB JUMP JUMPDEST PUSH1 0x1 DUP2 SUB PUSH2 0x1243 JUMPI POP POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 SWAP2 PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP8 GAS STATICCALL DUP1 ISZERO PUSH2 0x511 JUMPI DUP4 SWAP2 PUSH1 0x0 SWAP2 PUSH2 0x120F JUMPI JUMPDEST POP LT PUSH2 0x55B JUMPI DUP3 EXTCODESIZE ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 SWAP3 PUSH1 0xC4 DUP5 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP4 DUP5 SWAP3 PUSH4 0x79212195 PUSH1 0xE1 SHL DUP5 MSTORE ADDRESS PUSH1 0x4 DUP6 ADD MSTORE DUP10 PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD MSTORE DUP7 PUSH1 0x64 DUP5 ADD MSTORE PUSH1 0xA0 PUSH1 0x84 DUP5 ADD MSTORE DUP2 PUSH1 0xA4 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x511 JUMPI PUSH32 0xBFA71C1F3EAB9B9AFAC3B012C5023DC1113AFDCD4A99F488B769ED7B283FAAEC SWAP3 PUSH1 0xA0 SWAP3 PUSH2 0x11FE JUMPI JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x60 DUP4 MSTORE PUSH1 0x7 PUSH1 0x60 DUP5 ADD MSTORE PUSH7 0x45524331313535 PUSH1 0xC8 SHL PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x0 PUSH2 0x1209 SWAP2 PUSH2 0x1548 JUMP JUMPDEST DUP5 PUSH2 0x11CE JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x123B JUMPI JUMPDEST DUP2 PUSH2 0x1229 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x550 JUMPI POP DUP3 SWAP1 MLOAD DUP7 PUSH2 0x1151 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x121C JUMP JUMPDEST PUSH1 0x2 SWAP2 SWAP3 POP EQ PUSH2 0x124F JUMPI STOP JUMPDEST PUSH1 0xE SLOAD DUP1 ISZERO PUSH2 0x55B JUMPI PUSH2 0x1261 SWAP2 PUSH2 0x1705 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP2 DUP2 JUMPDEST PUSH2 0x3E8 DUP2 LT PUSH2 0x1372 JUMPI JUMPDEST POP POP PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 EXTCODESIZE ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 PUSH1 0x0 SWAP1 DUP3 SWAP1 PUSH1 0x64 SWAP1 DUP3 SWAP1 DUP5 SWAP1 GAS CALL DUP1 ISZERO PUSH2 0x511 JUMPI PUSH2 0x1361 JUMPI JUMPDEST POP DUP1 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH1 0xE SLOAD SWAP1 DUP2 ISZERO PUSH2 0x134B JUMPI PUSH32 0xBFA71C1F3EAB9B9AFAC3B012C5023DC1113AFDCD4A99F488B769ED7B283FAAEC SWAP2 PUSH1 0x0 NOT ADD PUSH1 0xE SSTORE PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x60 DUP3 MSTORE PUSH2 0x1339 PUSH1 0x60 DUP4 ADD PUSH1 0x40 SWAP1 PUSH1 0x6 DUP2 MSTORE PUSH6 0x455243373231 PUSH1 0xD0 SHL PUSH1 0x20 DUP3 ADD MSTORE ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE SUB SWAP1 LOG2 STOP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x136C SWAP2 PUSH2 0x1548 JUMP JUMPDEST DUP3 PUSH2 0x12CB JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x138E JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x1267 JUMP JUMPDEST SWAP2 DUP2 DUP2 EQ PUSH2 0x13A9 JUMPI PUSH2 0x13A1 PUSH1 0x1 SWAP2 PUSH2 0x16DC JUMP JUMPDEST SWAP3 SWAP1 POP PUSH2 0x1386 JUMP JUMPDEST POP POP SWAP1 POP DUP3 DUP1 DUP1 PUSH2 0x1271 JUMP JUMPDEST DUP4 PUSH2 0x13C2 SWAP2 SWAP5 SWAP3 SWAP5 PUSH2 0x16EB JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x134B JUMPI PUSH2 0x13DB PUSH2 0x13E1 SWAP3 DUP5 PUSH2 0x1705 JUMP JUMPDEST SWAP1 PUSH2 0x1725 JUMP JUMPDEST SWAP2 DUP5 PUSH2 0xFBE JUMP JUMPDEST SWAP3 PUSH1 0x1 SWAP1 PUSH2 0xF8D JUMP JUMPDEST PUSH4 0x41ABC801 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0xF1E JUMP JUMPDEST PUSH4 0x73E64FD PUSH1 0xE2 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH1 0x0 REVERT JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH2 0x1441 PUSH2 0x14D0 JUMP JUMPDEST POP PUSH2 0x144A PUSH2 0x14E6 JUMP JUMPDEST POP PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1A2 JUMPI PUSH2 0x146A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x1569 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x1A2 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x1A2 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1A2 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x2711897 PUSH1 0xE5 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x14BF JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x14B8 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1A2 JUMPI JUMP JUMPDEST PUSH1 0x80 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x60 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1517 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1517 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x159D PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1548 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0x1A2 JUMPI DUP2 PUSH1 0x0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP1 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x1A2 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x1517 JUMPI DUP3 PUSH1 0x5 SHL SWAP1 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x15F2 PUSH1 0x20 DUP5 ADD DUP7 PUSH2 0x1548 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP3 DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x1A2 JUMPI PUSH1 0x20 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1616 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1609 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1645 JUMPI PUSH1 0xB PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xB SLOAD ISZERO PUSH2 0x1645 JUMPI PUSH1 0xB PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DB9 SWAP2 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 LT ISZERO PUSH2 0x1645 JUMPI PUSH1 0xB PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DBD SWAP2 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1A2 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1A2 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x134B JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x134B JUMPI JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1645 JUMPI PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x170F JUMPI MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x134B JUMPI JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x1746 JUMPI JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x176C JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xFF PUSH1 0x3 PUSH2 0x1789 PUSH2 0x165B JUMP JUMPDEST POP ADD SLOAD AND DUP1 PUSH2 0x18A7 JUMPI JUMPDEST PUSH2 0x17F6 JUMPI PUSH1 0xFF PUSH1 0x3 PUSH2 0x17A3 PUSH2 0x168E JUMP JUMPDEST POP ADD SLOAD AND DUP1 PUSH2 0x181A JUMPI JUMPDEST PUSH2 0x17F6 JUMPI PUSH1 0x0 PUSH1 0xB SLOAD PUSH1 0x2 LT ISZERO PUSH2 0x1806 JUMPI PUSH1 0xB SWAP1 MSTORE PUSH32 0x175B7A638427703F0DBE7BB9BBF987A2551717B34E79F33B5B1008D1FA01DC4 SLOAD PUSH1 0xFF AND DUP1 PUSH2 0x17FB JUMPI JUMPDEST PUSH2 0x17F6 JUMPI PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH1 0xE SLOAD ISZERO ISZERO PUSH2 0x17ED JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0x40 MLOAD PUSH3 0x7EEAC7 PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x44 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1875 JUMPI JUMPDEST POP PUSH1 0x1 PUSH2 0x186B PUSH2 0x168E JUMP JUMPDEST POP ADD SLOAD GT ISZERO PUSH2 0x17AD JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x189F JUMPI JUMPDEST DUP2 PUSH2 0x1890 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD CODESIZE PUSH2 0x1860 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1883 JUMP JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x20 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x511 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x18F8 JUMPI JUMPDEST POP PUSH1 0x1 PUSH2 0x18EE PUSH2 0x165B JUMP JUMPDEST POP ADD SLOAD GT ISZERO PUSH2 0x1793 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1922 JUMPI JUMPDEST DUP2 PUSH2 0x1913 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x1548 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1A2 JUMPI MLOAD CODESIZE PUSH2 0x18E3 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1906 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 0xC 0xD6 OR 0xAE PUSH29 0xB6001A184970A085E13227EC8C0CADC97A4293EE90C8ACBE159164736F PUSH13 0x634300081C0033000000000000 ","sourceMap":"642:11428:35:-:0;;;;;;;;;;-1:-1:-1;642:11428:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;;;1576:31;642:11428;1576:31;;;;;;642:11428;1576:31;;:::i;:::-;642:11428;;;1576:31;642:11428;1576:31;;642:11428;1576:31;642:11428;1576:31;;;;642:11428;1576:31;;642:11428;;;;;;;;;;;;;;;;;;;;;;;1576:31;642:11428;1576:31;;642:11428;;;;;;-1:-1:-1;;642:11428:35;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;-1:-1:-1;;;;;642:11428:35;2627:22:2;;2623:91;;642:11428:35;;;-1:-1:-1;;;;;;642:11428:35;;;;;;-1:-1:-1;;;;;642:11428:35;;3052:40:2;;642:11428:35;3052:40:2;642:11428:35;2623:91:2;2672:31;;;642:11428:35;2672:31:2;642:11428:35;;;;;2672:31:2;642:11428:35;;;;;;-1:-1:-1;;642:11428:35;;;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;:::i;:::-;-1:-1:-1;642:11428:35;;-1:-1:-1;;;642:11428:35;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;11521:19;642:11428;;11521:19;:::i;:::-;642:11428;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;11662:15;642:11428;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;2466:103:23;;:::i;:::-;4199:8:35;642:11428;4187:9;:20;4183:54;;4311:22;;:::i;:::-;4310:23;4306:59;;642:11428;;4404:11;642:11428;4404:175;642:11428;;;4497:20;642:11428;;;;;;;;;;;;4404:175;;642:11428;4404:175;;642:11428;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4404:175;;;;;;;642:11428;4404:175;;;642:11428;;;;;;;;:::i;:::-;4662:10;642:11428;;4404:11;642:11428;4627:126;;4697:15;642:11428;;;4627:126;;642:11428;;;;;;;4598:15;642:11428;;;;;;;;;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4777:32;642:11428;4662:10;4777:32;;4199:8;642:11428;4187:9;;4865:20;4861:101;;642:11428;;;;;4861:101;642:11428;4187:9;;4930:20;4187:9;;;4930:20;:::i;:::-;4901:50;;;;;4861:101;4662:10;4901:50;;;;;4861:101;;;4901:50;642:11428;;;;;;;;;4901:50;;;;;4404:175;;642:11428;4404:175;;642:11428;4404:175;;;;;;642:11428;4404:175;;;:::i;:::-;;;642:11428;;;;;;4404:175;;;642:11428;;;4404:175;;;-1:-1:-1;4404:175:35;;4306:59;7507:23;;;642:11428;4342:23;642:11428;;4342:23;4183:54;4216:21;;;642:11428;4216:21;642:11428;;4216:21;642:11428;;;;;;-1:-1:-1;;642:11428:35;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;;;;;1500:62:2;;;:::i;:::-;642:11428:35;10197:317;10238:3;10217:19;;;;;;10304:35;642:11428;;;;;;;;;;;;;;;;10304:18;642:11428;;;;;;;;;;;10304:35;;;642:11428;10304:35;;642:11428;10304:35;;;;;;;;;;10238:3;10351:4;;-1:-1:-1;10351:4:35;;642:11428;;-1:-1:-1;;;;;;642:11428:35;10351:4;10304:52;;:91;;10238:3;10300:204;;10238:3;;;642:11428;10202:13;;;;10300:204;642:11428;;;;;;10415:21;642:11428;;;;10467:22;;642:11428;10467:22;:::i;:::-;;642:11428;10300:204;;;;10304:91;642:11428;;;;10360:21;642:11428;;;;;;10360:35;10304:91;;:35;;;642:11428;10304:35;;;;;;;;;642:11428;10304:35;;;:::i;:::-;;;642:11428;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;10304:35;;;;-1:-1:-1;10304:35:35;;642:11428;;;;10304:35;;;-1:-1:-1;10304:35:35;;;642:11428;;;;;;;;;10217:19;10528:47;10217:19;642:11428;;;;;;;;;;;;;;;;-1:-1:-1;;;642:11428:35;;;;;;;;;;;;;10528:47;;;642:11428;;;;;;;-1:-1:-1;;642:11428:35;;;;;;;;;;;;;;;;;;;;;;;1500:62:2;;:::i;:::-;9148:11:35;642:11428;9138:28;;;9134:67;;9215:21;;;9211:60;;642:11428;;;;;;:::i;:::-;;;;;9312:146;;642:11428;;;;;9312:146;;642:11428;;;;;9312:146;;642:11428;;;9290:19;;;:::i;:::-;642:11428;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10641:15;642:11428;;10710:3;9148:11;642:11428;10686:22;;;;;10733:14;642:11428;;10733:14;642:11428;10733:14;;:::i;:::-;:21;;642:11428;;10729:96;;10710:3;642:11428;10671:13;;10729:96;10774:36;10789:14;;;:::i;:::-;642:11428;;10641:15;642:11428;10774:36;:::i;:::-;10641:15;642:11428;10729:96;;10686:22;;9517:55;;10686:22;642:11428;;9517:55;;;;642:11428;;;;;;;;;;;;;;;;;;9517:55;;;;642:11428;;;;;;;;;;;;;9211:60;9175:26;;;642:11428;9245:26;642:11428;;9245:26;642:11428;;;;;;-1:-1:-1;;642:11428:35;;;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;:::i;:::-;-1:-1:-1;642:11428:35;;-1:-1:-1;;;642:11428:35;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;11846:6;642:11428;;;-1:-1:-1;;;11846:42:35;;11882:4;642:11428;11846:42;;642:11428;;;;;;11846:42;;642:11428;;-1:-1:-1;;;;;642:11428:35;11846:42;;;;;;642:11428;11846:42;;;642:11428;11915:19;642:11428;11960:21;642:11428;;;-1:-1:-1;;;11915:67:35;;11882:4;642:11428;11915:67;;642:11428;;;;;;;;;-1:-1:-1;642:11428:35;;;;-1:-1:-1;;;;;642:11428:35;;;;;;11915:67;;;;;;;;;;642:11428;11915:67;;;642:11428;;;12006:20;642:11428;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11915:67;;;;642:11428;11915:67;;642:11428;11915:67;;;;;;642:11428;11915:67;;;:::i;:::-;;;642:11428;;;;;11915:67;;;;;;;-1:-1:-1;11915:67:35;;11846:42;;642:11428;11846:42;;642:11428;11846:42;;;;;;642:11428;11846:42;;;:::i;:::-;;;642:11428;;;;11915:67;642:11428;;11846:42;;;;;-1:-1:-1;11846:42:35;;642:11428;;;;;;-1:-1:-1;;642:11428:35;;;;1500:62:2;;:::i;:::-;642:11428:35;;10073:19;642:11428;;;;;;;;-1:-1:-1;;642:11428:35;;;;;;;;1676:56;642:11428;;;;;;;;;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;;1485:36;642:11428;;;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;1424:28;642:11428;1424:28;642:11428;1424:28;642:11428;1424:28;642:11428;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;;1762:35;642:11428;;;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;;1613:26;642:11428;;;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;;;:::i;:::-;1500:62:2;;:::i;:::-;642:11428:35;;-1:-1:-1;;;;;642:11428:35;;;;;11116:70;;;;;642:11428;;-1:-1:-1;;;11116:70:35;;11162:4;642:11428;11116:70;;642:11428;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;;;-1:-1:-1;;11116:70:35;;;;;;;;642:11428;11116:70;642:11428;11116:70;;;:::i;642:11428::-;;;;;;-1:-1:-1;;642:11428:35;;;;;;10967:39;642:11428;;:::i;:::-;1500:62:2;;:::i;:::-;642:11428:35;;;;-1:-1:-1;;;10967:39:35;;-1:-1:-1;;;;;642:11428:35;;;;10967:39;;642:11428;;;;;;;;;;;;;;;;;;;;;10967:39;;;-1:-1:-1;;;;;642:11428:35;10967:39;;;;;;;;642:11428;10967:39;;;642:11428;10967:39;642:11428;10967:39;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;642:11428;;;;;;-1:-1:-1;;642:11428:35;;;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;1500:62:2;;:::i;:::-;642:11428:35;;;-1:-1:-1;;;;;;642:11428:35;;;;-1:-1:-1;;;;;642:11428:35;3052:40:2;642:11428:35;;3052:40:2;642:11428:35;;;;;;;-1:-1:-1;;642:11428:35;;;;1500:62:2;;:::i;:::-;2466:103:23;;:::i;:::-;11278:21:35;642:11428;;;;;;;;;;;;;11309:33;;;;;642:11428;11309:33;;;;642:11428;;;;;;;-1:-1:-1;;;;;642:11428:35;;11357:31;;642:11428;;11357:31;1857:1:23;642:11428:35;;;11309:33;;;;;642:11428;;;;;;-1:-1:-1;;642:11428:35;;;;;;;;1943:57;642:11428;;;;;;;;;;;;;;1943:57;642:11428;1943:57;642:11428;1943:57;;642:11428;1943:57;;642:11428;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;;;:::i;:::-;;;:::i;:::-;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;9924:65;642:11428;;;;;1500:62:2;;;:::i;:::-;642:11428:35;;;;;;;;-1:-1:-1;;;;;642:11428:35;;9720:6;642:11428;;;9720:6;642:11428;;;;;;;;-1:-1:-1;;;;;642:11428:35;;9764:18;642:11428;;;9764:18;642:11428;;-1:-1:-1;;;;;642:11428:35;;9811:19;642:11428;;;9811:19;642:11428;;9861:21;642:11428;;;;;;;;;;;;;;;;;;9924:65;642:11428;;;;;;;-1:-1:-1;;642:11428:35;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;:::i;:::-;6907:14:0;-1:-1:-1;;;;;642:11428:35;6893:10:0;:28;;;6889:109;;-1:-1:-1;642:11428:35;;;;;;5112:15;642:11428;;;;;;;-1:-1:-1;;;;;642:11428:35;;;5152:26;;:47;;;;642:11428;5148:76;;5243:17;;642:11428;;-1:-1:-1;;642:11428:35;;;;;5378:28;:14;;;:::i;:::-;642:11428;5395:11;642:11428;5378:28;;:::i;:::-;642:11428;;5416:28;642:11428;5507:3;5487:11;642:11428;5483:22;;;;;642:11428;5531:21;:14;;;:::i;:::-;:21;;642:11428;;5530:22;5526:36;;5589:41;5609:14;;;;:::i;:::-;642:11428;;5589:41;;:::i;:::-;5648:30;;;;5644:134;;642:11428;5507:3;5468:13;642:11428;5468:13;;;5644:134;5725:14;;;;;;:::i;:::-;642:11428;5921:19;;;:::i;:::-;5967:14;;5243:17;642:11428;5967:14;;642:11428;6004:14;;642:11428;6004:31;;;6000:124;;5644:134;-1:-1:-1;6146:11:35;;;-1:-1:-1;;6787:6:35;642:11428;;;-1:-1:-1;;;6787:42:35;;6823:4;642:11428;6787:42;;642:11428;-1:-1:-1;;;;;642:11428:35;;;;;;;;;6787:42;;;;;;;;642:11428;6787:42;;;6142:541;6843:16;;6839:52;;642:11428;;-1:-1:-1;;;6925:40:35;;-1:-1:-1;;;;;642:11428:35;;;6925:40;;642:11428;;;;;;;;;;;;;;;;-1:-1:-1;;6925:40:35;;;;;;;642:11428;6925:40;;;6142:541;6979:8;;6975:37;;6250:40;;642:11428;;;;;;;;;;;;-1:-1:-1;;;642:11428:35;;;;;;;;;;;;;6250:40;642:11428;6975:37;6996:16;;;642:11428;6996:16;642:11428;;6996:16;6925:40;;;;642:11428;6925:40;;;;;;;;;:::i;:::-;;;;6787:42;;;642:11428;6787:42;;;;;;;;;642:11428;6787:42;;;:::i;:::-;;;642:11428;;;;;;;;6787:42;;;;;;-1:-1:-1;6787:42:35;;6142:541;642:11428;6311:11;;642:11428;;-1:-1:-1;;7119:19:35;642:11428;7164:21;642:11428;;;-1:-1:-1;;;7119:67:35;;7157:4;642:11428;7119:67;;642:11428;;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;7119:67;;;;;;;;642:11428;7119:67;;;6307:376;7200:16;;7196:52;;7267:92;;;;;642:11428;;7267:92;642:11428;;;;;;;;;;;;7267:92;;7157:4;642:11428;7267:92;;642:11428;;;;;;;;;;;;;;;;;;;;;;;;;7267:92;;;;;;;6419:62;7267:92;642:11428;7267:92;;;6307:376;642:11428;7164:21;642:11428;;;;;;;;;;;;-1:-1:-1;;;642:11428:35;;;;;;;;;;;;6419:62;642:11428;7267:92;642:11428;7267:92;;;:::i;:::-;;;;7119:67;;;642:11428;7119:67;;;;;;;;;642:11428;7119:67;;;:::i;:::-;;;642:11428;;;;;;;;7119:67;;;;;;-1:-1:-1;7119:67:35;;6307:376;5243:17;6502:11;;;;6498:185;;6307:376;6498:185;7473:20;642:11428;7473:25;;7469:61;;7612:33;;;:::i;:::-;642:11428;7689:27;7740:19;;7761:14;7771:4;7761:14;;;;7735:333;-1:-1:-1;;8114:18:35;642:11428;-1:-1:-1;;;;;642:11428:35;;-1:-1:-1;8114:73:35;;;;;642:11428;;-1:-1:-1;;;8114:73:35;;8158:4;642:11428;8114:73;;642:11428;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;;;-1:-1:-1;;8114:73:35;;;;;;;;7735:333;642:11428;;;;7832:21;642:11428;;;;;;;7473:20;642:11428;;;;;;6630:42;642:11428;;;;7473:20;642:11428;;;;;;;;;;;;;;;;;-1:-1:-1;;;642:11428:35;;;;;;;;;;;;;;;;;;6630:42;;;6498:185;642:11428;;;;;;;;;;;;8114:73;642:11428;8114:73;;;:::i;:::-;;;;7777:9;642:11428;;;7832:21;642:11428;;;;;;7828:230;;7777:9;642:11428;;7740:19;;7828:230;7890:27;;;;7886:126;;8029:14;642:11428;8029:14;;:::i;:::-;7828:230;;;;;7886:126;7941:25;;;;7988:5;;;;;6000:124;6076:31;;;;;;;:::i;:::-;642:11428;;;;;;;;;6062:50;6051:62;6062:50;;;:::i;:::-;6051:62;;:::i;:::-;6000:124;;;;5526:36;5554:8;642:11428;5554:8;;;5148:76;5208:16;;;642:11428;5208:16;642:11428;;5208:16;5152:47;5182:17;642:11428;5182:17;;;642:11428;;5152:47;;6889:109:0;6938:53;;;642:11428:35;6938:53:0;6893:10;642:11428:35;;;;;;6938:53:0;642:11428:35;;;;;;-1:-1:-1;;642:11428:35;;;;;;:::i;:::-;;;;:::i;:::-;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;:::i;:::-;-1:-1:-1;642:11428:35;;-1:-1:-1;;;642:11428:35;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;742:49:8;;;:89;;;;642:11428:35;;;;;;;742:89:8;-1:-1:-1;;;829:40:27;;-1:-1:-1;742:89:8;;;642:11428:35;;;;-1:-1:-1;;;;;642:11428:35;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;642:11428:35;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;:::o;:::-;;;;-1:-1:-1;642:11428:35;;;;;-1:-1:-1;642:11428:35;;;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;-1:-1:-1;;642:11428:35;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;642:11428:35;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;642:11428:35;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;5487:11;642:11428;;;;;;5487:11;-1:-1:-1;642:11428:35;;-1:-1:-1;642:11428:35;;;;;;-1:-1:-1;642:11428:35;:::o;:::-;;;;;;;;;;;;;8459:11;642:11428;;;;8459:11;642:11428;;;;;;:::o;:::-;8459:11;642:11428;8651:1;642:11428;;;;8459:11;-1:-1:-1;642:11428:35;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;642:11428:35;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;1796:162:2:-;1710:6;642:11428:35;-1:-1:-1;;;;;642:11428:35;735:10:21;1855:23:2;1851:101;;1796:162::o;1851:101::-;1901:40;;;1710:6;1901:40;735:10:21;1901:40:2;642:11428:35;;1710:6:2;1901:40;2575:307:23;1899:1;2702:7;642:11428:35;2702:18:23;2698:86;;1899:1;2702:7;642:11428:35;2575:307:23:o;2698:86::-;2743:30;;;-1:-1:-1;2743:30:23;;-1:-1:-1;2743:30:23;8362:605:35;642:11428;8459:21;:14;;:::i;:::-;:21;;642:11428;;8459:95;;;8362:605;8455:137;;642:11428;8459:21;8639:14;;:::i;:::-;:21;;642:11428;;8639:120;;;8362:605;8635:162;;642:11428;8459:11;642:11428;8855:1;642:11428;;;;8459:11;642:11428;;8843:21;642:11428;;;;8843:49;;8362:605;8839:91;;642:11428;8362:605;:::o;8839:91::-;8651:1;8908:11;:::o;8843:49::-;642:11428;8868:20;642:11428;8868:24;;8843:49;;642:11428;-1:-1:-1;;;642:11428:35;;;;;;;;8639:120;-1:-1:-1;8664:19:35;642:11428;8709:21;642:11428;;;-1:-1:-1;;;8664:67:35;;8702:4;8664:67;;;642:11428;;;;;;;;;8664:67;;642:11428;;;;;;-1:-1:-1;;;;;642:11428:35;8664:67;;;;;;;642:11428;8664:67;;;8639:120;8735:14;8651:1;8735:14;;:::i;:::-;:24;;642:11428;-1:-1:-1;8664:95:35;8639:120;;8664:67;;;;;;;;;;;;;642:11428;8664:67;;;:::i;:::-;;;642:11428;;;;;8664:67;;;;;;-1:-1:-1;8664:67:35;;8459:95;-1:-1:-1;8484:6:35;642:11428;;;-1:-1:-1;;;8484:42:35;;8520:4;8484:42;;;642:11428;;;;;;8484:42;;642:11428;;-1:-1:-1;;;;;642:11428:35;8484:42;;;;;;;642:11428;8484:42;;;8459:95;8530:14;:24;:14;;:::i;:::-;:24;;642:11428;-1:-1:-1;8484:70:35;8459:95;;8484:42;;;642:11428;8484:42;;642:11428;8484:42;;;;;;642:11428;8484:42;;;:::i;:::-;;;642:11428;;;;;8484:42;;;;;;-1:-1:-1;8484:42:35;"},"methodIdentifiers":{"availableERC721Count()":"9d32d2f7","availableERC721Tokens(uint256)":"aa10b2f4","boxPrice()":"a6482858","emergencyWithdrawNFT(address,uint256)":"922b8079","emergencyWithdrawTokens(address,uint256)":"917bb998","getInventoryStatus()":"b2becc21","getPendingRequest(uint256)":"daf484e0","getRewardTier(uint256)":"eb586cae","onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","onERC721Received(address,address,uint256,bytes)":"150b7a02","openBox()":"c2e952c7","owner()":"8da5cb5b","pendingRequests(uint256)":"3c652a9a","rawFulfillRandomWords(uint256,uint256[])":"1fe543e3","renounceOwnership()":"715018a6","replenishERC721Inventory(uint256[])":"c225fbd1","rewardTiers(uint256)":"ff201114","supportsInterface(bytes4)":"01ffc9a7","tokens()":"9d63848a","totalWeight()":"96c82e57","transferOwnership(address)":"f2fde38b","updateBoxPrice(uint256)":"afa92d0d","updateRewardTier(uint256,uint256,uint256,uint256,bool)":"bcd554f6","updateTokenContracts(address,address,address,uint256)":"2f65e98c","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_subscriptionId\",\"type\":\"uint64\"},{\"internalType\":\"address\",\"name\":\"_erc20Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc721Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc1155Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_erc1155TokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InsufficientInventory\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientPayment\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRequest\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTierConfiguration\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"have\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"want\",\"type\":\"address\"}],\"name\":\"OnlyCoordinatorCanFulfill\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"BoxOpened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"tokenType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InventoryReplenished\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"rewardType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"RewardAssigned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"}],\"name\":\"RewardTierUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc20\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc721\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"erc1155\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc1155TokenId\",\"type\":\"uint256\"}],\"name\":\"TokenContractsUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"availableERC721Count\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"availableERC721Tokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boxPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInventoryStatus\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc20Balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc1155Balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc721Count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"}],\"name\":\"getPendingRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"}],\"internalType\":\"struct LootBox.PendingRequest\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"}],\"name\":\"getRewardTier\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"internalType\":\"struct LootBox.RewardTier\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"openBox\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pendingRequests\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"fulfilled\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"randomWords\",\"type\":\"uint256[]\"}],\"name\":\"rawFulfillRandomWords\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"replenishERC721Inventory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"rewardTiers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"erc721Token\",\"type\":\"address\"},{\"internalType\":\"contract IERC1155\",\"name\":\"erc1155Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"erc1155TokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"updateBoxPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tierId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"updateRewardTier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc721\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc1155\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_erc1155TokenId\",\"type\":\"uint256\"}],\"name\":\"updateTokenContracts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LootBox.sol\":\"LootBox\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol\":{\"keccak256\":\"0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03385e076f6c2ad534bffe7c655cf259242e0f133f0ebfd56f914c0dde4a3f4\",\"dweb:/ipfs/QmWkQVSoAoRu1LXQTfDeic9QESjQkjT4G5Kt1VptTaxQDP\"]},\"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol\":{\"keccak256\":\"0x619d9d975540d65ef8d6332a67cbd0dda5b0f95b120b8da56695ed50c2f9fc30\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d13e94e2c3a7e72241c0f10684274b9509d005bc50b247a8a2442b0c12760bc1\",\"dweb:/ipfs/QmXxTc8ngzwFX9RbSe9Fuso8sSScHDUBfgyTvBcgstJiKt\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0xf189f9b417fe1931e1ab706838aff1128528694a9fcdb5ff7665197f2ca57d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ff0143c836c8c9f85d13708733c09e21251395847fccfb518bf3b556726a840\",\"dweb:/ipfs/QmP69sjjrQrhYAsvCSSB69Bx66SiUPdQUqdzMYnf4wANHm\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x6ec6d7fce29668ede560c7d2e10f9d10de3473f5298e431e70a5767db42fa620\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac0139e51874aeec0730d040e57993187541777eb01d5939c06d5d2b986a54e8\",\"dweb:/ipfs/QmZbMbdPzusXuX9FGkyArV8hgzKLBZaL5RzMtCdCawtwPF\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0x845cd93ae5216fb91ab3085c632006cdff95460134dd83f3519c1b08cc3e1b4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1ce223213ad3f92b14a3a36e18bc9ca5de815f43121db298a4ca6faecb8498f\",\"dweb:/ipfs/QmR5o4LeKx1UNgoM5pXpm6Cxjgf9H8DXHcx4SYaUM1K7je\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"keccak256\":\"0xaad20f8713b5cd98114278482d5d91b9758f9727048527d582e8e88fd4901fd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5396e8dbb000c2fada59b7d2093b9c7c870fd09413ab0fdaba45d882959c6244\",\"dweb:/ipfs/QmXQn5XckSiUsUBpMYuiFeqnojRX4rKa9jmgjCPeTuPmhh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/LootBox.sol\":{\"keccak256\":\"0xa8add10c381182944c61e37e3eab229ae87e50d66af811bf734447d9d7885557\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6d8e6379e219207539ee7aab2bdad9b2524e5ff7cfd4821be2cec4967881bf9\",\"dweb:/ipfs/QmPoABRzhg8faUfFuvMrBGFzQxzw2psuR5QYgsXZjvjM74\"]}},\"version\":1}"}}}}}