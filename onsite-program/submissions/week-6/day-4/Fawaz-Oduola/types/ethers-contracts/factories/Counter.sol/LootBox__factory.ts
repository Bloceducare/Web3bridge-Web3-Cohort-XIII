/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, BigNumberish, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { LootBox, LootBoxInterface } from "../../Counter.sol/LootBox.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "int256",
        "name": "weightERC20",
        "type": "int256"
      },
      {
        "internalType": "int256",
        "name": "weightERC721",
        "type": "int256"
      },
      {
        "internalType": "int256",
        "name": "weightERC1155",
        "type": "int256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "int256",
        "name": "random",
        "type": "int256"
      }
    ],
    "name": "getReward",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "openBox",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x60a060405260405180606001604052805f60028111156100225761002161030a565b5b60028111156100345761003361030a565b5b81526020016001600281111561004d5761004c61030a565b5b600281111561005f5761005e61030a565b5b81526020016002808111156100775761007661030a565b5b60028111156100895761008861030a565b5b8152505f90600361009b92919061023e565b503480156100a7575f5ffd5b50604051610a11380380610a1183398181016040528101906100c9919061036e565b8260015f5f60028111156100e0576100df61030a565b5b60028111156100f2576100f161030a565b5b81526020019081526020015f20819055508160015f6001600281111561011b5761011a61030a565b5b600281111561012d5761012c61030a565b5b81526020019081526020015f20819055508060015f6002808111156101555761015461030a565b5b60028111156101675761016661030a565b5b81526020019081526020015f208190555060015f60028081111561018e5761018d61030a565b5b60028111156101a05761019f61030a565b5b81526020019081526020015f205460015f600160028111156101c5576101c461030a565b5b60028111156101d7576101d661030a565b5b81526020019081526020015f205460015f5f60028111156101fb576101fa61030a565b5b600281111561020d5761020c61030a565b5b81526020019081526020015f205461022591906103eb565b61022f91906103eb565b6080818152505050505061042c565b828054828255905f5260205f2090601f016020900481019282156102de579160200282015f5b838211156102b057835183826101000a81548160ff021916908360028111156102905761028f61030a565b5b021790555092602001926001016020815f01049283019260010302610264565b80156102dc5782816101000a81549060ff02191690556001016020815f010492830192600103026102b0565b505b5090506102eb91906102ef565b5090565b5b80821115610306575f815f9055506001016102f0565b5090565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5f5ffd5b5f819050919050565b61034d8161033b565b8114610357575f5ffd5b50565b5f8151905061036881610344565b92915050565b5f5f5f6060848603121561038557610384610337565b5b5f6103928682870161035a565b93505060206103a38682870161035a565b92505060406103b48682870161035a565b9150509250925092565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6103f58261033b565b91506104008361033b565b92508282019050828112155f8312168382125f841215161715610426576104256103be565b5b92915050565b6080516105d06104415f395f50506105d05ff3fe608060405260043610610028575f3560e01c8063a3d457e71461002c578063c2e952c714610068575b5f5ffd5b348015610037575f5ffd5b50610052600480360381019061004d91906103b0565b610072565b60405161005f919061044b565b60405180910390f35b610070610084565b005b606061007d826100d1565b9050919050565b67016345785d8a00003410156100cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100c6906104b5565b60405180910390fd5b565b60605f5b5f805490508110156103725760015f5f83815481106100f7576100f66104d3565b5b905f5260205f2090602091828204019190069054906101000a900460ff16600281111561012757610126610500565b5b600281111561013957610138610500565b5b81526020019081526020015f205483610152919061055a565b92505f8313610365575f600281111561016e5761016d610500565b5b5f8281548110610181576101806104d3565b5b905f5260205f2090602091828204019190069054906101000a900460ff1660028111156101b1576101b0610500565b5b036101f4576040518060400160405280600581526020017f4552433230000000000000000000000000000000000000000000000000000000815250915050610374565b6001600281111561020857610207610500565b5b5f828154811061021b5761021a6104d3565b5b905f5260205f2090602091828204019190069054906101000a900460ff16600281111561024b5761024a610500565b5b0361028e576040518060400160405280600681526020017f4552433732310000000000000000000000000000000000000000000000000000815250915050610374565b6002808111156102a1576102a0610500565b5b5f82815481106102b4576102b36104d3565b5b905f5260205f2090602091828204019190069054906101000a900460ff1660028111156102e4576102e3610500565b5b03610327576040518060400160405280600781526020017f4552433131353500000000000000000000000000000000000000000000000000815250915050610374565b6040518060400160405280600a81526020017f726577617264735b695d00000000000000000000000000000000000000000000815250915050610374565b80806001019150506100d5565b505b919050565b5f5ffd5b5f819050919050565b61038f8161037d565b8114610399575f5ffd5b50565b5f813590506103aa81610386565b92915050565b5f602082840312156103c5576103c4610379565b5b5f6103d28482850161039c565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61041d826103db565b61042781856103e5565b93506104378185602086016103f5565b61044081610403565b840191505092915050565b5f6020820190508181035f8301526104638184610413565b905092915050565b7f706179206174206c6561737420302e31204554480000000000000000000000005f82015250565b5f61049f6014836103e5565b91506104aa8261046b565b602082019050919050565b5f6020820190508181035f8301526104cc81610493565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6105648261037d565b915061056f8361037d565b925082820390508181125f8412168282135f8512151617156105945761059361052d565b5b9291505056fea26469706673582212200fcd96333160ad727d7c1c5c94263add1aa152aa1912947c3e314e1b1b64498b64736f6c634300081c0033";

  
      type LootBoxConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: LootBoxConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class LootBox__factory extends ContractFactory {
    
      constructor(...args: LootBoxConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(weightERC20: BigNumberish, weightERC721: BigNumberish, weightERC1155: BigNumberish, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(weightERC20, weightERC721, weightERC1155, overrides || {});
    };
    override deploy(weightERC20: BigNumberish, weightERC721: BigNumberish, weightERC1155: BigNumberish, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(weightERC20, weightERC721, weightERC1155, overrides || {}) as Promise<LootBox & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): LootBox__factory {
      return super.connect(runner) as LootBox__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): LootBoxInterface {
      return new Interface(_abi) as LootBoxInterface;
    }
    
    override attach(address: string | Addressable): LootBox {
      return super.attach(address) as LootBox;
    }
  static connect(address: string, runner?: ContractRunner | null): LootBox {
      return new Contract(address, _abi, runner) as unknown as LootBox;
    }
  }

  
  