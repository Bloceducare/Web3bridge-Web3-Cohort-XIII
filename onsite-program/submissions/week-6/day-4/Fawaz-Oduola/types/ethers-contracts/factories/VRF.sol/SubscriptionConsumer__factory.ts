/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, BigNumberish, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../common.js"
  import type { SubscriptionConsumer, SubscriptionConsumerInterface } from "../../VRF.sol/SubscriptionConsumer.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "subscriptionId",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "have",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "want",
        "type": "address"
      }
    ],
    "name": "OnlyCoordinatorCanFulfill",
    "type": "error"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "have",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "owner",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "coordinator",
        "type": "address"
      }
    ],
    "name": "OnlyOwnerOrCoordinator",
    "type": "error"
  },
  {
    "inputs": [],
    "name": "ZeroAddress",
    "type": "error"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "address",
        "name": "vrfCoordinator",
        "type": "address"
      }
    ],
    "name": "CoordinatorSet",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "to",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferRequested",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "from",
        "type": "address"
      },
      {
        "indexed": true,
        "internalType": "address",
        "name": "to",
        "type": "address"
      }
    ],
    "name": "OwnershipTransferred",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "requestId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint256[]",
        "name": "randomWords",
        "type": "uint256[]"
      }
    ],
    "name": "RequestFulfilled",
    "type": "event"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "requestId",
        "type": "uint256"
      },
      {
        "indexed": false,
        "internalType": "uint32",
        "name": "numWords",
        "type": "uint32"
      }
    ],
    "name": "RequestSent",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "acceptOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "callbackGasLimit",
    "outputs": [
      {
        "internalType": "uint32",
        "name": "",
        "type": "uint32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_requestId",
        "type": "uint256"
      }
    ],
    "name": "getRequestStatus",
    "outputs": [
      {
        "internalType": "bool",
        "name": "fulfilled",
        "type": "bool"
      },
      {
        "internalType": "uint256[]",
        "name": "randomWords",
        "type": "uint256[]"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "keyHash",
    "outputs": [
      {
        "internalType": "bytes32",
        "name": "",
        "type": "bytes32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "lastRequestId",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "numWords",
    "outputs": [
      {
        "internalType": "uint32",
        "name": "",
        "type": "uint32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "requestId",
        "type": "uint256"
      },
      {
        "internalType": "uint256[]",
        "name": "randomWords",
        "type": "uint256[]"
      }
    ],
    "name": "rawFulfillRandomWords",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "requestConfirmations",
    "outputs": [
      {
        "internalType": "uint16",
        "name": "",
        "type": "uint16"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "requestIds",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "bool",
        "name": "enableNativePayment",
        "type": "bool"
      }
    ],
    "name": "requestRandomWords",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "requestId",
        "type": "uint256"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "s_requests",
    "outputs": [
      {
        "internalType": "bool",
        "name": "fulfilled",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "exists",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "s_subscriptionId",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "s_vrfCoordinator",
    "outputs": [
      {
        "internalType": "contract IVRFCoordinatorV2Plus",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_vrfCoordinator",
        "type": "address"
      }
    ],
    "name": "setCoordinator",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "to",
        "type": "address"
      }
    ],
    "name": "transferOwnership",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  }
] as const;

  const _bytecode = "0x60806040527f787d74caea10b2b357790d5b5247c2f63d1d91572a9846f780606e4d953677ae5f1b600755620186a060085f6101000a81548163ffffffff021916908363ffffffff1602179055506003600860046101000a81548161ffff021916908361ffff1602179055506001600860066101000a81548163ffffffff021916908363ffffffff160217905550348015610098575f5ffd5b50604051611e47380380611e4783398181016040528101906100ba91906103da565b739ddfaca8183c41ad55329bdeed9f6a8d53168b1b33805f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610140576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101379061045f565b60405180910390fd5b815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146101c2576101c18161027860201b60201c565b5b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361022a576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600481905550506104e5565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102dd906104c7565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b5f5ffd5b5f819050919050565b6103b9816103a7565b81146103c3575f5ffd5b50565b5f815190506103d4816103b0565b92915050565b5f602082840312156103ef576103ee6103a3565b5b5f6103fc848285016103c6565b91505092915050565b5f82825260208201905092915050565b7f43616e6e6f7420736574206f776e657220746f207a65726f00000000000000005f82015250565b5f610449601883610405565b915061045482610415565b602082019050919050565b5f6020820190508181035f8301526104768161043d565b9050919050565b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f6104b1601783610405565b91506104bc8261047d565b602082019050919050565b5f6020820190508181035f8301526104de816104a5565b9050919050565b611955806104f25f395ff3fe608060405234801561000f575f5ffd5b50600436106100fe575f3560e01c80638da5cb5b11610095578063b0fb162f11610064578063b0fb162f14610289578063d8a4676f146102a7578063f2fde38b146102d8578063fc2a88c3146102f4576100fe565b80638da5cb5b146102005780638ea981171461021e5780639eccacf61461023a578063a168fa8914610258576100fe565b806379ba5097116100d157806379ba50971461018a5780637ccfd7fc146101945780638796ba8c146101b25780638ac00021146101e2576100fe565b80631fe543e31461010257806324f746971461011e57806361728f391461013c5780637392a7711461015a575b5f5ffd5b61011c6004803603810190610117919061107a565b610312565b005b6101266103d6565b60405161013391906110f5565b60405180910390f35b6101446103eb565b6040516101519190611126565b60405180910390f35b610174600480360381019061016f9190611174565b6103f1565b60405161018191906111ae565b60405180910390f35b610192610673565b005b61019c610802565b6040516101a991906110f5565b60405180910390f35b6101cc60048036038101906101c791906111c7565b610818565b6040516101d991906111ae565b60405180910390f35b6101ea610838565b6040516101f791906111ae565b60405180910390f35b61020861083e565b6040516102159190611231565b60405180910390f35b61023860048036038101906102339190611274565b610865565b005b610242610a42565b60405161024f91906112fa565b60405180910390f35b610272600480360381019061026d91906111c7565b610a67565b604051610280929190611322565b60405180910390f35b610291610a9f565b60405161029e9190611365565b60405180910390f35b6102c160048036038101906102bc91906111c7565b610ab3565b6040516102cf929190611435565b60405180910390f35b6102f260048036038101906102ed9190611274565b610bd1565b005b6102fc610be5565b60405161030991906111ae565b60405180910390f35b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c6573360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f1cf993f40000000000000000000000000000000000000000000000000000000081526004016103bd929190611463565b60405180910390fd5b6103d1838383610beb565b505050565b60085f9054906101000a900463ffffffff1681565b60075481565b5f6103fa610cda565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639b1c385e6040518060c0016040528060075481526020016004548152602001600860049054906101000a900461ffff1661ffff16815260200160085f9054906101000a900463ffffffff1663ffffffff168152602001600860069054906101000a900463ffffffff1663ffffffff1681526020016104c06040518060200160405280881515815250610d6a565b8152506040518263ffffffff1660e01b81526004016104df91906115ad565b6020604051808303815f875af11580156104fb573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061051f91906115e1565b905060405180606001604052805f151581526020016001151581526020015f67ffffffffffffffff8111156105575761055661160c565b5b6040519080825280602002602001820160405280156105855781602001602082028036833780820191505090505b5081525060035f8381526020019081526020015f205f820151815f015f6101000a81548160ff0219169083151502179055506020820151815f0160016101000a81548160ff02191690831515021790555060408201518160010190805190602001906105f2929190610f2d565b50905050600581908060018154018082558091505060019003905f5260205f20015f9091909190915055806006819055507fcc58b13ad3eab50626c6a6300b1d139cd6ebb1688a7cced9461c2f7e762665ee81600860069054906101000a900463ffffffff16604051610666929190611639565b60405180910390a1919050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610702576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f9906116ba565b60405180910390fd5b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050335f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505f60015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350565b600860069054906101000a900463ffffffff1681565b60058181548110610827575f80fd5b905f5260205f20015f915090505481565b60045481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61086d61083e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141580156108f5575060025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614155b15610963573361090361083e565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040517f061db9c100000000000000000000000000000000000000000000000000000000815260040161095a939291906116d8565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109c8576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fd1a6a14209a385a964d036e404cb5cfb71f4000cdb03c9366292430787261be681604051610a379190611231565b60405180910390a150565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003602052805f5260405f205f91509050805f015f9054906101000a900460ff1690805f0160019054906101000a900460ff16905082565b600860049054906101000a900461ffff1681565b5f606060035f8481526020019081526020015f205f0160019054906101000a900460ff16610b16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0d90611757565b60405180910390fd5b5f60035f8581526020019081526020015f206040518060600160405290815f82015f9054906101000a900460ff161515151581526020015f820160019054906101000a900460ff1615151515815260200160018201805480602002602001604051908101604052809291908181526020018280548015610bb357602002820191905f5260205f20905b815481526020019060010190808311610b9f575b5050505050815250509050805f015181604001519250925050915091565b610bd9610cda565b610be281610e02565b50565b60065481565b60035f8481526020019081526020015f205f0160019054906101000a900460ff16610c4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c4290611757565b60405180910390fd5b600160035f8581526020019081526020015f205f015f6101000a81548160ff021916908315150217905550818160035f8681526020019081526020015f206001019190610c99929190610f78565b507ffe2e2d779dba245964d4e3ef9b994be63856fd568bf7d3ca9e224755cb1bd54d838383604051610ccd939291906117dd565b60405180910390a1505050565b5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d68576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5f90611857565b60405180910390fd5b565b60607f92fd13387c7fe7befbc38d303d6468778fb9731bc4583f17d92989c6fcfdeaaa82604051602401610d9e919061189e565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050509050919050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6790611901565b60405180910390fd5b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff165f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fed8889f560326eb138920d842192f0eb3dd22b4f139c87a2c57538e05bae127860405160405180910390a350565b828054828255905f5260205f20908101928215610f67579160200282015b82811115610f66578251825591602001919060010190610f4b565b5b509050610f749190610fc3565b5090565b828054828255905f5260205f20908101928215610fb2579160200282015b82811115610fb1578235825591602001919060010190610f96565b5b509050610fbf9190610fc3565b5090565b5b80821115610fda575f815f905550600101610fc4565b5090565b5f5ffd5b5f5ffd5b5f819050919050565b610ff881610fe6565b8114611002575f5ffd5b50565b5f8135905061101381610fef565b92915050565b5f5ffd5b5f5ffd5b5f5ffd5b5f5f83601f84011261103a57611039611019565b5b8235905067ffffffffffffffff8111156110575761105661101d565b5b60208301915083602082028301111561107357611072611021565b5b9250929050565b5f5f5f6040848603121561109157611090610fde565b5b5f61109e86828701611005565b935050602084013567ffffffffffffffff8111156110bf576110be610fe2565b5b6110cb86828701611025565b92509250509250925092565b5f63ffffffff82169050919050565b6110ef816110d7565b82525050565b5f6020820190506111085f8301846110e6565b92915050565b5f819050919050565b6111208161110e565b82525050565b5f6020820190506111395f830184611117565b92915050565b5f8115159050919050565b6111538161113f565b811461115d575f5ffd5b50565b5f8135905061116e8161114a565b92915050565b5f6020828403121561118957611188610fde565b5b5f61119684828501611160565b91505092915050565b6111a881610fe6565b82525050565b5f6020820190506111c15f83018461119f565b92915050565b5f602082840312156111dc576111db610fde565b5b5f6111e984828501611005565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61121b826111f2565b9050919050565b61122b81611211565b82525050565b5f6020820190506112445f830184611222565b92915050565b61125381611211565b811461125d575f5ffd5b50565b5f8135905061126e8161124a565b92915050565b5f6020828403121561128957611288610fde565b5b5f61129684828501611260565b91505092915050565b5f819050919050565b5f6112c26112bd6112b8846111f2565b61129f565b6111f2565b9050919050565b5f6112d3826112a8565b9050919050565b5f6112e4826112c9565b9050919050565b6112f4816112da565b82525050565b5f60208201905061130d5f8301846112eb565b92915050565b61131c8161113f565b82525050565b5f6040820190506113355f830185611313565b6113426020830184611313565b9392505050565b5f61ffff82169050919050565b61135f81611349565b82525050565b5f6020820190506113785f830184611356565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6113b081610fe6565b82525050565b5f6113c183836113a7565b60208301905092915050565b5f602082019050919050565b5f6113e38261137e565b6113ed8185611388565b93506113f883611398565b805f5b8381101561142857815161140f88826113b6565b975061141a836113cd565b9250506001810190506113fb565b5085935050505092915050565b5f6040820190506114485f830185611313565b818103602083015261145a81846113d9565b90509392505050565b5f6040820190506114765f830185611222565b6114836020830184611222565b9392505050565b6114938161110e565b82525050565b6114a281611349565b82525050565b6114b1816110d7565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f6114f9826114b7565b61150381856114c1565b93506115138185602086016114d1565b61151c816114df565b840191505092915050565b5f60c083015f83015161153c5f86018261148a565b50602083015161154f60208601826113a7565b5060408301516115626040860182611499565b50606083015161157560608601826114a8565b50608083015161158860808601826114a8565b5060a083015184820360a08601526115a082826114ef565b9150508091505092915050565b5f6020820190508181035f8301526115c58184611527565b905092915050565b5f815190506115db81610fef565b92915050565b5f602082840312156115f6576115f5610fde565b5b5f611603848285016115cd565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f60408201905061164c5f83018561119f565b61165960208301846110e6565b9392505050565b5f82825260208201905092915050565b7f4d7573742062652070726f706f736564206f776e6572000000000000000000005f82015250565b5f6116a4601683611660565b91506116af82611670565b602082019050919050565b5f6020820190508181035f8301526116d181611698565b9050919050565b5f6060820190506116eb5f830186611222565b6116f86020830185611222565b6117056040830184611222565b949350505050565b7f72657175657374206e6f7420666f756e640000000000000000000000000000005f82015250565b5f611741601183611660565b915061174c8261170d565b602082019050919050565b5f6020820190508181035f83015261176e81611735565b9050919050565b5f5ffd5b82818337505050565b5f61178d8385611388565b93507f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156117c0576117bf611775565b5b6020830292506117d1838584611779565b82840190509392505050565b5f6040820190506117f05f83018661119f565b8181036020830152611803818486611782565b9050949350505050565b7f4f6e6c792063616c6c61626c65206279206f776e6572000000000000000000005f82015250565b5f611841601683611660565b915061184c8261180d565b602082019050919050565b5f6020820190508181035f83015261186e81611835565b9050919050565b61187e8161113f565b82525050565b602082015f8201516118985f850182611875565b50505050565b5f6020820190506118b15f830184611884565b92915050565b7f43616e6e6f74207472616e7366657220746f2073656c660000000000000000005f82015250565b5f6118eb601783611660565b91506118f6826118b7565b602082019050919050565b5f6020820190508181035f830152611918816118df565b905091905056fea264697066735822122050844852f256a5077a2390a87ed0a2a4002f779469617c1efb053c7dbe65638564736f6c634300081c0033";

  
      type SubscriptionConsumerConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: SubscriptionConsumerConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class SubscriptionConsumer__factory extends ContractFactory {
    
      constructor(...args: SubscriptionConsumerConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(subscriptionId: BigNumberish, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(subscriptionId, overrides || {});
    };
    override deploy(subscriptionId: BigNumberish, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(subscriptionId, overrides || {}) as Promise<SubscriptionConsumer & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): SubscriptionConsumer__factory {
      return super.connect(runner) as SubscriptionConsumer__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): SubscriptionConsumerInterface {
      return new Interface(_abi) as SubscriptionConsumerInterface;
    }
    
    override attach(address: string | Addressable): SubscriptionConsumer {
      return super.attach(address) as SubscriptionConsumer;
    }
  static connect(address: string, runner?: ContractRunner | null): SubscriptionConsumer {
      return new Contract(address, _abi, runner) as unknown as SubscriptionConsumer;
    }
  }

  
  