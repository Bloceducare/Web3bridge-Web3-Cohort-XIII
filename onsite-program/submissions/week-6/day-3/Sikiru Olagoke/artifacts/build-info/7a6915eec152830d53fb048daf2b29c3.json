{"id":"7a6915eec152830d53fb048daf2b29c3","_format":"hh-sol-build-info-1","solcVersion":"0.8.25","solcLongVersion":"0.8.25+commit.b61c2a91","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /// @inheritdoc IERC721\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /// @inheritdoc IERC721\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /// @inheritdoc IERC721Metadata\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /// @inheritdoc IERC721\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /// @inheritdoc IERC721\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /// @inheritdoc IERC721\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /// @inheritdoc IERC721\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /// @inheritdoc IERC721\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /// @inheritdoc IERC721\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity >=0.5.0;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(reason, 0x20), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(add(buffer, 0x20), length)\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(add(buffer, 0x20), offset))\n        }\n    }\n}\n"},"contracts/DAO.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.23;\nimport \"../interface/IERC7432.sol\";\nimport {DAONFT} from \"./DAONFT.sol\";\n\ncontract DAO is IERC7432 {\n  Role[] roles;\n  DAONFT daoNFT;\n\n  struct Proposal {\n    string title;\n    string description;\n    uint256 numOfVote;\n    uint256 startTime;\n    uint256 dealine;\n    Status status;\n\n  }\n\n  mapping(address =>mapping(uint256 => bool)) hasVoted;\n\n   Proposal[] proposals;\n \n  mapping(address => Role) userRole;\n\n    uint256 private _nextTokenId;\n\n    enum Status {\n      ACTIVE,\n      EXPIRED,\n      PASSED,\n      REJECTED\n    }\n\n    constructor() {\n\n      DAONFT _daonft = new DAONFT();\n      daoNFT = _daonft;\n      \n      userRole[msg.sender] =  Role(keccak256(\"ADMIN\"), address(_daonft), _nextTokenId, msg.sender);\n      daoNFT.safeMint(msg.sender, _nextTokenId);\n\n      _nextTokenId++;\n\n    }\n\n  function update_proposal(uint256 _index, string memory _title, string memory _description ) external {\n    proposals[_index].title = _title;\n    proposals[_index].description = _description;\n  }\n\n  function get_proposals() external view returns (Proposal[] memory) {\n    return proposals;\n  }\n\n  function get_proposal(uint256 _index) external view returns(Proposal memory) {\n    return proposals[_index];\n  }\n\n  function create_proposal(string memory _title, string memory _description, uint256 _deadline) external {\n\n    uint256 deadline_ = block.timestamp + (_deadline * 1 minutes);\n    require(userRole[msg.sender].roleId == keccak256(\"ADMIN\"), \"Only Admin can create Proposals\");\n    \n    Proposal memory proposal_ = Proposal(_title, _description, 0, block.timestamp, deadline_, Status.ACTIVE);\n\n    proposals.push(proposal_);\n\n  }\n\n  function vote_on_proposal(uint256 _index) external {\n    if(proposals[_index].dealine > block.timestamp) {\n      proposals[_index].status = Status.EXPIRED;\n\n      revert(\"YOU CANT VOTE ON EXPIRED PROPOSAL\");\n    }\n\n    require(userRole[msg.sender].roleId == keccak256(\"MEMBER\") || userRole[msg.sender].roleId == keccak256(\"ADMIN\"), \"YOU NEED ROLE TO VOTE\");\n   \n    require(proposals[_index].status == Status.ACTIVE, \"YOU CAN ONLY VOTE ON ACTIVE PROPOSAL\");\n    \n    if(hasVoted[msg.sender][_index] == true) {\n      revert(\"ALREADY VOTED\");\n    }\n\n    proposals[_index].numOfVote += 1;\n    hasVoted[msg.sender][_index] = true;\n  }\n\n function grantRole(\n    address _tokenAddress,\n    uint256 _tokenId,\n    address _recipient\n ) external {\n\n   bytes32 roleId_ = keccak256(\"MEMBER_ROLE\");\n  \n   _tokenId = _nextTokenId++;\n\n   userRole[_tokenAddress] = Role(roleId_, _tokenAddress, _tokenId, _recipient);\n\n   daoNFT.safeMint(_recipient, _tokenId);\n\n   roles.push(userRole[_recipient]);\n    \n  }\n\n  function revokeRole(address _tokenAddress, uint256 _tokenId) external {\n    \n    for(uint256 i; i < roles.length; i++) {\n      address addy = roles[i].recipient;\n      if(roles[i].roleId == keccak256(\"MEMBER_ROLE\") && roles[i].tokenAddress == _tokenAddress && roles[i].tokenId == _tokenId) {\n        roles[i].roleId = keccak256(\"NOT_A_MEMBER\");\n\n        userRole[addy].roleId = keccak256(\"NOT_A_MEMBER\");\n\n        return;\n      }\n    }\n\n    revert(\"YOU_CAN_ONLY_REVOKE_A_MEMBER_PERMISSION\");\n  }\n\n   function ownerOf(address _tokenAddress, uint256 _tokenId) external view returns (address owner_) {\n    \n    for(uint256 i; i < roles.length; i++) {\n      if(roles[i].tokenAddress == _tokenAddress && roles[i].tokenId == _tokenId) {\n\n        return roles[i].recipient;\n      }\n    }\n   }\n\n\n  function recipientOf(\n    address _tokenAddress,\n    uint256 _tokenId\n\n  ) external view returns (address recipient_) {\n    bytes32 _roleId = keccak256(\"MEMBER\"); \n\n    for(uint256 i; i < roles.length; i++) {\n    \n      if(roles[i].tokenAddress == _tokenAddress && roles[i].tokenId == _tokenId && roles[i].roleId == _roleId) {\n\n        return roles[i].recipient;\n      }\n    }\n  }\n\n\n  \n  }\n\n\n\n\n\n\n"},"contracts/DAONFT.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.23;\n\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport {ERC721} from \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\n\ncontract DAONFT is ERC721, AccessControl {\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor() ERC721(\"DAONFT\", \"DNFT\") {}\n\n    function safeMint(address to, uint256 _tokenId) external returns (uint256) {\n        _safeMint(to, _tokenId);\n        return _tokenId;\n    }\n\n    // The following functions are overrides required by Solidity.\n\n    function supportsInterface(bytes4 interfaceId) public view override(ERC721, AccessControl) returns (bool) {\n        return super.supportsInterface(interfaceId);\n    }\n}\n"},"interface/IERC7432.sol":{"content":"//SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\n/// @title ERC-7432 Non-Fungible Token Roles\n/// @dev See https://eips.ethereum.org/EIPS/eip-7432\n/// Note: the ERC-165 identifier for this interface is 0xd00ca5cf.\ninterface IERC7432 /* is ERC165 */ {\n\n\n  struct Role {\n    bytes32 roleId;\n    address tokenAddress;\n    uint256 tokenId;\n    address recipient;\n  }\n\n\n  /** External Functions **/\n\n  /// @notice Grants a role to a user.\n  /// @dev Reverts if sender is not approved or the NFT owner.\n  function grantRole(\n    address tokenAddress,\n    uint256 tokenId,\n    address recipient\n  ) external;\n\n  /// @notice Revokes a role from a user.\n  /// @dev Reverts if sender is not approved or the original owner.\n  /// @param _tokenAddress The token address.\n  /// @param _tokenId The token identifier.\n  \n  function revokeRole(address _tokenAddress, uint256 _tokenId) external;\n\n\n\n  /** View Functions **/\n\n  /// @notice Retrieves the original owner of the NFT.\n  /// @param _tokenAddress The token address.\n  /// @param _tokenId The token identifier.\n  /// @return owner_ The owner of the token.\n  function ownerOf(address _tokenAddress, uint256 _tokenId) external view returns (address owner_);\n\n  /// @notice Retrieves the recipient of an NFT role.\n  /// @param _tokenAddress The token address.\n  /// @param _tokenId The token identifier.\n  /// @return recipient_ The user that received the role.\n  function recipientOf(\n    address _tokenAddress,\n    uint256 _tokenId\n  ) external view returns (address recipient_);\n\n\n\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[296],"Context":[1743],"ERC165":[3221],"IAccessControl":[379],"IERC165":[3233]},"id":297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":380,"src":"134:52:0","symbolAliases":[{"foreign":{"id":2,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"142:14:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":1744,"src":"187:45:0","symbolAliases":[{"foreign":{"id":4,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"195:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":8,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":297,"sourceUnit":3222,"src":"233:66:0","symbolAliases":[{"foreign":{"id":6,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"241:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":7,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"250:6:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":10,"name":"Context","nameLocations":["1997:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":1743,"src":"1997:7:0"},"id":11,"nodeType":"InheritanceSpecifier","src":"1997:7:0"},{"baseName":{"id":12,"name":"IAccessControl","nameLocations":["2006:14:0"],"nodeType":"IdentifierPath","referencedDeclaration":379,"src":"2006:14:0"},"id":13,"nodeType":"InheritanceSpecifier","src":"2006:14:0"},{"baseName":{"id":14,"name":"ERC165","nameLocations":["2022:6:0"],"nodeType":"IdentifierPath","referencedDeclaration":3221,"src":"2022:6:0"},"id":15,"nodeType":"InheritanceSpecifier","src":"2022:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"301:1660:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."},"fullyImplemented":true,"id":296,"linearizedBaseContracts":[296,3221,3233,379,1743],"name":"AccessControl","nameLocation":"1980:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":22,"members":[{"constant":false,"id":19,"mutability":"mutable","name":"hasRole","nameLocation":"2094:7:0","nodeType":"VariableDeclaration","scope":22,"src":"2061:40:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":18,"keyName":"account","keyNameLocation":"2077:7:0","keyType":{"id":16,"name":"address","nodeType":"ElementaryTypeName","src":"2069:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2061:32:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":17,"name":"bool","nodeType":"ElementaryTypeName","src":"2088:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":21,"mutability":"mutable","name":"adminRole","nameLocation":"2119:9:0","nodeType":"VariableDeclaration","scope":22,"src":"2111:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"2042:8:0","nodeType":"StructDefinition","scope":296,"src":"2035:100:0","visibility":"public"},{"constant":false,"id":27,"mutability":"mutable","name":"_roles","nameLocation":"2183:6:0","nodeType":"VariableDeclaration","scope":296,"src":"2141:48:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":26,"keyName":"role","keyNameLocation":"2157:4:0","keyType":{"id":23,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2149:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2141:33:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":25,"nodeType":"UserDefinedTypeName","pathNode":{"id":24,"name":"RoleData","nameLocations":["2165:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":22,"src":"2165:8:0"},"referencedDeclaration":22,"src":"2165:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":30,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2220:18:0","nodeType":"VariableDeclaration","scope":296,"src":"2196:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2196:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2241:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":40,"nodeType":"Block","src":"2463:44:0","statements":[{"expression":{"arguments":[{"id":36,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2484:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":35,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":94,"src":"2473:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":37,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2473:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":38,"nodeType":"ExpressionStatement","src":"2473:16:0"},{"id":39,"nodeType":"PlaceholderStatement","src":"2499:1:0"}]},"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"2252:174:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."},"id":41,"name":"onlyRole","nameLocation":"2440:8:0","nodeType":"ModifierDefinition","parameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"role","nameLocation":"2457:4:0","nodeType":"VariableDeclaration","scope":41,"src":"2449:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":32,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:14:0"},"src":"2431:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[3220],"body":{"id":62,"nodeType":"Block","src":"2632:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":50,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2649:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":52,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":379,"src":"2669:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$379_$","typeString":"type(contract IAccessControl)"}],"id":51,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2664:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2664:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$379","typeString":"type(contract IAccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2685:11:0","memberName":"interfaceId","nodeType":"MemberAccess","src":"2664:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2649:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":58,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"2724:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":56,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2700:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$296_$","typeString":"type(contract super AccessControl)"}},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2706:17:0","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3220,"src":"2700:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":59,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2700:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2649:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":49,"id":61,"nodeType":"Return","src":"2642:94:0"}]},"documentation":{"id":42,"nodeType":"StructuredDocumentation","src":"2513:23:0","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":63,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2550:17:0","nodeType":"FunctionDefinition","overrides":{"id":46,"nodeType":"OverrideSpecifier","overrides":[],"src":"2608:8:0"},"parameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"interfaceId","nameLocation":"2575:11:0","nodeType":"VariableDeclaration","scope":63,"src":"2568:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":43,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2568:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2567:20:0"},"returnParameters":{"id":49,"nodeType":"ParameterList","parameters":[{"constant":false,"id":48,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":63,"src":"2626:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":47,"name":"bool","nodeType":"ElementaryTypeName","src":"2626:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2625:6:0"},"scope":296,"src":"2541:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[346],"body":{"id":80,"nodeType":"Block","src":"2913:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":73,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"2930:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":75,"indexExpression":{"id":74,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":66,"src":"2937:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":76,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2943:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"2930:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":78,"indexExpression":{"id":77,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":68,"src":"2951:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2930:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":72,"id":79,"nodeType":"Return","src":"2923:36:0"}]},"documentation":{"id":64,"nodeType":"StructuredDocumentation","src":"2749:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":81,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2839:7:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[{"constant":false,"id":66,"mutability":"mutable","name":"role","nameLocation":"2855:4:0","nodeType":"VariableDeclaration","scope":81,"src":"2847:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":65,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2847:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":68,"mutability":"mutable","name":"account","nameLocation":"2869:7:0","nodeType":"VariableDeclaration","scope":81,"src":"2861:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":67,"name":"address","nodeType":"ElementaryTypeName","src":"2861:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2846:31:0"},"returnParameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":81,"src":"2907:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":70,"name":"bool","nodeType":"ElementaryTypeName","src":"2907:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2906:6:0"},"scope":296,"src":"2830:136:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":93,"nodeType":"Block","src":"3231:47:0","statements":[{"expression":{"arguments":[{"id":88,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"3252:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":89,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"3258:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":90,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":87,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[94,115],"referencedDeclaration":115,"src":"3241:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":91,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3241:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":92,"nodeType":"ExpressionStatement","src":"3241:30:0"}]},"documentation":{"id":82,"nodeType":"StructuredDocumentation","src":"2972:198:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."},"id":94,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3184:10:0","nodeType":"FunctionDefinition","parameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"role","nameLocation":"3203:4:0","nodeType":"VariableDeclaration","scope":94,"src":"3195:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":83,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3195:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3194:14:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"3231:0:0"},"scope":296,"src":"3175:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":114,"nodeType":"Block","src":"3481:124:0","statements":[{"condition":{"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3495:23:0","subExpression":{"arguments":[{"id":103,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3504:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":104,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3510:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":102,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"3496:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3496:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":113,"nodeType":"IfStatement","src":"3491:108:0","trueBody":{"id":112,"nodeType":"Block","src":"3520:79:0","statements":[{"errorCall":{"arguments":[{"id":108,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":99,"src":"3574:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":109,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3583:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":107,"name":"AccessControlUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3541:32:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_bytes32_$returns$__$","typeString":"function (address,bytes32) pure"}},"id":110,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3541:47:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":111,"nodeType":"RevertStatement","src":"3534:54:0"}]}}]},"documentation":{"id":95,"nodeType":"StructuredDocumentation","src":"3284:119:0","text":" @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."},"id":115,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3417:10:0","nodeType":"FunctionDefinition","parameters":{"id":100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":97,"mutability":"mutable","name":"role","nameLocation":"3436:4:0","nodeType":"VariableDeclaration","scope":115,"src":"3428:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":96,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3428:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":99,"mutability":"mutable","name":"account","nameLocation":"3450:7:0","nodeType":"VariableDeclaration","scope":115,"src":"3442:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":98,"name":"address","nodeType":"ElementaryTypeName","src":"3442:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3427:31:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[],"src":"3481:0:0"},"scope":296,"src":"3408:197:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[354],"body":{"id":128,"nodeType":"Block","src":"3860:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":123,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"3877:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":125,"indexExpression":{"id":124,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"3884:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3877:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":126,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3890:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"3877:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":122,"id":127,"nodeType":"Return","src":"3870:29:0"}]},"documentation":{"id":116,"nodeType":"StructuredDocumentation","src":"3611:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":129,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"3795:12:0","nodeType":"FunctionDefinition","parameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"role","nameLocation":"3816:4:0","nodeType":"VariableDeclaration","scope":129,"src":"3808:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":117,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3808:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3807:14:0"},"returnParameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":129,"src":"3851:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3850:9:0"},"scope":296,"src":"3786:120:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[362],"body":{"id":147,"nodeType":"Block","src":"4296:42:0","statements":[{"expression":{"arguments":[{"id":143,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4317:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":144,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4323:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":142,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":257,"src":"4306:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4306:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":146,"nodeType":"ExpressionStatement","src":"4306:25:0"}]},"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"3912:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":148,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":138,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4289:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":137,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4276:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":140,"kind":"modifierInvocation","modifierName":{"id":136,"name":"onlyRole","nameLocations":["4267:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4267:8:0"},"nodeType":"ModifierInvocation","src":"4267:28:0"}],"name":"grantRole","nameLocation":"4211:9:0","nodeType":"FunctionDefinition","parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"role","nameLocation":"4229:4:0","nodeType":"VariableDeclaration","scope":148,"src":"4221:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4221:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"account","nameLocation":"4243:7:0","nodeType":"VariableDeclaration","scope":148,"src":"4235:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"4235:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4220:31:0"},"returnParameters":{"id":141,"nodeType":"ParameterList","parameters":[],"src":"4296:0:0"},"scope":296,"src":"4202:136:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[370],"body":{"id":166,"nodeType":"Block","src":"4713:43:0","statements":[{"expression":{"arguments":[{"id":162,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4735:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":163,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4741:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":161,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"4723:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4723:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":165,"nodeType":"ExpressionStatement","src":"4723:26:0"}]},"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"4344:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":167,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":157,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4706:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":156,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"4693:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4693:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":159,"kind":"modifierInvocation","modifierName":{"id":155,"name":"onlyRole","nameLocations":["4684:8:0"],"nodeType":"IdentifierPath","referencedDeclaration":41,"src":"4684:8:0"},"nodeType":"ModifierInvocation","src":"4684:28:0"}],"name":"revokeRole","nameLocation":"4627:10:0","nodeType":"FunctionDefinition","parameters":{"id":154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"role","nameLocation":"4646:4:0","nodeType":"VariableDeclaration","scope":167,"src":"4638:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":150,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4638:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":153,"mutability":"mutable","name":"account","nameLocation":"4660:7:0","nodeType":"VariableDeclaration","scope":167,"src":"4652:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"4652:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4637:31:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[],"src":"4713:0:0"},"scope":296,"src":"4618:138:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[378],"body":{"id":189,"nodeType":"Block","src":"5383:166:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":175,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5397:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":176,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"5419:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5419:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5397:34:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":183,"nodeType":"IfStatement","src":"5393:102:0","trueBody":{"id":182,"nodeType":"Block","src":"5433:62:0","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":179,"name":"AccessControlBadConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"5454:28:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5454:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":181,"nodeType":"RevertStatement","src":"5447:37:0"}]}},{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":170,"src":"5517:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"callerConfirmation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"5523:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":295,"src":"5505:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) returns (bool)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5505:37:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":188,"nodeType":"ExpressionStatement","src":"5505:37:0"}]},"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"4762:537:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":190,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5313:12:0","nodeType":"FunctionDefinition","parameters":{"id":173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"role","nameLocation":"5334:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5326:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":169,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5326:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":172,"mutability":"mutable","name":"callerConfirmation","nameLocation":"5348:18:0","nodeType":"VariableDeclaration","scope":190,"src":"5340:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"5340:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5325:42:0"},"returnParameters":{"id":174,"nodeType":"ParameterList","parameters":[],"src":"5383:0:0"},"scope":296,"src":"5304:245:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":217,"nodeType":"Block","src":"5747:174:0","statements":[{"assignments":[199],"declarations":[{"constant":false,"id":199,"mutability":"mutable","name":"previousAdminRole","nameLocation":"5765:17:0","nodeType":"VariableDeclaration","scope":217,"src":"5757:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5757:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":203,"initialValue":{"arguments":[{"id":201,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5798:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":200,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"5785:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5785:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5757:46:0"},{"expression":{"id":209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":204,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"5813:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":206,"indexExpression":{"id":205,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5820:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5813:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":207,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5826:9:0","memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":21,"src":"5813:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":208,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5838:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"5813:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":210,"nodeType":"ExpressionStatement","src":"5813:34:0"},{"eventCall":{"arguments":[{"id":212,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"5879:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":213,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":199,"src":"5885:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":214,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"5904:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":211,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5862:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5862:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"EmitStatement","src":"5857:57:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5555:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":218,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"5683:13:0","nodeType":"FunctionDefinition","parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5705:4:0","nodeType":"VariableDeclaration","scope":218,"src":"5697:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5697:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"adminRole","nameLocation":"5719:9:0","nodeType":"VariableDeclaration","scope":218,"src":"5711:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":194,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5711:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5696:33:0"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"5747:0:0"},"scope":296,"src":"5674:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":256,"nodeType":"Block","src":"6238:233:0","statements":[{"condition":{"id":232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6252:23:0","subExpression":{"arguments":[{"id":229,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6261:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":230,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6267:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":228,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6253:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6253:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":254,"nodeType":"Block","src":"6428:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6449:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":227,"id":253,"nodeType":"Return","src":"6442:12:0"}]},"id":255,"nodeType":"IfStatement","src":"6248:217:0","trueBody":{"id":251,"nodeType":"Block","src":"6277:145:0","statements":[{"expression":{"id":240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":233,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6291:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":235,"indexExpression":{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6298:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6291:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6304:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6291:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":238,"indexExpression":{"id":237,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6312:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6291:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6323:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6291:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":241,"nodeType":"ExpressionStatement","src":"6291:36:0"},{"eventCall":{"arguments":[{"id":243,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":221,"src":"6358:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":244,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"6364:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":245,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"6373:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":242,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"6346:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6346:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":248,"nodeType":"EmitStatement","src":"6341:45:0"},{"expression":{"hexValue":"74727565","id":249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6407:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":227,"id":250,"nodeType":"Return","src":"6400:11:0"}]}}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"5927:223:0","text":" @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":257,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6164:10:0","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":221,"mutability":"mutable","name":"role","nameLocation":"6183:4:0","nodeType":"VariableDeclaration","scope":257,"src":"6175:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6175:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"account","nameLocation":"6197:7:0","nodeType":"VariableDeclaration","scope":257,"src":"6189:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":222,"name":"address","nodeType":"ElementaryTypeName","src":"6189:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6174:31:0"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":257,"src":"6232:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":225,"name":"bool","nodeType":"ElementaryTypeName","src":"6232:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6231:6:0"},"scope":296,"src":"6155:316:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"6792:233:0","statements":[{"condition":{"arguments":[{"id":268,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":269,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":267,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":81,"src":"6806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":292,"nodeType":"Block","src":"6982:37:0","statements":[{"expression":{"hexValue":"66616c7365","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7003:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":266,"id":291,"nodeType":"Return","src":"6996:12:0"}]},"id":293,"nodeType":"IfStatement","src":"6802:217:0","trueBody":{"id":289,"nodeType":"Block","src":"6830:146:0","statements":[{"expression":{"id":278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":271,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"6844:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":273,"indexExpression":{"id":272,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6851:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6844:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$22_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6857:7:0","memberName":"hasRole","nodeType":"MemberAccess","referencedDeclaration":19,"src":"6844:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":276,"indexExpression":{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6865:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6844:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6876:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6844:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":279,"nodeType":"ExpressionStatement","src":"6844:37:0"},{"eventCall":{"arguments":[{"id":281,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"6912:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":282,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"6918:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":283,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"6927:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6927:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":280,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"6900:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6900:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":286,"nodeType":"EmitStatement","src":"6895:45:0"},{"expression":{"hexValue":"74727565","id":287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6961:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":266,"id":288,"nodeType":"Return","src":"6954:11:0"}]}}]},"documentation":{"id":258,"nodeType":"StructuredDocumentation","src":"6477:226:0","text":" @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"6717:11:0","nodeType":"FunctionDefinition","parameters":{"id":263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":260,"mutability":"mutable","name":"role","nameLocation":"6737:4:0","nodeType":"VariableDeclaration","scope":295,"src":"6729:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":259,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6729:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"account","nameLocation":"6751:7:0","nodeType":"VariableDeclaration","scope":295,"src":"6743:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"6743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6728:31:0"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"6786:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":264,"name":"bool","nodeType":"ElementaryTypeName","src":"6786:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6785:6:0"},"scope":296,"src":"6708:317:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":297,"src":"1962:5065:0","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"108:6920:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[379]},"id":380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":298,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"109:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":299,"nodeType":"StructuredDocumentation","src":"135:90:1","text":" @dev External interface of AccessControl declared to support ERC-165 detection."},"fullyImplemented":false,"id":379,"linearizedBaseContracts":[379],"name":"IAccessControl","nameLocation":"236:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":300,"nodeType":"StructuredDocumentation","src":"257:56:1","text":" @dev The `account` is missing a role."},"errorSelector":"e2517d3f","id":306,"name":"AccessControlUnauthorizedAccount","nameLocation":"324:32:1","nodeType":"ErrorDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":302,"mutability":"mutable","name":"account","nameLocation":"365:7:1","nodeType":"VariableDeclaration","scope":306,"src":"357:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":301,"name":"address","nodeType":"ElementaryTypeName","src":"357:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":304,"mutability":"mutable","name":"neededRole","nameLocation":"382:10:1","nodeType":"VariableDeclaration","scope":306,"src":"374:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":303,"name":"bytes32","nodeType":"ElementaryTypeName","src":"374:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"356:37:1"},"src":"318:76:1"},{"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"400:148:1","text":" @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."},"errorSelector":"6697b232","id":309,"name":"AccessControlBadConfirmation","nameLocation":"559:28:1","nodeType":"ErrorDefinition","parameters":{"id":308,"nodeType":"ParameterList","parameters":[],"src":"587:2:1"},"src":"553:37:1"},{"anonymous":false,"documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"596:254:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":318,"name":"RoleAdminChanged","nameLocation":"861:16:1","nodeType":"EventDefinition","parameters":{"id":317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":312,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"894:4:1","nodeType":"VariableDeclaration","scope":318,"src":"878:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"878:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"916:17:1","nodeType":"VariableDeclaration","scope":318,"src":"900:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":313,"name":"bytes32","nodeType":"ElementaryTypeName","src":"900:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"951:12:1","nodeType":"VariableDeclaration","scope":318,"src":"935:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":315,"name":"bytes32","nodeType":"ElementaryTypeName","src":"935:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"877:87:1"},"src":"855:110:1"},{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"971:295:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":327,"name":"RoleGranted","nameLocation":"1277:11:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1305:4:1","nodeType":"VariableDeclaration","scope":327,"src":"1289:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1327:7:1","nodeType":"VariableDeclaration","scope":327,"src":"1311:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1352:6:1","nodeType":"VariableDeclaration","scope":327,"src":"1336:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":324,"name":"address","nodeType":"ElementaryTypeName","src":"1336:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1288:71:1"},"src":"1271:89:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"1366:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":336,"name":"RoleRevoked","nameLocation":"1652:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1680:4:1","nodeType":"VariableDeclaration","scope":336,"src":"1664:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1664:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1702:7:1","nodeType":"VariableDeclaration","scope":336,"src":"1686:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"1686:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1727:6:1","nodeType":"VariableDeclaration","scope":336,"src":"1711:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1711:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:71:1"},"src":"1646:89:1"},{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"1741:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":346,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1831:7:1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"role","nameLocation":"1847:4:1","nodeType":"VariableDeclaration","scope":346,"src":"1839:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1839:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"account","nameLocation":"1861:7:1","nodeType":"VariableDeclaration","scope":346,"src":"1853:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1853:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1838:31:1"},"returnParameters":{"id":345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":346,"src":"1893:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":343,"name":"bool","nodeType":"ElementaryTypeName","src":"1893:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1892:6:1"},"scope":379,"src":"1822:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":347,"nodeType":"StructuredDocumentation","src":"1905:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":354,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"2103:12:1","nodeType":"FunctionDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":349,"mutability":"mutable","name":"role","nameLocation":"2124:4:1","nodeType":"VariableDeclaration","scope":354,"src":"2116:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2116:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2115:14:1"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":354,"src":"2153:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2153:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2152:9:1"},"scope":379,"src":"2094:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"2168:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":362,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2421:9:1","nodeType":"FunctionDefinition","parameters":{"id":360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":357,"mutability":"mutable","name":"role","nameLocation":"2439:4:1","nodeType":"VariableDeclaration","scope":362,"src":"2431:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":356,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2431:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"account","nameLocation":"2453:7:1","nodeType":"VariableDeclaration","scope":362,"src":"2445:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":358,"name":"address","nodeType":"ElementaryTypeName","src":"2445:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2430:31:1"},"returnParameters":{"id":361,"nodeType":"ParameterList","parameters":[],"src":"2470:0:1"},"scope":379,"src":"2412:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":363,"nodeType":"StructuredDocumentation","src":"2477:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":370,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2714:10:1","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"role","nameLocation":"2733:4:1","nodeType":"VariableDeclaration","scope":370,"src":"2725:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2725:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"account","nameLocation":"2747:7:1","nodeType":"VariableDeclaration","scope":370,"src":"2739:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"2739:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2724:31:1"},"returnParameters":{"id":369,"nodeType":"ParameterList","parameters":[],"src":"2764:0:1"},"scope":379,"src":"2705:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"2771:491:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."},"functionSelector":"36568abe","id":378,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"3276:12:1","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"role","nameLocation":"3297:4:1","nodeType":"VariableDeclaration","scope":378,"src":"3289:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":372,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3289:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":375,"mutability":"mutable","name":"callerConfirmation","nameLocation":"3311:18:1","nodeType":"VariableDeclaration","scope":378,"src":"3303:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":374,"name":"address","nodeType":"ElementaryTypeName","src":"3303:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3288:42:1"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[],"src":"3339:0:1"},"scope":379,"src":"3267:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":380,"src":"226:3116:1","usedErrors":[306,309],"usedEvents":[318,327,336]}],"src":"109:3234:1"},"id":1},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[516],"IERC20Errors":[421],"IERC721Errors":[469]},"id":517,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":381,"literals":["solidity",">=","0.8",".4"],"nodeType":"PragmaDirective","src":"112:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"138:141:2","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":421,"linearizedBaseContracts":[421],"name":"IERC20Errors","nameLocation":"290:12:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":383,"nodeType":"StructuredDocumentation","src":"309:309:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":391,"name":"ERC20InsufficientBalance","nameLocation":"629:24:2","nodeType":"ErrorDefinition","parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":385,"mutability":"mutable","name":"sender","nameLocation":"662:6:2","nodeType":"VariableDeclaration","scope":391,"src":"654:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":384,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":387,"mutability":"mutable","name":"balance","nameLocation":"678:7:2","nodeType":"VariableDeclaration","scope":391,"src":"670:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":386,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"needed","nameLocation":"695:6:2","nodeType":"VariableDeclaration","scope":391,"src":"687:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:2"},"src":"623:80:2"},{"documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"709:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":396,"name":"ERC20InvalidSender","nameLocation":"872:18:2","nodeType":"ErrorDefinition","parameters":{"id":395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"sender","nameLocation":"899:6:2","nodeType":"VariableDeclaration","scope":396,"src":"891:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":393,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:2"},"src":"866:41:2"},{"documentation":{"id":397,"nodeType":"StructuredDocumentation","src":"913:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":401,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:2","nodeType":"ErrorDefinition","parameters":{"id":400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":399,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:2","nodeType":"VariableDeclaration","scope":401,"src":"1104:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":398,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:2"},"src":"1077:45:2"},{"documentation":{"id":402,"nodeType":"StructuredDocumentation","src":"1128:345:2","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":410,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:2","nodeType":"ErrorDefinition","parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":404,"mutability":"mutable","name":"spender","nameLocation":"1519:7:2","nodeType":"VariableDeclaration","scope":410,"src":"1511:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":403,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":406,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:2","nodeType":"VariableDeclaration","scope":410,"src":"1528:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"needed","nameLocation":"1555:6:2","nodeType":"VariableDeclaration","scope":410,"src":"1547:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:2"},"src":"1478:85:2"},{"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"1569:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":415,"name":"ERC20InvalidApprover","nameLocation":"1754:20:2","nodeType":"ErrorDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"approver","nameLocation":"1783:8:2","nodeType":"VariableDeclaration","scope":415,"src":"1775:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:2"},"src":"1748:45:2"},{"documentation":{"id":416,"nodeType":"StructuredDocumentation","src":"1799:195:2","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":420,"name":"ERC20InvalidSpender","nameLocation":"2005:19:2","nodeType":"ErrorDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":418,"mutability":"mutable","name":"spender","nameLocation":"2033:7:2","nodeType":"VariableDeclaration","scope":420,"src":"2025:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":417,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:2"},"src":"1999:43:2"}],"scope":517,"src":"280:1764:2","usedErrors":[391,396,401,410,415,420],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"2046:143:2","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":469,"linearizedBaseContracts":[469],"name":"IERC721Errors","nameLocation":"2200:13:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":423,"nodeType":"StructuredDocumentation","src":"2220:219:2","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":427,"name":"ERC721InvalidOwner","nameLocation":"2450:18:2","nodeType":"ErrorDefinition","parameters":{"id":426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":425,"mutability":"mutable","name":"owner","nameLocation":"2477:5:2","nodeType":"VariableDeclaration","scope":427,"src":"2469:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":424,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:2"},"src":"2444:40:2"},{"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"2490:132:2","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":432,"name":"ERC721NonexistentToken","nameLocation":"2633:22:2","nodeType":"ErrorDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:2","nodeType":"VariableDeclaration","scope":432,"src":"2656:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:2"},"src":"2627:46:2"},{"documentation":{"id":433,"nodeType":"StructuredDocumentation","src":"2679:289:2","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":441,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:2","nodeType":"ErrorDefinition","parameters":{"id":440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":435,"mutability":"mutable","name":"sender","nameLocation":"3008:6:2","nodeType":"VariableDeclaration","scope":441,"src":"3000:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":434,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":437,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:2","nodeType":"VariableDeclaration","scope":441,"src":"3016:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":439,"mutability":"mutable","name":"owner","nameLocation":"3041:5:2","nodeType":"VariableDeclaration","scope":441,"src":"3033:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":438,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:2"},"src":"2973:75:2"},{"documentation":{"id":442,"nodeType":"StructuredDocumentation","src":"3054:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":446,"name":"ERC721InvalidSender","nameLocation":"3217:19:2","nodeType":"ErrorDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":444,"mutability":"mutable","name":"sender","nameLocation":"3245:6:2","nodeType":"VariableDeclaration","scope":446,"src":"3237:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":443,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:2"},"src":"3211:42:2"},{"documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"3259:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":451,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:2","nodeType":"ErrorDefinition","parameters":{"id":450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":449,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:2","nodeType":"VariableDeclaration","scope":451,"src":"3451:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":448,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:2"},"src":"3423:46:2"},{"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"3475:247:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":458,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:2","nodeType":"ErrorDefinition","parameters":{"id":457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"operator","nameLocation":"3768:8:2","nodeType":"VariableDeclaration","scope":458,"src":"3760:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":453,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:2","nodeType":"VariableDeclaration","scope":458,"src":"3778:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:2"},"src":"3727:68:2"},{"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"3801:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":463,"name":"ERC721InvalidApprover","nameLocation":"3986:21:2","nodeType":"ErrorDefinition","parameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"approver","nameLocation":"4016:8:2","nodeType":"VariableDeclaration","scope":463,"src":"4008:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:2"},"src":"3980:46:2"},{"documentation":{"id":464,"nodeType":"StructuredDocumentation","src":"4032:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":468,"name":"ERC721InvalidOperator","nameLocation":"4240:21:2","nodeType":"ErrorDefinition","parameters":{"id":467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"operator","nameLocation":"4270:8:2","nodeType":"VariableDeclaration","scope":468,"src":"4262:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":465,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:2"},"src":"4234:46:2"}],"scope":517,"src":"2190:2092:2","usedErrors":[427,432,441,446,451,458,463,468],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"4284:145:2","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":516,"linearizedBaseContracts":[516],"name":"IERC1155Errors","nameLocation":"4440:14:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"4461:361:2","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":481,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:2","nodeType":"ErrorDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"sender","nameLocation":"4868:6:2","nodeType":"VariableDeclaration","scope":481,"src":"4860:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":472,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":475,"mutability":"mutable","name":"balance","nameLocation":"4884:7:2","nodeType":"VariableDeclaration","scope":481,"src":"4876:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":474,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":477,"mutability":"mutable","name":"needed","nameLocation":"4901:6:2","nodeType":"VariableDeclaration","scope":481,"src":"4893:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":476,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:2","nodeType":"VariableDeclaration","scope":481,"src":"4909:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":478,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:2"},"src":"4827:99:2"},{"documentation":{"id":482,"nodeType":"StructuredDocumentation","src":"4932:152:2","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":486,"name":"ERC1155InvalidSender","nameLocation":"5095:20:2","nodeType":"ErrorDefinition","parameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"sender","nameLocation":"5124:6:2","nodeType":"VariableDeclaration","scope":486,"src":"5116:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":483,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:2"},"src":"5089:43:2"},{"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"5138:159:2","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":491,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:2","nodeType":"ErrorDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:2","nodeType":"VariableDeclaration","scope":491,"src":"5331:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:2"},"src":"5302:47:2"},{"documentation":{"id":492,"nodeType":"StructuredDocumentation","src":"5355:256:2","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":498,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:2","nodeType":"ErrorDefinition","parameters":{"id":497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":494,"mutability":"mutable","name":"operator","nameLocation":"5659:8:2","nodeType":"VariableDeclaration","scope":498,"src":"5651:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":493,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":496,"mutability":"mutable","name":"owner","nameLocation":"5677:5:2","nodeType":"VariableDeclaration","scope":498,"src":"5669:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:2"},"src":"5616:68:2"},{"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"5690:174:2","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":503,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:2","nodeType":"ErrorDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"approver","nameLocation":"5906:8:2","nodeType":"VariableDeclaration","scope":503,"src":"5898:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:2"},"src":"5869:47:2"},{"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"5922:197:2","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":508,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:2","nodeType":"ErrorDefinition","parameters":{"id":507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"operator","nameLocation":"6161:8:2","nodeType":"VariableDeclaration","scope":508,"src":"6153:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:2"},"src":"6124:47:2"},{"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"6177:280:2","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":515,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:2","nodeType":"ErrorDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:2","nodeType":"VariableDeclaration","scope":515,"src":"6494:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:2","nodeType":"VariableDeclaration","scope":515,"src":"6513:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":512,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:2"},"src":"6462:73:2"}],"scope":517,"src":"4430:2107:2","usedErrors":[481,486,491,498,503,508,515],"usedEvents":[]}],"src":"112:6426:2"},"id":2},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[1743],"ERC165":[3221],"ERC721":[1473],"ERC721Utils":[1713],"IERC165":[3233],"IERC721":[1590],"IERC721Errors":[469],"IERC721Metadata":[1636],"Strings":[3197]},"id":1474,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":518,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":520,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1474,"sourceUnit":1591,"src":"133:38:3","symbolAliases":[{"foreign":{"id":519,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"141:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":522,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1474,"sourceUnit":1637,"src":"172:65:3","symbolAliases":[{"foreign":{"id":521,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"180:15:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":524,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1474,"sourceUnit":1714,"src":"238:52:3","symbolAliases":[{"foreign":{"id":523,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"246:11:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":526,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1474,"sourceUnit":1744,"src":"291:48:3","symbolAliases":[{"foreign":{"id":525,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1743,"src":"299:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":528,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1474,"sourceUnit":3198,"src":"340:48:3","symbolAliases":[{"foreign":{"id":527,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"348:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1474,"sourceUnit":3222,"src":"389:69:3","symbolAliases":[{"foreign":{"id":529,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"397:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":530,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"406:6:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":533,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1474,"sourceUnit":517,"src":"459:66:3","symbolAliases":[{"foreign":{"id":532,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"467:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":535,"name":"Context","nameLocations":["803:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1743,"src":"803:7:3"},"id":536,"nodeType":"InheritanceSpecifier","src":"803:7:3"},{"baseName":{"id":537,"name":"ERC165","nameLocations":["812:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3221,"src":"812:6:3"},"id":538,"nodeType":"InheritanceSpecifier","src":"812:6:3"},{"baseName":{"id":539,"name":"IERC721","nameLocations":["820:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":1590,"src":"820:7:3"},"id":540,"nodeType":"InheritanceSpecifier","src":"820:7:3"},{"baseName":{"id":541,"name":"IERC721Metadata","nameLocations":["829:15:3"],"nodeType":"IdentifierPath","referencedDeclaration":1636,"src":"829:15:3"},"id":542,"nodeType":"InheritanceSpecifier","src":"829:15:3"},{"baseName":{"id":543,"name":"IERC721Errors","nameLocations":["846:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":469,"src":"846:13:3"},"id":544,"nodeType":"InheritanceSpecifier","src":"846:13:3"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"527:247:3","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1473,"linearizedBaseContracts":[1473,469,1636,1590,3221,3233,1743],"name":"ERC721","nameLocation":"793:6:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":547,"libraryName":{"id":545,"name":"Strings","nameLocations":["872:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3197,"src":"872:7:3"},"nodeType":"UsingForDirective","src":"866:26:3","typeName":{"id":546,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":549,"mutability":"mutable","name":"_name","nameLocation":"931:5:3","nodeType":"VariableDeclaration","scope":1473,"src":"916:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":548,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":551,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:3","nodeType":"VariableDeclaration","scope":1473,"src":"963:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":550,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":555,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:3","nodeType":"VariableDeclaration","scope":1473,"src":"992:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":554,"keyName":"tokenId","keyNameLocation":"1008:7:3","keyType":{"id":552,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":559,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:3","nodeType":"VariableDeclaration","scope":1473,"src":"1050:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":558,"keyName":"owner","keyNameLocation":"1066:5:3","keyType":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":563,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:3","nodeType":"VariableDeclaration","scope":1473,"src":"1108:59:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":562,"keyName":"tokenId","keyNameLocation":"1124:7:3","keyType":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":561,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":569,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:3","nodeType":"VariableDeclaration","scope":1473,"src":"1174:86:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":568,"keyName":"owner","keyNameLocation":"1190:5:3","keyType":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":567,"keyName":"operator","keyNameLocation":"1215:8:3","keyType":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":566,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":585,"nodeType":"Block","src":"1436:57:3","statements":[{"expression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":577,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"1446:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":578,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"1454:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":580,"nodeType":"ExpressionStatement","src":"1446:13:3"},{"expression":{"id":583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":581,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"1469:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":582,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":574,"src":"1479:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":584,"nodeType":"ExpressionStatement","src":"1469:17:3"}]},"documentation":{"id":570,"nodeType":"StructuredDocumentation","src":"1267:108:3","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":586,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"name_","nameLocation":"1406:5:3","nodeType":"VariableDeclaration","scope":586,"src":"1392:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":571,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":574,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:3","nodeType":"VariableDeclaration","scope":586,"src":"1413:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":573,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:3"},"returnParameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"1436:0:3"},"scope":1473,"src":"1380:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[3220,3232],"body":{"id":616,"nodeType":"Block","src":"1635:192:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":597,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"1664:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":599,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"1684:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1590_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1590_$","typeString":"type(contract IERC721)"}],"id":598,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1679:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1679:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1590","typeString":"type(contract IERC721)"}},"id":601,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1693:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1679:25:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1664:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":603,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"1720:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":605,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1636,"src":"1740:15:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1636_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1636_$","typeString":"type(contract IERC721Metadata)"}],"id":604,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1735:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1735:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1636","typeString":"type(contract IERC721Metadata)"}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1757:11:3","memberName":"interfaceId","nodeType":"MemberAccess","src":"1735:33:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1720:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:104:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":612,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"1808:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":610,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1784:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1473_$","typeString":"type(contract super ERC721)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:17:3","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":3220,"src":"1784:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1784:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1664:156:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":596,"id":615,"nodeType":"Return","src":"1645:175:3"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"1499:23:3","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":617,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1536:17:3","nodeType":"FunctionDefinition","overrides":{"id":593,"nodeType":"OverrideSpecifier","overrides":[{"id":591,"name":"ERC165","nameLocations":["1603:6:3"],"nodeType":"IdentifierPath","referencedDeclaration":3221,"src":"1603:6:3"},{"id":592,"name":"IERC165","nameLocations":["1611:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":3233,"src":"1611:7:3"}],"src":"1594:25:3"},"parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"interfaceId","nameLocation":"1561:11:3","nodeType":"VariableDeclaration","scope":617,"src":"1554:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":588,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1554:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1553:20:3"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":617,"src":"1629:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":594,"name":"bool","nodeType":"ElementaryTypeName","src":"1629:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1628:6:3"},"scope":1473,"src":"1527:300:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1515],"body":{"id":644,"nodeType":"Block","src":"1933:136:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":625,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"1947:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1964:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1956:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"1956:7:3","typeDescriptions":{}}},"id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1956:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1947:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":639,"nodeType":"IfStatement","src":"1943:87:3","trueBody":{"id":638,"nodeType":"Block","src":"1968:62:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2016:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":632,"name":"address","nodeType":"ElementaryTypeName","src":"2008:7:3","typeDescriptions":{}}},"id":635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":631,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":427,"src":"1989:18:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1989:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"RevertStatement","src":"1982:37:3"}]}},{"expression":{"baseExpression":{"id":640,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"2046:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":642,"indexExpression":{"id":641,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"2056:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2046:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":624,"id":643,"nodeType":"Return","src":"2039:23:3"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"1833:23:3","text":"@inheritdoc IERC721"},"functionSelector":"70a08231","id":645,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1870:9:3","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":620,"mutability":"mutable","name":"owner","nameLocation":"1888:5:3","nodeType":"VariableDeclaration","scope":645,"src":"1880:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":619,"name":"address","nodeType":"ElementaryTypeName","src":"1880:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1879:15:3"},"returnParameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":645,"src":"1924:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"1924:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1923:9:3"},"scope":1473,"src":"1861:208:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1523],"body":{"id":657,"nodeType":"Block","src":"2175:46:3","statements":[{"expression":{"arguments":[{"id":654,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"2206:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":653,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"2192:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2192:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":652,"id":656,"nodeType":"Return","src":"2185:29:3"}]},"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"2075:23:3","text":"@inheritdoc IERC721"},"functionSelector":"6352211e","id":658,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2112:7:3","nodeType":"FunctionDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"tokenId","nameLocation":"2128:7:3","nodeType":"VariableDeclaration","scope":658,"src":"2120:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"2120:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2119:17:3"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":658,"src":"2166:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":650,"name":"address","nodeType":"ElementaryTypeName","src":"2166:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2165:9:3"},"scope":1473,"src":"2103:118:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1621],"body":{"id":666,"nodeType":"Block","src":"2323:29:3","statements":[{"expression":{"id":664,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"2340:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":663,"id":665,"nodeType":"Return","src":"2333:12:3"}]},"documentation":{"id":659,"nodeType":"StructuredDocumentation","src":"2227:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"06fdde03","id":667,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2272:4:3","nodeType":"FunctionDefinition","parameters":{"id":660,"nodeType":"ParameterList","parameters":[],"src":"2276:2:3"},"returnParameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":667,"src":"2308:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":661,"name":"string","nodeType":"ElementaryTypeName","src":"2308:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2307:15:3"},"scope":1473,"src":"2263:89:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1627],"body":{"id":675,"nodeType":"Block","src":"2456:31:3","statements":[{"expression":{"id":673,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":551,"src":"2473:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":672,"id":674,"nodeType":"Return","src":"2466:14:3"}]},"documentation":{"id":668,"nodeType":"StructuredDocumentation","src":"2358:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"95d89b41","id":676,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2403:6:3","nodeType":"FunctionDefinition","parameters":{"id":669,"nodeType":"ParameterList","parameters":[],"src":"2409:2:3"},"returnParameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":676,"src":"2441:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":670,"name":"string","nodeType":"ElementaryTypeName","src":"2441:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2440:15:3"},"scope":1473,"src":"2394:93:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1635],"body":{"id":711,"nodeType":"Block","src":"2608:176:3","statements":[{"expression":{"arguments":[{"id":685,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"2632:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":684,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"2618:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2618:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":687,"nodeType":"ExpressionStatement","src":"2618:22:3"},{"assignments":[689],"declarations":[{"constant":false,"id":689,"mutability":"mutable","name":"baseURI","nameLocation":"2665:7:3","nodeType":"VariableDeclaration","scope":711,"src":"2651:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":688,"name":"string","nodeType":"ElementaryTypeName","src":"2651:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":692,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":690,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"2675:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2675:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2651:34:3"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":695,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"2708:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2702:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":693,"name":"bytes","nodeType":"ElementaryTypeName","src":"2702:5:3","typeDescriptions":{}}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2702:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2717:6:3","memberName":"length","nodeType":"MemberAccess","src":"2702:21:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2702:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2775:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2702:75:3","trueExpression":{"arguments":[{"id":703,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":689,"src":"2744:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":704,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"2753:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2761:8:3","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1909,"src":"2753:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2753:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2730:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":700,"name":"string","nodeType":"ElementaryTypeName","src":"2730:6:3","typeDescriptions":{}}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2737:6:3","memberName":"concat","nodeType":"MemberAccess","src":"2730:13:3","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2730:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":683,"id":710,"nodeType":"Return","src":"2695:82:3"}]},"documentation":{"id":677,"nodeType":"StructuredDocumentation","src":"2493:31:3","text":"@inheritdoc IERC721Metadata"},"functionSelector":"c87b56dd","id":712,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2538:8:3","nodeType":"FunctionDefinition","parameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"tokenId","nameLocation":"2555:7:3","nodeType":"VariableDeclaration","scope":712,"src":"2547:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"2547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2546:17:3"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":712,"src":"2593:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":681,"name":"string","nodeType":"ElementaryTypeName","src":"2593:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2592:15:3"},"scope":1473,"src":"2529:255:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":720,"nodeType":"Block","src":"3092:26:3","statements":[{"expression":{"hexValue":"","id":718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3109:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":717,"id":719,"nodeType":"Return","src":"3102:9:3"}]},"documentation":{"id":713,"nodeType":"StructuredDocumentation","src":"2790:231:3","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":721,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3035:8:3","nodeType":"FunctionDefinition","parameters":{"id":714,"nodeType":"ParameterList","parameters":[],"src":"3043:2:3"},"returnParameters":{"id":717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":721,"src":"3077:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":715,"name":"string","nodeType":"ElementaryTypeName","src":"3077:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3076:15:3"},"scope":1473,"src":"3026:92:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1563],"body":{"id":736,"nodeType":"Block","src":"3213:52:3","statements":[{"expression":{"arguments":[{"id":730,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"3232:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":731,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"3236:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":732,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"3245:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3245:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":729,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1340,1406],"referencedDeclaration":1340,"src":"3223:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3223:35:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":735,"nodeType":"ExpressionStatement","src":"3223:35:3"}]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"3124:23:3","text":"@inheritdoc IERC721"},"functionSelector":"095ea7b3","id":737,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3161:7:3","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"to","nameLocation":"3177:2:3","nodeType":"VariableDeclaration","scope":737,"src":"3169:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"3169:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"tokenId","nameLocation":"3189:7:3","nodeType":"VariableDeclaration","scope":737,"src":"3181:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":725,"name":"uint256","nodeType":"ElementaryTypeName","src":"3181:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3168:29:3"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"3213:0:3"},"scope":1473,"src":"3152:113:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1579],"body":{"id":753,"nodeType":"Block","src":"3375:78:3","statements":[{"expression":{"arguments":[{"id":746,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"3399:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":745,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"3385:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3385:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":748,"nodeType":"ExpressionStatement","src":"3385:22:3"},{"expression":{"arguments":[{"id":750,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"3438:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":749,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"3425:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3425:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":744,"id":752,"nodeType":"Return","src":"3418:28:3"}]},"documentation":{"id":738,"nodeType":"StructuredDocumentation","src":"3271:23:3","text":"@inheritdoc IERC721"},"functionSelector":"081812fc","id":754,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3308:11:3","nodeType":"FunctionDefinition","parameters":{"id":741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":740,"mutability":"mutable","name":"tokenId","nameLocation":"3328:7:3","nodeType":"VariableDeclaration","scope":754,"src":"3320:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":739,"name":"uint256","nodeType":"ElementaryTypeName","src":"3320:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3319:17:3"},"returnParameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"3366:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"3366:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3365:9:3"},"scope":1473,"src":"3299:154:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1571],"body":{"id":769,"nodeType":"Block","src":"3562:69:3","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":763,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"3591:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":765,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"3605:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":766,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"3615:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":762,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1443,"src":"3572:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3572:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":768,"nodeType":"ExpressionStatement","src":"3572:52:3"}]},"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"3459:23:3","text":"@inheritdoc IERC721"},"functionSelector":"a22cb465","id":770,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3496:17:3","nodeType":"FunctionDefinition","parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"operator","nameLocation":"3522:8:3","nodeType":"VariableDeclaration","scope":770,"src":"3514:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"3514:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"approved","nameLocation":"3537:8:3","nodeType":"VariableDeclaration","scope":770,"src":"3532:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":758,"name":"bool","nodeType":"ElementaryTypeName","src":"3532:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3513:33:3"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[],"src":"3562:0:3"},"scope":1473,"src":"3487:144:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1589],"body":{"id":786,"nodeType":"Block","src":"3759:59:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":780,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"3776:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":782,"indexExpression":{"id":781,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"3795:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":784,"indexExpression":{"id":783,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":775,"src":"3802:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3776:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":779,"id":785,"nodeType":"Return","src":"3769:42:3"}]},"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"3637:23:3","text":"@inheritdoc IERC721"},"functionSelector":"e985e9c5","id":787,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3674:16:3","nodeType":"FunctionDefinition","parameters":{"id":776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"owner","nameLocation":"3699:5:3","nodeType":"VariableDeclaration","scope":787,"src":"3691:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"3691:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":775,"mutability":"mutable","name":"operator","nameLocation":"3714:8:3","nodeType":"VariableDeclaration","scope":787,"src":"3706:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"3706:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3690:33:3"},"returnParameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":778,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":787,"src":"3753:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":777,"name":"bool","nodeType":"ElementaryTypeName","src":"3753:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3752:6:3"},"scope":1473,"src":"3665:153:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1555],"body":{"id":832,"nodeType":"Block","src":"3932:498:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":797,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"3946:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3960:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":799,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3952:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":798,"name":"address","nodeType":"ElementaryTypeName","src":"3952:7:3","typeDescriptions":{}}},"id":801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3952:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3946:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":811,"nodeType":"IfStatement","src":"3942:87:3","trueBody":{"id":810,"nodeType":"Block","src":"3964:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4015:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4007:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":804,"name":"address","nodeType":"ElementaryTypeName","src":"4007:7:3","typeDescriptions":{}}},"id":807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4007:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":803,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"3985:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3985:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":809,"nodeType":"RevertStatement","src":"3978:40:3"}]}},{"assignments":[813],"declarations":[{"constant":false,"id":813,"mutability":"mutable","name":"previousOwner","nameLocation":"4255:13:3","nodeType":"VariableDeclaration","scope":832,"src":"4247:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":812,"name":"address","nodeType":"ElementaryTypeName","src":"4247:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":820,"initialValue":{"arguments":[{"id":815,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"4279:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":816,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"4283:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":817,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"4292:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4292:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":814,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"4271:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4271:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4247:58:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":821,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"4319:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":822,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4336:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4319:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":831,"nodeType":"IfStatement","src":"4315:109:3","trueBody":{"id":830,"nodeType":"Block","src":"4342:82:3","statements":[{"errorCall":{"arguments":[{"id":825,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"4384:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":826,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":794,"src":"4390:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":827,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"4399:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":824,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"4363:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4363:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":829,"nodeType":"RevertStatement","src":"4356:57:3"}]}}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"3824:23:3","text":"@inheritdoc IERC721"},"functionSelector":"23b872dd","id":833,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3861:12:3","nodeType":"FunctionDefinition","parameters":{"id":795,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"from","nameLocation":"3882:4:3","nodeType":"VariableDeclaration","scope":833,"src":"3874:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"3874:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"to","nameLocation":"3896:2:3","nodeType":"VariableDeclaration","scope":833,"src":"3888:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"3888:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":794,"mutability":"mutable","name":"tokenId","nameLocation":"3908:7:3","nodeType":"VariableDeclaration","scope":833,"src":"3900:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":793,"name":"uint256","nodeType":"ElementaryTypeName","src":"3900:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3873:43:3"},"returnParameters":{"id":796,"nodeType":"ParameterList","parameters":[],"src":"3932:0:3"},"scope":1473,"src":"3852:578:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1545],"body":{"id":850,"nodeType":"Block","src":"4540:56:3","statements":[{"expression":{"arguments":[{"id":844,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"4567:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":845,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":838,"src":"4573:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":846,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":840,"src":"4577:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4586:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":843,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[851,881],"referencedDeclaration":881,"src":"4550:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4550:39:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":849,"nodeType":"ExpressionStatement","src":"4550:39:3"}]},"documentation":{"id":834,"nodeType":"StructuredDocumentation","src":"4436:23:3","text":"@inheritdoc IERC721"},"functionSelector":"42842e0e","id":851,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4473:16:3","nodeType":"FunctionDefinition","parameters":{"id":841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":836,"mutability":"mutable","name":"from","nameLocation":"4498:4:3","nodeType":"VariableDeclaration","scope":851,"src":"4490:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"4490:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"to","nameLocation":"4512:2:3","nodeType":"VariableDeclaration","scope":851,"src":"4504:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":837,"name":"address","nodeType":"ElementaryTypeName","src":"4504:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":840,"mutability":"mutable","name":"tokenId","nameLocation":"4524:7:3","nodeType":"VariableDeclaration","scope":851,"src":"4516:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":839,"name":"uint256","nodeType":"ElementaryTypeName","src":"4516:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4489:43:3"},"returnParameters":{"id":842,"nodeType":"ParameterList","parameters":[],"src":"4540:0:3"},"scope":1473,"src":"4464:132:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1535],"body":{"id":880,"nodeType":"Block","src":"4733:130:3","statements":[{"expression":{"arguments":[{"id":864,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"4756:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":865,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"4762:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":866,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"4766:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":863,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"4743:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4743:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"4743:31:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":872,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"4818:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4818:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":874,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"4832:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"4838:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":876,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"4842:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":877,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"4851:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":869,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"4784:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1713_$","typeString":"type(library ERC721Utils)"}},"id":871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4796:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1712,"src":"4784:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4784:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":879,"nodeType":"ExpressionStatement","src":"4784:72:3"}]},"documentation":{"id":852,"nodeType":"StructuredDocumentation","src":"4602:23:3","text":"@inheritdoc IERC721"},"functionSelector":"b88d4fde","id":881,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4639:16:3","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":854,"mutability":"mutable","name":"from","nameLocation":"4664:4:3","nodeType":"VariableDeclaration","scope":881,"src":"4656:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":853,"name":"address","nodeType":"ElementaryTypeName","src":"4656:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"to","nameLocation":"4678:2:3","nodeType":"VariableDeclaration","scope":881,"src":"4670:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":855,"name":"address","nodeType":"ElementaryTypeName","src":"4670:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"tokenId","nameLocation":"4690:7:3","nodeType":"VariableDeclaration","scope":881,"src":"4682:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"4682:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"data","nameLocation":"4712:4:3","nodeType":"VariableDeclaration","scope":881,"src":"4699:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":859,"name":"bytes","nodeType":"ElementaryTypeName","src":"4699:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4655:62:3"},"returnParameters":{"id":862,"nodeType":"ParameterList","parameters":[],"src":"4733:0:3"},"scope":1473,"src":"4630:233:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":893,"nodeType":"Block","src":"5453:40:3","statements":[{"expression":{"baseExpression":{"id":889,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"5470:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":891,"indexExpression":{"id":890,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"5478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5470:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":888,"id":892,"nodeType":"Return","src":"5463:23:3"}]},"documentation":{"id":882,"nodeType":"StructuredDocumentation","src":"4869:504:3","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":894,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5387:8:3","nodeType":"FunctionDefinition","parameters":{"id":885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":884,"mutability":"mutable","name":"tokenId","nameLocation":"5404:7:3","nodeType":"VariableDeclaration","scope":894,"src":"5396:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":883,"name":"uint256","nodeType":"ElementaryTypeName","src":"5396:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5395:17:3"},"returnParameters":{"id":888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":894,"src":"5444:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"5444:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5443:9:3"},"scope":1473,"src":"5378:115:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":906,"nodeType":"Block","src":"5688:48:3","statements":[{"expression":{"baseExpression":{"id":902,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"5705:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":904,"indexExpression":{"id":903,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":897,"src":"5721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5705:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":901,"id":905,"nodeType":"Return","src":"5698:31:3"}]},"documentation":{"id":895,"nodeType":"StructuredDocumentation","src":"5499:105:3","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":907,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5618:12:3","nodeType":"FunctionDefinition","parameters":{"id":898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":897,"mutability":"mutable","name":"tokenId","nameLocation":"5639:7:3","nodeType":"VariableDeclaration","scope":907,"src":"5631:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"5631:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5630:17:3"},"returnParameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":907,"src":"5679:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":899,"name":"address","nodeType":"ElementaryTypeName","src":"5679:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5678:9:3"},"scope":1473,"src":"5609:127:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":942,"nodeType":"Block","src":"6156:163:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":919,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6185:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6204:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":921,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6196:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":920,"name":"address","nodeType":"ElementaryTypeName","src":"6196:7:3","typeDescriptions":{}}},"id":923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6185:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":925,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6223:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":926,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6232:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6223:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":929,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"6260:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":930,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6267:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":928,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"6243:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6243:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":934,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":914,"src":"6292:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":933,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"6279:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":936,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":912,"src":"6304:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6279:32:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6223:88:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6222:90:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6185:127:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":918,"id":941,"nodeType":"Return","src":"6166:146:3"}]},"documentation":{"id":908,"nodeType":"StructuredDocumentation","src":"5742:300:3","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":943,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6056:13:3","nodeType":"FunctionDefinition","parameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"mutability":"mutable","name":"owner","nameLocation":"6078:5:3","nodeType":"VariableDeclaration","scope":943,"src":"6070:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":909,"name":"address","nodeType":"ElementaryTypeName","src":"6070:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":912,"mutability":"mutable","name":"spender","nameLocation":"6093:7:3","nodeType":"VariableDeclaration","scope":943,"src":"6085:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":911,"name":"address","nodeType":"ElementaryTypeName","src":"6085:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":914,"mutability":"mutable","name":"tokenId","nameLocation":"6110:7:3","nodeType":"VariableDeclaration","scope":943,"src":"6102:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":913,"name":"uint256","nodeType":"ElementaryTypeName","src":"6102:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6069:49:3"},"returnParameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":943,"src":"6150:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":916,"name":"bool","nodeType":"ElementaryTypeName","src":"6150:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6149:6:3"},"scope":1473,"src":"6047:272:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":979,"nodeType":"Block","src":"6848:271:3","statements":[{"condition":{"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6862:39:3","subExpression":{"arguments":[{"id":954,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"6877:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":955,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"6884:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":956,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"6893:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":953,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"6863:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6863:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":978,"nodeType":"IfStatement","src":"6858:255:3","trueBody":{"id":977,"nodeType":"Block","src":"6903:210:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":959,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"6921:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6938:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6930:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"6930:7:3","typeDescriptions":{}}},"id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6930:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6921:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":975,"nodeType":"Block","src":"7019:84:3","statements":[{"errorCall":{"arguments":[{"id":971,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":948,"src":"7071:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":972,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"7080:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":970,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7044:26:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7044:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":974,"nodeType":"RevertStatement","src":"7037:51:3"}]},"id":976,"nodeType":"IfStatement","src":"6917:186:3","trueBody":{"id":969,"nodeType":"Block","src":"6942:71:3","statements":[{"errorCall":{"arguments":[{"id":966,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":950,"src":"6990:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":965,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6967:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":967,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6967:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":968,"nodeType":"RevertStatement","src":"6960:38:3"}]}}]}}]},"documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"6325:421:3","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":980,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"6760:16:3","nodeType":"FunctionDefinition","parameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"owner","nameLocation":"6785:5:3","nodeType":"VariableDeclaration","scope":980,"src":"6777:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":945,"name":"address","nodeType":"ElementaryTypeName","src":"6777:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":948,"mutability":"mutable","name":"spender","nameLocation":"6800:7:3","nodeType":"VariableDeclaration","scope":980,"src":"6792:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"6792:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":950,"mutability":"mutable","name":"tokenId","nameLocation":"6817:7:3","nodeType":"VariableDeclaration","scope":980,"src":"6809:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"6809:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6776:49:3"},"returnParameters":{"id":952,"nodeType":"ParameterList","parameters":[],"src":"6848:0:3"},"scope":1473,"src":"6751:368:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":995,"nodeType":"Block","src":"7836:78:3","statements":[{"id":994,"nodeType":"UncheckedBlock","src":"7846:62:3","statements":[{"expression":{"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":988,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"7870:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":990,"indexExpression":{"id":989,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":983,"src":"7880:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7870:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":985,"src":"7892:5:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"7870:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":993,"nodeType":"ExpressionStatement","src":"7870:27:3"}]}]},"documentation":{"id":981,"nodeType":"StructuredDocumentation","src":"7125:631:3","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":996,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"7770:16:3","nodeType":"FunctionDefinition","parameters":{"id":986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":983,"mutability":"mutable","name":"account","nameLocation":"7795:7:3","nodeType":"VariableDeclaration","scope":996,"src":"7787:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":982,"name":"address","nodeType":"ElementaryTypeName","src":"7787:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":985,"mutability":"mutable","name":"value","nameLocation":"7812:5:3","nodeType":"VariableDeclaration","scope":996,"src":"7804:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":984,"name":"uint128","nodeType":"ElementaryTypeName","src":"7804:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"7786:32:3"},"returnParameters":{"id":987,"nodeType":"ParameterList","parameters":[],"src":"7836:0:3"},"scope":1473,"src":"7761:153:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1085,"nodeType":"Block","src":"8602:700:3","statements":[{"assignments":[1009],"declarations":[{"constant":false,"id":1009,"mutability":"mutable","name":"from","nameLocation":"8620:4:3","nodeType":"VariableDeclaration","scope":1085,"src":"8612:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1008,"name":"address","nodeType":"ElementaryTypeName","src":"8612:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1013,"initialValue":{"arguments":[{"id":1011,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"8636:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1010,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"8627:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8627:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8612:32:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1014,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"8704:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8720:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8712:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1015,"name":"address","nodeType":"ElementaryTypeName","src":"8712:7:3","typeDescriptions":{}}},"id":1018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8712:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8704:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1027,"nodeType":"IfStatement","src":"8700:86:3","trueBody":{"id":1026,"nodeType":"Block","src":"8724:62:3","statements":[{"expression":{"arguments":[{"id":1021,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8755:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1022,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"8761:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1023,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"8767:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1020,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"8738:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":1024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1025,"nodeType":"ExpressionStatement","src":"8738:37:3"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1028,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8830:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8846:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8838:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:3","typeDescriptions":{}}},"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8838:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8830:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1055,"nodeType":"IfStatement","src":"8826:256:3","trueBody":{"id":1054,"nodeType":"Block","src":"8850:232:3","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8963:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8955:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"8955:7:3","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1039,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"8967:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1042,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8984:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1041,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8976:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1040,"name":"address","nodeType":"ElementaryTypeName","src":"8976:7:3","typeDescriptions":{}}},"id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8976:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":1044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8988:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1034,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1340,1406],"referencedDeclaration":1406,"src":"8946:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8946:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1046,"nodeType":"ExpressionStatement","src":"8946:48:3"},{"id":1053,"nodeType":"UncheckedBlock","src":"9009:63:3","statements":[{"expression":{"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1047,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"9037:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1049,"indexExpression":{"id":1048,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"9047:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9037:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9037:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1052,"nodeType":"ExpressionStatement","src":"9037:20:3"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1056,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"9096:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9110:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9102:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"9102:7:3","typeDescriptions":{}}},"id":1060,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9102:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9096:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1070,"nodeType":"IfStatement","src":"9092:107:3","trueBody":{"id":1069,"nodeType":"Block","src":"9114:85:3","statements":[{"id":1068,"nodeType":"UncheckedBlock","src":"9128:61:3","statements":[{"expression":{"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1062,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"9156:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1064,"indexExpression":{"id":1063,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"9166:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9156:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9173:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9156:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1067,"nodeType":"ExpressionStatement","src":"9156:18:3"}]}]}},{"expression":{"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1071,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"9209:7:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1073,"indexExpression":{"id":1072,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"9217:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9209:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1074,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"9228:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9209:21:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1076,"nodeType":"ExpressionStatement","src":"9209:21:3"},{"eventCall":{"arguments":[{"id":1078,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"9255:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1079,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":999,"src":"9261:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1080,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1001,"src":"9265:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1077,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1489,"src":"9246:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9246:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1082,"nodeType":"EmitStatement","src":"9241:32:3"},{"expression":{"id":1083,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"9291:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1007,"id":1084,"nodeType":"Return","src":"9284:11:3"}]},"documentation":{"id":997,"nodeType":"StructuredDocumentation","src":"7920:582:3","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":1086,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8516:7:3","nodeType":"FunctionDefinition","parameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":999,"mutability":"mutable","name":"to","nameLocation":"8532:2:3","nodeType":"VariableDeclaration","scope":1086,"src":"8524:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":998,"name":"address","nodeType":"ElementaryTypeName","src":"8524:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1001,"mutability":"mutable","name":"tokenId","nameLocation":"8544:7:3","nodeType":"VariableDeclaration","scope":1086,"src":"8536:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"8536:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1003,"mutability":"mutable","name":"auth","nameLocation":"8561:4:3","nodeType":"VariableDeclaration","scope":1086,"src":"8553:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"8553:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8523:43:3"},"returnParameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1086,"src":"8593:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"8593:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8592:9:3"},"scope":1473,"src":"8507:795:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1135,"nodeType":"Block","src":"9677:274:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1094,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"9691:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9705:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9697:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"9697:7:3","typeDescriptions":{}}},"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9697:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9691:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1108,"nodeType":"IfStatement","src":"9687:87:3","trueBody":{"id":1107,"nodeType":"Block","src":"9709:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9760:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9752:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1101,"name":"address","nodeType":"ElementaryTypeName","src":"9752:7:3","typeDescriptions":{}}},"id":1104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9752:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1100,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"9730:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9730:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1106,"nodeType":"RevertStatement","src":"9723:40:3"}]}},{"assignments":[1110],"declarations":[{"constant":false,"id":1110,"mutability":"mutable","name":"previousOwner","nameLocation":"9791:13:3","nodeType":"VariableDeclaration","scope":1135,"src":"9783:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1109,"name":"address","nodeType":"ElementaryTypeName","src":"9783:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1119,"initialValue":{"arguments":[{"id":1112,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1089,"src":"9815:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1113,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1091,"src":"9819:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1115,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9828:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1114,"name":"address","nodeType":"ElementaryTypeName","src":"9828:7:3","typeDescriptions":{}}},"id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9828:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1111,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"9807:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9807:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"9783:56:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1120,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1110,"src":"9853:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9878:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9870:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"9870:7:3","typeDescriptions":{}}},"id":1124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9870:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9853:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1134,"nodeType":"IfStatement","src":"9849:96:3","trueBody":{"id":1133,"nodeType":"Block","src":"9882:63:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9931:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9923:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1127,"name":"address","nodeType":"ElementaryTypeName","src":"9923:7:3","typeDescriptions":{}}},"id":1130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9923:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1126,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"9903:19:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9903:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1132,"nodeType":"RevertStatement","src":"9896:38:3"}]}}]},"documentation":{"id":1087,"nodeType":"StructuredDocumentation","src":"9308:311:3","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":1136,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9633:5:3","nodeType":"FunctionDefinition","parameters":{"id":1092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1089,"mutability":"mutable","name":"to","nameLocation":"9647:2:3","nodeType":"VariableDeclaration","scope":1136,"src":"9639:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1088,"name":"address","nodeType":"ElementaryTypeName","src":"9639:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"tokenId","nameLocation":"9659:7:3","nodeType":"VariableDeclaration","scope":1136,"src":"9651:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"9651:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9638:29:3"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"9677:0:3"},"scope":1473,"src":"9624:327:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1150,"nodeType":"Block","src":"10359:43:3","statements":[{"expression":{"arguments":[{"id":1145,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"10379:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1146,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"10383:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10392:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1144,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1151,1181],"referencedDeclaration":1181,"src":"10369:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10369:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1149,"nodeType":"ExpressionStatement","src":"10369:26:3"}]},"documentation":{"id":1137,"nodeType":"StructuredDocumentation","src":"9957:340:3","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1151,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10311:9:3","nodeType":"FunctionDefinition","parameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1139,"mutability":"mutable","name":"to","nameLocation":"10329:2:3","nodeType":"VariableDeclaration","scope":1151,"src":"10321:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1138,"name":"address","nodeType":"ElementaryTypeName","src":"10321:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1141,"mutability":"mutable","name":"tokenId","nameLocation":"10341:7:3","nodeType":"VariableDeclaration","scope":1151,"src":"10333:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"10333:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:29:3"},"returnParameters":{"id":1143,"nodeType":"ParameterList","parameters":[],"src":"10359:0:3"},"scope":1473,"src":"10302:100:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1180,"nodeType":"Block","src":"10707:123:3","statements":[{"expression":{"arguments":[{"id":1162,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"10723:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1163,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"10727:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1161,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1136,"src":"10717:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10717:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1165,"nodeType":"ExpressionStatement","src":"10717:18:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1169,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"10779:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10779:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10801:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10793:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"10793:7:3","typeDescriptions":{}}},"id":1174,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10793:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1175,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"10805:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1176,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"10809:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1177,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1158,"src":"10818:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1166,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"10745:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1713_$","typeString":"type(library ERC721Utils)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10757:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1712,"src":"10745:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10745:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1179,"nodeType":"ExpressionStatement","src":"10745:78:3"}]},"documentation":{"id":1152,"nodeType":"StructuredDocumentation","src":"10408:210:3","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1181,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10632:9:3","nodeType":"FunctionDefinition","parameters":{"id":1159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"to","nameLocation":"10650:2:3","nodeType":"VariableDeclaration","scope":1181,"src":"10642:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1153,"name":"address","nodeType":"ElementaryTypeName","src":"10642:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1156,"mutability":"mutable","name":"tokenId","nameLocation":"10662:7:3","nodeType":"VariableDeclaration","scope":1181,"src":"10654:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"10654:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"data","nameLocation":"10684:4:3","nodeType":"VariableDeclaration","scope":1181,"src":"10671:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1157,"name":"bytes","nodeType":"ElementaryTypeName","src":"10671:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10641:48:3"},"returnParameters":{"id":1160,"nodeType":"ParameterList","parameters":[],"src":"10707:0:3"},"scope":1473,"src":"10623:207:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1213,"nodeType":"Block","src":"11197:186:3","statements":[{"assignments":[1188],"declarations":[{"constant":false,"id":1188,"mutability":"mutable","name":"previousOwner","nameLocation":"11215:13:3","nodeType":"VariableDeclaration","scope":1213,"src":"11207:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"11207:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1200,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":1192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11247:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11239:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1190,"name":"address","nodeType":"ElementaryTypeName","src":"11239:7:3","typeDescriptions":{}}},"id":1193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11239:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1194,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"11251:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11268:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11260:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"11260:7:3","typeDescriptions":{}}},"id":1198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11260:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1189,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"11231:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11231:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11207:64:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1201,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1188,"src":"11285:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11310:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11302:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1202,"name":"address","nodeType":"ElementaryTypeName","src":"11302:7:3","typeDescriptions":{}}},"id":1205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11302:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11285:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1212,"nodeType":"IfStatement","src":"11281:96:3","trueBody":{"id":1211,"nodeType":"Block","src":"11314:63:3","statements":[{"errorCall":{"arguments":[{"id":1208,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"11358:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1207,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"11335:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1210,"nodeType":"RevertStatement","src":"11328:38:3"}]}}]},"documentation":{"id":1182,"nodeType":"StructuredDocumentation","src":"10836:315:3","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":1214,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11165:5:3","nodeType":"FunctionDefinition","parameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"tokenId","nameLocation":"11179:7:3","nodeType":"VariableDeclaration","scope":1214,"src":"11171:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1183,"name":"uint256","nodeType":"ElementaryTypeName","src":"11171:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11170:17:3"},"returnParameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"11197:0:3"},"scope":1473,"src":"11156:227:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1273,"nodeType":"Block","src":"11778:389:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1224,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"11792:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11806:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11798:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"11798:7:3","typeDescriptions":{}}},"id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11798:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11792:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1238,"nodeType":"IfStatement","src":"11788:87:3","trueBody":{"id":1237,"nodeType":"Block","src":"11810:65:3","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11861:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11853:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1231,"name":"address","nodeType":"ElementaryTypeName","src":"11853:7:3","typeDescriptions":{}}},"id":1234,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1230,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"11831:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11831:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1236,"nodeType":"RevertStatement","src":"11824:40:3"}]}},{"assignments":[1240],"declarations":[{"constant":false,"id":1240,"mutability":"mutable","name":"previousOwner","nameLocation":"11892:13:3","nodeType":"VariableDeclaration","scope":1273,"src":"11884:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1239,"name":"address","nodeType":"ElementaryTypeName","src":"11884:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1249,"initialValue":{"arguments":[{"id":1242,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1219,"src":"11916:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1243,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"11920:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11937:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11929:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1244,"name":"address","nodeType":"ElementaryTypeName","src":"11929:7:3","typeDescriptions":{}}},"id":1247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11929:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1241,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1086,"src":"11908:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11908:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11884:56:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1250,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"11954:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11979:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11971:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1251,"name":"address","nodeType":"ElementaryTypeName","src":"11971:7:3","typeDescriptions":{}}},"id":1254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11971:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11954:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1261,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"12056:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1262,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"12073:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12056:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1271,"nodeType":"IfStatement","src":"12052:109:3","trueBody":{"id":1270,"nodeType":"Block","src":"12079:82:3","statements":[{"errorCall":{"arguments":[{"id":1265,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"12121:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1266,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"12127:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1267,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1240,"src":"12136:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1264,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"12100:20:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12100:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1269,"nodeType":"RevertStatement","src":"12093:57:3"}]}},"id":1272,"nodeType":"IfStatement","src":"11950:211:3","trueBody":{"id":1260,"nodeType":"Block","src":"11983:63:3","statements":[{"errorCall":{"arguments":[{"id":1257,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"12027:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1256,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"12004:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12004:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1259,"nodeType":"RevertStatement","src":"11997:38:3"}]}}]},"documentation":{"id":1215,"nodeType":"StructuredDocumentation","src":"11389:313:3","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":1274,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11716:9:3","nodeType":"FunctionDefinition","parameters":{"id":1222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1217,"mutability":"mutable","name":"from","nameLocation":"11734:4:3","nodeType":"VariableDeclaration","scope":1274,"src":"11726:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1216,"name":"address","nodeType":"ElementaryTypeName","src":"11726:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1219,"mutability":"mutable","name":"to","nameLocation":"11748:2:3","nodeType":"VariableDeclaration","scope":1274,"src":"11740:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1218,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1221,"mutability":"mutable","name":"tokenId","nameLocation":"11760:7:3","nodeType":"VariableDeclaration","scope":1274,"src":"11752:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1220,"name":"uint256","nodeType":"ElementaryTypeName","src":"11752:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11725:43:3"},"returnParameters":{"id":1223,"nodeType":"ParameterList","parameters":[],"src":"11778:0:3"},"scope":1473,"src":"11707:460:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1291,"nodeType":"Block","src":"13176:53:3","statements":[{"expression":{"arguments":[{"id":1285,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1277,"src":"13200:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1286,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1279,"src":"13206:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1287,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"13210:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13219:2:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1284,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[1292,1322],"referencedDeclaration":1322,"src":"13186:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13186:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"ExpressionStatement","src":"13186:36:3"}]},"documentation":{"id":1275,"nodeType":"StructuredDocumentation","src":"12173:923:3","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":1292,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13110:13:3","nodeType":"FunctionDefinition","parameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"from","nameLocation":"13132:4:3","nodeType":"VariableDeclaration","scope":1292,"src":"13124:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1276,"name":"address","nodeType":"ElementaryTypeName","src":"13124:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1279,"mutability":"mutable","name":"to","nameLocation":"13146:2:3","nodeType":"VariableDeclaration","scope":1292,"src":"13138:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"13138:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1281,"mutability":"mutable","name":"tokenId","nameLocation":"13158:7:3","nodeType":"VariableDeclaration","scope":1292,"src":"13150:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"13150:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13123:43:3"},"returnParameters":{"id":1283,"nodeType":"ParameterList","parameters":[],"src":"13176:0:3"},"scope":1473,"src":"13101:128:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1321,"nodeType":"Block","src":"13568:127:3","statements":[{"expression":{"arguments":[{"id":1305,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"13588:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1306,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"13594:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1307,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"13598:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1304,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"13578:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13578:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1309,"nodeType":"ExpressionStatement","src":"13578:28:3"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1313,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1725,"src":"13650:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13650:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1315,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1295,"src":"13664:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1316,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1297,"src":"13670:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1317,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"13674:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1318,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1301,"src":"13683:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1310,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1713,"src":"13616:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$1713_$","typeString":"type(library ERC721Utils)"}},"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13628:21:3","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":1712,"src":"13616:33:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13616:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1320,"nodeType":"ExpressionStatement","src":"13616:72:3"}]},"documentation":{"id":1293,"nodeType":"StructuredDocumentation","src":"13235:226:3","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":1322,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13475:13:3","nodeType":"FunctionDefinition","parameters":{"id":1302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1295,"mutability":"mutable","name":"from","nameLocation":"13497:4:3","nodeType":"VariableDeclaration","scope":1322,"src":"13489:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1294,"name":"address","nodeType":"ElementaryTypeName","src":"13489:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1297,"mutability":"mutable","name":"to","nameLocation":"13511:2:3","nodeType":"VariableDeclaration","scope":1322,"src":"13503:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1296,"name":"address","nodeType":"ElementaryTypeName","src":"13503:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1299,"mutability":"mutable","name":"tokenId","nameLocation":"13523:7:3","nodeType":"VariableDeclaration","scope":1322,"src":"13515:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1298,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1301,"mutability":"mutable","name":"data","nameLocation":"13545:4:3","nodeType":"VariableDeclaration","scope":1322,"src":"13532:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1300,"name":"bytes","nodeType":"ElementaryTypeName","src":"13532:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13488:62:3"},"returnParameters":{"id":1303,"nodeType":"ParameterList","parameters":[],"src":"13568:0:3"},"scope":1473,"src":"13466:229:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1339,"nodeType":"Block","src":"14208:50:3","statements":[{"expression":{"arguments":[{"id":1333,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"14227:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1334,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"14231:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1335,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"14240:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":1336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14246:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1332,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[1340,1406],"referencedDeclaration":1406,"src":"14218:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":1337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14218:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1338,"nodeType":"ExpressionStatement","src":"14218:33:3"}]},"documentation":{"id":1323,"nodeType":"StructuredDocumentation","src":"13701:432:3","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":1340,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14147:8:3","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"to","nameLocation":"14164:2:3","nodeType":"VariableDeclaration","scope":1340,"src":"14156:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1324,"name":"address","nodeType":"ElementaryTypeName","src":"14156:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1327,"mutability":"mutable","name":"tokenId","nameLocation":"14176:7:3","nodeType":"VariableDeclaration","scope":1340,"src":"14168:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1326,"name":"uint256","nodeType":"ElementaryTypeName","src":"14168:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"auth","nameLocation":"14193:4:3","nodeType":"VariableDeclaration","scope":1340,"src":"14185:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"14185:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14155:43:3"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[],"src":"14208:0:3"},"scope":1473,"src":"14138:120:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1405,"nodeType":"Block","src":"14534:568:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1352,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"14600:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1353,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"14613:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14629:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14621:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1354,"name":"address","nodeType":"ElementaryTypeName","src":"14621:7:3","typeDescriptions":{}}},"id":1357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14621:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14613:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14600:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1398,"nodeType":"IfStatement","src":"14596:460:3","trueBody":{"id":1397,"nodeType":"Block","src":"14633:423:3","statements":[{"assignments":[1361],"declarations":[{"constant":false,"id":1361,"mutability":"mutable","name":"owner","nameLocation":"14655:5:3","nodeType":"VariableDeclaration","scope":1397,"src":"14647:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"14647:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1365,"initialValue":{"arguments":[{"id":1363,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"14677:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1362,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"14663:13:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14663:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"14647:38:3"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1366,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"14813:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14829:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14821:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"14821:7:3","typeDescriptions":{}}},"id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14821:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14813:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1372,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"14835:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1373,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"14844:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14835:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14852:30:3","subExpression":{"arguments":[{"id":1377,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"14870:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1378,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"14877:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1376,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"14853:16:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14853:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14813:69:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1387,"nodeType":"IfStatement","src":"14809:142:3","trueBody":{"id":1386,"nodeType":"Block","src":"14884:67:3","statements":[{"errorCall":{"arguments":[{"id":1383,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1347,"src":"14931:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1382,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"14909:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14909:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1385,"nodeType":"RevertStatement","src":"14902:34:3"}]}},{"condition":{"id":1388,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1349,"src":"14969:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1396,"nodeType":"IfStatement","src":"14965:81:3","trueBody":{"id":1395,"nodeType":"Block","src":"14980:66:3","statements":[{"eventCall":{"arguments":[{"id":1390,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"15012:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1391,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"15019:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1392,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"15023:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1389,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"15003:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15003:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1394,"nodeType":"EmitStatement","src":"14998:33:3"}]}}]}},{"expression":{"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1399,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"15066:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1401,"indexExpression":{"id":1400,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1345,"src":"15082:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15066:24:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1402,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1343,"src":"15093:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15066:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1404,"nodeType":"ExpressionStatement","src":"15066:29:3"}]},"documentation":{"id":1341,"nodeType":"StructuredDocumentation","src":"14264:171:3","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":1406,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14449:8:3","nodeType":"FunctionDefinition","parameters":{"id":1350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1343,"mutability":"mutable","name":"to","nameLocation":"14466:2:3","nodeType":"VariableDeclaration","scope":1406,"src":"14458:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1342,"name":"address","nodeType":"ElementaryTypeName","src":"14458:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1345,"mutability":"mutable","name":"tokenId","nameLocation":"14478:7:3","nodeType":"VariableDeclaration","scope":1406,"src":"14470:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"14470:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1347,"mutability":"mutable","name":"auth","nameLocation":"14495:4:3","nodeType":"VariableDeclaration","scope":1406,"src":"14487:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"14487:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"emitEvent","nameLocation":"14506:9:3","nodeType":"VariableDeclaration","scope":1406,"src":"14501:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1348,"name":"bool","nodeType":"ElementaryTypeName","src":"14501:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14457:59:3"},"returnParameters":{"id":1351,"nodeType":"ParameterList","parameters":[],"src":"14534:0:3"},"scope":1473,"src":"14440:662:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1442,"nodeType":"Block","src":"15404:219:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1416,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"15418:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15438:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15430:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1417,"name":"address","nodeType":"ElementaryTypeName","src":"15430:7:3","typeDescriptions":{}}},"id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15430:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15418:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1427,"nodeType":"IfStatement","src":"15414:91:3","trueBody":{"id":1426,"nodeType":"Block","src":"15442:63:3","statements":[{"errorCall":{"arguments":[{"id":1423,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"15485:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1422,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":468,"src":"15463:21:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15463:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1425,"nodeType":"RevertStatement","src":"15456:38:3"}]}},{"expression":{"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1428,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"15514:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1431,"indexExpression":{"id":1429,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"15533:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15514:25:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1432,"indexExpression":{"id":1430,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"15540:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15514:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1433,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"15552:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15514:46:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1435,"nodeType":"ExpressionStatement","src":"15514:46:3"},{"eventCall":{"arguments":[{"id":1437,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"15590:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1438,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"15597:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1439,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"15607:8:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1436,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1507,"src":"15575:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15575:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1441,"nodeType":"EmitStatement","src":"15570:46:3"}]},"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"15108:198:3","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":1443,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15320:18:3","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"owner","nameLocation":"15347:5:3","nodeType":"VariableDeclaration","scope":1443,"src":"15339:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"15339:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"operator","nameLocation":"15362:8:3","nodeType":"VariableDeclaration","scope":1443,"src":"15354:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"15354:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"approved","nameLocation":"15377:8:3","nodeType":"VariableDeclaration","scope":1443,"src":"15372:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1412,"name":"bool","nodeType":"ElementaryTypeName","src":"15372:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15338:48:3"},"returnParameters":{"id":1415,"nodeType":"ParameterList","parameters":[],"src":"15404:0:3"},"scope":1473,"src":"15311:312:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1471,"nodeType":"Block","src":"15930:169:3","statements":[{"assignments":[1452],"declarations":[{"constant":false,"id":1452,"mutability":"mutable","name":"owner","nameLocation":"15948:5:3","nodeType":"VariableDeclaration","scope":1471,"src":"15940:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1451,"name":"address","nodeType":"ElementaryTypeName","src":"15940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1456,"initialValue":{"arguments":[{"id":1454,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"15965:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1453,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":894,"src":"15956:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15956:17:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15940:33:3"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1457,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"15987:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1460,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16004:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15996:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1458,"name":"address","nodeType":"ElementaryTypeName","src":"15996:7:3","typeDescriptions":{}}},"id":1461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15996:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15987:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1468,"nodeType":"IfStatement","src":"15983:88:3","trueBody":{"id":1467,"nodeType":"Block","src":"16008:63:3","statements":[{"errorCall":{"arguments":[{"id":1464,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1446,"src":"16052:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1463,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"16029:22:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16029:31:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1466,"nodeType":"RevertStatement","src":"16022:38:3"}]}},{"expression":{"id":1469,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"16087:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1450,"id":1470,"nodeType":"Return","src":"16080:12:3"}]},"documentation":{"id":1444,"nodeType":"StructuredDocumentation","src":"15629:224:3","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":1472,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"15867:13:3","nodeType":"FunctionDefinition","parameters":{"id":1447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1446,"mutability":"mutable","name":"tokenId","nameLocation":"15889:7:3","nodeType":"VariableDeclaration","scope":1472,"src":"15881:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1445,"name":"uint256","nodeType":"ElementaryTypeName","src":"15881:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15880:17:3"},"returnParameters":{"id":1450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1472,"src":"15921:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"15921:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15920:9:3"},"scope":1473,"src":"15858:241:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1474,"src":"775:15326:3","usedErrors":[427,432,441,446,451,458,463,468],"usedEvents":[1489,1498,1507]}],"src":"107:15995:3"},"id":3},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[3233],"IERC721":[1590]},"id":1591,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1475,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"108:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1477,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1591,"sourceUnit":3234,"src":"134:62:4","symbolAliases":[{"foreign":{"id":1476,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"142:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1479,"name":"IERC165","nameLocations":["288:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":3233,"src":"288:7:4"},"id":1480,"nodeType":"InheritanceSpecifier","src":"288:7:4"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1478,"nodeType":"StructuredDocumentation","src":"198:68:4","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":1590,"linearizedBaseContracts":[1590,3233],"name":"IERC721","nameLocation":"277:7:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1481,"nodeType":"StructuredDocumentation","src":"302:88:4","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1489,"name":"Transfer","nameLocation":"401:8:4","nodeType":"EventDefinition","parameters":{"id":1488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:4","nodeType":"VariableDeclaration","scope":1489,"src":"410:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1482,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1485,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:4","nodeType":"VariableDeclaration","scope":1489,"src":"432:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1484,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1487,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:4","nodeType":"VariableDeclaration","scope":1489,"src":"452:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1486,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:4"},"src":"395:82:4"},{"anonymous":false,"documentation":{"id":1490,"nodeType":"StructuredDocumentation","src":"483:94:4","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1498,"name":"Approval","nameLocation":"588:8:4","nodeType":"EventDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1492,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:4","nodeType":"VariableDeclaration","scope":1498,"src":"597:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1491,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1494,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:4","nodeType":"VariableDeclaration","scope":1498,"src":"620:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1493,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1496,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:4","nodeType":"VariableDeclaration","scope":1498,"src":"646:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1495,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:4"},"src":"582:89:4"},{"anonymous":false,"documentation":{"id":1499,"nodeType":"StructuredDocumentation","src":"677:117:4","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1507,"name":"ApprovalForAll","nameLocation":"805:14:4","nodeType":"EventDefinition","parameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1501,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:4","nodeType":"VariableDeclaration","scope":1507,"src":"820:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1500,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1503,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:4","nodeType":"VariableDeclaration","scope":1507,"src":"843:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1502,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1505,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:4","nodeType":"VariableDeclaration","scope":1507,"src":"869:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1504,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:4"},"src":"799:85:4"},{"documentation":{"id":1508,"nodeType":"StructuredDocumentation","src":"890:76:4","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1515,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:4","nodeType":"FunctionDefinition","parameters":{"id":1511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"owner","nameLocation":"998:5:4","nodeType":"VariableDeclaration","scope":1515,"src":"990:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:4"},"returnParameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"balance","nameLocation":"1036:7:4","nodeType":"VariableDeclaration","scope":1515,"src":"1028:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1512,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:4"},"scope":1590,"src":"971:74:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1516,"nodeType":"StructuredDocumentation","src":"1051:131:4","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1523,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:4","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:4","nodeType":"VariableDeclaration","scope":1523,"src":"1204:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:4"},"returnParameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"owner","nameLocation":"1252:5:4","nodeType":"VariableDeclaration","scope":1523,"src":"1244:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1520,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:4"},"scope":1590,"src":"1187:72:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"1265:565:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1535,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:4","nodeType":"FunctionDefinition","parameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"from","nameLocation":"1869:4:4","nodeType":"VariableDeclaration","scope":1535,"src":"1861:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1528,"mutability":"mutable","name":"to","nameLocation":"1883:2:4","nodeType":"VariableDeclaration","scope":1535,"src":"1875:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1527,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1530,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:4","nodeType":"VariableDeclaration","scope":1535,"src":"1887:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1529,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1532,"mutability":"mutable","name":"data","nameLocation":"1919:4:4","nodeType":"VariableDeclaration","scope":1535,"src":"1904:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1531,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:4"},"returnParameters":{"id":1534,"nodeType":"ParameterList","parameters":[],"src":"1933:0:4"},"scope":1590,"src":"1835:99:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1536,"nodeType":"StructuredDocumentation","src":"1940:706:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1545,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:4","nodeType":"FunctionDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"from","nameLocation":"2685:4:4","nodeType":"VariableDeclaration","scope":1545,"src":"2677:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1537,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1540,"mutability":"mutable","name":"to","nameLocation":"2699:2:4","nodeType":"VariableDeclaration","scope":1545,"src":"2691:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1539,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1542,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:4","nodeType":"VariableDeclaration","scope":1545,"src":"2703:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1541,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:4"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[],"src":"2728:0:4"},"scope":1590,"src":"2651:78:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"2735:733:4","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1555,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:4","nodeType":"FunctionDefinition","parameters":{"id":1553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"from","nameLocation":"3503:4:4","nodeType":"VariableDeclaration","scope":1555,"src":"3495:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1547,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"to","nameLocation":"3517:2:4","nodeType":"VariableDeclaration","scope":1555,"src":"3509:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1549,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1552,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:4","nodeType":"VariableDeclaration","scope":1555,"src":"3521:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1551,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:4"},"returnParameters":{"id":1554,"nodeType":"ParameterList","parameters":[],"src":"3546:0:4"},"scope":1590,"src":"3473:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"3553:452:4","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1563,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:4","nodeType":"FunctionDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"to","nameLocation":"4035:2:4","nodeType":"VariableDeclaration","scope":1563,"src":"4027:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1557,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:4","nodeType":"VariableDeclaration","scope":1563,"src":"4039:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1559,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:4"},"returnParameters":{"id":1562,"nodeType":"ParameterList","parameters":[],"src":"4064:0:4"},"scope":1590,"src":"4010:55:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"4071:315:4","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1571,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:4","nodeType":"FunctionDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"mutability":"mutable","name":"operator","nameLocation":"4426:8:4","nodeType":"VariableDeclaration","scope":1571,"src":"4418:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1565,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1568,"mutability":"mutable","name":"approved","nameLocation":"4441:8:4","nodeType":"VariableDeclaration","scope":1571,"src":"4436:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1567,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:4"},"returnParameters":{"id":1570,"nodeType":"ParameterList","parameters":[],"src":"4459:0:4"},"scope":1590,"src":"4391:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1572,"nodeType":"StructuredDocumentation","src":"4466:139:4","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1579,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:4","nodeType":"FunctionDefinition","parameters":{"id":1575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1574,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:4","nodeType":"VariableDeclaration","scope":1579,"src":"4631:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1573,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:4"},"returnParameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"operator","nameLocation":"4679:8:4","nodeType":"VariableDeclaration","scope":1579,"src":"4671:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:4"},"scope":1590,"src":"4610:79:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1580,"nodeType":"StructuredDocumentation","src":"4695:138:4","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1589,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:4","nodeType":"FunctionDefinition","parameters":{"id":1585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1582,"mutability":"mutable","name":"owner","nameLocation":"4872:5:4","nodeType":"VariableDeclaration","scope":1589,"src":"4864:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1584,"mutability":"mutable","name":"operator","nameLocation":"4887:8:4","nodeType":"VariableDeclaration","scope":1589,"src":"4879:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1583,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:4"},"returnParameters":{"id":1588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1589,"src":"4920:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1586,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:4"},"scope":1590,"src":"4838:88:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1591,"src":"267:4661:4","usedErrors":[],"usedEvents":[1489,1498,1507]}],"src":"108:4821:4"},"id":4},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1608]},"id":1609,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1592,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"116:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1593,"nodeType":"StructuredDocumentation","src":"142:154:5","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":1608,"linearizedBaseContracts":[1608],"name":"IERC721Receiver","nameLocation":"307:15:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1594,"nodeType":"StructuredDocumentation","src":"329:500:5","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1607,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:5","nodeType":"FunctionDefinition","parameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1596,"mutability":"mutable","name":"operator","nameLocation":"877:8:5","nodeType":"VariableDeclaration","scope":1607,"src":"869:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1595,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1598,"mutability":"mutable","name":"from","nameLocation":"903:4:5","nodeType":"VariableDeclaration","scope":1607,"src":"895:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1597,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1600,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:5","nodeType":"VariableDeclaration","scope":1607,"src":"917:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1599,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1602,"mutability":"mutable","name":"data","nameLocation":"957:4:5","nodeType":"VariableDeclaration","scope":1607,"src":"942:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1601,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:5"},"returnParameters":{"id":1606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1607,"src":"986:6:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1604,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:5","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:5"},"scope":1608,"src":"834:160:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1609,"src":"297:699:5","usedErrors":[],"usedEvents":[]}],"src":"116:881:5"},"id":5},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[1590],"IERC721Metadata":[1636]},"id":1637,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1610,"literals":["solidity",">=","0.6",".2"],"nodeType":"PragmaDirective","src":"127:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1612,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1637,"sourceUnit":1591,"src":"153:39:6","symbolAliases":[{"foreign":{"id":1611,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1590,"src":"161:7:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1614,"name":"IERC721","nameLocations":["357:7:6"],"nodeType":"IdentifierPath","referencedDeclaration":1590,"src":"357:7:6"},"id":1615,"nodeType":"InheritanceSpecifier","src":"357:7:6"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1613,"nodeType":"StructuredDocumentation","src":"194:133:6","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1636,"linearizedBaseContracts":[1636,1590,3233],"name":"IERC721Metadata","nameLocation":"338:15:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1616,"nodeType":"StructuredDocumentation","src":"371:58:6","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1621,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:6","nodeType":"FunctionDefinition","parameters":{"id":1617,"nodeType":"ParameterList","parameters":[],"src":"447:2:6"},"returnParameters":{"id":1620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1621,"src":"473:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1618,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:6"},"scope":1636,"src":"434:54:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"494:60:6","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1627,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:6","nodeType":"FunctionDefinition","parameters":{"id":1623,"nodeType":"ParameterList","parameters":[],"src":"574:2:6"},"returnParameters":{"id":1626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1627,"src":"600:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1624,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:6"},"scope":1636,"src":"559:56:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1628,"nodeType":"StructuredDocumentation","src":"621:90:6","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1635,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:6","nodeType":"FunctionDefinition","parameters":{"id":1631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1630,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:6","nodeType":"VariableDeclaration","scope":1635,"src":"734:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1629,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:6"},"returnParameters":{"id":1634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1635,"src":"774:13:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1632,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:6","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:6"},"scope":1636,"src":"716:73:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1637,"src":"328:463:6","usedErrors":[],"usedEvents":[1489,1498,1507]}],"src":"127:665:6"},"id":6},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[1713],"IERC721Errors":[469],"IERC721Receiver":[1608]},"id":1714,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1638,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":1640,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1714,"sourceUnit":1609,"src":"144:55:7","symbolAliases":[{"foreign":{"id":1639,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"152:15:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1642,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1714,"sourceUnit":517,"src":"200:69:7","symbolAliases":[{"foreign":{"id":1641,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"208:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"271:159:7","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":1713,"linearizedBaseContracts":[1713],"name":"ERC721Utils","nameLocation":"439:11:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1711,"nodeType":"Block","src":"1159:760:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1657,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"1173:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:7","memberName":"code","nodeType":"MemberAccess","src":"1173:7:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:7","memberName":"length","nodeType":"MemberAccess","src":"1173:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1710,"nodeType":"IfStatement","src":"1169:744:7","trueBody":{"id":1709,"nodeType":"Block","src":"1193:720:7","statements":[{"clauses":[{"block":{"id":1687,"nodeType":"Block","src":"1303:214:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1674,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"1325:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1675,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"1335:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1608_$","typeString":"type(contract IERC721Receiver)"}},"id":1676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:7","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1607,"src":"1335:32:7","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":1677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:7","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1686,"nodeType":"IfStatement","src":"1321:182:7","trueBody":{"id":1685,"nodeType":"Block","src":"1378:125:7","statements":[{"errorCall":{"arguments":[{"id":1682,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"1481:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1679,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"1445:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$469_$","typeString":"type(contract IERC721Errors)"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:7","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":451,"src":"1445:35:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1684,"nodeType":"RevertStatement","src":"1438:46:7"}]}}]},"errorName":"","id":1688,"nodeType":"TryCatchClause","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"retval","nameLocation":"1295:6:7","nodeType":"VariableDeclaration","scope":1688,"src":"1288:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1671,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:7"},"src":"1279:238:7"},{"block":{"id":1706,"nodeType":"Block","src":"1546:357:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1692,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1690,"src":"1568:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:7","memberName":"length","nodeType":"MemberAccess","src":"1568:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1704,"nodeType":"Block","src":"1736:153:7","statements":[{"AST":{"nativeSrc":"1783:88:7","nodeType":"YulBlock","src":"1783:88:7","statements":[{"expression":{"arguments":[{"arguments":[{"name":"reason","nativeSrc":"1820:6:7","nodeType":"YulIdentifier","src":"1820:6:7"},{"kind":"number","nativeSrc":"1828:4:7","nodeType":"YulLiteral","src":"1828:4:7","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1816:3:7","nodeType":"YulIdentifier","src":"1816:3:7"},"nativeSrc":"1816:17:7","nodeType":"YulFunctionCall","src":"1816:17:7"},{"arguments":[{"name":"reason","nativeSrc":"1841:6:7","nodeType":"YulIdentifier","src":"1841:6:7"}],"functionName":{"name":"mload","nativeSrc":"1835:5:7","nodeType":"YulIdentifier","src":"1835:5:7"},"nativeSrc":"1835:13:7","nodeType":"YulFunctionCall","src":"1835:13:7"}],"functionName":{"name":"revert","nativeSrc":"1809:6:7","nodeType":"YulIdentifier","src":"1809:6:7"},"nativeSrc":"1809:40:7","nodeType":"YulFunctionCall","src":"1809:40:7"},"nativeSrc":"1809:40:7","nodeType":"YulExpressionStatement","src":"1809:40:7"}]},"evmVersion":"paris","externalReferences":[{"declaration":1690,"isOffset":false,"isSlot":false,"src":"1820:6:7","valueSize":1},{"declaration":1690,"isOffset":false,"isSlot":false,"src":"1841:6:7","valueSize":1}],"flags":["memory-safe"],"id":1703,"nodeType":"InlineAssembly","src":"1758:113:7"}]},"id":1705,"nodeType":"IfStatement","src":"1564:325:7","trueBody":{"id":1702,"nodeType":"Block","src":"1588:142:7","statements":[{"errorCall":{"arguments":[{"id":1699,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"1708:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1696,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":469,"src":"1672:13:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$469_$","typeString":"type(contract IERC721Errors)"}},"id":1698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:7","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":451,"src":"1672:35:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1701,"nodeType":"RevertStatement","src":"1665:46:7"}]}}]},"errorName":"","id":1707,"nodeType":"TryCatchClause","parameters":{"id":1691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1690,"mutability":"mutable","name":"reason","nameLocation":"1538:6:7","nodeType":"VariableDeclaration","scope":1707,"src":"1525:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1689,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:7"},"src":"1518:385:7"}],"externalCall":{"arguments":[{"id":1666,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1646,"src":"1248:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1667,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1648,"src":"1258:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1668,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1652,"src":"1264:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1669,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1654,"src":"1273:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1663,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1650,"src":"1227:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1662,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1608,"src":"1211:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1608_$","typeString":"type(contract IERC721Receiver)"}},"id":1664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1608","typeString":"contract IERC721Receiver"}},"id":1665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:7","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1607,"src":"1211:36:7","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:7","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1708,"nodeType":"TryStatement","src":"1207:696:7"}]}}]},"documentation":{"id":1644,"nodeType":"StructuredDocumentation","src":"457:531:7","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":1712,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:7","nodeType":"FunctionDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"operator","nameLocation":"1041:8:7","nodeType":"VariableDeclaration","scope":1712,"src":"1033:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1645,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1648,"mutability":"mutable","name":"from","nameLocation":"1067:4:7","nodeType":"VariableDeclaration","scope":1712,"src":"1059:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1647,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1650,"mutability":"mutable","name":"to","nameLocation":"1089:2:7","nodeType":"VariableDeclaration","scope":1712,"src":"1081:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1649,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1652,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:7","nodeType":"VariableDeclaration","scope":1712,"src":"1101:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1651,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1654,"mutability":"mutable","name":"data","nameLocation":"1139:4:7","nodeType":"VariableDeclaration","scope":1712,"src":"1126:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1653,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:7"},"returnParameters":{"id":1656,"nodeType":"ParameterList","parameters":[],"src":"1159:0:7"},"scope":1713,"src":"993:926:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1714,"src":"431:1490:7","usedErrors":[],"usedEvents":[]}],"src":"118:1804:7"},"id":7},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1743]},"id":1744,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1715,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:8"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"127:496:8","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1743,"linearizedBaseContracts":[1743],"name":"Context","nameLocation":"642:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1724,"nodeType":"Block","src":"718:34:8","statements":[{"expression":{"expression":{"id":1721,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:8","memberName":"sender","nodeType":"MemberAccess","src":"735:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1720,"id":1723,"nodeType":"Return","src":"728:17:8"}]},"id":1725,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:8","nodeType":"FunctionDefinition","parameters":{"id":1717,"nodeType":"ParameterList","parameters":[],"src":"675:2:8"},"returnParameters":{"id":1720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1719,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1725,"src":"709:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:8"},"scope":1743,"src":"656:96:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1733,"nodeType":"Block","src":"825:32:8","statements":[{"expression":{"expression":{"id":1730,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:8","memberName":"data","nodeType":"MemberAccess","src":"842:8:8","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1729,"id":1732,"nodeType":"Return","src":"835:15:8"}]},"id":1734,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:8","nodeType":"FunctionDefinition","parameters":{"id":1726,"nodeType":"ParameterList","parameters":[],"src":"775:2:8"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1734,"src":"809:14:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1727,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:8"},"scope":1743,"src":"758:99:8","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1741,"nodeType":"Block","src":"935:25:8","statements":[{"expression":{"hexValue":"30","id":1739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1738,"id":1740,"nodeType":"Return","src":"945:8:8"}]},"id":1742,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:8","nodeType":"FunctionDefinition","parameters":{"id":1735,"nodeType":"ParameterList","parameters":[],"src":"892:2:8"},"returnParameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1742,"src":"926:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1736,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:8"},"scope":1743,"src":"863:97:8","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1744,"src":"624:338:8","usedErrors":[],"usedEvents":[]}],"src":"101:862:8"},"id":8},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1795]},"id":1796,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1745,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1746,"nodeType":"StructuredDocumentation","src":"125:489:9","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1795,"linearizedBaseContracts":[1795],"name":"Panic","nameLocation":"665:5:9","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1747,"nodeType":"StructuredDocumentation","src":"677:36:9","text":"@dev generic / unspecified error"},"id":1750,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:9","nodeType":"VariableDeclaration","scope":1795,"src":"718:40:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1748,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1751,"nodeType":"StructuredDocumentation","src":"764:37:9","text":"@dev used by the assert() builtin"},"id":1754,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:9","nodeType":"VariableDeclaration","scope":1795,"src":"806:39:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1752,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:9","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1755,"nodeType":"StructuredDocumentation","src":"851:41:9","text":"@dev arithmetic underflow or overflow"},"id":1758,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:9","nodeType":"VariableDeclaration","scope":1795,"src":"897:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1756,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:9","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1759,"nodeType":"StructuredDocumentation","src":"950:35:9","text":"@dev division or modulo by zero"},"id":1762,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:9","nodeType":"VariableDeclaration","scope":1795,"src":"990:49:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1760,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:9","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1763,"nodeType":"StructuredDocumentation","src":"1045:30:9","text":"@dev enum conversion error"},"id":1766,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:9","nodeType":"VariableDeclaration","scope":1795,"src":"1080:54:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1764,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:9","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"1140:36:9","text":"@dev invalid encoding in storage"},"id":1770,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:9","nodeType":"VariableDeclaration","scope":1795,"src":"1181:55:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1768,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:9","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1771,"nodeType":"StructuredDocumentation","src":"1242:24:9","text":"@dev empty array pop"},"id":1774,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:9","nodeType":"VariableDeclaration","scope":1795,"src":"1271:48:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:9","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"1325:35:9","text":"@dev array out of bounds access"},"id":1778,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:9","nodeType":"VariableDeclaration","scope":1795,"src":"1365:52:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1776,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:9","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"1423:65:9","text":"@dev resource error (too large allocation or too large array)"},"id":1782,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:9","nodeType":"VariableDeclaration","scope":1795,"src":"1493:47:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1780,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:9","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1783,"nodeType":"StructuredDocumentation","src":"1546:42:9","text":"@dev calling invalid internal function"},"id":1786,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:9","nodeType":"VariableDeclaration","scope":1795,"src":"1593:58:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1784,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:9","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1793,"nodeType":"Block","src":"1819:151:9","statements":[{"AST":{"nativeSrc":"1854:110:9","nodeType":"YulBlock","src":"1854:110:9","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:9","nodeType":"YulLiteral","src":"1875:4:9","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:9","nodeType":"YulLiteral","src":"1881:10:9","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:9","nodeType":"YulIdentifier","src":"1868:6:9"},"nativeSrc":"1868:24:9","nodeType":"YulFunctionCall","src":"1868:24:9"},"nativeSrc":"1868:24:9","nodeType":"YulExpressionStatement","src":"1868:24:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:9","nodeType":"YulLiteral","src":"1912:4:9","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:9","nodeType":"YulIdentifier","src":"1918:4:9"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:9","nodeType":"YulIdentifier","src":"1905:6:9"},"nativeSrc":"1905:18:9","nodeType":"YulFunctionCall","src":"1905:18:9"},"nativeSrc":"1905:18:9","nodeType":"YulExpressionStatement","src":"1905:18:9"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:9","nodeType":"YulLiteral","src":"1943:4:9","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:9","nodeType":"YulLiteral","src":"1949:4:9","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:9","nodeType":"YulIdentifier","src":"1936:6:9"},"nativeSrc":"1936:18:9","nodeType":"YulFunctionCall","src":"1936:18:9"},"nativeSrc":"1936:18:9","nodeType":"YulExpressionStatement","src":"1936:18:9"}]},"evmVersion":"paris","externalReferences":[{"declaration":1789,"isOffset":false,"isSlot":false,"src":"1918:4:9","valueSize":1}],"flags":["memory-safe"],"id":1792,"nodeType":"InlineAssembly","src":"1829:135:9"}]},"documentation":{"id":1787,"nodeType":"StructuredDocumentation","src":"1658:113:9","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1794,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:9","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"code","nameLocation":"1799:4:9","nodeType":"VariableDeclaration","scope":1794,"src":"1791:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1788,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:9"},"returnParameters":{"id":1791,"nodeType":"ParameterList","parameters":[],"src":"1819:0:9"},"scope":1795,"src":"1776:194:9","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1796,"src":"657:1315:9","usedErrors":[],"usedEvents":[]}],"src":"99:1874:9"},"id":9},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4854],"SafeCast":[6619],"SignedMath":[6763],"Strings":[3197]},"id":3198,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1797,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:10"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1799,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3198,"sourceUnit":4855,"src":"127:37:10","symbolAliases":[{"foreign":{"id":1798,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"135:4:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":1801,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3198,"sourceUnit":6620,"src":"165:45:10","symbolAliases":[{"foreign":{"id":1800,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"173:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1803,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3198,"sourceUnit":6764,"src":"211:49:10","symbolAliases":[{"foreign":{"id":1802,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"219:10:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1804,"nodeType":"StructuredDocumentation","src":"262:34:10","text":" @dev String operations."},"fullyImplemented":true,"id":3197,"linearizedBaseContracts":[3197],"name":"Strings","nameLocation":"305:7:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1806,"libraryName":{"id":1805,"name":"SafeCast","nameLocations":["325:8:10"],"nodeType":"IdentifierPath","referencedDeclaration":6619,"src":"325:8:10"},"nodeType":"UsingForDirective","src":"319:21:10"},{"constant":true,"id":1809,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:10","nodeType":"VariableDeclaration","scope":3197,"src":"346:56:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1807,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1812,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:10","nodeType":"VariableDeclaration","scope":3197,"src":"408:42:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1810,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:10","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":1848,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:10","nodeType":"VariableDeclaration","scope":3197,"src":"456:302:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":1847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":1842,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":1837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":1827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":1822,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":1816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":1815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":1817,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:10","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":1820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":1819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:10","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:10","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":1821,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:10","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:10","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":1825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":1824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:10","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":1826,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:10","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:10","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":1829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:10","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:10","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":1831,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:10","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:10","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":1835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:10","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:10","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":1836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:10","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:10","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":1840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:10","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":1841,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:10","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:10","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":1845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:10","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:10","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":1846,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:10","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:10","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":1849,"nodeType":"StructuredDocumentation","src":"778:81:10","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":1855,"name":"StringsInsufficientHexLength","nameLocation":"870:28:10","nodeType":"ErrorDefinition","parameters":{"id":1854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1851,"mutability":"mutable","name":"value","nameLocation":"907:5:10","nodeType":"VariableDeclaration","scope":1855,"src":"899:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1850,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1853,"mutability":"mutable","name":"length","nameLocation":"922:6:10","nodeType":"VariableDeclaration","scope":1855,"src":"914:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:10"},"src":"864:66:10"},{"documentation":{"id":1856,"nodeType":"StructuredDocumentation","src":"936:108:10","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":1858,"name":"StringsInvalidChar","nameLocation":"1055:18:10","nodeType":"ErrorDefinition","parameters":{"id":1857,"nodeType":"ParameterList","parameters":[],"src":"1073:2:10"},"src":"1049:27:10"},{"documentation":{"id":1859,"nodeType":"StructuredDocumentation","src":"1082:84:10","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":1861,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:10","nodeType":"ErrorDefinition","parameters":{"id":1860,"nodeType":"ParameterList","parameters":[],"src":"1204:2:10"},"src":"1171:36:10"},{"body":{"id":1908,"nodeType":"Block","src":"1379:563:10","statements":[{"id":1907,"nodeType":"UncheckedBlock","src":"1389:547:10","statements":[{"assignments":[1870],"declarations":[{"constant":false,"id":1870,"mutability":"mutable","name":"length","nameLocation":"1421:6:10","nodeType":"VariableDeclaration","scope":1907,"src":"1413:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1877,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"1441:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1871,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"1430:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4854_$","typeString":"type(library Math)"}},"id":1872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:10","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4686,"src":"1430:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:10"},{"assignments":[1879],"declarations":[{"constant":false,"id":1879,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:10","nodeType":"VariableDeclaration","scope":1907,"src":"1465:20:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1878,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1884,"initialValue":{"arguments":[{"id":1882,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"1499:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1880,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:10"},{"assignments":[1886],"declarations":[{"constant":false,"id":1886,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:10","nodeType":"VariableDeclaration","scope":1907,"src":"1520:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1887,"nodeType":"VariableDeclarationStatement","src":"1520:11:10"},{"AST":{"nativeSrc":"1570:69:10","nodeType":"YulBlock","src":"1570:69:10","statements":[{"nativeSrc":"1588:37:10","nodeType":"YulAssignment","src":"1588:37:10","value":{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"1603:6:10","nodeType":"YulIdentifier","src":"1603:6:10"},{"kind":"number","nativeSrc":"1611:4:10","nodeType":"YulLiteral","src":"1611:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1599:3:10","nodeType":"YulIdentifier","src":"1599:3:10"},"nativeSrc":"1599:17:10","nodeType":"YulFunctionCall","src":"1599:17:10"},{"name":"length","nativeSrc":"1618:6:10","nodeType":"YulIdentifier","src":"1618:6:10"}],"functionName":{"name":"add","nativeSrc":"1595:3:10","nodeType":"YulIdentifier","src":"1595:3:10"},"nativeSrc":"1595:30:10","nodeType":"YulFunctionCall","src":"1595:30:10"},"variableNames":[{"name":"ptr","nativeSrc":"1588:3:10","nodeType":"YulIdentifier","src":"1588:3:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":1879,"isOffset":false,"isSlot":false,"src":"1603:6:10","valueSize":1},{"declaration":1870,"isOffset":false,"isSlot":false,"src":"1618:6:10","valueSize":1},{"declaration":1886,"isOffset":false,"isSlot":false,"src":"1588:3:10","valueSize":1}],"flags":["memory-safe"],"id":1888,"nodeType":"InlineAssembly","src":"1545:94:10"},{"body":{"id":1903,"nodeType":"Block","src":"1665:234:10","statements":[{"expression":{"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1683:5:10","subExpression":{"id":1890,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1886,"src":"1683:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1892,"nodeType":"ExpressionStatement","src":"1683:5:10"},{"AST":{"nativeSrc":"1731:86:10","nodeType":"YulBlock","src":"1731:86:10","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1761:3:10","nodeType":"YulIdentifier","src":"1761:3:10"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1775:5:10","nodeType":"YulIdentifier","src":"1775:5:10"},{"kind":"number","nativeSrc":"1782:2:10","nodeType":"YulLiteral","src":"1782:2:10","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1771:3:10","nodeType":"YulIdentifier","src":"1771:3:10"},"nativeSrc":"1771:14:10","nodeType":"YulFunctionCall","src":"1771:14:10"},{"name":"HEX_DIGITS","nativeSrc":"1787:10:10","nodeType":"YulIdentifier","src":"1787:10:10"}],"functionName":{"name":"byte","nativeSrc":"1766:4:10","nodeType":"YulIdentifier","src":"1766:4:10"},"nativeSrc":"1766:32:10","nodeType":"YulFunctionCall","src":"1766:32:10"}],"functionName":{"name":"mstore8","nativeSrc":"1753:7:10","nodeType":"YulIdentifier","src":"1753:7:10"},"nativeSrc":"1753:46:10","nodeType":"YulFunctionCall","src":"1753:46:10"},"nativeSrc":"1753:46:10","nodeType":"YulExpressionStatement","src":"1753:46:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":1809,"isOffset":false,"isSlot":false,"src":"1787:10:10","valueSize":1},{"declaration":1886,"isOffset":false,"isSlot":false,"src":"1761:3:10","valueSize":1},{"declaration":1864,"isOffset":false,"isSlot":false,"src":"1775:5:10","valueSize":1}],"flags":["memory-safe"],"id":1893,"nodeType":"InlineAssembly","src":"1706:111:10"},{"expression":{"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"1834:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1843:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1834:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1897,"nodeType":"ExpressionStatement","src":"1834:11:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1864,"src":"1867:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1867:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1902,"nodeType":"IfStatement","src":"1863:21:10","trueBody":{"id":1901,"nodeType":"Break","src":"1879:5:10"}}]},"condition":{"hexValue":"74727565","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1659:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1904,"nodeType":"WhileStatement","src":"1652:247:10"},{"expression":{"id":1905,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"1919:6:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1868,"id":1906,"nodeType":"Return","src":"1912:13:10"}]}]},"documentation":{"id":1862,"nodeType":"StructuredDocumentation","src":"1213:90:10","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1909,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:10","nodeType":"FunctionDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1864,"mutability":"mutable","name":"value","nameLocation":"1334:5:10","nodeType":"VariableDeclaration","scope":1909,"src":"1326:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1863,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:10"},"returnParameters":{"id":1868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1867,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1909,"src":"1364:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1866,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:10"},"scope":3197,"src":"1308:634:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1934,"nodeType":"Block","src":"2118:92:10","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"2149:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2157:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2149:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1924,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2167:2:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2149:20:10","trueExpression":{"hexValue":"2d","id":1923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2161:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1912,"src":"2195:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1927,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6763,"src":"2180:10:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6763_$","typeString":"type(library SignedMath)"}},"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2191:3:10","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6762,"src":"2180:14:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2180:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1926,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1909,"src":"2171:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2171:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2135:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1917,"name":"string","nodeType":"ElementaryTypeName","src":"2135:6:10","typeDescriptions":{}}},"id":1919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2142:6:10","memberName":"concat","nodeType":"MemberAccess","src":"2135:13:10","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2135:68:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1916,"id":1933,"nodeType":"Return","src":"2128:75:10"}]},"documentation":{"id":1910,"nodeType":"StructuredDocumentation","src":"1948:89:10","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1935,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2051:14:10","nodeType":"FunctionDefinition","parameters":{"id":1913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1912,"mutability":"mutable","name":"value","nameLocation":"2073:5:10","nodeType":"VariableDeclaration","scope":1935,"src":"2066:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1911,"name":"int256","nodeType":"ElementaryTypeName","src":"2066:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2065:14:10"},"returnParameters":{"id":1916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1935,"src":"2103:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1914,"name":"string","nodeType":"ElementaryTypeName","src":"2103:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2102:15:10"},"scope":3197,"src":"2042:168:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1954,"nodeType":"Block","src":"2389:100:10","statements":[{"id":1953,"nodeType":"UncheckedBlock","src":"2399:84:10","statements":[{"expression":{"arguments":[{"id":1944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"2442:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"2461:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1945,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"2449:4:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4854_$","typeString":"type(library Math)"}},"id":1946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2454:6:10","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4797,"src":"2449:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2449:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2470:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2449:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1943,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1955,2038,2058],"referencedDeclaration":2038,"src":"2430:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2430:42:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1942,"id":1952,"nodeType":"Return","src":"2423:49:10"}]}]},"documentation":{"id":1936,"nodeType":"StructuredDocumentation","src":"2216:94:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1955,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2324:11:10","nodeType":"FunctionDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1938,"mutability":"mutable","name":"value","nameLocation":"2344:5:10","nodeType":"VariableDeclaration","scope":1955,"src":"2336:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1937,"name":"uint256","nodeType":"ElementaryTypeName","src":"2336:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2335:15:10"},"returnParameters":{"id":1942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1941,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1955,"src":"2374:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1940,"name":"string","nodeType":"ElementaryTypeName","src":"2374:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2373:15:10"},"scope":3197,"src":"2315:174:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2037,"nodeType":"Block","src":"2702:435:10","statements":[{"assignments":[1966],"declarations":[{"constant":false,"id":1966,"mutability":"mutable","name":"localValue","nameLocation":"2720:10:10","nodeType":"VariableDeclaration","scope":2037,"src":"2712:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1965,"name":"uint256","nodeType":"ElementaryTypeName","src":"2712:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1968,"initialValue":{"id":1967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"2733:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2712:26:10"},{"assignments":[1970],"declarations":[{"constant":false,"id":1970,"mutability":"mutable","name":"buffer","nameLocation":"2761:6:10","nodeType":"VariableDeclaration","scope":2037,"src":"2748:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1969,"name":"bytes","nodeType":"ElementaryTypeName","src":"2748:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1979,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2780:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1974,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"2784:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2780:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2793:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2780:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2770:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1971,"name":"bytes","nodeType":"ElementaryTypeName","src":"2774:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2770:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2748:47:10"},{"expression":{"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1980,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2805:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1982,"indexExpression":{"hexValue":"30","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2812:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2805:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2817:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2805:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1985,"nodeType":"ExpressionStatement","src":"2805:15:10"},{"expression":{"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1986,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2830:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1988,"indexExpression":{"hexValue":"31","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2837:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2830:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2842:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2830:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1991,"nodeType":"ExpressionStatement","src":"2830:15:10"},{"body":{"id":2020,"nodeType":"Block","src":"2900:95:10","statements":[{"expression":{"id":2014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2006,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2914:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2008,"indexExpression":{"id":2007,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"2921:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2009,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"2926:10:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2013,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2010,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"2937:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2950:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2937:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2926:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2914:40:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2015,"nodeType":"ExpressionStatement","src":"2914:40:10"},{"expression":{"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2016,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"2968:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2983:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2968:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2019,"nodeType":"ExpressionStatement","src":"2968:16:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2000,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"2888:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2892:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2888:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2021,"initializationExpression":{"assignments":[1993],"declarations":[{"constant":false,"id":1993,"mutability":"mutable","name":"i","nameLocation":"2868:1:10","nodeType":"VariableDeclaration","scope":2021,"src":"2860:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1992,"name":"uint256","nodeType":"ElementaryTypeName","src":"2860:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1999,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2872:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1995,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"2876:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2872:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2885:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2872:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2860:26:10"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2895:3:10","subExpression":{"id":2003,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1993,"src":"2897:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2005,"nodeType":"ExpressionStatement","src":"2895:3:10"},"nodeType":"ForStatement","src":"2855:140:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2022,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"3008:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3022:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3008:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2031,"nodeType":"IfStatement","src":"3004:96:10","trueBody":{"id":2030,"nodeType":"Block","src":"3025:75:10","statements":[{"errorCall":{"arguments":[{"id":2026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1958,"src":"3075:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2027,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"3082:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2025,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1855,"src":"3046:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3046:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2029,"nodeType":"RevertStatement","src":"3039:50:10"}]}},{"expression":{"arguments":[{"id":2034,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"3123:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2033,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3116:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2032,"name":"string","nodeType":"ElementaryTypeName","src":"3116:6:10","typeDescriptions":{}}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3116:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1964,"id":2036,"nodeType":"Return","src":"3109:21:10"}]},"documentation":{"id":1956,"nodeType":"StructuredDocumentation","src":"2495:112:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2038,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2621:11:10","nodeType":"FunctionDefinition","parameters":{"id":1961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1958,"mutability":"mutable","name":"value","nameLocation":"2641:5:10","nodeType":"VariableDeclaration","scope":2038,"src":"2633:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1957,"name":"uint256","nodeType":"ElementaryTypeName","src":"2633:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1960,"mutability":"mutable","name":"length","nameLocation":"2656:6:10","nodeType":"VariableDeclaration","scope":2038,"src":"2648:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"2648:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2632:31:10"},"returnParameters":{"id":1964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2038,"src":"2687:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1962,"name":"string","nodeType":"ElementaryTypeName","src":"2687:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2686:15:10"},"scope":3197,"src":"2612:525:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2057,"nodeType":"Block","src":"3369:75:10","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2051,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2041,"src":"3414:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3406:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2049,"name":"uint160","nodeType":"ElementaryTypeName","src":"3406:7:10","typeDescriptions":{}}},"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3406:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3398:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2047,"name":"uint256","nodeType":"ElementaryTypeName","src":"3398:7:10","typeDescriptions":{}}},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3398:22:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2054,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"3422:14:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2046,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1955,2038,2058],"referencedDeclaration":2038,"src":"3386:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3386:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2045,"id":2056,"nodeType":"Return","src":"3379:58:10"}]},"documentation":{"id":2039,"nodeType":"StructuredDocumentation","src":"3143:148:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2058,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3305:11:10","nodeType":"FunctionDefinition","parameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"addr","nameLocation":"3325:4:10","nodeType":"VariableDeclaration","scope":2058,"src":"3317:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2040,"name":"address","nodeType":"ElementaryTypeName","src":"3317:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3316:14:10"},"returnParameters":{"id":2045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2058,"src":"3354:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2043,"name":"string","nodeType":"ElementaryTypeName","src":"3354:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3353:15:10"},"scope":3197,"src":"3296:148:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2122,"nodeType":"Block","src":"3701:642:10","statements":[{"assignments":[2067],"declarations":[{"constant":false,"id":2067,"mutability":"mutable","name":"buffer","nameLocation":"3724:6:10","nodeType":"VariableDeclaration","scope":2122,"src":"3711:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2066,"name":"bytes","nodeType":"ElementaryTypeName","src":"3711:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2074,"initialValue":{"arguments":[{"arguments":[{"id":2071,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2061,"src":"3751:4:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2070,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1955,2038,2058],"referencedDeclaration":2058,"src":"3739:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2069,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3733:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2068,"name":"bytes","nodeType":"ElementaryTypeName","src":"3733:5:10","typeDescriptions":{}}},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3733:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3711:46:10"},{"assignments":[2076],"declarations":[{"constant":false,"id":2076,"mutability":"mutable","name":"hashValue","nameLocation":"3850:9:10","nodeType":"VariableDeclaration","scope":2122,"src":"3842:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2075,"name":"uint256","nodeType":"ElementaryTypeName","src":"3842:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2077,"nodeType":"VariableDeclarationStatement","src":"3842:17:10"},{"AST":{"nativeSrc":"3894:78:10","nodeType":"YulBlock","src":"3894:78:10","statements":[{"nativeSrc":"3908:54:10","nodeType":"YulAssignment","src":"3908:54:10","value":{"arguments":[{"kind":"number","nativeSrc":"3925:2:10","nodeType":"YulLiteral","src":"3925:2:10","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3943:6:10","nodeType":"YulIdentifier","src":"3943:6:10"},{"kind":"number","nativeSrc":"3951:4:10","nodeType":"YulLiteral","src":"3951:4:10","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3939:3:10","nodeType":"YulIdentifier","src":"3939:3:10"},"nativeSrc":"3939:17:10","nodeType":"YulFunctionCall","src":"3939:17:10"},{"kind":"number","nativeSrc":"3958:2:10","nodeType":"YulLiteral","src":"3958:2:10","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3929:9:10","nodeType":"YulIdentifier","src":"3929:9:10"},"nativeSrc":"3929:32:10","nodeType":"YulFunctionCall","src":"3929:32:10"}],"functionName":{"name":"shr","nativeSrc":"3921:3:10","nodeType":"YulIdentifier","src":"3921:3:10"},"nativeSrc":"3921:41:10","nodeType":"YulFunctionCall","src":"3921:41:10"},"variableNames":[{"name":"hashValue","nativeSrc":"3908:9:10","nodeType":"YulIdentifier","src":"3908:9:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2067,"isOffset":false,"isSlot":false,"src":"3943:6:10","valueSize":1},{"declaration":2076,"isOffset":false,"isSlot":false,"src":"3908:9:10","valueSize":1}],"flags":["memory-safe"],"id":2078,"nodeType":"InlineAssembly","src":"3869:103:10"},{"body":{"id":2115,"nodeType":"Block","src":"4015:291:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2089,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"4121:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4133:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4121:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4139:1:10","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4121:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2096,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"4150:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2098,"indexExpression":{"id":2097,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"4157:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4150:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2095,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4144:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2094,"name":"uint8","nodeType":"ElementaryTypeName","src":"4144:5:10","typeDescriptions":{}}},"id":2099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4144:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4163:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4144:21:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4121:44:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2110,"nodeType":"IfStatement","src":"4117:150:10","trueBody":{"id":2109,"nodeType":"Block","src":"4167:100:10","statements":[{"expression":{"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2103,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"4235:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2105,"indexExpression":{"id":2104,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"4242:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4235:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4248:4:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4235:17:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2108,"nodeType":"ExpressionStatement","src":"4235:17:10"}]}},{"expression":{"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2111,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2076,"src":"4280:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4294:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4280:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2114,"nodeType":"ExpressionStatement","src":"4280:15:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2083,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"4003:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4007:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4003:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2116,"initializationExpression":{"assignments":[2080],"declarations":[{"constant":false,"id":2080,"mutability":"mutable","name":"i","nameLocation":"3995:1:10","nodeType":"VariableDeclaration","scope":2116,"src":"3987:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2079,"name":"uint256","nodeType":"ElementaryTypeName","src":"3987:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2082,"initialValue":{"hexValue":"3431","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3999:2:10","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3987:14:10"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4010:3:10","subExpression":{"id":2086,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2080,"src":"4012:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2088,"nodeType":"ExpressionStatement","src":"4010:3:10"},"nodeType":"ForStatement","src":"3982:324:10"},{"expression":{"arguments":[{"id":2119,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"4329:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4322:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2117,"name":"string","nodeType":"ElementaryTypeName","src":"4322:6:10","typeDescriptions":{}}},"id":2120,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2065,"id":2121,"nodeType":"Return","src":"4315:21:10"}]},"documentation":{"id":2059,"nodeType":"StructuredDocumentation","src":"3450:165:10","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2123,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3629:19:10","nodeType":"FunctionDefinition","parameters":{"id":2062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2061,"mutability":"mutable","name":"addr","nameLocation":"3657:4:10","nodeType":"VariableDeclaration","scope":2123,"src":"3649:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2060,"name":"address","nodeType":"ElementaryTypeName","src":"3649:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3648:14:10"},"returnParameters":{"id":2065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2064,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2123,"src":"3686:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2063,"name":"string","nodeType":"ElementaryTypeName","src":"3686:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3685:15:10"},"scope":3197,"src":"3620:723:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2159,"nodeType":"Block","src":"4498:104:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2157,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2135,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"4521:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4515:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2133,"name":"bytes","nodeType":"ElementaryTypeName","src":"4515:5:10","typeDescriptions":{}}},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4515:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4524:6:10","memberName":"length","nodeType":"MemberAccess","src":"4515:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2140,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"4540:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4534:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2138,"name":"bytes","nodeType":"ElementaryTypeName","src":"4534:5:10","typeDescriptions":{}}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4534:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4543:6:10","memberName":"length","nodeType":"MemberAccess","src":"4534:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4515:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2147,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"4569:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4563:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2145,"name":"bytes","nodeType":"ElementaryTypeName","src":"4563:5:10","typeDescriptions":{}}},"id":2148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4563:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2144,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4553:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4553:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2153,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"4592:1:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4586:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2151,"name":"bytes","nodeType":"ElementaryTypeName","src":"4586:5:10","typeDescriptions":{}}},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4586:8:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2150,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4576:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4576:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4553:42:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4515:80:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2132,"id":2158,"nodeType":"Return","src":"4508:87:10"}]},"documentation":{"id":2124,"nodeType":"StructuredDocumentation","src":"4349:66:10","text":" @dev Returns true if the two strings are equal."},"id":2160,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4429:5:10","nodeType":"FunctionDefinition","parameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"a","nameLocation":"4449:1:10","nodeType":"VariableDeclaration","scope":2160,"src":"4435:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2125,"name":"string","nodeType":"ElementaryTypeName","src":"4435:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2128,"mutability":"mutable","name":"b","nameLocation":"4466:1:10","nodeType":"VariableDeclaration","scope":2160,"src":"4452:15:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2127,"name":"string","nodeType":"ElementaryTypeName","src":"4452:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4434:34:10"},"returnParameters":{"id":2132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2160,"src":"4492:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2130,"name":"bool","nodeType":"ElementaryTypeName","src":"4492:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4491:6:10"},"scope":3197,"src":"4420:182:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2178,"nodeType":"Block","src":"4899:64:10","statements":[{"expression":{"arguments":[{"id":2169,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"4926:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4933:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2173,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2163,"src":"4942:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4936:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2171,"name":"bytes","nodeType":"ElementaryTypeName","src":"4936:5:10","typeDescriptions":{}}},"id":2174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4936:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4949:6:10","memberName":"length","nodeType":"MemberAccess","src":"4936:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2168,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[2179,2210],"referencedDeclaration":2210,"src":"4916:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4916:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2167,"id":2177,"nodeType":"Return","src":"4909:47:10"}]},"documentation":{"id":2161,"nodeType":"StructuredDocumentation","src":"4608:214:10","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2179,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4836:9:10","nodeType":"FunctionDefinition","parameters":{"id":2164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2163,"mutability":"mutable","name":"input","nameLocation":"4860:5:10","nodeType":"VariableDeclaration","scope":2179,"src":"4846:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2162,"name":"string","nodeType":"ElementaryTypeName","src":"4846:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4845:21:10"},"returnParameters":{"id":2167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2179,"src":"4890:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2165,"name":"uint256","nodeType":"ElementaryTypeName","src":"4890:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4889:9:10"},"scope":3197,"src":"4827:136:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2209,"nodeType":"Block","src":"5368:153:10","statements":[{"assignments":[2192,2194],"declarations":[{"constant":false,"id":2192,"mutability":"mutable","name":"success","nameLocation":"5384:7:10","nodeType":"VariableDeclaration","scope":2209,"src":"5379:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2191,"name":"bool","nodeType":"ElementaryTypeName","src":"5379:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2194,"mutability":"mutable","name":"value","nameLocation":"5401:5:10","nodeType":"VariableDeclaration","scope":2209,"src":"5393:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2193,"name":"uint256","nodeType":"ElementaryTypeName","src":"5393:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2200,"initialValue":{"arguments":[{"id":2196,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2182,"src":"5423:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2197,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2184,"src":"5430:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2198,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2186,"src":"5437:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2195,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2231,2268],"referencedDeclaration":2268,"src":"5410:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5410:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5378:63:10"},{"condition":{"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5455:8:10","subExpression":{"id":2201,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2192,"src":"5456:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2206,"nodeType":"IfStatement","src":"5451:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2203,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"5472:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5472:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2205,"nodeType":"RevertStatement","src":"5465:27:10"}},{"expression":{"id":2207,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"5509:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2190,"id":2208,"nodeType":"Return","src":"5502:12:10"}]},"documentation":{"id":2180,"nodeType":"StructuredDocumentation","src":"4969:294:10","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":2210,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5277:9:10","nodeType":"FunctionDefinition","parameters":{"id":2187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2182,"mutability":"mutable","name":"input","nameLocation":"5301:5:10","nodeType":"VariableDeclaration","scope":2210,"src":"5287:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2181,"name":"string","nodeType":"ElementaryTypeName","src":"5287:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2184,"mutability":"mutable","name":"begin","nameLocation":"5316:5:10","nodeType":"VariableDeclaration","scope":2210,"src":"5308:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2183,"name":"uint256","nodeType":"ElementaryTypeName","src":"5308:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2186,"mutability":"mutable","name":"end","nameLocation":"5331:3:10","nodeType":"VariableDeclaration","scope":2210,"src":"5323:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2185,"name":"uint256","nodeType":"ElementaryTypeName","src":"5323:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5286:49:10"},"returnParameters":{"id":2190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2189,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2210,"src":"5359:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2188,"name":"uint256","nodeType":"ElementaryTypeName","src":"5359:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5358:9:10"},"scope":3197,"src":"5268:253:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2230,"nodeType":"Block","src":"5842:83:10","statements":[{"expression":{"arguments":[{"id":2221,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"5888:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5895:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2225,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2213,"src":"5904:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2223,"name":"bytes","nodeType":"ElementaryTypeName","src":"5898:5:10","typeDescriptions":{}}},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5911:6:10","memberName":"length","nodeType":"MemberAccess","src":"5898:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2220,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"5859:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5859:59:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2219,"id":2229,"nodeType":"Return","src":"5852:66:10"}]},"documentation":{"id":2211,"nodeType":"StructuredDocumentation","src":"5527:215:10","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2231,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5756:12:10","nodeType":"FunctionDefinition","parameters":{"id":2214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2213,"mutability":"mutable","name":"input","nameLocation":"5783:5:10","nodeType":"VariableDeclaration","scope":2231,"src":"5769:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2212,"name":"string","nodeType":"ElementaryTypeName","src":"5769:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5768:21:10"},"returnParameters":{"id":2219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"success","nameLocation":"5818:7:10","nodeType":"VariableDeclaration","scope":2231,"src":"5813:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2215,"name":"bool","nodeType":"ElementaryTypeName","src":"5813:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2218,"mutability":"mutable","name":"value","nameLocation":"5835:5:10","nodeType":"VariableDeclaration","scope":2231,"src":"5827:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2217,"name":"uint256","nodeType":"ElementaryTypeName","src":"5827:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5812:29:10"},"scope":3197,"src":"5747:178:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2267,"nodeType":"Block","src":"6327:144:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2251,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2245,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"6341:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2248,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"6353:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6347:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2246,"name":"bytes","nodeType":"ElementaryTypeName","src":"6347:5:10","typeDescriptions":{}}},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6347:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6360:6:10","memberName":"length","nodeType":"MemberAccess","src":"6347:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6341:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2252,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"6370:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2253,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"6378:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6370:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6341:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2260,"nodeType":"IfStatement","src":"6337:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6391:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6398:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6390:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2244,"id":2259,"nodeType":"Return","src":"6383:17:10"}},{"expression":{"arguments":[{"id":2262,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2234,"src":"6446:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2263,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2236,"src":"6453:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2264,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2238,"src":"6460:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2261,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2338,"src":"6417:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6417:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2244,"id":2266,"nodeType":"Return","src":"6410:54:10"}]},"documentation":{"id":2232,"nodeType":"StructuredDocumentation","src":"5931:238:10","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2268,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6183:12:10","nodeType":"FunctionDefinition","parameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"input","nameLocation":"6219:5:10","nodeType":"VariableDeclaration","scope":2268,"src":"6205:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2233,"name":"string","nodeType":"ElementaryTypeName","src":"6205:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2236,"mutability":"mutable","name":"begin","nameLocation":"6242:5:10","nodeType":"VariableDeclaration","scope":2268,"src":"6234:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2235,"name":"uint256","nodeType":"ElementaryTypeName","src":"6234:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2238,"mutability":"mutable","name":"end","nameLocation":"6265:3:10","nodeType":"VariableDeclaration","scope":2268,"src":"6257:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2237,"name":"uint256","nodeType":"ElementaryTypeName","src":"6257:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6195:79:10"},"returnParameters":{"id":2244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"success","nameLocation":"6303:7:10","nodeType":"VariableDeclaration","scope":2268,"src":"6298:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2240,"name":"bool","nodeType":"ElementaryTypeName","src":"6298:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2243,"mutability":"mutable","name":"value","nameLocation":"6320:5:10","nodeType":"VariableDeclaration","scope":2268,"src":"6312:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2242,"name":"uint256","nodeType":"ElementaryTypeName","src":"6312:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6297:29:10"},"scope":3197,"src":"6174:297:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2337,"nodeType":"Block","src":"6874:347:10","statements":[{"assignments":[2283],"declarations":[{"constant":false,"id":2283,"mutability":"mutable","name":"buffer","nameLocation":"6897:6:10","nodeType":"VariableDeclaration","scope":2337,"src":"6884:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2282,"name":"bytes","nodeType":"ElementaryTypeName","src":"6884:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2288,"initialValue":{"arguments":[{"id":2286,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"6912:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6906:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2284,"name":"bytes","nodeType":"ElementaryTypeName","src":"6906:5:10","typeDescriptions":{}}},"id":2287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6906:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6884:34:10"},{"assignments":[2290],"declarations":[{"constant":false,"id":2290,"mutability":"mutable","name":"result","nameLocation":"6937:6:10","nodeType":"VariableDeclaration","scope":2337,"src":"6929:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2289,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2292,"initialValue":{"hexValue":"30","id":2291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6946:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6929:18:10"},{"body":{"id":2331,"nodeType":"Block","src":"6995:189:10","statements":[{"assignments":[2304],"declarations":[{"constant":false,"id":2304,"mutability":"mutable","name":"chr","nameLocation":"7015:3:10","nodeType":"VariableDeclaration","scope":2331,"src":"7009:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2303,"name":"uint8","nodeType":"ElementaryTypeName","src":"7009:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2314,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2309,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2283,"src":"7064:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2310,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"7072:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2308,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"7041:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7041:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7034:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2306,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7034:6:10","typeDescriptions":{}}},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7034:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2305,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"7021:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7021:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7009:67:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2315,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"7094:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":2316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7100:1:10","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7094:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2322,"nodeType":"IfStatement","src":"7090:30:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7111:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7118:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2320,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7110:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2281,"id":2321,"nodeType":"Return","src":"7103:17:10"}},{"expression":{"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"7134:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7144:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7134:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2326,"nodeType":"ExpressionStatement","src":"7134:12:10"},{"expression":{"id":2329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2327,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"7160:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2328,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"7170:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7160:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2330,"nodeType":"ExpressionStatement","src":"7160:13:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"6981:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2298,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"6985:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6981:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2332,"initializationExpression":{"assignments":[2294],"declarations":[{"constant":false,"id":2294,"mutability":"mutable","name":"i","nameLocation":"6970:1:10","nodeType":"VariableDeclaration","scope":2332,"src":"6962:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2296,"initialValue":{"id":2295,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"6974:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6962:17:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6990:3:10","subExpression":{"id":2300,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"6992:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2302,"nodeType":"ExpressionStatement","src":"6990:3:10"},"nodeType":"ForStatement","src":"6957:227:10"},{"expression":{"components":[{"hexValue":"74727565","id":2333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7201:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2290,"src":"7207:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2335,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7200:14:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2281,"id":2336,"nodeType":"Return","src":"7193:21:10"}]},"documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"6477:224:10","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2338,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6715:28:10","nodeType":"FunctionDefinition","parameters":{"id":2276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"input","nameLocation":"6767:5:10","nodeType":"VariableDeclaration","scope":2338,"src":"6753:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2270,"name":"string","nodeType":"ElementaryTypeName","src":"6753:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2273,"mutability":"mutable","name":"begin","nameLocation":"6790:5:10","nodeType":"VariableDeclaration","scope":2338,"src":"6782:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2272,"name":"uint256","nodeType":"ElementaryTypeName","src":"6782:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"end","nameLocation":"6813:3:10","nodeType":"VariableDeclaration","scope":2338,"src":"6805:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2274,"name":"uint256","nodeType":"ElementaryTypeName","src":"6805:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6743:79:10"},"returnParameters":{"id":2281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2278,"mutability":"mutable","name":"success","nameLocation":"6850:7:10","nodeType":"VariableDeclaration","scope":2338,"src":"6845:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2277,"name":"bool","nodeType":"ElementaryTypeName","src":"6845:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2280,"mutability":"mutable","name":"value","nameLocation":"6867:5:10","nodeType":"VariableDeclaration","scope":2338,"src":"6859:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"6859:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6844:29:10"},"scope":3197,"src":"6706:515:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2356,"nodeType":"Block","src":"7518:63:10","statements":[{"expression":{"arguments":[{"id":2347,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"7544:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7551:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2351,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"7560:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7554:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2349,"name":"bytes","nodeType":"ElementaryTypeName","src":"7554:5:10","typeDescriptions":{}}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7554:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7567:6:10","memberName":"length","nodeType":"MemberAccess","src":"7554:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2346,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[2357,2388],"referencedDeclaration":2388,"src":"7535:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7535:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2345,"id":2355,"nodeType":"Return","src":"7528:46:10"}]},"documentation":{"id":2339,"nodeType":"StructuredDocumentation","src":"7227:216:10","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2357,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7457:8:10","nodeType":"FunctionDefinition","parameters":{"id":2342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2341,"mutability":"mutable","name":"input","nameLocation":"7480:5:10","nodeType":"VariableDeclaration","scope":2357,"src":"7466:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2340,"name":"string","nodeType":"ElementaryTypeName","src":"7466:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7465:21:10"},"returnParameters":{"id":2345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2344,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2357,"src":"7510:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2343,"name":"int256","nodeType":"ElementaryTypeName","src":"7510:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7509:8:10"},"scope":3197,"src":"7448:133:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2387,"nodeType":"Block","src":"7986:151:10","statements":[{"assignments":[2370,2372],"declarations":[{"constant":false,"id":2370,"mutability":"mutable","name":"success","nameLocation":"8002:7:10","nodeType":"VariableDeclaration","scope":2387,"src":"7997:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2369,"name":"bool","nodeType":"ElementaryTypeName","src":"7997:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2372,"mutability":"mutable","name":"value","nameLocation":"8018:5:10","nodeType":"VariableDeclaration","scope":2387,"src":"8011:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2371,"name":"int256","nodeType":"ElementaryTypeName","src":"8011:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2378,"initialValue":{"arguments":[{"id":2374,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2360,"src":"8039:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2375,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"8046:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2376,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"8053:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2373,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[2409,2451],"referencedDeclaration":2451,"src":"8027:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8027:30:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7996:61:10"},{"condition":{"id":2380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8071:8:10","subExpression":{"id":2379,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"8072:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2384,"nodeType":"IfStatement","src":"8067:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2381,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"8088:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8088:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2383,"nodeType":"RevertStatement","src":"8081:27:10"}},{"expression":{"id":2385,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2372,"src":"8125:5:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2368,"id":2386,"nodeType":"Return","src":"8118:12:10"}]},"documentation":{"id":2358,"nodeType":"StructuredDocumentation","src":"7587:296:10","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":2388,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7897:8:10","nodeType":"FunctionDefinition","parameters":{"id":2365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2360,"mutability":"mutable","name":"input","nameLocation":"7920:5:10","nodeType":"VariableDeclaration","scope":2388,"src":"7906:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2359,"name":"string","nodeType":"ElementaryTypeName","src":"7906:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2362,"mutability":"mutable","name":"begin","nameLocation":"7935:5:10","nodeType":"VariableDeclaration","scope":2388,"src":"7927:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"7927:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2364,"mutability":"mutable","name":"end","nameLocation":"7950:3:10","nodeType":"VariableDeclaration","scope":2388,"src":"7942:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2363,"name":"uint256","nodeType":"ElementaryTypeName","src":"7942:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:49:10"},"returnParameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2367,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2388,"src":"7978:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2366,"name":"int256","nodeType":"ElementaryTypeName","src":"7978:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7977:8:10"},"scope":3197,"src":"7888:249:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2408,"nodeType":"Block","src":"8528:82:10","statements":[{"expression":{"arguments":[{"id":2399,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"8573:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8580:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2403,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2391,"src":"8589:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2402,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8583:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2401,"name":"bytes","nodeType":"ElementaryTypeName","src":"8583:5:10","typeDescriptions":{}}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8596:6:10","memberName":"length","nodeType":"MemberAccess","src":"8583:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2398,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"8545:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8545:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2397,"id":2407,"nodeType":"Return","src":"8538:65:10"}]},"documentation":{"id":2389,"nodeType":"StructuredDocumentation","src":"8143:287:10","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2409,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8444:11:10","nodeType":"FunctionDefinition","parameters":{"id":2392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2391,"mutability":"mutable","name":"input","nameLocation":"8470:5:10","nodeType":"VariableDeclaration","scope":2409,"src":"8456:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2390,"name":"string","nodeType":"ElementaryTypeName","src":"8456:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8455:21:10"},"returnParameters":{"id":2397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2394,"mutability":"mutable","name":"success","nameLocation":"8505:7:10","nodeType":"VariableDeclaration","scope":2409,"src":"8500:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2393,"name":"bool","nodeType":"ElementaryTypeName","src":"8500:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2396,"mutability":"mutable","name":"value","nameLocation":"8521:5:10","nodeType":"VariableDeclaration","scope":2409,"src":"8514:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2395,"name":"int256","nodeType":"ElementaryTypeName","src":"8514:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8499:28:10"},"scope":3197,"src":"8435:175:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":2414,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8641:14:10","nodeType":"VariableDeclaration","scope":3197,"src":"8616:50:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2410,"name":"uint256","nodeType":"ElementaryTypeName","src":"8616:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":2413,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8658:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":2412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8663:3:10","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8658:8:10","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":2450,"nodeType":"Block","src":"9132:143:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2428,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"9146:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2431,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"9158:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2430,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9152:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2429,"name":"bytes","nodeType":"ElementaryTypeName","src":"9152:5:10","typeDescriptions":{}}},"id":2432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9152:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9165:6:10","memberName":"length","nodeType":"MemberAccess","src":"9152:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9146:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2435,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"9175:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2436,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"9183:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9175:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9146:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2443,"nodeType":"IfStatement","src":"9142:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9196:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9203:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2441,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9195:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2427,"id":2442,"nodeType":"Return","src":"9188:17:10"}},{"expression":{"arguments":[{"id":2445,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"9250:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2446,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2419,"src":"9257:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2447,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2421,"src":"9264:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2444,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2572,"src":"9222:27:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2427,"id":2449,"nodeType":"Return","src":"9215:53:10"}]},"documentation":{"id":2415,"nodeType":"StructuredDocumentation","src":"8673:303:10","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":2451,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8990:11:10","nodeType":"FunctionDefinition","parameters":{"id":2422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2417,"mutability":"mutable","name":"input","nameLocation":"9025:5:10","nodeType":"VariableDeclaration","scope":2451,"src":"9011:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2416,"name":"string","nodeType":"ElementaryTypeName","src":"9011:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2419,"mutability":"mutable","name":"begin","nameLocation":"9048:5:10","nodeType":"VariableDeclaration","scope":2451,"src":"9040:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2418,"name":"uint256","nodeType":"ElementaryTypeName","src":"9040:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2421,"mutability":"mutable","name":"end","nameLocation":"9071:3:10","nodeType":"VariableDeclaration","scope":2451,"src":"9063:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2420,"name":"uint256","nodeType":"ElementaryTypeName","src":"9063:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9001:79:10"},"returnParameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"success","nameLocation":"9109:7:10","nodeType":"VariableDeclaration","scope":2451,"src":"9104:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2423,"name":"bool","nodeType":"ElementaryTypeName","src":"9104:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"value","nameLocation":"9125:5:10","nodeType":"VariableDeclaration","scope":2451,"src":"9118:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2425,"name":"int256","nodeType":"ElementaryTypeName","src":"9118:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9103:28:10"},"scope":3197,"src":"8981:294:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2571,"nodeType":"Block","src":"9675:812:10","statements":[{"assignments":[2466],"declarations":[{"constant":false,"id":2466,"mutability":"mutable","name":"buffer","nameLocation":"9698:6:10","nodeType":"VariableDeclaration","scope":2571,"src":"9685:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2465,"name":"bytes","nodeType":"ElementaryTypeName","src":"9685:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2471,"initialValue":{"arguments":[{"id":2469,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"9713:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2467,"name":"bytes","nodeType":"ElementaryTypeName","src":"9707:5:10","typeDescriptions":{}}},"id":2470,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9707:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9685:34:10"},{"assignments":[2473],"declarations":[{"constant":false,"id":2473,"mutability":"mutable","name":"sign","nameLocation":"9783:4:10","nodeType":"VariableDeclaration","scope":2571,"src":"9776:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2472,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9776:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":2489,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2474,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"9790:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2475,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"9799:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9790:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":2484,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"9847:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2485,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"9855:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2483,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"9824:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9824:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9817:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2481,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9817:6:10","typeDescriptions":{}}},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9817:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9790:72:10","trueExpression":{"arguments":[{"hexValue":"30","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9812:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9805:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2477,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9805:6:10","typeDescriptions":{}}},"id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9805:9:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9776:86:10"},{"assignments":[2491],"declarations":[{"constant":false,"id":2491,"mutability":"mutable","name":"positiveSign","nameLocation":"9948:12:10","nodeType":"VariableDeclaration","scope":2571,"src":"9943:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2490,"name":"bool","nodeType":"ElementaryTypeName","src":"9943:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2498,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2492,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"9963:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":2495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9978:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":2494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9971:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2493,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9971:6:10","typeDescriptions":{}}},"id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9971:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9963:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9943:39:10"},{"assignments":[2500],"declarations":[{"constant":false,"id":2500,"mutability":"mutable","name":"negativeSign","nameLocation":"9997:12:10","nodeType":"VariableDeclaration","scope":2571,"src":"9992:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2499,"name":"bool","nodeType":"ElementaryTypeName","src":"9992:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2507,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2501,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2473,"src":"10012:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":2504,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10027:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":2503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10020:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2502,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10020:6:10","typeDescriptions":{}}},"id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10020:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10012:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9992:39:10"},{"assignments":[2509],"declarations":[{"constant":false,"id":2509,"mutability":"mutable","name":"offset","nameLocation":"10049:6:10","nodeType":"VariableDeclaration","scope":2571,"src":"10041:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2508,"name":"uint256","nodeType":"ElementaryTypeName","src":"10041:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2516,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2510,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"10059:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":2511,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"10075:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10059:28:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10058:30:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10089:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"10058:37:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10058:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10041:56:10"},{"assignments":[2518,2520],"declarations":[{"constant":false,"id":2518,"mutability":"mutable","name":"absSuccess","nameLocation":"10114:10:10","nodeType":"VariableDeclaration","scope":2571,"src":"10109:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2517,"name":"bool","nodeType":"ElementaryTypeName","src":"10109:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2520,"mutability":"mutable","name":"absValue","nameLocation":"10134:8:10","nodeType":"VariableDeclaration","scope":2571,"src":"10126:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2519,"name":"uint256","nodeType":"ElementaryTypeName","src":"10126:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2528,"initialValue":{"arguments":[{"id":2522,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"10159:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2523,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"10166:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2524,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"10174:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10166:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2526,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"10182:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2521,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[2231,2268],"referencedDeclaration":2268,"src":"10146:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10146:40:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10108:78:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2529,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"10201:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2530,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"10215:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2531,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"10226:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10215:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10201:39:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2549,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"10343:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2550,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"10357:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2552,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"10373:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2553,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2414,"src":"10385:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10373:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10343:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10471:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2566,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10478:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2567,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10470:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2464,"id":2568,"nodeType":"Return","src":"10463:17:10"},"id":2569,"nodeType":"IfStatement","src":"10339:141:10","trueBody":{"id":2564,"nodeType":"Block","src":"10401:56:10","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10423:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":2559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10434:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2558,"name":"int256","nodeType":"ElementaryTypeName","src":"10434:6:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":2557,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10429:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10429:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10442:3:10","memberName":"min","nodeType":"MemberAccess","src":"10429:16:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2562,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10422:24:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2464,"id":2563,"nodeType":"Return","src":"10415:31:10"}]}},"id":2570,"nodeType":"IfStatement","src":"10197:283:10","trueBody":{"id":2548,"nodeType":"Block","src":"10242:91:10","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10264:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":2535,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"10270:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":2543,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"10312:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10305:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2541,"name":"int256","nodeType":"ElementaryTypeName","src":"10305:6:10","typeDescriptions":{}}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10305:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10270:51:10","trueExpression":{"id":2540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10285:17:10","subExpression":{"arguments":[{"id":2538,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2520,"src":"10293:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10286:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2536,"name":"int256","nodeType":"ElementaryTypeName","src":"10286:6:10","typeDescriptions":{}}},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10286:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2546,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10263:59:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":2464,"id":2547,"nodeType":"Return","src":"10256:66:10"}]}}]},"documentation":{"id":2452,"nodeType":"StructuredDocumentation","src":"9281:223:10","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2572,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9518:27:10","nodeType":"FunctionDefinition","parameters":{"id":2459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2454,"mutability":"mutable","name":"input","nameLocation":"9569:5:10","nodeType":"VariableDeclaration","scope":2572,"src":"9555:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2453,"name":"string","nodeType":"ElementaryTypeName","src":"9555:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2456,"mutability":"mutable","name":"begin","nameLocation":"9592:5:10","nodeType":"VariableDeclaration","scope":2572,"src":"9584:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2455,"name":"uint256","nodeType":"ElementaryTypeName","src":"9584:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2458,"mutability":"mutable","name":"end","nameLocation":"9615:3:10","nodeType":"VariableDeclaration","scope":2572,"src":"9607:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2457,"name":"uint256","nodeType":"ElementaryTypeName","src":"9607:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9545:79:10"},"returnParameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"success","nameLocation":"9652:7:10","nodeType":"VariableDeclaration","scope":2572,"src":"9647:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2460,"name":"bool","nodeType":"ElementaryTypeName","src":"9647:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"value","nameLocation":"9668:5:10","nodeType":"VariableDeclaration","scope":2572,"src":"9661:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2462,"name":"int256","nodeType":"ElementaryTypeName","src":"9661:6:10","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9646:28:10"},"scope":3197,"src":"9509:978:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2590,"nodeType":"Block","src":"10832:67:10","statements":[{"expression":{"arguments":[{"id":2581,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"10862:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10869:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2585,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2575,"src":"10878:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10872:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2583,"name":"bytes","nodeType":"ElementaryTypeName","src":"10872:5:10","typeDescriptions":{}}},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10872:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10885:6:10","memberName":"length","nodeType":"MemberAccess","src":"10872:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2580,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[2591,2622],"referencedDeclaration":2622,"src":"10849:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10849:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2579,"id":2589,"nodeType":"Return","src":"10842:50:10"}]},"documentation":{"id":2573,"nodeType":"StructuredDocumentation","src":"10493:259:10","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2591,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10766:12:10","nodeType":"FunctionDefinition","parameters":{"id":2576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2575,"mutability":"mutable","name":"input","nameLocation":"10793:5:10","nodeType":"VariableDeclaration","scope":2591,"src":"10779:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2574,"name":"string","nodeType":"ElementaryTypeName","src":"10779:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10778:21:10"},"returnParameters":{"id":2579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2591,"src":"10823:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2577,"name":"uint256","nodeType":"ElementaryTypeName","src":"10823:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10822:9:10"},"scope":3197,"src":"10757:142:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2621,"nodeType":"Block","src":"11320:156:10","statements":[{"assignments":[2604,2606],"declarations":[{"constant":false,"id":2604,"mutability":"mutable","name":"success","nameLocation":"11336:7:10","nodeType":"VariableDeclaration","scope":2621,"src":"11331:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2603,"name":"bool","nodeType":"ElementaryTypeName","src":"11331:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2606,"mutability":"mutable","name":"value","nameLocation":"11353:5:10","nodeType":"VariableDeclaration","scope":2621,"src":"11345:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2605,"name":"uint256","nodeType":"ElementaryTypeName","src":"11345:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2612,"initialValue":{"arguments":[{"id":2608,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2594,"src":"11378:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2609,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"11385:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2610,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"11392:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2607,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[2643,2680],"referencedDeclaration":2680,"src":"11362:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11362:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11330:66:10"},{"condition":{"id":2614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11410:8:10","subExpression":{"id":2613,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"11411:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2618,"nodeType":"IfStatement","src":"11406:41:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2615,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"11427:18:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11427:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2617,"nodeType":"RevertStatement","src":"11420:27:10"}},{"expression":{"id":2619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"11464:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2602,"id":2620,"nodeType":"Return","src":"11457:12:10"}]},"documentation":{"id":2592,"nodeType":"StructuredDocumentation","src":"10905:307:10","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":2622,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11226:12:10","nodeType":"FunctionDefinition","parameters":{"id":2599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"mutability":"mutable","name":"input","nameLocation":"11253:5:10","nodeType":"VariableDeclaration","scope":2622,"src":"11239:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2593,"name":"string","nodeType":"ElementaryTypeName","src":"11239:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2596,"mutability":"mutable","name":"begin","nameLocation":"11268:5:10","nodeType":"VariableDeclaration","scope":2622,"src":"11260:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2595,"name":"uint256","nodeType":"ElementaryTypeName","src":"11260:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2598,"mutability":"mutable","name":"end","nameLocation":"11283:3:10","nodeType":"VariableDeclaration","scope":2622,"src":"11275:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"11275:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11238:49:10"},"returnParameters":{"id":2602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2622,"src":"11311:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2600,"name":"uint256","nodeType":"ElementaryTypeName","src":"11311:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11310:9:10"},"scope":3197,"src":"11217:259:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2642,"nodeType":"Block","src":"11803:86:10","statements":[{"expression":{"arguments":[{"id":2633,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"11852:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11859:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2637,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"11868:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11862:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2635,"name":"bytes","nodeType":"ElementaryTypeName","src":"11862:5:10","typeDescriptions":{}}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11862:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11875:6:10","memberName":"length","nodeType":"MemberAccess","src":"11862:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2632,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"11820:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11820:62:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2631,"id":2641,"nodeType":"Return","src":"11813:69:10"}]},"documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"11482:218:10","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2643,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11714:15:10","nodeType":"FunctionDefinition","parameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"input","nameLocation":"11744:5:10","nodeType":"VariableDeclaration","scope":2643,"src":"11730:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2624,"name":"string","nodeType":"ElementaryTypeName","src":"11730:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11729:21:10"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2628,"mutability":"mutable","name":"success","nameLocation":"11779:7:10","nodeType":"VariableDeclaration","scope":2643,"src":"11774:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2627,"name":"bool","nodeType":"ElementaryTypeName","src":"11774:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2630,"mutability":"mutable","name":"value","nameLocation":"11796:5:10","nodeType":"VariableDeclaration","scope":2643,"src":"11788:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2629,"name":"uint256","nodeType":"ElementaryTypeName","src":"11788:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11773:29:10"},"scope":3197,"src":"11705:184:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2679,"nodeType":"Block","src":"12297:147:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2657,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"12311:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2660,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"12323:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12317:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2658,"name":"bytes","nodeType":"ElementaryTypeName","src":"12317:5:10","typeDescriptions":{}}},"id":2661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12317:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12330:6:10","memberName":"length","nodeType":"MemberAccess","src":"12317:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12311:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2664,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"12340:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2665,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"12348:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12340:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12311:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2672,"nodeType":"IfStatement","src":"12307:63:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2668,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12361:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12368:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2670,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12360:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2656,"id":2671,"nodeType":"Return","src":"12353:17:10"}},{"expression":{"arguments":[{"id":2674,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"12419:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2675,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"12426:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2676,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"12433:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2673,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"12387:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12387:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2656,"id":2678,"nodeType":"Return","src":"12380:57:10"}]},"documentation":{"id":2644,"nodeType":"StructuredDocumentation","src":"11895:241:10","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":2680,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12150:15:10","nodeType":"FunctionDefinition","parameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"input","nameLocation":"12189:5:10","nodeType":"VariableDeclaration","scope":2680,"src":"12175:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2645,"name":"string","nodeType":"ElementaryTypeName","src":"12175:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"begin","nameLocation":"12212:5:10","nodeType":"VariableDeclaration","scope":2680,"src":"12204:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"12204:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"end","nameLocation":"12235:3:10","nodeType":"VariableDeclaration","scope":2680,"src":"12227:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"12227:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12165:79:10"},"returnParameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"success","nameLocation":"12273:7:10","nodeType":"VariableDeclaration","scope":2680,"src":"12268:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2652,"name":"bool","nodeType":"ElementaryTypeName","src":"12268:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2655,"mutability":"mutable","name":"value","nameLocation":"12290:5:10","nodeType":"VariableDeclaration","scope":2680,"src":"12282:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"12282:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12267:29:10"},"scope":3197,"src":"12141:303:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2782,"nodeType":"Block","src":"12853:881:10","statements":[{"assignments":[2695],"declarations":[{"constant":false,"id":2695,"mutability":"mutable","name":"buffer","nameLocation":"12876:6:10","nodeType":"VariableDeclaration","scope":2782,"src":"12863:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2694,"name":"bytes","nodeType":"ElementaryTypeName","src":"12863:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2700,"initialValue":{"arguments":[{"id":2698,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2683,"src":"12891:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12885:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2696,"name":"bytes","nodeType":"ElementaryTypeName","src":"12885:5:10","typeDescriptions":{}}},"id":2699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12885:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12863:34:10"},{"assignments":[2702],"declarations":[{"constant":false,"id":2702,"mutability":"mutable","name":"hasPrefix","nameLocation":"12950:9:10","nodeType":"VariableDeclaration","scope":2782,"src":"12945:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2701,"name":"bool","nodeType":"ElementaryTypeName","src":"12945:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2722,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2703,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"12963:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2704,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"12969:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12977:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12969:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12963:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2708,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12962:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2712,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"13013:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2713,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"13021:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2711,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"12990:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12990:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12983:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2709,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12983:6:10","typeDescriptions":{}}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12983:45:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13039:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13032:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2716,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13032:6:10","typeDescriptions":{}}},"id":2719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13032:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12983:61:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12962:82:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12945:99:10"},{"assignments":[2724],"declarations":[{"constant":false,"id":2724,"mutability":"mutable","name":"offset","nameLocation":"13133:6:10","nodeType":"VariableDeclaration","scope":2782,"src":"13125:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2723,"name":"uint256","nodeType":"ElementaryTypeName","src":"13125:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2730,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2725,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2702,"src":"13142:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13152:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"13142:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13142:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13163:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13142:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13125:39:10"},{"assignments":[2732],"declarations":[{"constant":false,"id":2732,"mutability":"mutable","name":"result","nameLocation":"13183:6:10","nodeType":"VariableDeclaration","scope":2782,"src":"13175:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2731,"name":"uint256","nodeType":"ElementaryTypeName","src":"13175:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2734,"initialValue":{"hexValue":"30","id":2733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13192:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13175:18:10"},{"body":{"id":2776,"nodeType":"Block","src":"13250:447:10","statements":[{"assignments":[2748],"declarations":[{"constant":false,"id":2748,"mutability":"mutable","name":"chr","nameLocation":"13270:3:10","nodeType":"VariableDeclaration","scope":2776,"src":"13264:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2747,"name":"uint8","nodeType":"ElementaryTypeName","src":"13264:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2758,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":2753,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2695,"src":"13319:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2754,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"13327:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2752,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"13296:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13296:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13289:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2750,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13289:6:10","typeDescriptions":{}}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13289:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2749,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"13276:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13276:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13264:67:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2759,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"13349:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":2760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13355:2:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13349:8:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2766,"nodeType":"IfStatement","src":"13345:31:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13367:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13374:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2764,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13366:10:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2693,"id":2765,"nodeType":"Return","src":"13359:17:10"}},{"expression":{"id":2769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2767,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"13390:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":2768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13400:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13390:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2770,"nodeType":"ExpressionStatement","src":"13390:12:10"},{"id":2775,"nodeType":"UncheckedBlock","src":"13416:271:10","statements":[{"expression":{"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2771,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"13659:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2772,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2748,"src":"13669:3:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13659:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2774,"nodeType":"ExpressionStatement","src":"13659:13:10"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2741,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"13236:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2742,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2687,"src":"13240:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13236:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2777,"initializationExpression":{"assignments":[2736],"declarations":[{"constant":false,"id":2736,"mutability":"mutable","name":"i","nameLocation":"13216:1:10","nodeType":"VariableDeclaration","scope":2777,"src":"13208:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2735,"name":"uint256","nodeType":"ElementaryTypeName","src":"13208:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2740,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2737,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2685,"src":"13220:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2738,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2724,"src":"13228:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13220:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13208:26:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13245:3:10","subExpression":{"id":2744,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"13247:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2746,"nodeType":"ExpressionStatement","src":"13245:3:10"},"nodeType":"ForStatement","src":"13203:494:10"},{"expression":{"components":[{"hexValue":"74727565","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13714:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2779,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2732,"src":"13720:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13713:14:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2693,"id":2781,"nodeType":"Return","src":"13706:21:10"}]},"documentation":{"id":2681,"nodeType":"StructuredDocumentation","src":"12450:227:10","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":2783,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12691:31:10","nodeType":"FunctionDefinition","parameters":{"id":2688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2683,"mutability":"mutable","name":"input","nameLocation":"12746:5:10","nodeType":"VariableDeclaration","scope":2783,"src":"12732:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2682,"name":"string","nodeType":"ElementaryTypeName","src":"12732:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2685,"mutability":"mutable","name":"begin","nameLocation":"12769:5:10","nodeType":"VariableDeclaration","scope":2783,"src":"12761:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2684,"name":"uint256","nodeType":"ElementaryTypeName","src":"12761:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2687,"mutability":"mutable","name":"end","nameLocation":"12792:3:10","nodeType":"VariableDeclaration","scope":2783,"src":"12784:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2686,"name":"uint256","nodeType":"ElementaryTypeName","src":"12784:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12722:79:10"},"returnParameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2690,"mutability":"mutable","name":"success","nameLocation":"12829:7:10","nodeType":"VariableDeclaration","scope":2783,"src":"12824:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2689,"name":"bool","nodeType":"ElementaryTypeName","src":"12824:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"value","nameLocation":"12846:5:10","nodeType":"VariableDeclaration","scope":2783,"src":"12838:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2691,"name":"uint256","nodeType":"ElementaryTypeName","src":"12838:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12823:29:10"},"scope":3197,"src":"12682:1052:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2801,"nodeType":"Block","src":"14032:67:10","statements":[{"expression":{"arguments":[{"id":2792,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"14062:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14069:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2796,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2786,"src":"14078:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14072:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2794,"name":"bytes","nodeType":"ElementaryTypeName","src":"14072:5:10","typeDescriptions":{}}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14072:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14085:6:10","memberName":"length","nodeType":"MemberAccess","src":"14072:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2791,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[2802,2833],"referencedDeclaration":2833,"src":"14049:12:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":2799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14049:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2790,"id":2800,"nodeType":"Return","src":"14042:50:10"}]},"documentation":{"id":2784,"nodeType":"StructuredDocumentation","src":"13740:212:10","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2802,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13966:12:10","nodeType":"FunctionDefinition","parameters":{"id":2787,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2786,"mutability":"mutable","name":"input","nameLocation":"13993:5:10","nodeType":"VariableDeclaration","scope":2802,"src":"13979:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2785,"name":"string","nodeType":"ElementaryTypeName","src":"13979:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13978:21:10"},"returnParameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2802,"src":"14023:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2788,"name":"address","nodeType":"ElementaryTypeName","src":"14023:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14022:9:10"},"scope":3197,"src":"13957:142:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2832,"nodeType":"Block","src":"14472:165:10","statements":[{"assignments":[2815,2817],"declarations":[{"constant":false,"id":2815,"mutability":"mutable","name":"success","nameLocation":"14488:7:10","nodeType":"VariableDeclaration","scope":2832,"src":"14483:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2814,"name":"bool","nodeType":"ElementaryTypeName","src":"14483:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2817,"mutability":"mutable","name":"value","nameLocation":"14505:5:10","nodeType":"VariableDeclaration","scope":2832,"src":"14497:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2816,"name":"address","nodeType":"ElementaryTypeName","src":"14497:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2823,"initialValue":{"arguments":[{"id":2819,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"14530:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2820,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2807,"src":"14537:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2821,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"14544:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2818,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2854,2958],"referencedDeclaration":2958,"src":"14514:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14514:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14482:66:10"},{"condition":{"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14562:8:10","subExpression":{"id":2824,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2815,"src":"14563:7:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2829,"nodeType":"IfStatement","src":"14558:50:10","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2826,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"14579:27:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14579:29:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2828,"nodeType":"RevertStatement","src":"14572:36:10"}},{"expression":{"id":2830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2817,"src":"14625:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2813,"id":2831,"nodeType":"Return","src":"14618:12:10"}]},"documentation":{"id":2803,"nodeType":"StructuredDocumentation","src":"14105:259:10","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":2833,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14378:12:10","nodeType":"FunctionDefinition","parameters":{"id":2810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2805,"mutability":"mutable","name":"input","nameLocation":"14405:5:10","nodeType":"VariableDeclaration","scope":2833,"src":"14391:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2804,"name":"string","nodeType":"ElementaryTypeName","src":"14391:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2807,"mutability":"mutable","name":"begin","nameLocation":"14420:5:10","nodeType":"VariableDeclaration","scope":2833,"src":"14412:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2806,"name":"uint256","nodeType":"ElementaryTypeName","src":"14412:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2809,"mutability":"mutable","name":"end","nameLocation":"14435:3:10","nodeType":"VariableDeclaration","scope":2833,"src":"14427:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2808,"name":"uint256","nodeType":"ElementaryTypeName","src":"14427:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14390:49:10"},"returnParameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2833,"src":"14463:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2811,"name":"address","nodeType":"ElementaryTypeName","src":"14463:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14462:9:10"},"scope":3197,"src":"14369:268:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2853,"nodeType":"Block","src":"14944:70:10","statements":[{"expression":{"arguments":[{"id":2844,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"14977:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":2845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14984:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":2848,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2836,"src":"14993:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14987:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2846,"name":"bytes","nodeType":"ElementaryTypeName","src":"14987:5:10","typeDescriptions":{}}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14987:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15000:6:10","memberName":"length","nodeType":"MemberAccess","src":"14987:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2843,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[2854,2958],"referencedDeclaration":2958,"src":"14961:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14961:46:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2842,"id":2852,"nodeType":"Return","src":"14954:53:10"}]},"documentation":{"id":2834,"nodeType":"StructuredDocumentation","src":"14643:198:10","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":2854,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14855:15:10","nodeType":"FunctionDefinition","parameters":{"id":2837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2836,"mutability":"mutable","name":"input","nameLocation":"14885:5:10","nodeType":"VariableDeclaration","scope":2854,"src":"14871:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2835,"name":"string","nodeType":"ElementaryTypeName","src":"14871:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14870:21:10"},"returnParameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"success","nameLocation":"14920:7:10","nodeType":"VariableDeclaration","scope":2854,"src":"14915:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2838,"name":"bool","nodeType":"ElementaryTypeName","src":"14915:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2841,"mutability":"mutable","name":"value","nameLocation":"14937:5:10","nodeType":"VariableDeclaration","scope":2854,"src":"14929:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"14929:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14914:29:10"},"scope":3197,"src":"14846:168:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2957,"nodeType":"Block","src":"15407:733:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2868,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"15421:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":2871,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"15433:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2870,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15427:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2869,"name":"bytes","nodeType":"ElementaryTypeName","src":"15427:5:10","typeDescriptions":{}}},"id":2872,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15427:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15440:6:10","memberName":"length","nodeType":"MemberAccess","src":"15427:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15421:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2875,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"15450:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2876,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"15458:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15450:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15421:40:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2886,"nodeType":"IfStatement","src":"15417:72:10","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15471:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15486:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15478:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2880,"name":"address","nodeType":"ElementaryTypeName","src":"15478:7:10","typeDescriptions":{}}},"id":2883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15478:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2884,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15470:19:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2867,"id":2885,"nodeType":"Return","src":"15463:26:10"}},{"assignments":[2888],"declarations":[{"constant":false,"id":2888,"mutability":"mutable","name":"hasPrefix","nameLocation":"15505:9:10","nodeType":"VariableDeclaration","scope":2957,"src":"15500:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2887,"name":"bool","nodeType":"ElementaryTypeName","src":"15500:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2911,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2889,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"15518:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2890,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"15524:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15532:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15524:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15518:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":2894,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15517:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":2900,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"15574:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15568:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2898,"name":"bytes","nodeType":"ElementaryTypeName","src":"15568:5:10","typeDescriptions":{}}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15568:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2902,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"15582:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2897,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"15545:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15545:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15538:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2895,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15538:6:10","typeDescriptions":{}}},"id":2904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15538:51:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":2907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15600:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":2906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15593:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":2905,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15593:6:10","typeDescriptions":{}}},"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15593:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15538:67:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15517:88:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15500:105:10"},{"assignments":[2913],"declarations":[{"constant":false,"id":2913,"mutability":"mutable","name":"expectedLength","nameLocation":"15694:14:10","nodeType":"VariableDeclaration","scope":2957,"src":"15686:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"15686:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2921,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15711:2:10","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":2915,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2888,"src":"15716:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15726:6:10","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"15716:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":2917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15716:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":2918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15737:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15716:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15711:27:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15686:52:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2922,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"15803:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2923,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"15809:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2925,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"15818:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15803:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2955,"nodeType":"Block","src":"16083:51:10","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":2948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16105:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16120:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16112:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2949,"name":"address","nodeType":"ElementaryTypeName","src":"16112:7:10","typeDescriptions":{}}},"id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16112:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16104:19:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2867,"id":2954,"nodeType":"Return","src":"16097:26:10"}]},"id":2956,"nodeType":"IfStatement","src":"15799:335:10","trueBody":{"id":2947,"nodeType":"Block","src":"15834:243:10","statements":[{"assignments":[2928,2930],"declarations":[{"constant":false,"id":2928,"mutability":"mutable","name":"s","nameLocation":"15955:1:10","nodeType":"VariableDeclaration","scope":2947,"src":"15950:6:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2927,"name":"bool","nodeType":"ElementaryTypeName","src":"15950:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2930,"mutability":"mutable","name":"v","nameLocation":"15966:1:10","nodeType":"VariableDeclaration","scope":2947,"src":"15958:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2929,"name":"uint256","nodeType":"ElementaryTypeName","src":"15958:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2936,"initialValue":{"arguments":[{"id":2932,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2857,"src":"16003:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2933,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"16010:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2934,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2861,"src":"16017:3:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2931,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2783,"src":"15971:31:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":2935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15971:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15949:72:10"},{"expression":{"components":[{"id":2937,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"16043:1:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":2942,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"16062:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16054:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2940,"name":"uint160","nodeType":"ElementaryTypeName","src":"16054:7:10","typeDescriptions":{}}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2939,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16046:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2938,"name":"address","nodeType":"ElementaryTypeName","src":"16046:7:10","typeDescriptions":{}}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16046:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2945,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16042:24:10","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":2867,"id":2946,"nodeType":"Return","src":"16035:31:10"}]}}]},"documentation":{"id":2855,"nodeType":"StructuredDocumentation","src":"15020:226:10","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":2958,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15260:15:10","nodeType":"FunctionDefinition","parameters":{"id":2862,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2857,"mutability":"mutable","name":"input","nameLocation":"15299:5:10","nodeType":"VariableDeclaration","scope":2958,"src":"15285:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2856,"name":"string","nodeType":"ElementaryTypeName","src":"15285:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2859,"mutability":"mutable","name":"begin","nameLocation":"15322:5:10","nodeType":"VariableDeclaration","scope":2958,"src":"15314:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2861,"mutability":"mutable","name":"end","nameLocation":"15345:3:10","nodeType":"VariableDeclaration","scope":2958,"src":"15337:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2860,"name":"uint256","nodeType":"ElementaryTypeName","src":"15337:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15275:79:10"},"returnParameters":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2864,"mutability":"mutable","name":"success","nameLocation":"15383:7:10","nodeType":"VariableDeclaration","scope":2958,"src":"15378:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2863,"name":"bool","nodeType":"ElementaryTypeName","src":"15378:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2866,"mutability":"mutable","name":"value","nameLocation":"15400:5:10","nodeType":"VariableDeclaration","scope":2958,"src":"15392:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2865,"name":"address","nodeType":"ElementaryTypeName","src":"15392:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15377:29:10"},"scope":3197,"src":"15251:889:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3017,"nodeType":"Block","src":"16209:461:10","statements":[{"assignments":[2966],"declarations":[{"constant":false,"id":2966,"mutability":"mutable","name":"value","nameLocation":"16225:5:10","nodeType":"VariableDeclaration","scope":3017,"src":"16219:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2965,"name":"uint8","nodeType":"ElementaryTypeName","src":"16219:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2971,"initialValue":{"arguments":[{"id":2969,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"16239:3:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2968,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16233:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2967,"name":"uint8","nodeType":"ElementaryTypeName","src":"16233:5:10","typeDescriptions":{}}},"id":2970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16233:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16219:24:10"},{"id":3014,"nodeType":"UncheckedBlock","src":"16403:238:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"16431:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":2973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16439:2:10","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16431:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"16445:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":2976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16453:2:10","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16445:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16431:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2983,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"16491:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16499:2:10","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16491:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"16505:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16513:3:10","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16505:11:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16491:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2994,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"16552:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":2995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16560:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16552:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2997,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"16566:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":2998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16574:2:10","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16566:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16552:24:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":3007,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16620:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3006,"name":"uint8","nodeType":"ElementaryTypeName","src":"16620:5:10","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":3005,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16615:4:10","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16615:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16627:3:10","memberName":"max","nodeType":"MemberAccess","src":"16615:15:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2964,"id":3010,"nodeType":"Return","src":"16608:22:10"},"id":3011,"nodeType":"IfStatement","src":"16548:82:10","trueBody":{"expression":{"id":3003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"16578:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":3002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16587:2:10","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16578:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3004,"nodeType":"ExpressionStatement","src":"16578:11:10"}},"id":3012,"nodeType":"IfStatement","src":"16487:143:10","trueBody":{"expression":{"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2990,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"16518:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":2991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16527:2:10","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16518:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2993,"nodeType":"ExpressionStatement","src":"16518:11:10"}},"id":3013,"nodeType":"IfStatement","src":"16427:203:10","trueBody":{"expression":{"id":2981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2979,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"16457:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":2980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16466:2:10","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16457:11:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":2982,"nodeType":"ExpressionStatement","src":"16457:11:10"}}]},{"expression":{"id":3015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"16658:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":2964,"id":3016,"nodeType":"Return","src":"16651:12:10"}]},"id":3018,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16155:12:10","nodeType":"FunctionDefinition","parameters":{"id":2961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2960,"mutability":"mutable","name":"chr","nameLocation":"16175:3:10","nodeType":"VariableDeclaration","scope":3018,"src":"16168:10:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":2959,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16168:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16167:12:10"},"returnParameters":{"id":2964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2963,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3018,"src":"16202:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2962,"name":"uint8","nodeType":"ElementaryTypeName","src":"16202:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16201:7:10"},"scope":3197,"src":"16146:524:10","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3183,"nodeType":"Block","src":"17336:1331:10","statements":[{"assignments":[3027],"declarations":[{"constant":false,"id":3027,"mutability":"mutable","name":"buffer","nameLocation":"17359:6:10","nodeType":"VariableDeclaration","scope":3183,"src":"17346:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3026,"name":"bytes","nodeType":"ElementaryTypeName","src":"17346:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3032,"initialValue":{"arguments":[{"id":3030,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"17374:5:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17368:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3028,"name":"bytes","nodeType":"ElementaryTypeName","src":"17368:5:10","typeDescriptions":{}}},"id":3031,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17368:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17346:34:10"},{"assignments":[3034],"declarations":[{"constant":false,"id":3034,"mutability":"mutable","name":"output","nameLocation":"17403:6:10","nodeType":"VariableDeclaration","scope":3183,"src":"17390:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3033,"name":"bytes","nodeType":"ElementaryTypeName","src":"17390:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3042,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17422:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":3038,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"17426:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17433:6:10","memberName":"length","nodeType":"MemberAccess","src":"17426:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17422:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17412:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3035,"name":"bytes","nodeType":"ElementaryTypeName","src":"17416:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17412:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17390:50:10"},{"assignments":[3044],"declarations":[{"constant":false,"id":3044,"mutability":"mutable","name":"outputLength","nameLocation":"17481:12:10","nodeType":"VariableDeclaration","scope":3183,"src":"17473:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3043,"name":"uint256","nodeType":"ElementaryTypeName","src":"17473:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3046,"initialValue":{"hexValue":"30","id":3045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17496:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17473:24:10"},{"body":{"id":3175,"nodeType":"Block","src":"17548:854:10","statements":[{"assignments":[3058],"declarations":[{"constant":false,"id":3058,"mutability":"mutable","name":"char","nameLocation":"17569:4:10","nodeType":"VariableDeclaration","scope":3175,"src":"17562:11:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3057,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17562:6:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":3066,"initialValue":{"arguments":[{"arguments":[{"id":3062,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"17606:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3063,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"17614:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3061,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"17583:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17583:33:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17576:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":3059,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17576:6:10","typeDescriptions":{}}},"id":3065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17576:41:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17562:55:10"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3067,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1848,"src":"17637:20:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17661:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":3071,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"17672:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":3070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17666:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":3069,"name":"uint8","nodeType":"ElementaryTypeName","src":"17666:5:10","typeDescriptions":{}}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17666:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17661:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3074,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17660:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17637:41:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17636:43:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17683:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17636:48:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":3079,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17635:50:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3173,"nodeType":"Block","src":"18330:62:10","statements":[{"expression":{"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3166,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"18348:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3169,"indexExpression":{"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18355:14:10","subExpression":{"id":3167,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"18355:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18348:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3170,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"18373:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18348:29:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3172,"nodeType":"ExpressionStatement","src":"18348:29:10"}]},"id":3174,"nodeType":"IfStatement","src":"17631:761:10","trueBody":{"id":3165,"nodeType":"Block","src":"17687:637:10","statements":[{"expression":{"id":3085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3080,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"17705:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3083,"indexExpression":{"id":3082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17712:14:10","subExpression":{"id":3081,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"17712:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17705:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17730:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17705:29:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3086,"nodeType":"ExpressionStatement","src":"17705:29:10"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3087,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"17756:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":3088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17764:4:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17756:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3097,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"17825:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":3098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17833:4:10","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17825:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3107,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"17894:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17902:4:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17894:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3117,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"17963:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":3118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17971:4:10","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17963:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3127,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"18032:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":3128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18040:4:10","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18032:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3137,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"18101:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":3138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18109:4:10","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18101:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3147,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"18171:4:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":3148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18179:4:10","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18171:12:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3158,"nodeType":"IfStatement","src":"18167:143:10","trueBody":{"id":3157,"nodeType":"Block","src":"18185:125:10","statements":[{"expression":{"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3150,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"18263:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3153,"indexExpression":{"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18270:14:10","subExpression":{"id":3151,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"18270:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18263:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":3154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18288:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18263:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3156,"nodeType":"ExpressionStatement","src":"18263:28:10"}]}},"id":3159,"nodeType":"IfStatement","src":"18097:213:10","trueBody":{"expression":{"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3140,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"18115:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3143,"indexExpression":{"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18122:14:10","subExpression":{"id":3141,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"18122:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18115:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18140:4:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18115:29:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3146,"nodeType":"ExpressionStatement","src":"18115:29:10"}},"id":3160,"nodeType":"IfStatement","src":"18028:282:10","trueBody":{"expression":{"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3130,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"18046:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3133,"indexExpression":{"id":3132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18053:14:10","subExpression":{"id":3131,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"18053:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18046:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":3134,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18071:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18046:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3136,"nodeType":"ExpressionStatement","src":"18046:28:10"}},"id":3161,"nodeType":"IfStatement","src":"17959:351:10","trueBody":{"expression":{"id":3125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3120,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"17977:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3123,"indexExpression":{"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17984:14:10","subExpression":{"id":3121,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"17984:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17977:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":3124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18002:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17977:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3126,"nodeType":"ExpressionStatement","src":"17977:28:10"}},"id":3162,"nodeType":"IfStatement","src":"17890:420:10","trueBody":{"expression":{"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3110,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"17908:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3113,"indexExpression":{"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17915:14:10","subExpression":{"id":3111,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"17915:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17908:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":3114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17933:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17908:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3116,"nodeType":"ExpressionStatement","src":"17908:28:10"}},"id":3163,"nodeType":"IfStatement","src":"17821:489:10","trueBody":{"expression":{"id":3105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3100,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"17839:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3103,"indexExpression":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17846:14:10","subExpression":{"id":3101,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"17846:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17839:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":3104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17864:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17839:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3106,"nodeType":"ExpressionStatement","src":"17839:28:10"}},"id":3164,"nodeType":"IfStatement","src":"17752:558:10","trueBody":{"expression":{"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3090,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"17770:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3093,"indexExpression":{"id":3092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17777:14:10","subExpression":{"id":3091,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"17777:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17770:22:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":3094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17795:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17770:28:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":3096,"nodeType":"ExpressionStatement","src":"17770:28:10"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3050,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"17524:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3051,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"17528:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17535:6:10","memberName":"length","nodeType":"MemberAccess","src":"17528:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17524:17:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3176,"initializationExpression":{"assignments":[3048],"declarations":[{"constant":false,"id":3048,"mutability":"mutable","name":"i","nameLocation":"17521:1:10","nodeType":"VariableDeclaration","scope":3176,"src":"17513:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3047,"name":"uint256","nodeType":"ElementaryTypeName","src":"17513:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3049,"nodeType":"VariableDeclarationStatement","src":"17513:9:10"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17543:3:10","subExpression":{"id":3054,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"17545:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3056,"nodeType":"ExpressionStatement","src":"17543:3:10"},"nodeType":"ForStatement","src":"17508:894:10"},{"AST":{"nativeSrc":"18500:129:10","nodeType":"YulBlock","src":"18500:129:10","statements":[{"expression":{"arguments":[{"name":"output","nativeSrc":"18521:6:10","nodeType":"YulIdentifier","src":"18521:6:10"},{"name":"outputLength","nativeSrc":"18529:12:10","nodeType":"YulIdentifier","src":"18529:12:10"}],"functionName":{"name":"mstore","nativeSrc":"18514:6:10","nodeType":"YulIdentifier","src":"18514:6:10"},"nativeSrc":"18514:28:10","nodeType":"YulFunctionCall","src":"18514:28:10"},"nativeSrc":"18514:28:10","nodeType":"YulExpressionStatement","src":"18514:28:10"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"18562:4:10","nodeType":"YulLiteral","src":"18562:4:10","type":"","value":"0x40"},{"arguments":[{"name":"output","nativeSrc":"18572:6:10","nodeType":"YulIdentifier","src":"18572:6:10"},{"arguments":[{"kind":"number","nativeSrc":"18584:1:10","nodeType":"YulLiteral","src":"18584:1:10","type":"","value":"5"},{"arguments":[{"kind":"number","nativeSrc":"18591:1:10","nodeType":"YulLiteral","src":"18591:1:10","type":"","value":"5"},{"arguments":[{"name":"outputLength","nativeSrc":"18598:12:10","nodeType":"YulIdentifier","src":"18598:12:10"},{"kind":"number","nativeSrc":"18612:2:10","nodeType":"YulLiteral","src":"18612:2:10","type":"","value":"63"}],"functionName":{"name":"add","nativeSrc":"18594:3:10","nodeType":"YulIdentifier","src":"18594:3:10"},"nativeSrc":"18594:21:10","nodeType":"YulFunctionCall","src":"18594:21:10"}],"functionName":{"name":"shr","nativeSrc":"18587:3:10","nodeType":"YulIdentifier","src":"18587:3:10"},"nativeSrc":"18587:29:10","nodeType":"YulFunctionCall","src":"18587:29:10"}],"functionName":{"name":"shl","nativeSrc":"18580:3:10","nodeType":"YulIdentifier","src":"18580:3:10"},"nativeSrc":"18580:37:10","nodeType":"YulFunctionCall","src":"18580:37:10"}],"functionName":{"name":"add","nativeSrc":"18568:3:10","nodeType":"YulIdentifier","src":"18568:3:10"},"nativeSrc":"18568:50:10","nodeType":"YulFunctionCall","src":"18568:50:10"}],"functionName":{"name":"mstore","nativeSrc":"18555:6:10","nodeType":"YulIdentifier","src":"18555:6:10"},"nativeSrc":"18555:64:10","nodeType":"YulFunctionCall","src":"18555:64:10"},"nativeSrc":"18555:64:10","nodeType":"YulExpressionStatement","src":"18555:64:10"}]},"evmVersion":"paris","externalReferences":[{"declaration":3034,"isOffset":false,"isSlot":false,"src":"18521:6:10","valueSize":1},{"declaration":3034,"isOffset":false,"isSlot":false,"src":"18572:6:10","valueSize":1},{"declaration":3044,"isOffset":false,"isSlot":false,"src":"18529:12:10","valueSize":1},{"declaration":3044,"isOffset":false,"isSlot":false,"src":"18598:12:10","valueSize":1}],"flags":["memory-safe"],"id":3177,"nodeType":"InlineAssembly","src":"18475:154:10"},{"expression":{"arguments":[{"id":3180,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"18653:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18646:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3178,"name":"string","nodeType":"ElementaryTypeName","src":"18646:6:10","typeDescriptions":{}}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18646:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3025,"id":3182,"nodeType":"Return","src":"18639:21:10"}]},"documentation":{"id":3019,"nodeType":"StructuredDocumentation","src":"16676:576:10","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":3184,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17266:10:10","nodeType":"FunctionDefinition","parameters":{"id":3022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3021,"mutability":"mutable","name":"input","nameLocation":"17291:5:10","nodeType":"VariableDeclaration","scope":3184,"src":"17277:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3020,"name":"string","nodeType":"ElementaryTypeName","src":"17277:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17276:21:10"},"returnParameters":{"id":3025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3184,"src":"17321:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3023,"name":"string","nodeType":"ElementaryTypeName","src":"17321:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17320:15:10"},"scope":3197,"src":"17257:1410:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3195,"nodeType":"Block","src":"19052:225:10","statements":[{"AST":{"nativeSrc":"19201:70:10","nodeType":"YulBlock","src":"19201:70:10","statements":[{"nativeSrc":"19215:46:10","nodeType":"YulAssignment","src":"19215:46:10","value":{"arguments":[{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"19238:6:10","nodeType":"YulIdentifier","src":"19238:6:10"},{"kind":"number","nativeSrc":"19246:4:10","nodeType":"YulLiteral","src":"19246:4:10","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19234:3:10","nodeType":"YulIdentifier","src":"19234:3:10"},"nativeSrc":"19234:17:10","nodeType":"YulFunctionCall","src":"19234:17:10"},{"name":"offset","nativeSrc":"19253:6:10","nodeType":"YulIdentifier","src":"19253:6:10"}],"functionName":{"name":"add","nativeSrc":"19230:3:10","nodeType":"YulIdentifier","src":"19230:3:10"},"nativeSrc":"19230:30:10","nodeType":"YulFunctionCall","src":"19230:30:10"}],"functionName":{"name":"mload","nativeSrc":"19224:5:10","nodeType":"YulIdentifier","src":"19224:5:10"},"nativeSrc":"19224:37:10","nodeType":"YulFunctionCall","src":"19224:37:10"},"variableNames":[{"name":"value","nativeSrc":"19215:5:10","nodeType":"YulIdentifier","src":"19215:5:10"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3187,"isOffset":false,"isSlot":false,"src":"19238:6:10","valueSize":1},{"declaration":3189,"isOffset":false,"isSlot":false,"src":"19253:6:10","valueSize":1},{"declaration":3192,"isOffset":false,"isSlot":false,"src":"19215:5:10","valueSize":1}],"flags":["memory-safe"],"id":3194,"nodeType":"InlineAssembly","src":"19176:95:10"}]},"documentation":{"id":3185,"nodeType":"StructuredDocumentation","src":"18673:268:10","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":3196,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18955:22:10","nodeType":"FunctionDefinition","parameters":{"id":3190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3187,"mutability":"mutable","name":"buffer","nameLocation":"18991:6:10","nodeType":"VariableDeclaration","scope":3196,"src":"18978:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3186,"name":"bytes","nodeType":"ElementaryTypeName","src":"18978:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3189,"mutability":"mutable","name":"offset","nameLocation":"19007:6:10","nodeType":"VariableDeclaration","scope":3196,"src":"18999:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3188,"name":"uint256","nodeType":"ElementaryTypeName","src":"18999:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18977:37:10"},"returnParameters":{"id":3193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"value","nameLocation":"19045:5:10","nodeType":"VariableDeclaration","scope":3196,"src":"19037:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3191,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19037:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19036:15:10"},"scope":3197,"src":"18946:331:10","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":3198,"src":"297:18982:10","usedErrors":[1855,1858,1861],"usedEvents":[]}],"src":"101:19179:10"},"id":10},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[3221],"IERC165":[3233]},"id":3222,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3199,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":3201,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3222,"sourceUnit":3234,"src":"140:38:11","symbolAliases":[{"foreign":{"id":3200,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"148:7:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":3203,"name":"IERC165","nameLocations":["688:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":3233,"src":"688:7:11"},"id":3204,"nodeType":"InheritanceSpecifier","src":"688:7:11"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":3202,"nodeType":"StructuredDocumentation","src":"180:479:11","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":3221,"linearizedBaseContracts":[3221,3233],"name":"ERC165","nameLocation":"678:6:11","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[3232],"body":{"id":3219,"nodeType":"Block","src":"812:64:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3212,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"829:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":3214,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3233,"src":"849:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$3233_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$3233_$","typeString":"type(contract IERC165)"}],"id":3213,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"844:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"844:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$3233","typeString":"type(contract IERC165)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"858:11:11","memberName":"interfaceId","nodeType":"MemberAccess","src":"844:25:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"829:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3211,"id":3218,"nodeType":"Return","src":"822:47:11"}]},"documentation":{"id":3205,"nodeType":"StructuredDocumentation","src":"702:23:11","text":"@inheritdoc IERC165"},"functionSelector":"01ffc9a7","id":3220,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"739:17:11","nodeType":"FunctionDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3207,"mutability":"mutable","name":"interfaceId","nameLocation":"764:11:11","nodeType":"VariableDeclaration","scope":3220,"src":"757:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3206,"name":"bytes4","nodeType":"ElementaryTypeName","src":"757:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"756:20:11"},"returnParameters":{"id":3211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3220,"src":"806:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3209,"name":"bool","nodeType":"ElementaryTypeName","src":"806:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"805:6:11"},"scope":3221,"src":"730:146:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":3222,"src":"660:218:11","usedErrors":[],"usedEvents":[]}],"src":"114:765:11"},"id":11},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[3233]},"id":3234,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3223,"literals":["solidity",">=","0.4",".16"],"nodeType":"PragmaDirective","src":"115:25:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":3224,"nodeType":"StructuredDocumentation","src":"142:280:12","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":3233,"linearizedBaseContracts":[3233],"name":"IERC165","nameLocation":"433:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":3225,"nodeType":"StructuredDocumentation","src":"447:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":3232,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"801:17:12","nodeType":"FunctionDefinition","parameters":{"id":3228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3227,"mutability":"mutable","name":"interfaceId","nameLocation":"826:11:12","nodeType":"VariableDeclaration","scope":3232,"src":"819:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":3226,"name":"bytes4","nodeType":"ElementaryTypeName","src":"819:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"818:20:12"},"returnParameters":{"id":3231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3232,"src":"862:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3229,"name":"bool","nodeType":"ElementaryTypeName","src":"862:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"861:6:12"},"scope":3233,"src":"792:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":3234,"src":"423:447:12","usedErrors":[],"usedEvents":[]}],"src":"115:756:12"},"id":12},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4854],"Panic":[1795],"SafeCast":[6619]},"id":4855,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3235,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3237,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4855,"sourceUnit":1796,"src":"129:35:13","symbolAliases":[{"foreign":{"id":3236,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"137:5:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3239,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4855,"sourceUnit":6620,"src":"165:40:13","symbolAliases":[{"foreign":{"id":3238,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"173:8:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3240,"nodeType":"StructuredDocumentation","src":"207:73:13","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4854,"linearizedBaseContracts":[4854],"name":"Math","nameLocation":"289:4:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3245,"members":[{"id":3241,"name":"Floor","nameLocation":"324:5:13","nodeType":"EnumValue","src":"324:5:13"},{"id":3242,"name":"Ceil","nameLocation":"367:4:13","nodeType":"EnumValue","src":"367:4:13"},{"id":3243,"name":"Trunc","nameLocation":"409:5:13","nodeType":"EnumValue","src":"409:5:13"},{"id":3244,"name":"Expand","nameLocation":"439:6:13","nodeType":"EnumValue","src":"439:6:13"}],"name":"Rounding","nameLocation":"305:8:13","nodeType":"EnumDefinition","src":"300:169:13"},{"body":{"id":3258,"nodeType":"Block","src":"731:112:13","statements":[{"AST":{"nativeSrc":"766:71:13","nodeType":"YulBlock","src":"766:71:13","statements":[{"nativeSrc":"780:16:13","nodeType":"YulAssignment","src":"780:16:13","value":{"arguments":[{"name":"a","nativeSrc":"791:1:13","nodeType":"YulIdentifier","src":"791:1:13"},{"name":"b","nativeSrc":"794:1:13","nodeType":"YulIdentifier","src":"794:1:13"}],"functionName":{"name":"add","nativeSrc":"787:3:13","nodeType":"YulIdentifier","src":"787:3:13"},"nativeSrc":"787:9:13","nodeType":"YulFunctionCall","src":"787:9:13"},"variableNames":[{"name":"low","nativeSrc":"780:3:13","nodeType":"YulIdentifier","src":"780:3:13"}]},{"nativeSrc":"809:18:13","nodeType":"YulAssignment","src":"809:18:13","value":{"arguments":[{"name":"low","nativeSrc":"820:3:13","nodeType":"YulIdentifier","src":"820:3:13"},{"name":"a","nativeSrc":"825:1:13","nodeType":"YulIdentifier","src":"825:1:13"}],"functionName":{"name":"lt","nativeSrc":"817:2:13","nodeType":"YulIdentifier","src":"817:2:13"},"nativeSrc":"817:10:13","nodeType":"YulFunctionCall","src":"817:10:13"},"variableNames":[{"name":"high","nativeSrc":"809:4:13","nodeType":"YulIdentifier","src":"809:4:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3248,"isOffset":false,"isSlot":false,"src":"791:1:13","valueSize":1},{"declaration":3248,"isOffset":false,"isSlot":false,"src":"825:1:13","valueSize":1},{"declaration":3250,"isOffset":false,"isSlot":false,"src":"794:1:13","valueSize":1},{"declaration":3253,"isOffset":false,"isSlot":false,"src":"809:4:13","valueSize":1},{"declaration":3255,"isOffset":false,"isSlot":false,"src":"780:3:13","valueSize":1},{"declaration":3255,"isOffset":false,"isSlot":false,"src":"820:3:13","valueSize":1}],"flags":["memory-safe"],"id":3257,"nodeType":"InlineAssembly","src":"741:96:13"}]},"documentation":{"id":3246,"nodeType":"StructuredDocumentation","src":"475:163:13","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":3259,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:13","nodeType":"FunctionDefinition","parameters":{"id":3251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3248,"mutability":"mutable","name":"a","nameLocation":"667:1:13","nodeType":"VariableDeclaration","scope":3259,"src":"659:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3247,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3250,"mutability":"mutable","name":"b","nameLocation":"678:1:13","nodeType":"VariableDeclaration","scope":3259,"src":"670:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3249,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:13"},"returnParameters":{"id":3256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3253,"mutability":"mutable","name":"high","nameLocation":"712:4:13","nodeType":"VariableDeclaration","scope":3259,"src":"704:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3252,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3255,"mutability":"mutable","name":"low","nameLocation":"726:3:13","nodeType":"VariableDeclaration","scope":3259,"src":"718:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3254,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:13"},"scope":4854,"src":"643:200:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3272,"nodeType":"Block","src":"1115:462:13","statements":[{"AST":{"nativeSrc":"1437:134:13","nodeType":"YulBlock","src":"1437:134:13","statements":[{"nativeSrc":"1451:30:13","nodeType":"YulVariableDeclaration","src":"1451:30:13","value":{"arguments":[{"name":"a","nativeSrc":"1468:1:13","nodeType":"YulIdentifier","src":"1468:1:13"},{"name":"b","nativeSrc":"1471:1:13","nodeType":"YulIdentifier","src":"1471:1:13"},{"arguments":[{"kind":"number","nativeSrc":"1478:1:13","nodeType":"YulLiteral","src":"1478:1:13","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"1474:3:13","nodeType":"YulIdentifier","src":"1474:3:13"},"nativeSrc":"1474:6:13","nodeType":"YulFunctionCall","src":"1474:6:13"}],"functionName":{"name":"mulmod","nativeSrc":"1461:6:13","nodeType":"YulIdentifier","src":"1461:6:13"},"nativeSrc":"1461:20:13","nodeType":"YulFunctionCall","src":"1461:20:13"},"variables":[{"name":"mm","nativeSrc":"1455:2:13","nodeType":"YulTypedName","src":"1455:2:13","type":""}]},{"nativeSrc":"1494:16:13","nodeType":"YulAssignment","src":"1494:16:13","value":{"arguments":[{"name":"a","nativeSrc":"1505:1:13","nodeType":"YulIdentifier","src":"1505:1:13"},{"name":"b","nativeSrc":"1508:1:13","nodeType":"YulIdentifier","src":"1508:1:13"}],"functionName":{"name":"mul","nativeSrc":"1501:3:13","nodeType":"YulIdentifier","src":"1501:3:13"},"nativeSrc":"1501:9:13","nodeType":"YulFunctionCall","src":"1501:9:13"},"variableNames":[{"name":"low","nativeSrc":"1494:3:13","nodeType":"YulIdentifier","src":"1494:3:13"}]},{"nativeSrc":"1523:38:13","nodeType":"YulAssignment","src":"1523:38:13","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"1539:2:13","nodeType":"YulIdentifier","src":"1539:2:13"},{"name":"low","nativeSrc":"1543:3:13","nodeType":"YulIdentifier","src":"1543:3:13"}],"functionName":{"name":"sub","nativeSrc":"1535:3:13","nodeType":"YulIdentifier","src":"1535:3:13"},"nativeSrc":"1535:12:13","nodeType":"YulFunctionCall","src":"1535:12:13"},{"arguments":[{"name":"mm","nativeSrc":"1552:2:13","nodeType":"YulIdentifier","src":"1552:2:13"},{"name":"low","nativeSrc":"1556:3:13","nodeType":"YulIdentifier","src":"1556:3:13"}],"functionName":{"name":"lt","nativeSrc":"1549:2:13","nodeType":"YulIdentifier","src":"1549:2:13"},"nativeSrc":"1549:11:13","nodeType":"YulFunctionCall","src":"1549:11:13"}],"functionName":{"name":"sub","nativeSrc":"1531:3:13","nodeType":"YulIdentifier","src":"1531:3:13"},"nativeSrc":"1531:30:13","nodeType":"YulFunctionCall","src":"1531:30:13"},"variableNames":[{"name":"high","nativeSrc":"1523:4:13","nodeType":"YulIdentifier","src":"1523:4:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3262,"isOffset":false,"isSlot":false,"src":"1468:1:13","valueSize":1},{"declaration":3262,"isOffset":false,"isSlot":false,"src":"1505:1:13","valueSize":1},{"declaration":3264,"isOffset":false,"isSlot":false,"src":"1471:1:13","valueSize":1},{"declaration":3264,"isOffset":false,"isSlot":false,"src":"1508:1:13","valueSize":1},{"declaration":3267,"isOffset":false,"isSlot":false,"src":"1523:4:13","valueSize":1},{"declaration":3269,"isOffset":false,"isSlot":false,"src":"1494:3:13","valueSize":1},{"declaration":3269,"isOffset":false,"isSlot":false,"src":"1543:3:13","valueSize":1},{"declaration":3269,"isOffset":false,"isSlot":false,"src":"1556:3:13","valueSize":1}],"flags":["memory-safe"],"id":3271,"nodeType":"InlineAssembly","src":"1412:159:13"}]},"documentation":{"id":3260,"nodeType":"StructuredDocumentation","src":"849:173:13","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":3273,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:13","nodeType":"FunctionDefinition","parameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3262,"mutability":"mutable","name":"a","nameLocation":"1051:1:13","nodeType":"VariableDeclaration","scope":3273,"src":"1043:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3261,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3264,"mutability":"mutable","name":"b","nameLocation":"1062:1:13","nodeType":"VariableDeclaration","scope":3273,"src":"1054:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3263,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:13"},"returnParameters":{"id":3270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"high","nameLocation":"1096:4:13","nodeType":"VariableDeclaration","scope":3273,"src":"1088:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3269,"mutability":"mutable","name":"low","nameLocation":"1110:3:13","nodeType":"VariableDeclaration","scope":3273,"src":"1102:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:13"},"scope":4854,"src":"1027:550:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3307,"nodeType":"Block","src":"1784:149:13","statements":[{"id":3306,"nodeType":"UncheckedBlock","src":"1794:133:13","statements":[{"assignments":[3286],"declarations":[{"constant":false,"id":3286,"mutability":"mutable","name":"c","nameLocation":"1826:1:13","nodeType":"VariableDeclaration","scope":3306,"src":"1818:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3290,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3287,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"1830:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3288,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3278,"src":"1834:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:13"},{"expression":{"id":3295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3291,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"1849:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3292,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"1859:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3293,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"1864:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3296,"nodeType":"ExpressionStatement","src":"1849:16:13"},{"expression":{"id":3304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3297,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"1879:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3298,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"1888:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3301,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"1908:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3299,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"1892:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":3300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"1892:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3302,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3305,"nodeType":"ExpressionStatement","src":"1879:37:13"}]}]},"documentation":{"id":3274,"nodeType":"StructuredDocumentation","src":"1583:105:13","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":3308,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:13","nodeType":"FunctionDefinition","parameters":{"id":3279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3276,"mutability":"mutable","name":"a","nameLocation":"1717:1:13","nodeType":"VariableDeclaration","scope":3308,"src":"1709:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3278,"mutability":"mutable","name":"b","nameLocation":"1728:1:13","nodeType":"VariableDeclaration","scope":3308,"src":"1720:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3277,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:13"},"returnParameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"success","nameLocation":"1759:7:13","nodeType":"VariableDeclaration","scope":3308,"src":"1754:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3280,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3283,"mutability":"mutable","name":"result","nameLocation":"1776:6:13","nodeType":"VariableDeclaration","scope":3308,"src":"1768:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:13"},"scope":4854,"src":"1693:240:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3342,"nodeType":"Block","src":"2143:149:13","statements":[{"id":3341,"nodeType":"UncheckedBlock","src":"2153:133:13","statements":[{"assignments":[3321],"declarations":[{"constant":false,"id":3321,"mutability":"mutable","name":"c","nameLocation":"2185:1:13","nodeType":"VariableDeclaration","scope":3341,"src":"2177:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3320,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3325,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3322,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"2189:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3323,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3313,"src":"2193:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:13"},{"expression":{"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3326,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"2208:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3327,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"2218:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3328,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"2223:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3331,"nodeType":"ExpressionStatement","src":"2208:16:13"},{"expression":{"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3332,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3318,"src":"2238:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3333,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"2247:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3336,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3316,"src":"2267:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3334,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"2251:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":3335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"2251:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3340,"nodeType":"ExpressionStatement","src":"2238:37:13"}]}]},"documentation":{"id":3309,"nodeType":"StructuredDocumentation","src":"1939:108:13","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":3343,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:13","nodeType":"FunctionDefinition","parameters":{"id":3314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3311,"mutability":"mutable","name":"a","nameLocation":"2076:1:13","nodeType":"VariableDeclaration","scope":3343,"src":"2068:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3313,"mutability":"mutable","name":"b","nameLocation":"2087:1:13","nodeType":"VariableDeclaration","scope":3343,"src":"2079:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3312,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:13"},"returnParameters":{"id":3319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3316,"mutability":"mutable","name":"success","nameLocation":"2118:7:13","nodeType":"VariableDeclaration","scope":3343,"src":"2113:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3315,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3318,"mutability":"mutable","name":"result","nameLocation":"2135:6:13","nodeType":"VariableDeclaration","scope":3343,"src":"2127:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3317,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:13"},"scope":4854,"src":"2052:240:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3372,"nodeType":"Block","src":"2505:391:13","statements":[{"id":3371,"nodeType":"UncheckedBlock","src":"2515:375:13","statements":[{"assignments":[3356],"declarations":[{"constant":false,"id":3356,"mutability":"mutable","name":"c","nameLocation":"2547:1:13","nodeType":"VariableDeclaration","scope":3371,"src":"2539:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3355,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3360,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"2551:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3358,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3348,"src":"2555:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:13"},{"AST":{"nativeSrc":"2595:188:13","nodeType":"YulBlock","src":"2595:188:13","statements":[{"nativeSrc":"2727:42:13","nodeType":"YulAssignment","src":"2727:42:13","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nativeSrc":"2748:1:13","nodeType":"YulIdentifier","src":"2748:1:13"},{"name":"a","nativeSrc":"2751:1:13","nodeType":"YulIdentifier","src":"2751:1:13"}],"functionName":{"name":"div","nativeSrc":"2744:3:13","nodeType":"YulIdentifier","src":"2744:3:13"},"nativeSrc":"2744:9:13","nodeType":"YulFunctionCall","src":"2744:9:13"},{"name":"b","nativeSrc":"2755:1:13","nodeType":"YulIdentifier","src":"2755:1:13"}],"functionName":{"name":"eq","nativeSrc":"2741:2:13","nodeType":"YulIdentifier","src":"2741:2:13"},"nativeSrc":"2741:16:13","nodeType":"YulFunctionCall","src":"2741:16:13"},{"arguments":[{"name":"a","nativeSrc":"2766:1:13","nodeType":"YulIdentifier","src":"2766:1:13"}],"functionName":{"name":"iszero","nativeSrc":"2759:6:13","nodeType":"YulIdentifier","src":"2759:6:13"},"nativeSrc":"2759:9:13","nodeType":"YulFunctionCall","src":"2759:9:13"}],"functionName":{"name":"or","nativeSrc":"2738:2:13","nodeType":"YulIdentifier","src":"2738:2:13"},"nativeSrc":"2738:31:13","nodeType":"YulFunctionCall","src":"2738:31:13"},"variableNames":[{"name":"success","nativeSrc":"2727:7:13","nodeType":"YulIdentifier","src":"2727:7:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3346,"isOffset":false,"isSlot":false,"src":"2751:1:13","valueSize":1},{"declaration":3346,"isOffset":false,"isSlot":false,"src":"2766:1:13","valueSize":1},{"declaration":3348,"isOffset":false,"isSlot":false,"src":"2755:1:13","valueSize":1},{"declaration":3356,"isOffset":false,"isSlot":false,"src":"2748:1:13","valueSize":1},{"declaration":3351,"isOffset":false,"isSlot":false,"src":"2727:7:13","valueSize":1}],"flags":["memory-safe"],"id":3361,"nodeType":"InlineAssembly","src":"2570:213:13"},{"expression":{"id":3369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3362,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"2842:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3363,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3356,"src":"2851:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3366,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"2871:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3364,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"2855:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"2855:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3370,"nodeType":"ExpressionStatement","src":"2842:37:13"}]}]},"documentation":{"id":3344,"nodeType":"StructuredDocumentation","src":"2298:111:13","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":3373,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:13","nodeType":"FunctionDefinition","parameters":{"id":3349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3346,"mutability":"mutable","name":"a","nameLocation":"2438:1:13","nodeType":"VariableDeclaration","scope":3373,"src":"2430:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3345,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3348,"mutability":"mutable","name":"b","nameLocation":"2449:1:13","nodeType":"VariableDeclaration","scope":3373,"src":"2441:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3347,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:13"},"returnParameters":{"id":3354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"success","nameLocation":"2480:7:13","nodeType":"VariableDeclaration","scope":3373,"src":"2475:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3350,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3353,"mutability":"mutable","name":"result","nameLocation":"2497:6:13","nodeType":"VariableDeclaration","scope":3373,"src":"2489:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:13"},"scope":4854,"src":"2414:482:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3393,"nodeType":"Block","src":"3111:231:13","statements":[{"id":3392,"nodeType":"UncheckedBlock","src":"3121:215:13","statements":[{"expression":{"id":3389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3385,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"3145:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3386,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3378,"src":"3155:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3390,"nodeType":"ExpressionStatement","src":"3145:15:13"},{"AST":{"nativeSrc":"3199:127:13","nodeType":"YulBlock","src":"3199:127:13","statements":[{"nativeSrc":"3293:19:13","nodeType":"YulAssignment","src":"3293:19:13","value":{"arguments":[{"name":"a","nativeSrc":"3307:1:13","nodeType":"YulIdentifier","src":"3307:1:13"},{"name":"b","nativeSrc":"3310:1:13","nodeType":"YulIdentifier","src":"3310:1:13"}],"functionName":{"name":"div","nativeSrc":"3303:3:13","nodeType":"YulIdentifier","src":"3303:3:13"},"nativeSrc":"3303:9:13","nodeType":"YulFunctionCall","src":"3303:9:13"},"variableNames":[{"name":"result","nativeSrc":"3293:6:13","nodeType":"YulIdentifier","src":"3293:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3376,"isOffset":false,"isSlot":false,"src":"3307:1:13","valueSize":1},{"declaration":3378,"isOffset":false,"isSlot":false,"src":"3310:1:13","valueSize":1},{"declaration":3383,"isOffset":false,"isSlot":false,"src":"3293:6:13","valueSize":1}],"flags":["memory-safe"],"id":3391,"nodeType":"InlineAssembly","src":"3174:152:13"}]}]},"documentation":{"id":3374,"nodeType":"StructuredDocumentation","src":"2902:113:13","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3394,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:13","nodeType":"FunctionDefinition","parameters":{"id":3379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3376,"mutability":"mutable","name":"a","nameLocation":"3044:1:13","nodeType":"VariableDeclaration","scope":3394,"src":"3036:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3378,"mutability":"mutable","name":"b","nameLocation":"3055:1:13","nodeType":"VariableDeclaration","scope":3394,"src":"3047:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3377,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:13"},"returnParameters":{"id":3384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3381,"mutability":"mutable","name":"success","nameLocation":"3086:7:13","nodeType":"VariableDeclaration","scope":3394,"src":"3081:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3380,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3383,"mutability":"mutable","name":"result","nameLocation":"3103:6:13","nodeType":"VariableDeclaration","scope":3394,"src":"3095:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3382,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:13"},"scope":4854,"src":"3020:322:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3414,"nodeType":"Block","src":"3567:231:13","statements":[{"id":3413,"nodeType":"UncheckedBlock","src":"3577:215:13","statements":[{"expression":{"id":3410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3406,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3402,"src":"3601:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3407,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"3611:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3411,"nodeType":"ExpressionStatement","src":"3601:15:13"},{"AST":{"nativeSrc":"3655:127:13","nodeType":"YulBlock","src":"3655:127:13","statements":[{"nativeSrc":"3749:19:13","nodeType":"YulAssignment","src":"3749:19:13","value":{"arguments":[{"name":"a","nativeSrc":"3763:1:13","nodeType":"YulIdentifier","src":"3763:1:13"},{"name":"b","nativeSrc":"3766:1:13","nodeType":"YulIdentifier","src":"3766:1:13"}],"functionName":{"name":"mod","nativeSrc":"3759:3:13","nodeType":"YulIdentifier","src":"3759:3:13"},"nativeSrc":"3759:9:13","nodeType":"YulFunctionCall","src":"3759:9:13"},"variableNames":[{"name":"result","nativeSrc":"3749:6:13","nodeType":"YulIdentifier","src":"3749:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3397,"isOffset":false,"isSlot":false,"src":"3763:1:13","valueSize":1},{"declaration":3399,"isOffset":false,"isSlot":false,"src":"3766:1:13","valueSize":1},{"declaration":3404,"isOffset":false,"isSlot":false,"src":"3749:6:13","valueSize":1}],"flags":["memory-safe"],"id":3412,"nodeType":"InlineAssembly","src":"3630:152:13"}]}]},"documentation":{"id":3395,"nodeType":"StructuredDocumentation","src":"3348:123:13","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3415,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:13","nodeType":"FunctionDefinition","parameters":{"id":3400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3397,"mutability":"mutable","name":"a","nameLocation":"3500:1:13","nodeType":"VariableDeclaration","scope":3415,"src":"3492:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3396,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3399,"mutability":"mutable","name":"b","nameLocation":"3511:1:13","nodeType":"VariableDeclaration","scope":3415,"src":"3503:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3398,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:13"},"returnParameters":{"id":3405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3402,"mutability":"mutable","name":"success","nameLocation":"3542:7:13","nodeType":"VariableDeclaration","scope":3415,"src":"3537:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3401,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3404,"mutability":"mutable","name":"result","nameLocation":"3559:6:13","nodeType":"VariableDeclaration","scope":3415,"src":"3551:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3403,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:13"},"scope":4854,"src":"3476:322:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3444,"nodeType":"Block","src":"3989:122:13","statements":[{"assignments":[3426,3428],"declarations":[{"constant":false,"id":3426,"mutability":"mutable","name":"success","nameLocation":"4005:7:13","nodeType":"VariableDeclaration","scope":3444,"src":"4000:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3425,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3428,"mutability":"mutable","name":"result","nameLocation":"4022:6:13","nodeType":"VariableDeclaration","scope":3444,"src":"4014:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3427,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3433,"initialValue":{"arguments":[{"id":3430,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3418,"src":"4039:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3431,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3420,"src":"4042:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3429,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3308,"src":"4032:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:13"},{"expression":{"arguments":[{"id":3435,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"4069:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3436,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"4078:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3438,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3437,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3441,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:13","memberName":"max","nodeType":"MemberAccess","src":"4086:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3434,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"4061:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3424,"id":3443,"nodeType":"Return","src":"4054:50:13"}]},"documentation":{"id":3416,"nodeType":"StructuredDocumentation","src":"3804:103:13","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3445,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:13","nodeType":"FunctionDefinition","parameters":{"id":3421,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3418,"mutability":"mutable","name":"a","nameLocation":"3943:1:13","nodeType":"VariableDeclaration","scope":3445,"src":"3935:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3417,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3420,"mutability":"mutable","name":"b","nameLocation":"3954:1:13","nodeType":"VariableDeclaration","scope":3445,"src":"3946:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3419,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:13"},"returnParameters":{"id":3424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3423,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3445,"src":"3980:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3422,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:13"},"scope":4854,"src":"3912:199:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3464,"nodeType":"Block","src":"4294:73:13","statements":[{"assignments":[null,3456],"declarations":[null,{"constant":false,"id":3456,"mutability":"mutable","name":"result","nameLocation":"4315:6:13","nodeType":"VariableDeclaration","scope":3464,"src":"4307:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3455,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3461,"initialValue":{"arguments":[{"id":3458,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3448,"src":"4332:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3459,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3450,"src":"4335:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3457,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3343,"src":"4325:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:13"},{"expression":{"id":3462,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3456,"src":"4354:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3454,"id":3463,"nodeType":"Return","src":"4347:13:13"}]},"documentation":{"id":3446,"nodeType":"StructuredDocumentation","src":"4117:95:13","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":3465,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:13","nodeType":"FunctionDefinition","parameters":{"id":3451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3448,"mutability":"mutable","name":"a","nameLocation":"4248:1:13","nodeType":"VariableDeclaration","scope":3465,"src":"4240:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3447,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3450,"mutability":"mutable","name":"b","nameLocation":"4259:1:13","nodeType":"VariableDeclaration","scope":3465,"src":"4251:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3449,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:13"},"returnParameters":{"id":3454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3465,"src":"4285:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:13"},"scope":4854,"src":"4217:150:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3494,"nodeType":"Block","src":"4564:122:13","statements":[{"assignments":[3476,3478],"declarations":[{"constant":false,"id":3476,"mutability":"mutable","name":"success","nameLocation":"4580:7:13","nodeType":"VariableDeclaration","scope":3494,"src":"4575:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3475,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3478,"mutability":"mutable","name":"result","nameLocation":"4597:6:13","nodeType":"VariableDeclaration","scope":3494,"src":"4589:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3477,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3483,"initialValue":{"arguments":[{"id":3480,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"4614:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3481,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"4617:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3479,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"4607:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:13"},{"expression":{"arguments":[{"id":3485,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3476,"src":"4644:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3486,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"4653:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":3489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3488,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:13","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3487,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3490,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:13","memberName":"max","nodeType":"MemberAccess","src":"4661:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3484,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"4636:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3474,"id":3493,"nodeType":"Return","src":"4629:50:13"}]},"documentation":{"id":3466,"nodeType":"StructuredDocumentation","src":"4373:109:13","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":3495,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:13","nodeType":"FunctionDefinition","parameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"a","nameLocation":"4518:1:13","nodeType":"VariableDeclaration","scope":3495,"src":"4510:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3467,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3470,"mutability":"mutable","name":"b","nameLocation":"4529:1:13","nodeType":"VariableDeclaration","scope":3495,"src":"4521:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3469,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:13"},"returnParameters":{"id":3474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3495,"src":"4555:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3472,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:13"},"scope":4854,"src":"4487:199:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3521,"nodeType":"Block","src":"5158:207:13","statements":[{"id":3520,"nodeType":"UncheckedBlock","src":"5168:191:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3507,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"5306:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3508,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3500,"src":"5312:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3509,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3502,"src":"5316:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3511,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3514,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3498,"src":"5337:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3512,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"5321:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"5321:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3517,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3506,"id":3519,"nodeType":"Return","src":"5299:49:13"}]}]},"documentation":{"id":3496,"nodeType":"StructuredDocumentation","src":"4692:374:13","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3522,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:13","nodeType":"FunctionDefinition","parameters":{"id":3503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3498,"mutability":"mutable","name":"condition","nameLocation":"5093:9:13","nodeType":"VariableDeclaration","scope":3522,"src":"5088:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3497,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3500,"mutability":"mutable","name":"a","nameLocation":"5112:1:13","nodeType":"VariableDeclaration","scope":3522,"src":"5104:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3502,"mutability":"mutable","name":"b","nameLocation":"5123:1:13","nodeType":"VariableDeclaration","scope":3522,"src":"5115:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3501,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:13"},"returnParameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3522,"src":"5149:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:13"},"scope":4854,"src":"5071:294:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3540,"nodeType":"Block","src":"5502:44:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3533,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"5527:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3534,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"5531:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3536,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"5534:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3537,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3527,"src":"5537:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3532,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"5519:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3531,"id":3539,"nodeType":"Return","src":"5512:27:13"}]},"documentation":{"id":3523,"nodeType":"StructuredDocumentation","src":"5371:59:13","text":" @dev Returns the largest of two numbers."},"id":3541,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:13","nodeType":"FunctionDefinition","parameters":{"id":3528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3525,"mutability":"mutable","name":"a","nameLocation":"5456:1:13","nodeType":"VariableDeclaration","scope":3541,"src":"5448:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3524,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3527,"mutability":"mutable","name":"b","nameLocation":"5467:1:13","nodeType":"VariableDeclaration","scope":3541,"src":"5459:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3526,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:13"},"returnParameters":{"id":3531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3530,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3541,"src":"5493:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3529,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:13"},"scope":4854,"src":"5435:111:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3559,"nodeType":"Block","src":"5684:44:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3552,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"5709:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3553,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"5713:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3555,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"5716:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3556,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"5719:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3551,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"5701:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3550,"id":3558,"nodeType":"Return","src":"5694:27:13"}]},"documentation":{"id":3542,"nodeType":"StructuredDocumentation","src":"5552:60:13","text":" @dev Returns the smallest of two numbers."},"id":3560,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:13","nodeType":"FunctionDefinition","parameters":{"id":3547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3544,"mutability":"mutable","name":"a","nameLocation":"5638:1:13","nodeType":"VariableDeclaration","scope":3560,"src":"5630:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3546,"mutability":"mutable","name":"b","nameLocation":"5649:1:13","nodeType":"VariableDeclaration","scope":3560,"src":"5641:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3545,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:13"},"returnParameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3560,"src":"5675:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3548,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:13"},"scope":4854,"src":"5617:111:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3582,"nodeType":"Block","src":"5912:82:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3570,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"5967:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3571,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"5971:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3573,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3574,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3563,"src":"5977:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3575,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3565,"src":"5981:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3577,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3569,"id":3581,"nodeType":"Return","src":"5959:28:13"}]},"documentation":{"id":3561,"nodeType":"StructuredDocumentation","src":"5734:102:13","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3583,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:13","nodeType":"FunctionDefinition","parameters":{"id":3566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3563,"mutability":"mutable","name":"a","nameLocation":"5866:1:13","nodeType":"VariableDeclaration","scope":3583,"src":"5858:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3562,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3565,"mutability":"mutable","name":"b","nameLocation":"5877:1:13","nodeType":"VariableDeclaration","scope":3583,"src":"5869:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3564,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:13"},"returnParameters":{"id":3569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3583,"src":"5903:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3567,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:13"},"scope":4854,"src":"5841:153:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3623,"nodeType":"Block","src":"6286:633:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3593,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"6300:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3604,"nodeType":"IfStatement","src":"6296:150:13","trueBody":{"id":3603,"nodeType":"Block","src":"6308:138:13","statements":[{"expression":{"arguments":[{"expression":{"id":3599,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"6412:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1795_$","typeString":"type(library Panic)"}},"id":3600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1762,"src":"6412:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3596,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"6400:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1795_$","typeString":"type(library Panic)"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1794,"src":"6400:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3602,"nodeType":"ExpressionStatement","src":"6400:35:13"}]}},{"id":3622,"nodeType":"UncheckedBlock","src":"6829:84:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3607,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"6876:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3605,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"6860:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"6860:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3611,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"6887:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3614,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3615,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"6896:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3619,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3592,"id":3621,"nodeType":"Return","src":"6853:49:13"}]}]},"documentation":{"id":3584,"nodeType":"StructuredDocumentation","src":"6000:210:13","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3624,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:13","nodeType":"FunctionDefinition","parameters":{"id":3589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"a","nameLocation":"6240:1:13","nodeType":"VariableDeclaration","scope":3624,"src":"6232:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3585,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3588,"mutability":"mutable","name":"b","nameLocation":"6251:1:13","nodeType":"VariableDeclaration","scope":3624,"src":"6243:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:13"},"returnParameters":{"id":3592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3624,"src":"6277:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3590,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:13"},"scope":4854,"src":"6215:704:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3759,"nodeType":"Block","src":"7340:3585:13","statements":[{"id":3758,"nodeType":"UncheckedBlock","src":"7350:3569:13","statements":[{"assignments":[3637,3639],"declarations":[{"constant":false,"id":3637,"mutability":"mutable","name":"high","nameLocation":"7383:4:13","nodeType":"VariableDeclaration","scope":3758,"src":"7375:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3636,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3639,"mutability":"mutable","name":"low","nameLocation":"7397:3:13","nodeType":"VariableDeclaration","scope":3758,"src":"7389:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3638,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3644,"initialValue":{"arguments":[{"id":3641,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3627,"src":"7411:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3642,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"7414:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3640,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"7404:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3645,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"7498:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3653,"nodeType":"IfStatement","src":"7494:365:13","trueBody":{"id":3652,"nodeType":"Block","src":"7509:350:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3648,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"7827:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3649,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"7833:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3635,"id":3651,"nodeType":"Return","src":"7820:24:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3654,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"7969:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3655,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"7984:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3672,"nodeType":"IfStatement","src":"7965:142:13","trueBody":{"id":3671,"nodeType":"Block","src":"7990:117:13","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3661,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"8028:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3662,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3664,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"8046:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1795_$","typeString":"type(library Panic)"}},"id":3665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1762,"src":"8046:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3666,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"8070:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1795_$","typeString":"type(library Panic)"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:13","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1758,"src":"8070:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3660,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"8020:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3657,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"8008:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1795_$","typeString":"type(library Panic)"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1794,"src":"8008:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3670,"nodeType":"ExpressionStatement","src":"8008:84:13"}]}},{"assignments":[3674],"declarations":[{"constant":false,"id":3674,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:13","nodeType":"VariableDeclaration","scope":3758,"src":"8359:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3673,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3675,"nodeType":"VariableDeclarationStatement","src":"8359:17:13"},{"AST":{"nativeSrc":"8415:283:13","nodeType":"YulBlock","src":"8415:283:13","statements":[{"nativeSrc":"8484:38:13","nodeType":"YulAssignment","src":"8484:38:13","value":{"arguments":[{"name":"x","nativeSrc":"8504:1:13","nodeType":"YulIdentifier","src":"8504:1:13"},{"name":"y","nativeSrc":"8507:1:13","nodeType":"YulIdentifier","src":"8507:1:13"},{"name":"denominator","nativeSrc":"8510:11:13","nodeType":"YulIdentifier","src":"8510:11:13"}],"functionName":{"name":"mulmod","nativeSrc":"8497:6:13","nodeType":"YulIdentifier","src":"8497:6:13"},"nativeSrc":"8497:25:13","nodeType":"YulFunctionCall","src":"8497:25:13"},"variableNames":[{"name":"remainder","nativeSrc":"8484:9:13","nodeType":"YulIdentifier","src":"8484:9:13"}]},{"nativeSrc":"8604:37:13","nodeType":"YulAssignment","src":"8604:37:13","value":{"arguments":[{"name":"high","nativeSrc":"8616:4:13","nodeType":"YulIdentifier","src":"8616:4:13"},{"arguments":[{"name":"remainder","nativeSrc":"8625:9:13","nodeType":"YulIdentifier","src":"8625:9:13"},{"name":"low","nativeSrc":"8636:3:13","nodeType":"YulIdentifier","src":"8636:3:13"}],"functionName":{"name":"gt","nativeSrc":"8622:2:13","nodeType":"YulIdentifier","src":"8622:2:13"},"nativeSrc":"8622:18:13","nodeType":"YulFunctionCall","src":"8622:18:13"}],"functionName":{"name":"sub","nativeSrc":"8612:3:13","nodeType":"YulIdentifier","src":"8612:3:13"},"nativeSrc":"8612:29:13","nodeType":"YulFunctionCall","src":"8612:29:13"},"variableNames":[{"name":"high","nativeSrc":"8604:4:13","nodeType":"YulIdentifier","src":"8604:4:13"}]},{"nativeSrc":"8658:26:13","nodeType":"YulAssignment","src":"8658:26:13","value":{"arguments":[{"name":"low","nativeSrc":"8669:3:13","nodeType":"YulIdentifier","src":"8669:3:13"},{"name":"remainder","nativeSrc":"8674:9:13","nodeType":"YulIdentifier","src":"8674:9:13"}],"functionName":{"name":"sub","nativeSrc":"8665:3:13","nodeType":"YulIdentifier","src":"8665:3:13"},"nativeSrc":"8665:19:13","nodeType":"YulFunctionCall","src":"8665:19:13"},"variableNames":[{"name":"low","nativeSrc":"8658:3:13","nodeType":"YulIdentifier","src":"8658:3:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3631,"isOffset":false,"isSlot":false,"src":"8510:11:13","valueSize":1},{"declaration":3637,"isOffset":false,"isSlot":false,"src":"8604:4:13","valueSize":1},{"declaration":3637,"isOffset":false,"isSlot":false,"src":"8616:4:13","valueSize":1},{"declaration":3639,"isOffset":false,"isSlot":false,"src":"8636:3:13","valueSize":1},{"declaration":3639,"isOffset":false,"isSlot":false,"src":"8658:3:13","valueSize":1},{"declaration":3639,"isOffset":false,"isSlot":false,"src":"8669:3:13","valueSize":1},{"declaration":3674,"isOffset":false,"isSlot":false,"src":"8484:9:13","valueSize":1},{"declaration":3674,"isOffset":false,"isSlot":false,"src":"8625:9:13","valueSize":1},{"declaration":3674,"isOffset":false,"isSlot":false,"src":"8674:9:13","valueSize":1},{"declaration":3627,"isOffset":false,"isSlot":false,"src":"8504:1:13","valueSize":1},{"declaration":3629,"isOffset":false,"isSlot":false,"src":"8507:1:13","valueSize":1}],"flags":["memory-safe"],"id":3676,"nodeType":"InlineAssembly","src":"8390:308:13"},{"assignments":[3678],"declarations":[{"constant":false,"id":3678,"mutability":"mutable","name":"twos","nameLocation":"8910:4:13","nodeType":"VariableDeclaration","scope":3758,"src":"8902:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3677,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3685,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3679,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"8917:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3681,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"8936:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:13"},{"AST":{"nativeSrc":"8987:359:13","nodeType":"YulBlock","src":"8987:359:13","statements":[{"nativeSrc":"9052:37:13","nodeType":"YulAssignment","src":"9052:37:13","value":{"arguments":[{"name":"denominator","nativeSrc":"9071:11:13","nodeType":"YulIdentifier","src":"9071:11:13"},{"name":"twos","nativeSrc":"9084:4:13","nodeType":"YulIdentifier","src":"9084:4:13"}],"functionName":{"name":"div","nativeSrc":"9067:3:13","nodeType":"YulIdentifier","src":"9067:3:13"},"nativeSrc":"9067:22:13","nodeType":"YulFunctionCall","src":"9067:22:13"},"variableNames":[{"name":"denominator","nativeSrc":"9052:11:13","nodeType":"YulIdentifier","src":"9052:11:13"}]},{"nativeSrc":"9153:21:13","nodeType":"YulAssignment","src":"9153:21:13","value":{"arguments":[{"name":"low","nativeSrc":"9164:3:13","nodeType":"YulIdentifier","src":"9164:3:13"},{"name":"twos","nativeSrc":"9169:4:13","nodeType":"YulIdentifier","src":"9169:4:13"}],"functionName":{"name":"div","nativeSrc":"9160:3:13","nodeType":"YulIdentifier","src":"9160:3:13"},"nativeSrc":"9160:14:13","nodeType":"YulFunctionCall","src":"9160:14:13"},"variableNames":[{"name":"low","nativeSrc":"9153:3:13","nodeType":"YulIdentifier","src":"9153:3:13"}]},{"nativeSrc":"9293:39:13","nodeType":"YulAssignment","src":"9293:39:13","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"9313:1:13","nodeType":"YulLiteral","src":"9313:1:13","type":"","value":"0"},{"name":"twos","nativeSrc":"9316:4:13","nodeType":"YulIdentifier","src":"9316:4:13"}],"functionName":{"name":"sub","nativeSrc":"9309:3:13","nodeType":"YulIdentifier","src":"9309:3:13"},"nativeSrc":"9309:12:13","nodeType":"YulFunctionCall","src":"9309:12:13"},{"name":"twos","nativeSrc":"9323:4:13","nodeType":"YulIdentifier","src":"9323:4:13"}],"functionName":{"name":"div","nativeSrc":"9305:3:13","nodeType":"YulIdentifier","src":"9305:3:13"},"nativeSrc":"9305:23:13","nodeType":"YulFunctionCall","src":"9305:23:13"},{"kind":"number","nativeSrc":"9330:1:13","nodeType":"YulLiteral","src":"9330:1:13","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"9301:3:13","nodeType":"YulIdentifier","src":"9301:3:13"},"nativeSrc":"9301:31:13","nodeType":"YulFunctionCall","src":"9301:31:13"},"variableNames":[{"name":"twos","nativeSrc":"9293:4:13","nodeType":"YulIdentifier","src":"9293:4:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3631,"isOffset":false,"isSlot":false,"src":"9052:11:13","valueSize":1},{"declaration":3631,"isOffset":false,"isSlot":false,"src":"9071:11:13","valueSize":1},{"declaration":3639,"isOffset":false,"isSlot":false,"src":"9153:3:13","valueSize":1},{"declaration":3639,"isOffset":false,"isSlot":false,"src":"9164:3:13","valueSize":1},{"declaration":3678,"isOffset":false,"isSlot":false,"src":"9084:4:13","valueSize":1},{"declaration":3678,"isOffset":false,"isSlot":false,"src":"9169:4:13","valueSize":1},{"declaration":3678,"isOffset":false,"isSlot":false,"src":"9293:4:13","valueSize":1},{"declaration":3678,"isOffset":false,"isSlot":false,"src":"9316:4:13","valueSize":1},{"declaration":3678,"isOffset":false,"isSlot":false,"src":"9323:4:13","valueSize":1}],"flags":["memory-safe"],"id":3686,"nodeType":"InlineAssembly","src":"8962:384:13"},{"expression":{"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3687,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"9409:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3688,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3637,"src":"9416:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3689,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"9423:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3692,"nodeType":"ExpressionStatement","src":"9409:18:13"},{"assignments":[3694],"declarations":[{"constant":false,"id":3694,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:13","nodeType":"VariableDeclaration","scope":3758,"src":"9762:15:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3693,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3701,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3696,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"9785:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3698,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:13"},{"expression":{"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3702,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10018:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3704,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"10033:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3705,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10047:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3709,"nodeType":"ExpressionStatement","src":"10018:36:13"},{"expression":{"id":3716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3710,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10088:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3712,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"10103:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3713,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10117:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3717,"nodeType":"ExpressionStatement","src":"10088:36:13"},{"expression":{"id":3724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3718,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10160:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3720,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"10175:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3721,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10189:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3725,"nodeType":"ExpressionStatement","src":"10160:36:13"},{"expression":{"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3726,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10231:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3728,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"10246:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3729,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10260:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3733,"nodeType":"ExpressionStatement","src":"10231:36:13"},{"expression":{"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3734,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10304:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3736,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"10319:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3737,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10333:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3741,"nodeType":"ExpressionStatement","src":"10304:36:13"},{"expression":{"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3742,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10378:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3744,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"10393:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3745,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10407:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3749,"nodeType":"ExpressionStatement","src":"10378:36:13"},{"expression":{"id":3754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3750,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"10859:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3751,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3639,"src":"10868:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3752,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3694,"src":"10874:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3755,"nodeType":"ExpressionStatement","src":"10859:22:13"},{"expression":{"id":3756,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"10902:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3635,"id":3757,"nodeType":"Return","src":"10895:13:13"}]}]},"documentation":{"id":3625,"nodeType":"StructuredDocumentation","src":"6925:312:13","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3760,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:13","nodeType":"FunctionDefinition","parameters":{"id":3632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3627,"mutability":"mutable","name":"x","nameLocation":"7266:1:13","nodeType":"VariableDeclaration","scope":3760,"src":"7258:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3626,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3629,"mutability":"mutable","name":"y","nameLocation":"7277:1:13","nodeType":"VariableDeclaration","scope":3760,"src":"7269:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3631,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:13","nodeType":"VariableDeclaration","scope":3760,"src":"7280:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3630,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:13"},"returnParameters":{"id":3635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3634,"mutability":"mutable","name":"result","nameLocation":"7332:6:13","nodeType":"VariableDeclaration","scope":3760,"src":"7324:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3633,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:13"},"scope":4854,"src":"7242:3683:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3796,"nodeType":"Block","src":"11164:128:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3776,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"11188:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3777,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"11191:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3778,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"11194:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3775,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3760,3797],"referencedDeclaration":3760,"src":"11181:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3783,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3770,"src":"11242:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}],"id":3782,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"11225:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3245_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3786,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3763,"src":"11262:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3787,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"11265:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3788,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3767,"src":"11268:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3785,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:13","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3780,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"11209:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"11209:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3774,"id":3795,"nodeType":"Return","src":"11174:111:13"}]},"documentation":{"id":3761,"nodeType":"StructuredDocumentation","src":"10931:118:13","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3797,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:13","nodeType":"FunctionDefinition","parameters":{"id":3771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3763,"mutability":"mutable","name":"x","nameLocation":"11078:1:13","nodeType":"VariableDeclaration","scope":3797,"src":"11070:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3762,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3765,"mutability":"mutable","name":"y","nameLocation":"11089:1:13","nodeType":"VariableDeclaration","scope":3797,"src":"11081:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3764,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3767,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:13","nodeType":"VariableDeclaration","scope":3797,"src":"11092:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3766,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3770,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:13","nodeType":"VariableDeclaration","scope":3797,"src":"11113:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"},"typeName":{"id":3769,"nodeType":"UserDefinedTypeName","pathNode":{"id":3768,"name":"Rounding","nameLocations":["11113:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":3245,"src":"11113:8:13"},"referencedDeclaration":3245,"src":"11113:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:13"},"returnParameters":{"id":3774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3797,"src":"11155:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3772,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:13"},"scope":4854,"src":"11054:238:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3846,"nodeType":"Block","src":"11500:245:13","statements":[{"id":3845,"nodeType":"UncheckedBlock","src":"11510:229:13","statements":[{"assignments":[3810,3812],"declarations":[{"constant":false,"id":3810,"mutability":"mutable","name":"high","nameLocation":"11543:4:13","nodeType":"VariableDeclaration","scope":3845,"src":"11535:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3809,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3812,"mutability":"mutable","name":"low","nameLocation":"11557:3:13","nodeType":"VariableDeclaration","scope":3845,"src":"11549:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3811,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3817,"initialValue":{"arguments":[{"id":3814,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3800,"src":"11571:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3815,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"11574:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3813,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"11564:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":3816,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3818,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"11594:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3820,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"11607:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3831,"nodeType":"IfStatement","src":"11590:86:13","trueBody":{"id":3830,"nodeType":"Block","src":"11610:66:13","statements":[{"expression":{"arguments":[{"expression":{"id":3826,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"11640:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1795_$","typeString":"type(library Panic)"}},"id":3827,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:13","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1758,"src":"11640:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3823,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"11628:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1795_$","typeString":"type(library Panic)"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1794,"src":"11628:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3829,"nodeType":"ExpressionStatement","src":"11628:33:13"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3832,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3810,"src":"11697:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":3835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":3833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3834,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"11712:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":3836,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:13","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3838,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3839,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3812,"src":"11719:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":3840,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3804,"src":"11726:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3842,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3808,"id":3844,"nodeType":"Return","src":"11689:39:13"}]}]},"documentation":{"id":3798,"nodeType":"StructuredDocumentation","src":"11298:111:13","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":3847,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:13","nodeType":"FunctionDefinition","parameters":{"id":3805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3800,"mutability":"mutable","name":"x","nameLocation":"11438:1:13","nodeType":"VariableDeclaration","scope":3847,"src":"11430:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3799,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3802,"mutability":"mutable","name":"y","nameLocation":"11449:1:13","nodeType":"VariableDeclaration","scope":3847,"src":"11441:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3801,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3804,"mutability":"mutable","name":"n","nameLocation":"11458:1:13","nodeType":"VariableDeclaration","scope":3847,"src":"11452:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3803,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:13"},"returnParameters":{"id":3808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"result","nameLocation":"11492:6:13","nodeType":"VariableDeclaration","scope":3847,"src":"11484:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:13"},"scope":4854,"src":"11414:331:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3885,"nodeType":"Block","src":"11963:113:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3863,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"11987:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3864,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"11990:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3865,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"11993:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":3862,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[3847,3886],"referencedDeclaration":3847,"src":"11980:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3870,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"12031:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}],"id":3869,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"12014:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3245_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3873,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3850,"src":"12051:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3874,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"12054:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":3876,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3854,"src":"12062:1:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3872,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:13","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3867,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"11998:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":3868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"11998:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3861,"id":3884,"nodeType":"Return","src":"11973:96:13"}]},"documentation":{"id":3848,"nodeType":"StructuredDocumentation","src":"11751:109:13","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":3886,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:13","nodeType":"FunctionDefinition","parameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"x","nameLocation":"11889:1:13","nodeType":"VariableDeclaration","scope":3886,"src":"11881:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3849,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3852,"mutability":"mutable","name":"y","nameLocation":"11900:1:13","nodeType":"VariableDeclaration","scope":3886,"src":"11892:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3854,"mutability":"mutable","name":"n","nameLocation":"11909:1:13","nodeType":"VariableDeclaration","scope":3886,"src":"11903:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3853,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":3857,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:13","nodeType":"VariableDeclaration","scope":3886,"src":"11912:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"},"typeName":{"id":3856,"nodeType":"UserDefinedTypeName","pathNode":{"id":3855,"name":"Rounding","nameLocations":["11912:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":3245,"src":"11912:8:13"},"referencedDeclaration":3245,"src":"11912:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:13"},"returnParameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3886,"src":"11954:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3859,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:13"},"scope":4854,"src":"11865:211:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3982,"nodeType":"Block","src":"12710:1849:13","statements":[{"id":3981,"nodeType":"UncheckedBlock","src":"12720:1833:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3896,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"12748:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3901,"nodeType":"IfStatement","src":"12744:20:13","trueBody":{"expression":{"hexValue":"30","id":3899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3895,"id":3900,"nodeType":"Return","src":"12756:8:13"}},{"assignments":[3903],"declarations":[{"constant":false,"id":3903,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:13","nodeType":"VariableDeclaration","scope":3981,"src":"13235:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3902,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3907,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3904,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"13255:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3905,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"13259:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:13"},{"assignments":[3909],"declarations":[{"constant":false,"id":3909,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:13","nodeType":"VariableDeclaration","scope":3981,"src":"13274:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3908,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3911,"initialValue":{"id":3910,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"13288:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:13"},{"assignments":[3913],"declarations":[{"constant":false,"id":3913,"mutability":"mutable","name":"x","nameLocation":"13432:1:13","nodeType":"VariableDeclaration","scope":3981,"src":"13425:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3912,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3915,"initialValue":{"hexValue":"30","id":3914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:13"},{"assignments":[3917],"declarations":[{"constant":false,"id":3917,"mutability":"mutable","name":"y","nameLocation":"13458:1:13","nodeType":"VariableDeclaration","scope":3981,"src":"13451:8:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3916,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3919,"initialValue":{"hexValue":"31","id":3918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:13"},{"body":{"id":3956,"nodeType":"Block","src":"13501:882:13","statements":[{"assignments":[3924],"declarations":[{"constant":false,"id":3924,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:13","nodeType":"VariableDeclaration","scope":3956,"src":"13519:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3923,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3928,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3925,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"13538:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3926,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"13544:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:13"},{"expression":{"id":3939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3929,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"13573:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3930,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"13578:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3931,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3932,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"13678:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3933,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"13923:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3934,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"13929:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3935,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"13941:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3938,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:13","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3940,"nodeType":"ExpressionStatement","src":"13572:395:13"},{"expression":{"id":3954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3941,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"13987:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3942,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"13990:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3943,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3944,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"14072:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3945,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"14326:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3946,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3917,"src":"14330:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3949,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"14341:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3947,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:13","typeDescriptions":{}}},"id":3950,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3953,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:13","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3955,"nodeType":"ExpressionStatement","src":"13986:382:13"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3920,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3903,"src":"13485:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3957,"nodeType":"WhileStatement","src":"13478:905:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3958,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3909,"src":"14401:3:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3963,"nodeType":"IfStatement","src":"14397:22:13","trueBody":{"expression":{"hexValue":"30","id":3961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3895,"id":3962,"nodeType":"Return","src":"14411:8:13"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3965,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"14470:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3968,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"14477:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:13","subExpression":{"id":3971,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"14490:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3969,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:13","typeDescriptions":{}}},"id":3973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3977,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3913,"src":"14502:1:13","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3975,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:13","typeDescriptions":{}}},"id":3978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3964,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"14462:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3895,"id":3980,"nodeType":"Return","src":"14455:50:13"}]}]},"documentation":{"id":3887,"nodeType":"StructuredDocumentation","src":"12082:553:13","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3983,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:13","nodeType":"FunctionDefinition","parameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"a","nameLocation":"12664:1:13","nodeType":"VariableDeclaration","scope":3983,"src":"12656:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3888,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3891,"mutability":"mutable","name":"n","nameLocation":"12675:1:13","nodeType":"VariableDeclaration","scope":3983,"src":"12667:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3890,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:13"},"returnParameters":{"id":3895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3894,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3983,"src":"12701:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3893,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:13"},"scope":4854,"src":"12640:1919:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4003,"nodeType":"Block","src":"15159:82:13","statements":[{"id":4002,"nodeType":"UncheckedBlock","src":"15169:66:13","statements":[{"expression":{"arguments":[{"id":3995,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3986,"src":"15212:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3996,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"15215:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3999,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"15222:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3993,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4854,"src":"15200:4:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4854_$","typeString":"type(library Math)"}},"id":3994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:13","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":4040,"src":"15200:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":4000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3992,"id":4001,"nodeType":"Return","src":"15193:31:13"}]}]},"documentation":{"id":3984,"nodeType":"StructuredDocumentation","src":"14565:514:13","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":4004,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:13","nodeType":"FunctionDefinition","parameters":{"id":3989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"a","nameLocation":"15113:1:13","nodeType":"VariableDeclaration","scope":4004,"src":"15105:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3985,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3988,"mutability":"mutable","name":"p","nameLocation":"15124:1:13","nodeType":"VariableDeclaration","scope":4004,"src":"15116:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3987,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:13"},"returnParameters":{"id":3992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4004,"src":"15150:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3990,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:13"},"scope":4854,"src":"15084:157:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4039,"nodeType":"Block","src":"16011:174:13","statements":[{"assignments":[4017,4019],"declarations":[{"constant":false,"id":4017,"mutability":"mutable","name":"success","nameLocation":"16027:7:13","nodeType":"VariableDeclaration","scope":4039,"src":"16022:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4016,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4019,"mutability":"mutable","name":"result","nameLocation":"16044:6:13","nodeType":"VariableDeclaration","scope":4039,"src":"16036:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4025,"initialValue":{"arguments":[{"id":4021,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4007,"src":"16064:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4022,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4009,"src":"16067:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4023,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4011,"src":"16070:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4020,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4064,4146],"referencedDeclaration":4064,"src":"16054:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":4024,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:13"},{"condition":{"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:13","subExpression":{"id":4026,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"16087:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4036,"nodeType":"IfStatement","src":"16082:74:13","trueBody":{"id":4035,"nodeType":"Block","src":"16096:60:13","statements":[{"expression":{"arguments":[{"expression":{"id":4031,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"16122:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1795_$","typeString":"type(library Panic)"}},"id":4032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1762,"src":"16122:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4028,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"16110:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1795_$","typeString":"type(library Panic)"}},"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1794,"src":"16110:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4034,"nodeType":"ExpressionStatement","src":"16110:35:13"}]}},{"expression":{"id":4037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4019,"src":"16172:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4015,"id":4038,"nodeType":"Return","src":"16165:13:13"}]},"documentation":{"id":4005,"nodeType":"StructuredDocumentation","src":"15247:678:13","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":4040,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:13","nodeType":"FunctionDefinition","parameters":{"id":4012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4007,"mutability":"mutable","name":"b","nameLocation":"15954:1:13","nodeType":"VariableDeclaration","scope":4040,"src":"15946:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4006,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4009,"mutability":"mutable","name":"e","nameLocation":"15965:1:13","nodeType":"VariableDeclaration","scope":4040,"src":"15957:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4011,"mutability":"mutable","name":"m","nameLocation":"15976:1:13","nodeType":"VariableDeclaration","scope":4040,"src":"15968:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4010,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:13"},"returnParameters":{"id":4015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4014,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4040,"src":"16002:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4013,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:13"},"scope":4854,"src":"15930:255:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4063,"nodeType":"Block","src":"17039:1493:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4054,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"17053:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4061,"nodeType":"IfStatement","src":"17049:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4053,"id":4060,"nodeType":"Return","src":"17061:17:13"}},{"AST":{"nativeSrc":"17113:1413:13","nodeType":"YulBlock","src":"17113:1413:13","statements":[{"nativeSrc":"17127:22:13","nodeType":"YulVariableDeclaration","src":"17127:22:13","value":{"arguments":[{"kind":"number","nativeSrc":"17144:4:13","nodeType":"YulLiteral","src":"17144:4:13","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"17138:5:13","nodeType":"YulIdentifier","src":"17138:5:13"},"nativeSrc":"17138:11:13","nodeType":"YulFunctionCall","src":"17138:11:13"},"variables":[{"name":"ptr","nativeSrc":"17131:3:13","nodeType":"YulTypedName","src":"17131:3:13","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"18057:3:13","nodeType":"YulIdentifier","src":"18057:3:13"},{"kind":"number","nativeSrc":"18062:4:13","nodeType":"YulLiteral","src":"18062:4:13","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18050:6:13","nodeType":"YulIdentifier","src":"18050:6:13"},"nativeSrc":"18050:17:13","nodeType":"YulFunctionCall","src":"18050:17:13"},"nativeSrc":"18050:17:13","nodeType":"YulExpressionStatement","src":"18050:17:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18091:3:13","nodeType":"YulIdentifier","src":"18091:3:13"},{"kind":"number","nativeSrc":"18096:4:13","nodeType":"YulLiteral","src":"18096:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"18087:3:13","nodeType":"YulIdentifier","src":"18087:3:13"},"nativeSrc":"18087:14:13","nodeType":"YulFunctionCall","src":"18087:14:13"},{"kind":"number","nativeSrc":"18103:4:13","nodeType":"YulLiteral","src":"18103:4:13","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18080:6:13","nodeType":"YulIdentifier","src":"18080:6:13"},"nativeSrc":"18080:28:13","nodeType":"YulFunctionCall","src":"18080:28:13"},"nativeSrc":"18080:28:13","nodeType":"YulExpressionStatement","src":"18080:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18132:3:13","nodeType":"YulIdentifier","src":"18132:3:13"},{"kind":"number","nativeSrc":"18137:4:13","nodeType":"YulLiteral","src":"18137:4:13","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"18128:3:13","nodeType":"YulIdentifier","src":"18128:3:13"},"nativeSrc":"18128:14:13","nodeType":"YulFunctionCall","src":"18128:14:13"},{"kind":"number","nativeSrc":"18144:4:13","nodeType":"YulLiteral","src":"18144:4:13","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"18121:6:13","nodeType":"YulIdentifier","src":"18121:6:13"},"nativeSrc":"18121:28:13","nodeType":"YulFunctionCall","src":"18121:28:13"},"nativeSrc":"18121:28:13","nodeType":"YulExpressionStatement","src":"18121:28:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18173:3:13","nodeType":"YulIdentifier","src":"18173:3:13"},{"kind":"number","nativeSrc":"18178:4:13","nodeType":"YulLiteral","src":"18178:4:13","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"18169:3:13","nodeType":"YulIdentifier","src":"18169:3:13"},"nativeSrc":"18169:14:13","nodeType":"YulFunctionCall","src":"18169:14:13"},{"name":"b","nativeSrc":"18185:1:13","nodeType":"YulIdentifier","src":"18185:1:13"}],"functionName":{"name":"mstore","nativeSrc":"18162:6:13","nodeType":"YulIdentifier","src":"18162:6:13"},"nativeSrc":"18162:25:13","nodeType":"YulFunctionCall","src":"18162:25:13"},"nativeSrc":"18162:25:13","nodeType":"YulExpressionStatement","src":"18162:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18211:3:13","nodeType":"YulIdentifier","src":"18211:3:13"},{"kind":"number","nativeSrc":"18216:4:13","nodeType":"YulLiteral","src":"18216:4:13","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"18207:3:13","nodeType":"YulIdentifier","src":"18207:3:13"},"nativeSrc":"18207:14:13","nodeType":"YulFunctionCall","src":"18207:14:13"},{"name":"e","nativeSrc":"18223:1:13","nodeType":"YulIdentifier","src":"18223:1:13"}],"functionName":{"name":"mstore","nativeSrc":"18200:6:13","nodeType":"YulIdentifier","src":"18200:6:13"},"nativeSrc":"18200:25:13","nodeType":"YulFunctionCall","src":"18200:25:13"},"nativeSrc":"18200:25:13","nodeType":"YulExpressionStatement","src":"18200:25:13"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"18249:3:13","nodeType":"YulIdentifier","src":"18249:3:13"},{"kind":"number","nativeSrc":"18254:4:13","nodeType":"YulLiteral","src":"18254:4:13","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"18245:3:13","nodeType":"YulIdentifier","src":"18245:3:13"},"nativeSrc":"18245:14:13","nodeType":"YulFunctionCall","src":"18245:14:13"},{"name":"m","nativeSrc":"18261:1:13","nodeType":"YulIdentifier","src":"18261:1:13"}],"functionName":{"name":"mstore","nativeSrc":"18238:6:13","nodeType":"YulIdentifier","src":"18238:6:13"},"nativeSrc":"18238:25:13","nodeType":"YulFunctionCall","src":"18238:25:13"},"nativeSrc":"18238:25:13","nodeType":"YulExpressionStatement","src":"18238:25:13"},{"nativeSrc":"18425:57:13","nodeType":"YulAssignment","src":"18425:57:13","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"18447:3:13","nodeType":"YulIdentifier","src":"18447:3:13"},"nativeSrc":"18447:5:13","nodeType":"YulFunctionCall","src":"18447:5:13"},{"kind":"number","nativeSrc":"18454:4:13","nodeType":"YulLiteral","src":"18454:4:13","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"18460:3:13","nodeType":"YulIdentifier","src":"18460:3:13"},{"kind":"number","nativeSrc":"18465:4:13","nodeType":"YulLiteral","src":"18465:4:13","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"18471:4:13","nodeType":"YulLiteral","src":"18471:4:13","type":"","value":"0x00"},{"kind":"number","nativeSrc":"18477:4:13","nodeType":"YulLiteral","src":"18477:4:13","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"18436:10:13","nodeType":"YulIdentifier","src":"18436:10:13"},"nativeSrc":"18436:46:13","nodeType":"YulFunctionCall","src":"18436:46:13"},"variableNames":[{"name":"success","nativeSrc":"18425:7:13","nodeType":"YulIdentifier","src":"18425:7:13"}]},{"nativeSrc":"18495:21:13","nodeType":"YulAssignment","src":"18495:21:13","value":{"arguments":[{"kind":"number","nativeSrc":"18511:4:13","nodeType":"YulLiteral","src":"18511:4:13","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"18505:5:13","nodeType":"YulIdentifier","src":"18505:5:13"},"nativeSrc":"18505:11:13","nodeType":"YulFunctionCall","src":"18505:11:13"},"variableNames":[{"name":"result","nativeSrc":"18495:6:13","nodeType":"YulIdentifier","src":"18495:6:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4043,"isOffset":false,"isSlot":false,"src":"18185:1:13","valueSize":1},{"declaration":4045,"isOffset":false,"isSlot":false,"src":"18223:1:13","valueSize":1},{"declaration":4047,"isOffset":false,"isSlot":false,"src":"18261:1:13","valueSize":1},{"declaration":4052,"isOffset":false,"isSlot":false,"src":"18495:6:13","valueSize":1},{"declaration":4050,"isOffset":false,"isSlot":false,"src":"18425:7:13","valueSize":1}],"flags":["memory-safe"],"id":4062,"nodeType":"InlineAssembly","src":"17088:1438:13"}]},"documentation":{"id":4041,"nodeType":"StructuredDocumentation","src":"16191:738:13","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":4064,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:13","nodeType":"FunctionDefinition","parameters":{"id":4048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4043,"mutability":"mutable","name":"b","nameLocation":"16961:1:13","nodeType":"VariableDeclaration","scope":4064,"src":"16953:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4045,"mutability":"mutable","name":"e","nameLocation":"16972:1:13","nodeType":"VariableDeclaration","scope":4064,"src":"16964:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4044,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4047,"mutability":"mutable","name":"m","nameLocation":"16983:1:13","nodeType":"VariableDeclaration","scope":4064,"src":"16975:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4046,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:13"},"returnParameters":{"id":4053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"success","nameLocation":"17014:7:13","nodeType":"VariableDeclaration","scope":4064,"src":"17009:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4049,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4052,"mutability":"mutable","name":"result","nameLocation":"17031:6:13","nodeType":"VariableDeclaration","scope":4064,"src":"17023:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4051,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:13"},"scope":4854,"src":"16934:1598:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4099,"nodeType":"Block","src":"18729:179:13","statements":[{"assignments":[4077,4079],"declarations":[{"constant":false,"id":4077,"mutability":"mutable","name":"success","nameLocation":"18745:7:13","nodeType":"VariableDeclaration","scope":4099,"src":"18740:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4076,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4079,"mutability":"mutable","name":"result","nameLocation":"18767:6:13","nodeType":"VariableDeclaration","scope":4099,"src":"18754:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4078,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4085,"initialValue":{"arguments":[{"id":4081,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4067,"src":"18787:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4082,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4069,"src":"18790:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4083,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4071,"src":"18793:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4080,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[4064,4146],"referencedDeclaration":4146,"src":"18777:9:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:13"},{"condition":{"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:13","subExpression":{"id":4086,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4077,"src":"18810:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4096,"nodeType":"IfStatement","src":"18805:74:13","trueBody":{"id":4095,"nodeType":"Block","src":"18819:60:13","statements":[{"expression":{"arguments":[{"expression":{"id":4091,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"18845:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1795_$","typeString":"type(library Panic)"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:13","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1762,"src":"18845:22:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4088,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"18833:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1795_$","typeString":"type(library Panic)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:13","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1794,"src":"18833:11:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4094,"nodeType":"ExpressionStatement","src":"18833:35:13"}]}},{"expression":{"id":4097,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4079,"src":"18895:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":4075,"id":4098,"nodeType":"Return","src":"18888:13:13"}]},"documentation":{"id":4065,"nodeType":"StructuredDocumentation","src":"18538:85:13","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":4100,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:13","nodeType":"FunctionDefinition","parameters":{"id":4072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4067,"mutability":"mutable","name":"b","nameLocation":"18657:1:13","nodeType":"VariableDeclaration","scope":4100,"src":"18644:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4066,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4069,"mutability":"mutable","name":"e","nameLocation":"18673:1:13","nodeType":"VariableDeclaration","scope":4100,"src":"18660:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4068,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4071,"mutability":"mutable","name":"m","nameLocation":"18689:1:13","nodeType":"VariableDeclaration","scope":4100,"src":"18676:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4070,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:13"},"returnParameters":{"id":4075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4100,"src":"18715:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4073,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:13"},"scope":4854,"src":"18628:280:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4145,"nodeType":"Block","src":"19162:771:13","statements":[{"condition":{"arguments":[{"id":4115,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"19187:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4114,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4179,"src":"19176:10:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4124,"nodeType":"IfStatement","src":"19172:47:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:13","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4118,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":4122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":4113,"id":4123,"nodeType":"Return","src":"19191:28:13"}},{"assignments":[4126],"declarations":[{"constant":false,"id":4126,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:13","nodeType":"VariableDeclaration","scope":4145,"src":"19230:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4125,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4129,"initialValue":{"expression":{"id":4127,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"19245:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:13","memberName":"length","nodeType":"MemberAccess","src":"19245:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:13"},{"expression":{"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4130,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4112,"src":"19335:6:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":4133,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"19361:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:13","memberName":"length","nodeType":"MemberAccess","src":"19361:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4135,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"19371:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:13","memberName":"length","nodeType":"MemberAccess","src":"19371:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4137,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"19381:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4138,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4103,"src":"19387:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4139,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4105,"src":"19390:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4140,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"19393:1:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":4131,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:13","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:13","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:13","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4143,"nodeType":"ExpressionStatement","src":"19335:60:13"},{"AST":{"nativeSrc":"19431:496:13","nodeType":"YulBlock","src":"19431:496:13","statements":[{"nativeSrc":"19445:32:13","nodeType":"YulVariableDeclaration","src":"19445:32:13","value":{"arguments":[{"name":"result","nativeSrc":"19464:6:13","nodeType":"YulIdentifier","src":"19464:6:13"},{"kind":"number","nativeSrc":"19472:4:13","nodeType":"YulLiteral","src":"19472:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"19460:3:13","nodeType":"YulIdentifier","src":"19460:3:13"},"nativeSrc":"19460:17:13","nodeType":"YulFunctionCall","src":"19460:17:13"},"variables":[{"name":"dataPtr","nativeSrc":"19449:7:13","nodeType":"YulTypedName","src":"19449:7:13","type":""}]},{"nativeSrc":"19567:73:13","nodeType":"YulAssignment","src":"19567:73:13","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"19589:3:13","nodeType":"YulIdentifier","src":"19589:3:13"},"nativeSrc":"19589:5:13","nodeType":"YulFunctionCall","src":"19589:5:13"},{"kind":"number","nativeSrc":"19596:4:13","nodeType":"YulLiteral","src":"19596:4:13","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"19602:7:13","nodeType":"YulIdentifier","src":"19602:7:13"},{"arguments":[{"name":"result","nativeSrc":"19617:6:13","nodeType":"YulIdentifier","src":"19617:6:13"}],"functionName":{"name":"mload","nativeSrc":"19611:5:13","nodeType":"YulIdentifier","src":"19611:5:13"},"nativeSrc":"19611:13:13","nodeType":"YulFunctionCall","src":"19611:13:13"},{"name":"dataPtr","nativeSrc":"19626:7:13","nodeType":"YulIdentifier","src":"19626:7:13"},{"name":"mLen","nativeSrc":"19635:4:13","nodeType":"YulIdentifier","src":"19635:4:13"}],"functionName":{"name":"staticcall","nativeSrc":"19578:10:13","nodeType":"YulIdentifier","src":"19578:10:13"},"nativeSrc":"19578:62:13","nodeType":"YulFunctionCall","src":"19578:62:13"},"variableNames":[{"name":"success","nativeSrc":"19567:7:13","nodeType":"YulIdentifier","src":"19567:7:13"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"19796:6:13","nodeType":"YulIdentifier","src":"19796:6:13"},{"name":"mLen","nativeSrc":"19804:4:13","nodeType":"YulIdentifier","src":"19804:4:13"}],"functionName":{"name":"mstore","nativeSrc":"19789:6:13","nodeType":"YulIdentifier","src":"19789:6:13"},"nativeSrc":"19789:20:13","nodeType":"YulFunctionCall","src":"19789:20:13"},"nativeSrc":"19789:20:13","nodeType":"YulExpressionStatement","src":"19789:20:13"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19892:4:13","nodeType":"YulLiteral","src":"19892:4:13","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"19902:7:13","nodeType":"YulIdentifier","src":"19902:7:13"},{"name":"mLen","nativeSrc":"19911:4:13","nodeType":"YulIdentifier","src":"19911:4:13"}],"functionName":{"name":"add","nativeSrc":"19898:3:13","nodeType":"YulIdentifier","src":"19898:3:13"},"nativeSrc":"19898:18:13","nodeType":"YulFunctionCall","src":"19898:18:13"}],"functionName":{"name":"mstore","nativeSrc":"19885:6:13","nodeType":"YulIdentifier","src":"19885:6:13"},"nativeSrc":"19885:32:13","nodeType":"YulFunctionCall","src":"19885:32:13"},"nativeSrc":"19885:32:13","nodeType":"YulExpressionStatement","src":"19885:32:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":4126,"isOffset":false,"isSlot":false,"src":"19635:4:13","valueSize":1},{"declaration":4126,"isOffset":false,"isSlot":false,"src":"19804:4:13","valueSize":1},{"declaration":4126,"isOffset":false,"isSlot":false,"src":"19911:4:13","valueSize":1},{"declaration":4112,"isOffset":false,"isSlot":false,"src":"19464:6:13","valueSize":1},{"declaration":4112,"isOffset":false,"isSlot":false,"src":"19617:6:13","valueSize":1},{"declaration":4112,"isOffset":false,"isSlot":false,"src":"19796:6:13","valueSize":1},{"declaration":4110,"isOffset":false,"isSlot":false,"src":"19567:7:13","valueSize":1}],"flags":["memory-safe"],"id":4144,"nodeType":"InlineAssembly","src":"19406:521:13"}]},"documentation":{"id":4101,"nodeType":"StructuredDocumentation","src":"18914:88:13","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":4146,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:13","nodeType":"FunctionDefinition","parameters":{"id":4108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4103,"mutability":"mutable","name":"b","nameLocation":"19048:1:13","nodeType":"VariableDeclaration","scope":4146,"src":"19035:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4102,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4105,"mutability":"mutable","name":"e","nameLocation":"19072:1:13","nodeType":"VariableDeclaration","scope":4146,"src":"19059:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4104,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":4107,"mutability":"mutable","name":"m","nameLocation":"19096:1:13","nodeType":"VariableDeclaration","scope":4146,"src":"19083:14:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4106,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:13"},"returnParameters":{"id":4113,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4110,"mutability":"mutable","name":"success","nameLocation":"19132:7:13","nodeType":"VariableDeclaration","scope":4146,"src":"19127:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4109,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4112,"mutability":"mutable","name":"result","nameLocation":"19154:6:13","nodeType":"VariableDeclaration","scope":4146,"src":"19141:19:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4111,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:13"},"scope":4854,"src":"19007:926:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4178,"nodeType":"Block","src":"20088:176:13","statements":[{"body":{"id":4174,"nodeType":"Block","src":"20145:92:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":4165,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"20163:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4167,"indexExpression":{"id":4166,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"20173:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:13","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4173,"nodeType":"IfStatement","src":"20159:68:13","trueBody":{"id":4172,"nodeType":"Block","src":"20182:45:13","statements":[{"expression":{"hexValue":"66616c7365","id":4170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4153,"id":4171,"nodeType":"Return","src":"20200:12:13"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4158,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"20118:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4159,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4149,"src":"20122:9:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:13","memberName":"length","nodeType":"MemberAccess","src":"20122:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4175,"initializationExpression":{"assignments":[4155],"declarations":[{"constant":false,"id":4155,"mutability":"mutable","name":"i","nameLocation":"20111:1:13","nodeType":"VariableDeclaration","scope":4175,"src":"20103:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4154,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4157,"initialValue":{"hexValue":"30","id":4156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:13"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":4163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:13","subExpression":{"id":4162,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4155,"src":"20142:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4164,"nodeType":"ExpressionStatement","src":"20140:3:13"},"nodeType":"ForStatement","src":"20098:139:13"},{"expression":{"hexValue":"74727565","id":4176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4153,"id":4177,"nodeType":"Return","src":"20246:11:13"}]},"documentation":{"id":4147,"nodeType":"StructuredDocumentation","src":"19939:72:13","text":" @dev Returns whether the provided byte array is zero."},"id":4179,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:13","nodeType":"FunctionDefinition","parameters":{"id":4150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4149,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:13","nodeType":"VariableDeclaration","scope":4179,"src":"20036:22:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4148,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:13"},"returnParameters":{"id":4153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4179,"src":"20082:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4151,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:13"},"scope":4854,"src":"20016:248:13","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4397,"nodeType":"Block","src":"20624:5124:13","statements":[{"id":4396,"nodeType":"UncheckedBlock","src":"20634:5108:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4187,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"20728:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4188,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4193,"nodeType":"IfStatement","src":"20724:53:13","trueBody":{"id":4192,"nodeType":"Block","src":"20736:41:13","statements":[{"expression":{"id":4190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"20761:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4186,"id":4191,"nodeType":"Return","src":"20754:8:13"}]}},{"assignments":[4195],"declarations":[{"constant":false,"id":4195,"mutability":"mutable","name":"aa","nameLocation":"21712:2:13","nodeType":"VariableDeclaration","scope":4396,"src":"21704:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4194,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4197,"initialValue":{"id":4196,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"21717:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:13"},{"assignments":[4199],"declarations":[{"constant":false,"id":4199,"mutability":"mutable","name":"xn","nameLocation":"21740:2:13","nodeType":"VariableDeclaration","scope":4396,"src":"21732:10:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4198,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4201,"initialValue":{"hexValue":"31","id":4200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4202,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"21765:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4217,"nodeType":"IfStatement","src":"21761:92:13","trueBody":{"id":4216,"nodeType":"Block","src":"21783:70:13","statements":[{"expression":{"id":4210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4208,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"21801:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:13","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4211,"nodeType":"ExpressionStatement","src":"21801:10:13"},{"expression":{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4212,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"21829:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4215,"nodeType":"ExpressionStatement","src":"21829:9:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4218,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"21870:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4222,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4233,"nodeType":"IfStatement","src":"21866:90:13","trueBody":{"id":4232,"nodeType":"Block","src":"21887:69:13","statements":[{"expression":{"id":4226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4224,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"21905:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4227,"nodeType":"ExpressionStatement","src":"21905:9:13"},{"expression":{"id":4230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4228,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"21932:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4231,"nodeType":"ExpressionStatement","src":"21932:9:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4234,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"21973:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4237,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4238,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4249,"nodeType":"IfStatement","src":"21969:90:13","trueBody":{"id":4248,"nodeType":"Block","src":"21990:69:13","statements":[{"expression":{"id":4242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4240,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"22008:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4243,"nodeType":"ExpressionStatement","src":"22008:9:13"},{"expression":{"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4244,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"22035:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4247,"nodeType":"ExpressionStatement","src":"22035:9:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4250,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"22076:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4254,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:13","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4265,"nodeType":"IfStatement","src":"22072:89:13","trueBody":{"id":4264,"nodeType":"Block","src":"22093:68:13","statements":[{"expression":{"id":4258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4256,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"22111:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4259,"nodeType":"ExpressionStatement","src":"22111:9:13"},{"expression":{"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4260,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"22138:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4263,"nodeType":"ExpressionStatement","src":"22138:8:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4266,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"22178:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4270,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:13","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4281,"nodeType":"IfStatement","src":"22174:87:13","trueBody":{"id":4280,"nodeType":"Block","src":"22194:67:13","statements":[{"expression":{"id":4274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4272,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"22212:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4275,"nodeType":"ExpressionStatement","src":"22212:8:13"},{"expression":{"id":4278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4276,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"22238:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4279,"nodeType":"ExpressionStatement","src":"22238:8:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4282,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"22278:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4285,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4286,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4297,"nodeType":"IfStatement","src":"22274:87:13","trueBody":{"id":4296,"nodeType":"Block","src":"22294:67:13","statements":[{"expression":{"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4288,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"22312:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4291,"nodeType":"ExpressionStatement","src":"22312:8:13"},{"expression":{"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4292,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"22338:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4295,"nodeType":"ExpressionStatement","src":"22338:8:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4298,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4195,"src":"22378:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4300,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4309,"nodeType":"IfStatement","src":"22374:61:13","trueBody":{"id":4308,"nodeType":"Block","src":"22394:41:13","statements":[{"expression":{"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4304,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"22412:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4307,"nodeType":"ExpressionStatement","src":"22412:8:13"}]}},{"expression":{"id":4317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4310,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"22855:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4312,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"22865:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4318,"nodeType":"ExpressionStatement","src":"22855:18:13"},{"expression":{"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4319,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"24760:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4320,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"24766:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4321,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"24771:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4322,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"24775:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4325,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4329,"nodeType":"ExpressionStatement","src":"24760:23:13"},{"expression":{"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4330,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"24869:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4331,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"24875:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4332,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"24880:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4333,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"24884:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4336,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4340,"nodeType":"ExpressionStatement","src":"24869:23:13"},{"expression":{"id":4350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4341,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"24980:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4342,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"24986:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4343,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"24991:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4344,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"24995:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4347,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4351,"nodeType":"ExpressionStatement","src":"24980:23:13"},{"expression":{"id":4361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4352,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25089:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4353,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25095:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4354,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"25100:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4355,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25104:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4358,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4362,"nodeType":"ExpressionStatement","src":"25089:23:13"},{"expression":{"id":4372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4363,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25199:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4364,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25205:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4365,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"25210:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4366,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25214:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4369,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4373,"nodeType":"ExpressionStatement","src":"25199:23:13"},{"expression":{"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4374,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25309:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4375,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25315:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"25320:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4377,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25324:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4380,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4384,"nodeType":"ExpressionStatement","src":"25309:23:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4385,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25698:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4388,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25719:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4389,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4182,"src":"25724:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4390,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4199,"src":"25728:2:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4386,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"25703:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"25703:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4186,"id":4395,"nodeType":"Return","src":"25691:40:13"}]}]},"documentation":{"id":4180,"nodeType":"StructuredDocumentation","src":"20270:292:13","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4398,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:13","nodeType":"FunctionDefinition","parameters":{"id":4183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4182,"mutability":"mutable","name":"a","nameLocation":"20589:1:13","nodeType":"VariableDeclaration","scope":4398,"src":"20581:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4181,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:13"},"returnParameters":{"id":4186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4185,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4398,"src":"20615:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4184,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:13"},"scope":4854,"src":"20567:5181:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4431,"nodeType":"Block","src":"25921:171:13","statements":[{"id":4430,"nodeType":"UncheckedBlock","src":"25931:155:13","statements":[{"assignments":[4410],"declarations":[{"constant":false,"id":4410,"mutability":"mutable","name":"result","nameLocation":"25963:6:13","nodeType":"VariableDeclaration","scope":4430,"src":"25955:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4409,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4414,"initialValue":{"arguments":[{"id":4412,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"25977:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4411,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4398,4432],"referencedDeclaration":4398,"src":"25972:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4415,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"26000:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4419,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"26042:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}],"id":4418,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"26025:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3245_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4421,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"26055:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4422,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4410,"src":"26064:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4424,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"26073:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4416,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"26009:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"26009:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4408,"id":4429,"nodeType":"Return","src":"25993:82:13"}]}]},"documentation":{"id":4399,"nodeType":"StructuredDocumentation","src":"25754:86:13","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4432,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:13","nodeType":"FunctionDefinition","parameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"a","nameLocation":"25867:1:13","nodeType":"VariableDeclaration","scope":4432,"src":"25859:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4400,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4404,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:13","nodeType":"VariableDeclaration","scope":4432,"src":"25870:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"},"typeName":{"id":4403,"nodeType":"UserDefinedTypeName","pathNode":{"id":4402,"name":"Rounding","nameLocations":["25870:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":3245,"src":"25870:8:13"},"referencedDeclaration":3245,"src":"25870:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:13"},"returnParameters":{"id":4408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4432,"src":"25912:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4406,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:13"},"scope":4854,"src":"25845:247:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4522,"nodeType":"Block","src":"26281:2334:13","statements":[{"expression":{"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4440,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"26363:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4443,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"26383:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4441,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"26367:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"26367:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:13","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4450,"nodeType":"ExpressionStatement","src":"26363:64:13"},{"expression":{"id":4463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4451,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"26503:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4454,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"26525:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4455,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"26530:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4457,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4452,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"26508:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"26508:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:13","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4464,"nodeType":"ExpressionStatement","src":"26503:56:13"},{"expression":{"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4465,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"26634:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4470,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4468,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"26656:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4469,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"26661:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4471,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4466,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"26639:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"26639:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4478,"nodeType":"ExpressionStatement","src":"26634:48:13"},{"expression":{"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4479,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"26757:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4482,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"26779:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4483,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"26784:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4485,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:13","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4480,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"26762:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"26762:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4492,"nodeType":"ExpressionStatement","src":"26757:44:13"},{"expression":{"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4493,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"26874:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4496,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"26896:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4497,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"26901:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4499,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4494,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"26879:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"26879:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4506,"nodeType":"ExpressionStatement","src":"26874:42:13"},{"expression":{"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4507,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"26988:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4510,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4435,"src":"27010:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4511,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4438,"src":"27015:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4513,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:13","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4508,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"26993:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"26993:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4520,"nodeType":"ExpressionStatement","src":"26988:41:13"},{"AST":{"nativeSrc":"28490:119:13","nodeType":"YulBlock","src":"28490:119:13","statements":[{"nativeSrc":"28504:95:13","nodeType":"YulAssignment","src":"28504:95:13","value":{"arguments":[{"name":"r","nativeSrc":"28512:1:13","nodeType":"YulIdentifier","src":"28512:1:13"},{"arguments":[{"arguments":[{"name":"r","nativeSrc":"28524:1:13","nodeType":"YulIdentifier","src":"28524:1:13"},{"name":"x","nativeSrc":"28527:1:13","nodeType":"YulIdentifier","src":"28527:1:13"}],"functionName":{"name":"shr","nativeSrc":"28520:3:13","nodeType":"YulIdentifier","src":"28520:3:13"},"nativeSrc":"28520:9:13","nodeType":"YulFunctionCall","src":"28520:9:13"},{"kind":"number","nativeSrc":"28531:66:13","nodeType":"YulLiteral","src":"28531:66:13","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nativeSrc":"28515:4:13","nodeType":"YulIdentifier","src":"28515:4:13"},"nativeSrc":"28515:83:13","nodeType":"YulFunctionCall","src":"28515:83:13"}],"functionName":{"name":"or","nativeSrc":"28509:2:13","nodeType":"YulIdentifier","src":"28509:2:13"},"nativeSrc":"28509:90:13","nodeType":"YulFunctionCall","src":"28509:90:13"},"variableNames":[{"name":"r","nativeSrc":"28504:1:13","nodeType":"YulIdentifier","src":"28504:1:13"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4438,"isOffset":false,"isSlot":false,"src":"28504:1:13","valueSize":1},{"declaration":4438,"isOffset":false,"isSlot":false,"src":"28512:1:13","valueSize":1},{"declaration":4438,"isOffset":false,"isSlot":false,"src":"28524:1:13","valueSize":1},{"declaration":4435,"isOffset":false,"isSlot":false,"src":"28527:1:13","valueSize":1}],"flags":["memory-safe"],"id":4521,"nodeType":"InlineAssembly","src":"28465:144:13"}]},"documentation":{"id":4433,"nodeType":"StructuredDocumentation","src":"26098:119:13","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4523,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:13","nodeType":"FunctionDefinition","parameters":{"id":4436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4435,"mutability":"mutable","name":"x","nameLocation":"26244:1:13","nodeType":"VariableDeclaration","scope":4523,"src":"26236:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4434,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:13"},"returnParameters":{"id":4439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4438,"mutability":"mutable","name":"r","nameLocation":"26278:1:13","nodeType":"VariableDeclaration","scope":4523,"src":"26270:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4437,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:13"},"scope":4854,"src":"26222:2393:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4556,"nodeType":"Block","src":"28848:175:13","statements":[{"id":4555,"nodeType":"UncheckedBlock","src":"28858:159:13","statements":[{"assignments":[4535],"declarations":[{"constant":false,"id":4535,"mutability":"mutable","name":"result","nameLocation":"28890:6:13","nodeType":"VariableDeclaration","scope":4555,"src":"28882:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4534,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4539,"initialValue":{"arguments":[{"id":4537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"28904:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4536,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4523,4557],"referencedDeclaration":4523,"src":"28899:4:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4540,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"28931:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4544,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4529,"src":"28973:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}],"id":4543,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"28956:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3245_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4547,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4535,"src":"28991:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"29000:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4541,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"28940:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"28940:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4533,"id":4554,"nodeType":"Return","src":"28924:82:13"}]}]},"documentation":{"id":4524,"nodeType":"StructuredDocumentation","src":"28621:142:13","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4557,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:13","nodeType":"FunctionDefinition","parameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4526,"mutability":"mutable","name":"value","nameLocation":"28790:5:13","nodeType":"VariableDeclaration","scope":4557,"src":"28782:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4525,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4529,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:13","nodeType":"VariableDeclaration","scope":4557,"src":"28797:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"},"typeName":{"id":4528,"nodeType":"UserDefinedTypeName","pathNode":{"id":4527,"name":"Rounding","nameLocations":["28797:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":3245,"src":"28797:8:13"},"referencedDeclaration":3245,"src":"28797:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:13"},"returnParameters":{"id":4533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4557,"src":"28839:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4531,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:13"},"scope":4854,"src":"28768:255:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4685,"nodeType":"Block","src":"29216:854:13","statements":[{"assignments":[4566],"declarations":[{"constant":false,"id":4566,"mutability":"mutable","name":"result","nameLocation":"29234:6:13","nodeType":"VariableDeclaration","scope":4685,"src":"29226:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4565,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4568,"initialValue":{"hexValue":"30","id":4567,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:13"},{"id":4682,"nodeType":"UncheckedBlock","src":"29254:787:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"29282:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4585,"nodeType":"IfStatement","src":"29278:103:13","trueBody":{"id":4584,"nodeType":"Block","src":"29301:80:13","statements":[{"expression":{"id":4578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"29319:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4579,"nodeType":"ExpressionStatement","src":"29319:17:13"},{"expression":{"id":4582,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4580,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"29354:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:13","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4583,"nodeType":"ExpressionStatement","src":"29354:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"29398:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4602,"nodeType":"IfStatement","src":"29394:103:13","trueBody":{"id":4601,"nodeType":"Block","src":"29417:80:13","statements":[{"expression":{"id":4595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"29435:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4596,"nodeType":"ExpressionStatement","src":"29435:17:13"},{"expression":{"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4597,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"29470:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:13","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4600,"nodeType":"ExpressionStatement","src":"29470:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"29514:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4619,"nodeType":"IfStatement","src":"29510:103:13","trueBody":{"id":4618,"nodeType":"Block","src":"29533:80:13","statements":[{"expression":{"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"29551:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:13","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4613,"nodeType":"ExpressionStatement","src":"29551:17:13"},{"expression":{"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4614,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"29586:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:13","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4617,"nodeType":"ExpressionStatement","src":"29586:12:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4620,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"29630:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4636,"nodeType":"IfStatement","src":"29626:100:13","trueBody":{"id":4635,"nodeType":"Block","src":"29648:78:13","statements":[{"expression":{"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"29666:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4630,"nodeType":"ExpressionStatement","src":"29666:16:13"},{"expression":{"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4631,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"29700:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:13","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4634,"nodeType":"ExpressionStatement","src":"29700:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4637,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"29743:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4653,"nodeType":"IfStatement","src":"29739:100:13","trueBody":{"id":4652,"nodeType":"Block","src":"29761:78:13","statements":[{"expression":{"id":4646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"29779:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4645,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4647,"nodeType":"ExpressionStatement","src":"29779:16:13"},{"expression":{"id":4650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4648,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"29813:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4651,"nodeType":"ExpressionStatement","src":"29813:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"29856:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4670,"nodeType":"IfStatement","src":"29852:100:13","trueBody":{"id":4669,"nodeType":"Block","src":"29874:78:13","statements":[{"expression":{"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"29892:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:13","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4664,"nodeType":"ExpressionStatement","src":"29892:16:13"},{"expression":{"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4665,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"29926:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4668,"nodeType":"ExpressionStatement","src":"29926:11:13"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4671,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4560,"src":"29969:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4672,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4681,"nodeType":"IfStatement","src":"29965:66:13","trueBody":{"id":4680,"nodeType":"Block","src":"29987:44:13","statements":[{"expression":{"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4676,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"30005:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4679,"nodeType":"ExpressionStatement","src":"30005:11:13"}]}}]},{"expression":{"id":4683,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4566,"src":"30057:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4564,"id":4684,"nodeType":"Return","src":"30050:13:13"}]},"documentation":{"id":4558,"nodeType":"StructuredDocumentation","src":"29029:120:13","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4686,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:13","nodeType":"FunctionDefinition","parameters":{"id":4561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4560,"mutability":"mutable","name":"value","nameLocation":"29177:5:13","nodeType":"VariableDeclaration","scope":4686,"src":"29169:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4559,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:13"},"returnParameters":{"id":4564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4686,"src":"29207:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4562,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:13"},"scope":4854,"src":"29154:916:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4719,"nodeType":"Block","src":"30305:177:13","statements":[{"id":4718,"nodeType":"UncheckedBlock","src":"30315:161:13","statements":[{"assignments":[4698],"declarations":[{"constant":false,"id":4698,"mutability":"mutable","name":"result","nameLocation":"30347:6:13","nodeType":"VariableDeclaration","scope":4718,"src":"30339:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4697,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4702,"initialValue":{"arguments":[{"id":4700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"30362:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4699,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4686,4720],"referencedDeclaration":4686,"src":"30356:5:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4703,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"30389:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4707,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4692,"src":"30431:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}],"id":4706,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"30414:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3245_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:13","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4698,"src":"30450:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4689,"src":"30459:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4704,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"30398:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"30398:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4696,"id":4717,"nodeType":"Return","src":"30382:83:13"}]}]},"documentation":{"id":4687,"nodeType":"StructuredDocumentation","src":"30076:143:13","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4720,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:13","nodeType":"FunctionDefinition","parameters":{"id":4693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4689,"mutability":"mutable","name":"value","nameLocation":"30247:5:13","nodeType":"VariableDeclaration","scope":4720,"src":"30239:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4688,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4692,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:13","nodeType":"VariableDeclaration","scope":4720,"src":"30254:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"},"typeName":{"id":4691,"nodeType":"UserDefinedTypeName","pathNode":{"id":4690,"name":"Rounding","nameLocations":["30254:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":3245,"src":"30254:8:13"},"referencedDeclaration":3245,"src":"30254:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:13"},"returnParameters":{"id":4696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4695,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4720,"src":"30296:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4694,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:13"},"scope":4854,"src":"30224:258:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4796,"nodeType":"Block","src":"30800:675:13","statements":[{"expression":{"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4728,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"30882:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4731,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"30902:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":4732,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:13","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4729,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"30886:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"30886:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:13","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4738,"nodeType":"ExpressionStatement","src":"30882:64:13"},{"expression":{"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4739,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"31022:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4742,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"31044:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4743,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"31049:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4745,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":4746,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:13","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4740,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"31027:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"31027:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:13","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4752,"nodeType":"ExpressionStatement","src":"31022:56:13"},{"expression":{"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4753,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"31153:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4756,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"31175:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4757,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"31180:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":4760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:13","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4754,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"31158:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"31158:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":4763,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:13","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4766,"nodeType":"ExpressionStatement","src":"31153:48:13"},{"expression":{"id":4779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4767,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"31276:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4770,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"31298:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4771,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"31303:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4773,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":4774,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:13","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4768,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"31281:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"31281:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:13","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4780,"nodeType":"ExpressionStatement","src":"31276:44:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4781,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"31426:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":4782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4784,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4787,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4723,"src":"31453:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":4788,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4726,"src":"31458:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4790,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:13","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4785,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"31436:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"31436:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4727,"id":4795,"nodeType":"Return","src":"31418:50:13"}]},"documentation":{"id":4721,"nodeType":"StructuredDocumentation","src":"30488:246:13","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4797,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:13","nodeType":"FunctionDefinition","parameters":{"id":4724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4723,"mutability":"mutable","name":"x","nameLocation":"30763:1:13","nodeType":"VariableDeclaration","scope":4797,"src":"30755:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4722,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:13"},"returnParameters":{"id":4727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4726,"mutability":"mutable","name":"r","nameLocation":"30797:1:13","nodeType":"VariableDeclaration","scope":4797,"src":"30789:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4725,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:13"},"scope":4854,"src":"30739:736:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4833,"nodeType":"Block","src":"31712:184:13","statements":[{"id":4832,"nodeType":"UncheckedBlock","src":"31722:168:13","statements":[{"assignments":[4809],"declarations":[{"constant":false,"id":4809,"mutability":"mutable","name":"result","nameLocation":"31754:6:13","nodeType":"VariableDeclaration","scope":4832,"src":"31746:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4808,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4813,"initialValue":{"arguments":[{"id":4811,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"31770:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4810,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4797,4834],"referencedDeclaration":4797,"src":"31763:6:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4814,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"31797:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4818,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4803,"src":"31839:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}],"id":4817,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"31822:16:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3245_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4821,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"31858:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:13","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4800,"src":"31873:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4815,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"31806:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:13","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"31806:15:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4807,"id":4831,"nodeType":"Return","src":"31790:89:13"}]}]},"documentation":{"id":4798,"nodeType":"StructuredDocumentation","src":"31481:144:13","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4834,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:13","nodeType":"FunctionDefinition","parameters":{"id":4804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4800,"mutability":"mutable","name":"value","nameLocation":"31654:5:13","nodeType":"VariableDeclaration","scope":4834,"src":"31646:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4799,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4803,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:13","nodeType":"VariableDeclaration","scope":4834,"src":"31661:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"},"typeName":{"id":4802,"nodeType":"UserDefinedTypeName","pathNode":{"id":4801,"name":"Rounding","nameLocations":["31661:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":3245,"src":"31661:8:13"},"referencedDeclaration":3245,"src":"31661:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:13"},"returnParameters":{"id":4807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4834,"src":"31703:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4805,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:13"},"scope":4854,"src":"31630:266:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4852,"nodeType":"Block","src":"32094:48:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4845,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4838,"src":"32117:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}],"id":4844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:13","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4843,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:13","typeDescriptions":{}}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:13","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:13","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4849,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4842,"id":4851,"nodeType":"Return","src":"32104:31:13"}]},"documentation":{"id":4835,"nodeType":"StructuredDocumentation","src":"31902:113:13","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4853,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:13","nodeType":"FunctionDefinition","parameters":{"id":4839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4838,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:13","nodeType":"VariableDeclaration","scope":4853,"src":"32046:17:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"},"typeName":{"id":4837,"nodeType":"UserDefinedTypeName","pathNode":{"id":4836,"name":"Rounding","nameLocations":["32046:8:13"],"nodeType":"IdentifierPath","referencedDeclaration":3245,"src":"32046:8:13"},"referencedDeclaration":3245,"src":"32046:8:13","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3245","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:13"},"returnParameters":{"id":4842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4841,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4853,"src":"32088:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4840,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:13"},"scope":4854,"src":"32020:122:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4855,"src":"281:31863:13","usedErrors":[],"usedEvents":[]}],"src":"103:32042:13"},"id":13},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6619]},"id":6620,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4856,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4857,"nodeType":"StructuredDocumentation","src":"218:550:14","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6619,"linearizedBaseContracts":[6619],"name":"SafeCast","nameLocation":"777:8:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4858,"nodeType":"StructuredDocumentation","src":"792:68:14","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4864,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:14","nodeType":"ErrorDefinition","parameters":{"id":4863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4860,"mutability":"mutable","name":"bits","nameLocation":"908:4:14","nodeType":"VariableDeclaration","scope":4864,"src":"902:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4859,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4862,"mutability":"mutable","name":"value","nameLocation":"922:5:14","nodeType":"VariableDeclaration","scope":4864,"src":"914:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4861,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:14"},"src":"865:64:14"},{"documentation":{"id":4865,"nodeType":"StructuredDocumentation","src":"935:75:14","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4869,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:14","nodeType":"ErrorDefinition","parameters":{"id":4868,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4867,"mutability":"mutable","name":"value","nameLocation":"1056:5:14","nodeType":"VariableDeclaration","scope":4869,"src":"1049:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4866,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:14"},"src":"1015:48:14"},{"documentation":{"id":4870,"nodeType":"StructuredDocumentation","src":"1069:67:14","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4876,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:14","nodeType":"ErrorDefinition","parameters":{"id":4875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4872,"mutability":"mutable","name":"bits","nameLocation":"1183:4:14","nodeType":"VariableDeclaration","scope":4876,"src":"1177:10:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4871,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4874,"mutability":"mutable","name":"value","nameLocation":"1196:5:14","nodeType":"VariableDeclaration","scope":4876,"src":"1189:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4873,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:14"},"src":"1141:62:14"},{"documentation":{"id":4877,"nodeType":"StructuredDocumentation","src":"1209:75:14","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4881,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:14","nodeType":"ErrorDefinition","parameters":{"id":4880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4879,"mutability":"mutable","name":"value","nameLocation":"1331:5:14","nodeType":"VariableDeclaration","scope":4881,"src":"1323:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4878,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:14"},"src":"1289:49:14"},{"body":{"id":4908,"nodeType":"Block","src":"1695:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4889,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1709:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4892,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4891,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4890,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:14","memberName":"max","nodeType":"MemberAccess","src":"1717:17:14","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4902,"nodeType":"IfStatement","src":"1705:105:14","trueBody":{"id":4901,"nodeType":"Block","src":"1736:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:14","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4898,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1793:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4896,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"1757:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4900,"nodeType":"RevertStatement","src":"1750:49:14"}]}},{"expression":{"arguments":[{"id":4905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1834:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4904,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4903,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:14","typeDescriptions":{}}},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4888,"id":4907,"nodeType":"Return","src":"1819:21:14"}]},"documentation":{"id":4882,"nodeType":"StructuredDocumentation","src":"1344:280:14","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4909,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:14","nodeType":"FunctionDefinition","parameters":{"id":4885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4884,"mutability":"mutable","name":"value","nameLocation":"1656:5:14","nodeType":"VariableDeclaration","scope":4909,"src":"1648:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:14"},"returnParameters":{"id":4888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4909,"src":"1686:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4886,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:14","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:14"},"scope":6619,"src":"1629:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4936,"nodeType":"Block","src":"2204:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4917,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"2218:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4919,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4918,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:14","memberName":"max","nodeType":"MemberAccess","src":"2226:17:14","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4930,"nodeType":"IfStatement","src":"2214:105:14","trueBody":{"id":4929,"nodeType":"Block","src":"2245:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:14","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"2302:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4924,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"2266:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4928,"nodeType":"RevertStatement","src":"2259:49:14"}]}},{"expression":{"arguments":[{"id":4933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4912,"src":"2343:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4932,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4931,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:14","typeDescriptions":{}}},"id":4934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4916,"id":4935,"nodeType":"Return","src":"2328:21:14"}]},"documentation":{"id":4910,"nodeType":"StructuredDocumentation","src":"1853:280:14","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4937,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:14","nodeType":"FunctionDefinition","parameters":{"id":4913,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4912,"mutability":"mutable","name":"value","nameLocation":"2165:5:14","nodeType":"VariableDeclaration","scope":4937,"src":"2157:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4911,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:14"},"returnParameters":{"id":4916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4937,"src":"2195:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4914,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:14","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:14"},"scope":6619,"src":"2138:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4964,"nodeType":"Block","src":"2713:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"2727:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4947,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4946,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:14","memberName":"max","nodeType":"MemberAccess","src":"2735:17:14","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4958,"nodeType":"IfStatement","src":"2723:105:14","trueBody":{"id":4957,"nodeType":"Block","src":"2754:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:14","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4954,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"2811:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4952,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"2775:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4956,"nodeType":"RevertStatement","src":"2768:49:14"}]}},{"expression":{"arguments":[{"id":4961,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4940,"src":"2852:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4960,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4959,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:14","typeDescriptions":{}}},"id":4962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4944,"id":4963,"nodeType":"Return","src":"2837:21:14"}]},"documentation":{"id":4938,"nodeType":"StructuredDocumentation","src":"2362:280:14","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4965,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:14","nodeType":"FunctionDefinition","parameters":{"id":4941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4940,"mutability":"mutable","name":"value","nameLocation":"2674:5:14","nodeType":"VariableDeclaration","scope":4965,"src":"2666:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4939,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:14"},"returnParameters":{"id":4944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4943,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4965,"src":"2704:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4942,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:14","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:14"},"scope":6619,"src":"2647:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4992,"nodeType":"Block","src":"3222:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"3236:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4975,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4974,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4978,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:14","memberName":"max","nodeType":"MemberAccess","src":"3244:17:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4986,"nodeType":"IfStatement","src":"3232:105:14","trueBody":{"id":4985,"nodeType":"Block","src":"3263:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:14","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"3320:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4980,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"3284:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4984,"nodeType":"RevertStatement","src":"3277:49:14"}]}},{"expression":{"arguments":[{"id":4989,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4968,"src":"3361:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4988,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4987,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:14","typeDescriptions":{}}},"id":4990,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4972,"id":4991,"nodeType":"Return","src":"3346:21:14"}]},"documentation":{"id":4966,"nodeType":"StructuredDocumentation","src":"2871:280:14","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4993,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:14","nodeType":"FunctionDefinition","parameters":{"id":4969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4968,"mutability":"mutable","name":"value","nameLocation":"3183:5:14","nodeType":"VariableDeclaration","scope":4993,"src":"3175:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4967,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:14"},"returnParameters":{"id":4972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4993,"src":"3213:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4970,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:14","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:14"},"scope":6619,"src":"3156:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5020,"nodeType":"Block","src":"3731:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5001,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"3745:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5003,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":5002,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:14","memberName":"max","nodeType":"MemberAccess","src":"3753:17:14","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5014,"nodeType":"IfStatement","src":"3741:105:14","trueBody":{"id":5013,"nodeType":"Block","src":"3772:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:14","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"3829:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5008,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"3793:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5012,"nodeType":"RevertStatement","src":"3786:49:14"}]}},{"expression":{"arguments":[{"id":5017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"3870:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5015,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:14","typeDescriptions":{}}},"id":5018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":5000,"id":5019,"nodeType":"Return","src":"3855:21:14"}]},"documentation":{"id":4994,"nodeType":"StructuredDocumentation","src":"3380:280:14","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5021,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:14","nodeType":"FunctionDefinition","parameters":{"id":4997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"value","nameLocation":"3692:5:14","nodeType":"VariableDeclaration","scope":5021,"src":"3684:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4995,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:14"},"returnParameters":{"id":5000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4999,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5021,"src":"3722:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4998,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:14","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:14"},"scope":6619,"src":"3665:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5048,"nodeType":"Block","src":"4240:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"4254:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5031,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5030,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:14","memberName":"max","nodeType":"MemberAccess","src":"4262:17:14","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5042,"nodeType":"IfStatement","src":"4250:105:14","trueBody":{"id":5041,"nodeType":"Block","src":"4281:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:14","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"4338:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5036,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"4302:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5040,"nodeType":"RevertStatement","src":"4295:49:14"}]}},{"expression":{"arguments":[{"id":5045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5024,"src":"4379:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5043,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:14","typeDescriptions":{}}},"id":5046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5028,"id":5047,"nodeType":"Return","src":"4364:21:14"}]},"documentation":{"id":5022,"nodeType":"StructuredDocumentation","src":"3889:280:14","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5049,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:14","nodeType":"FunctionDefinition","parameters":{"id":5025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5024,"mutability":"mutable","name":"value","nameLocation":"4201:5:14","nodeType":"VariableDeclaration","scope":5049,"src":"4193:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5023,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:14"},"returnParameters":{"id":5028,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5027,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5049,"src":"4231:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5026,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:14","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:14"},"scope":6619,"src":"4174:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5076,"nodeType":"Block","src":"4749:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"4763:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5060,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5059,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5058,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5062,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:14","memberName":"max","nodeType":"MemberAccess","src":"4771:17:14","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5070,"nodeType":"IfStatement","src":"4759:105:14","trueBody":{"id":5069,"nodeType":"Block","src":"4790:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:14","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5066,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"4847:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5064,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"4811:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5068,"nodeType":"RevertStatement","src":"4804:49:14"}]}},{"expression":{"arguments":[{"id":5073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5052,"src":"4888:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5071,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:14","typeDescriptions":{}}},"id":5074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5056,"id":5075,"nodeType":"Return","src":"4873:21:14"}]},"documentation":{"id":5050,"nodeType":"StructuredDocumentation","src":"4398:280:14","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5077,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:14","nodeType":"FunctionDefinition","parameters":{"id":5053,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5052,"mutability":"mutable","name":"value","nameLocation":"4710:5:14","nodeType":"VariableDeclaration","scope":5077,"src":"4702:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5051,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:14"},"returnParameters":{"id":5056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5055,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5077,"src":"4740:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5054,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:14","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:14"},"scope":6619,"src":"4683:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5104,"nodeType":"Block","src":"5258:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5085,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"5272:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5087,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5086,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:14","memberName":"max","nodeType":"MemberAccess","src":"5280:17:14","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5098,"nodeType":"IfStatement","src":"5268:105:14","trueBody":{"id":5097,"nodeType":"Block","src":"5299:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:14","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"5356:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5092,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"5320:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5096,"nodeType":"RevertStatement","src":"5313:49:14"}]}},{"expression":{"arguments":[{"id":5101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5080,"src":"5397:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5100,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5099,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:14","typeDescriptions":{}}},"id":5102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5084,"id":5103,"nodeType":"Return","src":"5382:21:14"}]},"documentation":{"id":5078,"nodeType":"StructuredDocumentation","src":"4907:280:14","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5105,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:14","nodeType":"FunctionDefinition","parameters":{"id":5081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5080,"mutability":"mutable","name":"value","nameLocation":"5219:5:14","nodeType":"VariableDeclaration","scope":5105,"src":"5211:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5079,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:14"},"returnParameters":{"id":5084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5105,"src":"5249:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5082,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:14","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:14"},"scope":6619,"src":"5192:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5132,"nodeType":"Block","src":"5767:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"5781:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5115,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5114,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:14","memberName":"max","nodeType":"MemberAccess","src":"5789:17:14","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5126,"nodeType":"IfStatement","src":"5777:105:14","trueBody":{"id":5125,"nodeType":"Block","src":"5808:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:14","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"5865:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5120,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"5829:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5124,"nodeType":"RevertStatement","src":"5822:49:14"}]}},{"expression":{"arguments":[{"id":5129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"5906:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5128,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5127,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:14","typeDescriptions":{}}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5112,"id":5131,"nodeType":"Return","src":"5891:21:14"}]},"documentation":{"id":5106,"nodeType":"StructuredDocumentation","src":"5416:280:14","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5133,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:14","nodeType":"FunctionDefinition","parameters":{"id":5109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5108,"mutability":"mutable","name":"value","nameLocation":"5728:5:14","nodeType":"VariableDeclaration","scope":5133,"src":"5720:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5107,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:14"},"returnParameters":{"id":5112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5133,"src":"5758:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5110,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:14","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:14"},"scope":6619,"src":"5701:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5160,"nodeType":"Block","src":"6276:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5141,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"6290:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5143,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5142,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:14","memberName":"max","nodeType":"MemberAccess","src":"6298:17:14","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5154,"nodeType":"IfStatement","src":"6286:105:14","trueBody":{"id":5153,"nodeType":"Block","src":"6317:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:14","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5150,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"6374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5148,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"6338:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5152,"nodeType":"RevertStatement","src":"6331:49:14"}]}},{"expression":{"arguments":[{"id":5157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5136,"src":"6415:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5155,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:14","typeDescriptions":{}}},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5140,"id":5159,"nodeType":"Return","src":"6400:21:14"}]},"documentation":{"id":5134,"nodeType":"StructuredDocumentation","src":"5925:280:14","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5161,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:14","nodeType":"FunctionDefinition","parameters":{"id":5137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5136,"mutability":"mutable","name":"value","nameLocation":"6237:5:14","nodeType":"VariableDeclaration","scope":5161,"src":"6229:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5135,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:14"},"returnParameters":{"id":5140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5161,"src":"6267:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5138,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:14","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:14"},"scope":6619,"src":"6210:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5188,"nodeType":"Block","src":"6785:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5169,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"6799:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5171,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5170,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:14","memberName":"max","nodeType":"MemberAccess","src":"6807:17:14","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5182,"nodeType":"IfStatement","src":"6795:105:14","trueBody":{"id":5181,"nodeType":"Block","src":"6826:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:14","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"6883:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5176,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"6847:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5180,"nodeType":"RevertStatement","src":"6840:49:14"}]}},{"expression":{"arguments":[{"id":5185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5164,"src":"6924:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5183,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:14","typeDescriptions":{}}},"id":5186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5168,"id":5187,"nodeType":"Return","src":"6909:21:14"}]},"documentation":{"id":5162,"nodeType":"StructuredDocumentation","src":"6434:280:14","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5189,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:14","nodeType":"FunctionDefinition","parameters":{"id":5165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5164,"mutability":"mutable","name":"value","nameLocation":"6746:5:14","nodeType":"VariableDeclaration","scope":5189,"src":"6738:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5163,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:14"},"returnParameters":{"id":5168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5189,"src":"6776:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5166,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:14","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:14"},"scope":6619,"src":"6719:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5216,"nodeType":"Block","src":"7294:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5197,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"7308:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5199,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5198,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:14","memberName":"max","nodeType":"MemberAccess","src":"7316:17:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5210,"nodeType":"IfStatement","src":"7304:105:14","trueBody":{"id":5209,"nodeType":"Block","src":"7335:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:14","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"7392:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5204,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"7356:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5208,"nodeType":"RevertStatement","src":"7349:49:14"}]}},{"expression":{"arguments":[{"id":5213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5192,"src":"7433:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5211,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:14","typeDescriptions":{}}},"id":5214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5196,"id":5215,"nodeType":"Return","src":"7418:21:14"}]},"documentation":{"id":5190,"nodeType":"StructuredDocumentation","src":"6943:280:14","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5217,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:14","nodeType":"FunctionDefinition","parameters":{"id":5193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5192,"mutability":"mutable","name":"value","nameLocation":"7255:5:14","nodeType":"VariableDeclaration","scope":5217,"src":"7247:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5191,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:14"},"returnParameters":{"id":5196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5217,"src":"7285:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5194,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:14","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:14"},"scope":6619,"src":"7228:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5244,"nodeType":"Block","src":"7803:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"7817:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5227,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5226,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5230,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:14","memberName":"max","nodeType":"MemberAccess","src":"7825:17:14","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5238,"nodeType":"IfStatement","src":"7813:105:14","trueBody":{"id":5237,"nodeType":"Block","src":"7844:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:14","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"7901:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5232,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"7865:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5236,"nodeType":"RevertStatement","src":"7858:49:14"}]}},{"expression":{"arguments":[{"id":5241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5220,"src":"7942:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5239,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:14","typeDescriptions":{}}},"id":5242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5224,"id":5243,"nodeType":"Return","src":"7927:21:14"}]},"documentation":{"id":5218,"nodeType":"StructuredDocumentation","src":"7452:280:14","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5245,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:14","nodeType":"FunctionDefinition","parameters":{"id":5221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5220,"mutability":"mutable","name":"value","nameLocation":"7764:5:14","nodeType":"VariableDeclaration","scope":5245,"src":"7756:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5219,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:14"},"returnParameters":{"id":5224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5223,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5245,"src":"7794:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5222,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:14","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:14"},"scope":6619,"src":"7737:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5272,"nodeType":"Block","src":"8312:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"8326:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5255,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5254,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5258,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:14","memberName":"max","nodeType":"MemberAccess","src":"8334:17:14","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5266,"nodeType":"IfStatement","src":"8322:105:14","trueBody":{"id":5265,"nodeType":"Block","src":"8353:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:14","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"8410:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5260,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"8374:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5264,"nodeType":"RevertStatement","src":"8367:49:14"}]}},{"expression":{"arguments":[{"id":5269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"8451:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5267,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:14","typeDescriptions":{}}},"id":5270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5252,"id":5271,"nodeType":"Return","src":"8436:21:14"}]},"documentation":{"id":5246,"nodeType":"StructuredDocumentation","src":"7961:280:14","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5273,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:14","nodeType":"FunctionDefinition","parameters":{"id":5249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5248,"mutability":"mutable","name":"value","nameLocation":"8273:5:14","nodeType":"VariableDeclaration","scope":5273,"src":"8265:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5247,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:14"},"returnParameters":{"id":5252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5273,"src":"8303:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5250,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:14","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:14"},"scope":6619,"src":"8246:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5300,"nodeType":"Block","src":"8821:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"8835:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5283,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5282,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:14","memberName":"max","nodeType":"MemberAccess","src":"8843:17:14","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5294,"nodeType":"IfStatement","src":"8831:105:14","trueBody":{"id":5293,"nodeType":"Block","src":"8862:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:14","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5290,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"8919:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5288,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"8883:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5292,"nodeType":"RevertStatement","src":"8876:49:14"}]}},{"expression":{"arguments":[{"id":5297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5276,"src":"8960:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5295,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:14","typeDescriptions":{}}},"id":5298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5280,"id":5299,"nodeType":"Return","src":"8945:21:14"}]},"documentation":{"id":5274,"nodeType":"StructuredDocumentation","src":"8470:280:14","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5301,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:14","nodeType":"FunctionDefinition","parameters":{"id":5277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5276,"mutability":"mutable","name":"value","nameLocation":"8782:5:14","nodeType":"VariableDeclaration","scope":5301,"src":"8774:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5275,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:14"},"returnParameters":{"id":5280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5301,"src":"8812:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5278,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:14","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:14"},"scope":6619,"src":"8755:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5328,"nodeType":"Block","src":"9330:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5309,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"9344:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5311,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5310,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:14","memberName":"max","nodeType":"MemberAccess","src":"9352:17:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5322,"nodeType":"IfStatement","src":"9340:105:14","trueBody":{"id":5321,"nodeType":"Block","src":"9371:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"9428:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5316,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"9392:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5320,"nodeType":"RevertStatement","src":"9385:49:14"}]}},{"expression":{"arguments":[{"id":5325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5304,"src":"9469:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5323,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:14","typeDescriptions":{}}},"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5308,"id":5327,"nodeType":"Return","src":"9454:21:14"}]},"documentation":{"id":5302,"nodeType":"StructuredDocumentation","src":"8979:280:14","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5329,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:14","nodeType":"FunctionDefinition","parameters":{"id":5305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5304,"mutability":"mutable","name":"value","nameLocation":"9291:5:14","nodeType":"VariableDeclaration","scope":5329,"src":"9283:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5303,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:14"},"returnParameters":{"id":5308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5307,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5329,"src":"9321:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5306,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:14","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:14"},"scope":6619,"src":"9264:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5356,"nodeType":"Block","src":"9839:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5337,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"9853:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5339,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5338,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:14","memberName":"max","nodeType":"MemberAccess","src":"9861:17:14","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5350,"nodeType":"IfStatement","src":"9849:105:14","trueBody":{"id":5349,"nodeType":"Block","src":"9880:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:14","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"9937:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5344,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"9901:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5348,"nodeType":"RevertStatement","src":"9894:49:14"}]}},{"expression":{"arguments":[{"id":5353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5332,"src":"9978:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5352,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5351,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:14","typeDescriptions":{}}},"id":5354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5336,"id":5355,"nodeType":"Return","src":"9963:21:14"}]},"documentation":{"id":5330,"nodeType":"StructuredDocumentation","src":"9488:280:14","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5357,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:14","nodeType":"FunctionDefinition","parameters":{"id":5333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5332,"mutability":"mutable","name":"value","nameLocation":"9800:5:14","nodeType":"VariableDeclaration","scope":5357,"src":"9792:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5331,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:14"},"returnParameters":{"id":5336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5335,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5357,"src":"9830:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5334,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:14","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:14"},"scope":6619,"src":"9773:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5384,"nodeType":"Block","src":"10348:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5365,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"10362:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5367,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5366,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:14","memberName":"max","nodeType":"MemberAccess","src":"10370:17:14","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5378,"nodeType":"IfStatement","src":"10358:105:14","trueBody":{"id":5377,"nodeType":"Block","src":"10389:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:14","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5374,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"10446:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5372,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"10410:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5376,"nodeType":"RevertStatement","src":"10403:49:14"}]}},{"expression":{"arguments":[{"id":5381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5360,"src":"10487:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5379,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:14","typeDescriptions":{}}},"id":5382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5364,"id":5383,"nodeType":"Return","src":"10472:21:14"}]},"documentation":{"id":5358,"nodeType":"StructuredDocumentation","src":"9997:280:14","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5385,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:14","nodeType":"FunctionDefinition","parameters":{"id":5361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5360,"mutability":"mutable","name":"value","nameLocation":"10309:5:14","nodeType":"VariableDeclaration","scope":5385,"src":"10301:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5359,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:14"},"returnParameters":{"id":5364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5385,"src":"10339:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5362,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:14","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:14"},"scope":6619,"src":"10282:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5412,"nodeType":"Block","src":"10857:152:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"10871:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5395,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5394,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:14","memberName":"max","nodeType":"MemberAccess","src":"10879:17:14","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5406,"nodeType":"IfStatement","src":"10867:105:14","trueBody":{"id":5405,"nodeType":"Block","src":"10898:74:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:14","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"10955:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5400,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"10919:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5404,"nodeType":"RevertStatement","src":"10912:49:14"}]}},{"expression":{"arguments":[{"id":5409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5388,"src":"10996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5407,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:14","typeDescriptions":{}}},"id":5410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5392,"id":5411,"nodeType":"Return","src":"10981:21:14"}]},"documentation":{"id":5386,"nodeType":"StructuredDocumentation","src":"10506:280:14","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5413,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:14","nodeType":"FunctionDefinition","parameters":{"id":5389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5388,"mutability":"mutable","name":"value","nameLocation":"10818:5:14","nodeType":"VariableDeclaration","scope":5413,"src":"10810:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5387,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:14"},"returnParameters":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5413,"src":"10848:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5390,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:14","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:14"},"scope":6619,"src":"10791:218:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5440,"nodeType":"Block","src":"11360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5421,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"11374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5423,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5422,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:14","memberName":"max","nodeType":"MemberAccess","src":"11382:16:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5434,"nodeType":"IfStatement","src":"11370:103:14","trueBody":{"id":5433,"nodeType":"Block","src":"11400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5430,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"11456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5428,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"11421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5432,"nodeType":"RevertStatement","src":"11414:48:14"}]}},{"expression":{"arguments":[{"id":5437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5416,"src":"11496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5436,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5435,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:14","typeDescriptions":{}}},"id":5438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5420,"id":5439,"nodeType":"Return","src":"11482:20:14"}]},"documentation":{"id":5414,"nodeType":"StructuredDocumentation","src":"11015:276:14","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5441,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:14","nodeType":"FunctionDefinition","parameters":{"id":5417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5416,"mutability":"mutable","name":"value","nameLocation":"11322:5:14","nodeType":"VariableDeclaration","scope":5441,"src":"11314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5415,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:14"},"returnParameters":{"id":5420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5419,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5441,"src":"11352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5418,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:14","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:14"},"scope":6619,"src":"11296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5468,"nodeType":"Block","src":"11860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5449,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"11874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5451,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5450,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5454,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:14","memberName":"max","nodeType":"MemberAccess","src":"11882:16:14","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5462,"nodeType":"IfStatement","src":"11870:103:14","trueBody":{"id":5461,"nodeType":"Block","src":"11900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"11956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5456,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"11921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5460,"nodeType":"RevertStatement","src":"11914:48:14"}]}},{"expression":{"arguments":[{"id":5465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5444,"src":"11996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5464,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5463,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:14","typeDescriptions":{}}},"id":5466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5448,"id":5467,"nodeType":"Return","src":"11982:20:14"}]},"documentation":{"id":5442,"nodeType":"StructuredDocumentation","src":"11515:276:14","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5469,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:14","nodeType":"FunctionDefinition","parameters":{"id":5445,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5444,"mutability":"mutable","name":"value","nameLocation":"11822:5:14","nodeType":"VariableDeclaration","scope":5469,"src":"11814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5443,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:14"},"returnParameters":{"id":5448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5447,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5469,"src":"11852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5446,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:14","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:14"},"scope":6619,"src":"11796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5496,"nodeType":"Block","src":"12360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"12374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5479,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5478,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:14","memberName":"max","nodeType":"MemberAccess","src":"12382:16:14","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5490,"nodeType":"IfStatement","src":"12370:103:14","trueBody":{"id":5489,"nodeType":"Block","src":"12400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5486,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"12456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5484,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"12421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5488,"nodeType":"RevertStatement","src":"12414:48:14"}]}},{"expression":{"arguments":[{"id":5493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5472,"src":"12496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5492,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5491,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:14","typeDescriptions":{}}},"id":5494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5476,"id":5495,"nodeType":"Return","src":"12482:20:14"}]},"documentation":{"id":5470,"nodeType":"StructuredDocumentation","src":"12015:276:14","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5497,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:14","nodeType":"FunctionDefinition","parameters":{"id":5473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5472,"mutability":"mutable","name":"value","nameLocation":"12322:5:14","nodeType":"VariableDeclaration","scope":5497,"src":"12314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5471,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:14"},"returnParameters":{"id":5476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5497,"src":"12352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5474,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:14","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:14"},"scope":6619,"src":"12296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5524,"nodeType":"Block","src":"12860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"12874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5507,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5506,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5509,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:14","memberName":"max","nodeType":"MemberAccess","src":"12882:16:14","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5518,"nodeType":"IfStatement","src":"12870:103:14","trueBody":{"id":5517,"nodeType":"Block","src":"12900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5514,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"12956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5512,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"12921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5516,"nodeType":"RevertStatement","src":"12914:48:14"}]}},{"expression":{"arguments":[{"id":5521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"12996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5519,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:14","typeDescriptions":{}}},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5504,"id":5523,"nodeType":"Return","src":"12982:20:14"}]},"documentation":{"id":5498,"nodeType":"StructuredDocumentation","src":"12515:276:14","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5525,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:14","nodeType":"FunctionDefinition","parameters":{"id":5501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"value","nameLocation":"12822:5:14","nodeType":"VariableDeclaration","scope":5525,"src":"12814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5499,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:14"},"returnParameters":{"id":5504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5525,"src":"12852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5502,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:14","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:14"},"scope":6619,"src":"12796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5552,"nodeType":"Block","src":"13360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"13374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5535,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5534,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:14","memberName":"max","nodeType":"MemberAccess","src":"13382:16:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5546,"nodeType":"IfStatement","src":"13370:103:14","trueBody":{"id":5545,"nodeType":"Block","src":"13400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"13456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5540,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"13421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5544,"nodeType":"RevertStatement","src":"13414:48:14"}]}},{"expression":{"arguments":[{"id":5549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5528,"src":"13496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5547,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:14","typeDescriptions":{}}},"id":5550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5532,"id":5551,"nodeType":"Return","src":"13482:20:14"}]},"documentation":{"id":5526,"nodeType":"StructuredDocumentation","src":"13015:276:14","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5553,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:14","nodeType":"FunctionDefinition","parameters":{"id":5529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5528,"mutability":"mutable","name":"value","nameLocation":"13322:5:14","nodeType":"VariableDeclaration","scope":5553,"src":"13314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5527,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:14"},"returnParameters":{"id":5532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5553,"src":"13352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5530,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:14","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:14"},"scope":6619,"src":"13296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5580,"nodeType":"Block","src":"13860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5561,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"13874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5563,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5562,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:14","memberName":"max","nodeType":"MemberAccess","src":"13882:16:14","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5574,"nodeType":"IfStatement","src":"13870:103:14","trueBody":{"id":5573,"nodeType":"Block","src":"13900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"13956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5568,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"13921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5572,"nodeType":"RevertStatement","src":"13914:48:14"}]}},{"expression":{"arguments":[{"id":5577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5556,"src":"13996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5575,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:14","typeDescriptions":{}}},"id":5578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5560,"id":5579,"nodeType":"Return","src":"13982:20:14"}]},"documentation":{"id":5554,"nodeType":"StructuredDocumentation","src":"13515:276:14","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5581,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:14","nodeType":"FunctionDefinition","parameters":{"id":5557,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5556,"mutability":"mutable","name":"value","nameLocation":"13822:5:14","nodeType":"VariableDeclaration","scope":5581,"src":"13814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5555,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:14"},"returnParameters":{"id":5560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5559,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5581,"src":"13852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5558,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:14","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:14"},"scope":6619,"src":"13796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5608,"nodeType":"Block","src":"14360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5589,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"14374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5591,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5590,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5594,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:14","memberName":"max","nodeType":"MemberAccess","src":"14382:16:14","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5602,"nodeType":"IfStatement","src":"14370:103:14","trueBody":{"id":5601,"nodeType":"Block","src":"14400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5597,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5598,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"14456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5596,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"14421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5600,"nodeType":"RevertStatement","src":"14414:48:14"}]}},{"expression":{"arguments":[{"id":5605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5584,"src":"14496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5604,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5603,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:14","typeDescriptions":{}}},"id":5606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5588,"id":5607,"nodeType":"Return","src":"14482:20:14"}]},"documentation":{"id":5582,"nodeType":"StructuredDocumentation","src":"14015:276:14","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5609,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:14","nodeType":"FunctionDefinition","parameters":{"id":5585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5584,"mutability":"mutable","name":"value","nameLocation":"14322:5:14","nodeType":"VariableDeclaration","scope":5609,"src":"14314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5583,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:14"},"returnParameters":{"id":5588,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5587,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5609,"src":"14352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5586,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:14","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:14"},"scope":6619,"src":"14296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5636,"nodeType":"Block","src":"14860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"14874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5619,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5618,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:14","memberName":"max","nodeType":"MemberAccess","src":"14882:16:14","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5630,"nodeType":"IfStatement","src":"14870:103:14","trueBody":{"id":5629,"nodeType":"Block","src":"14900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"14956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5624,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"14921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5628,"nodeType":"RevertStatement","src":"14914:48:14"}]}},{"expression":{"arguments":[{"id":5633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"14996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5631,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:14","typeDescriptions":{}}},"id":5634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5616,"id":5635,"nodeType":"Return","src":"14982:20:14"}]},"documentation":{"id":5610,"nodeType":"StructuredDocumentation","src":"14515:276:14","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5637,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:14","nodeType":"FunctionDefinition","parameters":{"id":5613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5612,"mutability":"mutable","name":"value","nameLocation":"14822:5:14","nodeType":"VariableDeclaration","scope":5637,"src":"14814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5611,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:14"},"returnParameters":{"id":5616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5637,"src":"14852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5614,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:14","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:14"},"scope":6619,"src":"14796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5664,"nodeType":"Block","src":"15360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5645,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"15374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5647,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5646,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:14","memberName":"max","nodeType":"MemberAccess","src":"15382:16:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5658,"nodeType":"IfStatement","src":"15370:103:14","trueBody":{"id":5657,"nodeType":"Block","src":"15400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"15456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5652,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"15421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5656,"nodeType":"RevertStatement","src":"15414:48:14"}]}},{"expression":{"arguments":[{"id":5661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"15496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5659,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:14","typeDescriptions":{}}},"id":5662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5644,"id":5663,"nodeType":"Return","src":"15482:20:14"}]},"documentation":{"id":5638,"nodeType":"StructuredDocumentation","src":"15015:276:14","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5665,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:14","nodeType":"FunctionDefinition","parameters":{"id":5641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5640,"mutability":"mutable","name":"value","nameLocation":"15322:5:14","nodeType":"VariableDeclaration","scope":5665,"src":"15314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5639,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:14"},"returnParameters":{"id":5644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5665,"src":"15352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5642,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:14","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:14"},"scope":6619,"src":"15296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5692,"nodeType":"Block","src":"15860:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5673,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"15874:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5675,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5674,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:14","memberName":"max","nodeType":"MemberAccess","src":"15882:16:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5686,"nodeType":"IfStatement","src":"15870:103:14","trueBody":{"id":5685,"nodeType":"Block","src":"15900:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:14","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"15956:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5680,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"15921:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5684,"nodeType":"RevertStatement","src":"15914:48:14"}]}},{"expression":{"arguments":[{"id":5689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5668,"src":"15996:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5687,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:14","typeDescriptions":{}}},"id":5690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5672,"id":5691,"nodeType":"Return","src":"15982:20:14"}]},"documentation":{"id":5666,"nodeType":"StructuredDocumentation","src":"15515:276:14","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5693,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:14","nodeType":"FunctionDefinition","parameters":{"id":5669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5668,"mutability":"mutable","name":"value","nameLocation":"15822:5:14","nodeType":"VariableDeclaration","scope":5693,"src":"15814:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5667,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:14"},"returnParameters":{"id":5672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5693,"src":"15852:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5670,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:14","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:14"},"scope":6619,"src":"15796:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5720,"nodeType":"Block","src":"16360:149:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"16374:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5703,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5702,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:14","memberName":"max","nodeType":"MemberAccess","src":"16382:16:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5714,"nodeType":"IfStatement","src":"16370:103:14","trueBody":{"id":5713,"nodeType":"Block","src":"16400:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5710,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"16456:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5708,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"16421:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5712,"nodeType":"RevertStatement","src":"16414:48:14"}]}},{"expression":{"arguments":[{"id":5717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5696,"src":"16496:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5716,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5715,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:14","typeDescriptions":{}}},"id":5718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5700,"id":5719,"nodeType":"Return","src":"16482:20:14"}]},"documentation":{"id":5694,"nodeType":"StructuredDocumentation","src":"16015:276:14","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5721,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:14","nodeType":"FunctionDefinition","parameters":{"id":5697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5696,"mutability":"mutable","name":"value","nameLocation":"16322:5:14","nodeType":"VariableDeclaration","scope":5721,"src":"16314:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5695,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:14"},"returnParameters":{"id":5700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5721,"src":"16352:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5698,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:14","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:14"},"scope":6619,"src":"16296:213:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5748,"nodeType":"Block","src":"16854:146:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"16868:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5731,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5730,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:14","memberName":"max","nodeType":"MemberAccess","src":"16876:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5742,"nodeType":"IfStatement","src":"16864:101:14","trueBody":{"id":5741,"nodeType":"Block","src":"16893:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5737,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5738,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"16948:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5736,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4864,"src":"16914:30:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":5739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5740,"nodeType":"RevertStatement","src":"16907:47:14"}]}},{"expression":{"arguments":[{"id":5745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5724,"src":"16987:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5744,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5743,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:14","typeDescriptions":{}}},"id":5746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5728,"id":5747,"nodeType":"Return","src":"16974:19:14"}]},"documentation":{"id":5722,"nodeType":"StructuredDocumentation","src":"16515:272:14","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5749,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:14","nodeType":"FunctionDefinition","parameters":{"id":5725,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5724,"mutability":"mutable","name":"value","nameLocation":"16817:5:14","nodeType":"VariableDeclaration","scope":5749,"src":"16809:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5723,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:14"},"returnParameters":{"id":5728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5727,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5749,"src":"16847:5:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5726,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:14"},"scope":6619,"src":"16792:208:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5771,"nodeType":"Block","src":"17236:128:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5757,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"17250:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5765,"nodeType":"IfStatement","src":"17246:81:14","trueBody":{"id":5764,"nodeType":"Block","src":"17261:66:14","statements":[{"errorCall":{"arguments":[{"id":5761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"17310:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5760,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"17282:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":5762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5763,"nodeType":"RevertStatement","src":"17275:41:14"}]}},{"expression":{"arguments":[{"id":5768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5752,"src":"17351:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5767,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5766,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:14","typeDescriptions":{}}},"id":5769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5756,"id":5770,"nodeType":"Return","src":"17336:21:14"}]},"documentation":{"id":5750,"nodeType":"StructuredDocumentation","src":"17006:160:14","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5772,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:14","nodeType":"FunctionDefinition","parameters":{"id":5753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5752,"mutability":"mutable","name":"value","nameLocation":"17197:5:14","nodeType":"VariableDeclaration","scope":5772,"src":"17190:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5751,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:14"},"returnParameters":{"id":5756,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5755,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5772,"src":"17227:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5754,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:14"},"scope":6619,"src":"17171:193:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5797,"nodeType":"Block","src":"17761:150:14","statements":[{"expression":{"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5780,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"17771:10:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5775,"src":"17791:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5781,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:14","typeDescriptions":{}}},"id":5784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5786,"nodeType":"ExpressionStatement","src":"17771:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5787,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5778,"src":"17811:10:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5775,"src":"17825:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5796,"nodeType":"IfStatement","src":"17807:98:14","trueBody":{"id":5795,"nodeType":"Block","src":"17832:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:14","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5775,"src":"17888:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5790,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"17853:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5794,"nodeType":"RevertStatement","src":"17846:48:14"}]}}]},"documentation":{"id":5773,"nodeType":"StructuredDocumentation","src":"17370:312:14","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5798,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:14","nodeType":"FunctionDefinition","parameters":{"id":5776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5775,"mutability":"mutable","name":"value","nameLocation":"17712:5:14","nodeType":"VariableDeclaration","scope":5798,"src":"17705:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5774,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:14"},"returnParameters":{"id":5779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5778,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:14","nodeType":"VariableDeclaration","scope":5798,"src":"17742:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5777,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:14","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:14"},"scope":6619,"src":"17687:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5823,"nodeType":"Block","src":"18308:150:14","statements":[{"expression":{"id":5811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5806,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"18318:10:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5801,"src":"18338:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5807,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:14","typeDescriptions":{}}},"id":5810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5812,"nodeType":"ExpressionStatement","src":"18318:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5813,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5804,"src":"18358:10:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5814,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5801,"src":"18372:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5822,"nodeType":"IfStatement","src":"18354:98:14","trueBody":{"id":5821,"nodeType":"Block","src":"18379:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:14","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5818,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5801,"src":"18435:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5816,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"18400:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5820,"nodeType":"RevertStatement","src":"18393:48:14"}]}}]},"documentation":{"id":5799,"nodeType":"StructuredDocumentation","src":"17917:312:14","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5824,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:14","nodeType":"FunctionDefinition","parameters":{"id":5802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5801,"mutability":"mutable","name":"value","nameLocation":"18259:5:14","nodeType":"VariableDeclaration","scope":5824,"src":"18252:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5800,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:14"},"returnParameters":{"id":5805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5804,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:14","nodeType":"VariableDeclaration","scope":5824,"src":"18289:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5803,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:14","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:14"},"scope":6619,"src":"18234:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5849,"nodeType":"Block","src":"18855:150:14","statements":[{"expression":{"id":5837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5832,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"18865:10:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5835,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"18885:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5833,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:14","typeDescriptions":{}}},"id":5836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5838,"nodeType":"ExpressionStatement","src":"18865:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5839,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5830,"src":"18905:10:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5840,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"18919:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5848,"nodeType":"IfStatement","src":"18901:98:14","trueBody":{"id":5847,"nodeType":"Block","src":"18926:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:14","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5844,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5827,"src":"18982:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5842,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"18947:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5846,"nodeType":"RevertStatement","src":"18940:48:14"}]}}]},"documentation":{"id":5825,"nodeType":"StructuredDocumentation","src":"18464:312:14","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5850,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:14","nodeType":"FunctionDefinition","parameters":{"id":5828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5827,"mutability":"mutable","name":"value","nameLocation":"18806:5:14","nodeType":"VariableDeclaration","scope":5850,"src":"18799:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5826,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:14"},"returnParameters":{"id":5831,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5830,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:14","nodeType":"VariableDeclaration","scope":5850,"src":"18836:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5829,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:14","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:14"},"scope":6619,"src":"18781:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5875,"nodeType":"Block","src":"19402:150:14","statements":[{"expression":{"id":5863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5858,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"19412:10:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"19432:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5859,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:14","typeDescriptions":{}}},"id":5862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5864,"nodeType":"ExpressionStatement","src":"19412:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5865,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5856,"src":"19452:10:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"19466:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5874,"nodeType":"IfStatement","src":"19448:98:14","trueBody":{"id":5873,"nodeType":"Block","src":"19473:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:14","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5870,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5853,"src":"19529:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5868,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"19494:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5872,"nodeType":"RevertStatement","src":"19487:48:14"}]}}]},"documentation":{"id":5851,"nodeType":"StructuredDocumentation","src":"19011:312:14","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5876,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:14","nodeType":"FunctionDefinition","parameters":{"id":5854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5853,"mutability":"mutable","name":"value","nameLocation":"19353:5:14","nodeType":"VariableDeclaration","scope":5876,"src":"19346:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5852,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:14"},"returnParameters":{"id":5857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5856,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:14","nodeType":"VariableDeclaration","scope":5876,"src":"19383:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5855,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:14","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:14"},"scope":6619,"src":"19328:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5901,"nodeType":"Block","src":"19949:150:14","statements":[{"expression":{"id":5889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5884,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"19959:10:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5887,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"19979:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5886,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5885,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:14","typeDescriptions":{}}},"id":5888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5890,"nodeType":"ExpressionStatement","src":"19959:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5891,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5882,"src":"19999:10:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5892,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"20013:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5900,"nodeType":"IfStatement","src":"19995:98:14","trueBody":{"id":5899,"nodeType":"Block","src":"20020:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:14","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5879,"src":"20076:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5894,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"20041:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5898,"nodeType":"RevertStatement","src":"20034:48:14"}]}}]},"documentation":{"id":5877,"nodeType":"StructuredDocumentation","src":"19558:312:14","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5902,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:14","nodeType":"FunctionDefinition","parameters":{"id":5880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5879,"mutability":"mutable","name":"value","nameLocation":"19900:5:14","nodeType":"VariableDeclaration","scope":5902,"src":"19893:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5878,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:14"},"returnParameters":{"id":5883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5882,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:14","nodeType":"VariableDeclaration","scope":5902,"src":"19930:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5881,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:14","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:14"},"scope":6619,"src":"19875:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5927,"nodeType":"Block","src":"20496:150:14","statements":[{"expression":{"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5910,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"20506:10:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"20526:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5911,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:14","typeDescriptions":{}}},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5916,"nodeType":"ExpressionStatement","src":"20506:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5917,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5908,"src":"20546:10:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5918,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"20560:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5926,"nodeType":"IfStatement","src":"20542:98:14","trueBody":{"id":5925,"nodeType":"Block","src":"20567:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:14","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5905,"src":"20623:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5920,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"20588:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5924,"nodeType":"RevertStatement","src":"20581:48:14"}]}}]},"documentation":{"id":5903,"nodeType":"StructuredDocumentation","src":"20105:312:14","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5928,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:14","nodeType":"FunctionDefinition","parameters":{"id":5906,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5905,"mutability":"mutable","name":"value","nameLocation":"20447:5:14","nodeType":"VariableDeclaration","scope":5928,"src":"20440:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5904,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:14"},"returnParameters":{"id":5909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5908,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:14","nodeType":"VariableDeclaration","scope":5928,"src":"20477:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5907,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:14","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:14"},"scope":6619,"src":"20422:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5953,"nodeType":"Block","src":"21043:150:14","statements":[{"expression":{"id":5941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5936,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"21053:10:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5939,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"21073:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5937,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:14","typeDescriptions":{}}},"id":5940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5942,"nodeType":"ExpressionStatement","src":"21053:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5943,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5934,"src":"21093:10:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5944,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"21107:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5952,"nodeType":"IfStatement","src":"21089:98:14","trueBody":{"id":5951,"nodeType":"Block","src":"21114:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:14","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5948,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5931,"src":"21170:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5946,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"21135:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5950,"nodeType":"RevertStatement","src":"21128:48:14"}]}}]},"documentation":{"id":5929,"nodeType":"StructuredDocumentation","src":"20652:312:14","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5954,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:14","nodeType":"FunctionDefinition","parameters":{"id":5932,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5931,"mutability":"mutable","name":"value","nameLocation":"20994:5:14","nodeType":"VariableDeclaration","scope":5954,"src":"20987:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5930,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:14"},"returnParameters":{"id":5935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5934,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:14","nodeType":"VariableDeclaration","scope":5954,"src":"21024:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5933,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:14","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:14"},"scope":6619,"src":"20969:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5979,"nodeType":"Block","src":"21590:150:14","statements":[{"expression":{"id":5967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5962,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"21600:10:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5965,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"21620:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5963,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:14","typeDescriptions":{}}},"id":5966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5968,"nodeType":"ExpressionStatement","src":"21600:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5969,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5960,"src":"21640:10:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5970,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"21654:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5978,"nodeType":"IfStatement","src":"21636:98:14","trueBody":{"id":5977,"nodeType":"Block","src":"21661:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:14","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5974,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5957,"src":"21717:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5972,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"21682:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5976,"nodeType":"RevertStatement","src":"21675:48:14"}]}}]},"documentation":{"id":5955,"nodeType":"StructuredDocumentation","src":"21199:312:14","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5980,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:14","nodeType":"FunctionDefinition","parameters":{"id":5958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5957,"mutability":"mutable","name":"value","nameLocation":"21541:5:14","nodeType":"VariableDeclaration","scope":5980,"src":"21534:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5956,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:14"},"returnParameters":{"id":5961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5960,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:14","nodeType":"VariableDeclaration","scope":5980,"src":"21571:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5959,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:14","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:14"},"scope":6619,"src":"21516:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6005,"nodeType":"Block","src":"22137:150:14","statements":[{"expression":{"id":5993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5988,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"22147:10:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"22167:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5989,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:14","typeDescriptions":{}}},"id":5992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5994,"nodeType":"ExpressionStatement","src":"22147:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5995,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"22187:10:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"22201:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6004,"nodeType":"IfStatement","src":"22183:98:14","trueBody":{"id":6003,"nodeType":"Block","src":"22208:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:14","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":6000,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5983,"src":"22264:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5998,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"22229:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6002,"nodeType":"RevertStatement","src":"22222:48:14"}]}}]},"documentation":{"id":5981,"nodeType":"StructuredDocumentation","src":"21746:312:14","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":6006,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:14","nodeType":"FunctionDefinition","parameters":{"id":5984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5983,"mutability":"mutable","name":"value","nameLocation":"22088:5:14","nodeType":"VariableDeclaration","scope":6006,"src":"22081:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5982,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:14"},"returnParameters":{"id":5987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5986,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:14","nodeType":"VariableDeclaration","scope":6006,"src":"22118:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5985,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:14","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:14"},"scope":6619,"src":"22063:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6031,"nodeType":"Block","src":"22684:150:14","statements":[{"expression":{"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6014,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"22694:10:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6017,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"22714:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6015,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:14","typeDescriptions":{}}},"id":6018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6020,"nodeType":"ExpressionStatement","src":"22694:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6021,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6012,"src":"22734:10:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6022,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"22748:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6030,"nodeType":"IfStatement","src":"22730:98:14","trueBody":{"id":6029,"nodeType":"Block","src":"22755:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:14","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6009,"src":"22811:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6024,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"22776:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6028,"nodeType":"RevertStatement","src":"22769:48:14"}]}}]},"documentation":{"id":6007,"nodeType":"StructuredDocumentation","src":"22293:312:14","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6032,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:14","nodeType":"FunctionDefinition","parameters":{"id":6010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6009,"mutability":"mutable","name":"value","nameLocation":"22635:5:14","nodeType":"VariableDeclaration","scope":6032,"src":"22628:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6008,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:14"},"returnParameters":{"id":6013,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6012,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:14","nodeType":"VariableDeclaration","scope":6032,"src":"22665:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":6011,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:14","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:14"},"scope":6619,"src":"22610:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6057,"nodeType":"Block","src":"23231:150:14","statements":[{"expression":{"id":6045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6040,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"23241:10:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"23261:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6041,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:14","typeDescriptions":{}}},"id":6044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6046,"nodeType":"ExpressionStatement","src":"23241:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6047,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"23281:10:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"23295:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6056,"nodeType":"IfStatement","src":"23277:98:14","trueBody":{"id":6055,"nodeType":"Block","src":"23302:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:14","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6035,"src":"23358:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6050,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"23323:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6054,"nodeType":"RevertStatement","src":"23316:48:14"}]}}]},"documentation":{"id":6033,"nodeType":"StructuredDocumentation","src":"22840:312:14","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6058,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:14","nodeType":"FunctionDefinition","parameters":{"id":6036,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6035,"mutability":"mutable","name":"value","nameLocation":"23182:5:14","nodeType":"VariableDeclaration","scope":6058,"src":"23175:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6034,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:14"},"returnParameters":{"id":6039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6038,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:14","nodeType":"VariableDeclaration","scope":6058,"src":"23212:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6037,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:14","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:14"},"scope":6619,"src":"23157:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6083,"nodeType":"Block","src":"23778:150:14","statements":[{"expression":{"id":6071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6066,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"23788:10:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6069,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"23808:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6067,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:14","typeDescriptions":{}}},"id":6070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6072,"nodeType":"ExpressionStatement","src":"23788:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6073,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6064,"src":"23828:10:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6074,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"23842:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6082,"nodeType":"IfStatement","src":"23824:98:14","trueBody":{"id":6081,"nodeType":"Block","src":"23849:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:14","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6061,"src":"23905:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6076,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"23870:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6080,"nodeType":"RevertStatement","src":"23863:48:14"}]}}]},"documentation":{"id":6059,"nodeType":"StructuredDocumentation","src":"23387:312:14","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6084,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:14","nodeType":"FunctionDefinition","parameters":{"id":6062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6061,"mutability":"mutable","name":"value","nameLocation":"23729:5:14","nodeType":"VariableDeclaration","scope":6084,"src":"23722:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6060,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:14"},"returnParameters":{"id":6065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6064,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:14","nodeType":"VariableDeclaration","scope":6084,"src":"23759:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6063,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:14","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:14"},"scope":6619,"src":"23704:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6109,"nodeType":"Block","src":"24325:150:14","statements":[{"expression":{"id":6097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6092,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"24335:10:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"24355:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6093,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:14","typeDescriptions":{}}},"id":6096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6098,"nodeType":"ExpressionStatement","src":"24335:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6099,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6090,"src":"24375:10:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"24389:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6108,"nodeType":"IfStatement","src":"24371:98:14","trueBody":{"id":6107,"nodeType":"Block","src":"24396:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:14","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"24452:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6102,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"24417:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6106,"nodeType":"RevertStatement","src":"24410:48:14"}]}}]},"documentation":{"id":6085,"nodeType":"StructuredDocumentation","src":"23934:312:14","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6110,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:14","nodeType":"FunctionDefinition","parameters":{"id":6088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6087,"mutability":"mutable","name":"value","nameLocation":"24276:5:14","nodeType":"VariableDeclaration","scope":6110,"src":"24269:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6086,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:14"},"returnParameters":{"id":6091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6090,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:14","nodeType":"VariableDeclaration","scope":6110,"src":"24306:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6089,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:14","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:14"},"scope":6619,"src":"24251:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6135,"nodeType":"Block","src":"24872:150:14","statements":[{"expression":{"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"24882:10:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6121,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"24902:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6119,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:14","typeDescriptions":{}}},"id":6122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6124,"nodeType":"ExpressionStatement","src":"24882:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6125,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6116,"src":"24922:10:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6126,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"24936:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6134,"nodeType":"IfStatement","src":"24918:98:14","trueBody":{"id":6133,"nodeType":"Block","src":"24943:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:14","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6130,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6113,"src":"24999:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6128,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"24964:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6132,"nodeType":"RevertStatement","src":"24957:48:14"}]}}]},"documentation":{"id":6111,"nodeType":"StructuredDocumentation","src":"24481:312:14","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6136,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:14","nodeType":"FunctionDefinition","parameters":{"id":6114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6113,"mutability":"mutable","name":"value","nameLocation":"24823:5:14","nodeType":"VariableDeclaration","scope":6136,"src":"24816:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6112,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:14"},"returnParameters":{"id":6117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6116,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:14","nodeType":"VariableDeclaration","scope":6136,"src":"24853:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6115,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:14","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:14"},"scope":6619,"src":"24798:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6161,"nodeType":"Block","src":"25419:150:14","statements":[{"expression":{"id":6149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6144,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"25429:10:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6147,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"25449:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6145,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:14","typeDescriptions":{}}},"id":6148,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6150,"nodeType":"ExpressionStatement","src":"25429:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6151,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6142,"src":"25469:10:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6152,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"25483:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6160,"nodeType":"IfStatement","src":"25465:98:14","trueBody":{"id":6159,"nodeType":"Block","src":"25490:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:14","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6139,"src":"25546:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6154,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"25511:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6158,"nodeType":"RevertStatement","src":"25504:48:14"}]}}]},"documentation":{"id":6137,"nodeType":"StructuredDocumentation","src":"25028:312:14","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6162,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:14","nodeType":"FunctionDefinition","parameters":{"id":6140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6139,"mutability":"mutable","name":"value","nameLocation":"25370:5:14","nodeType":"VariableDeclaration","scope":6162,"src":"25363:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6138,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:14"},"returnParameters":{"id":6143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6142,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:14","nodeType":"VariableDeclaration","scope":6162,"src":"25400:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6141,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:14","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:14"},"scope":6619,"src":"25345:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6187,"nodeType":"Block","src":"25966:150:14","statements":[{"expression":{"id":6175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6170,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"25976:10:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"25996:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6171,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:14","typeDescriptions":{}}},"id":6174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6176,"nodeType":"ExpressionStatement","src":"25976:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6177,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6168,"src":"26016:10:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"26030:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6186,"nodeType":"IfStatement","src":"26012:98:14","trueBody":{"id":6185,"nodeType":"Block","src":"26037:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:14","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6165,"src":"26093:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6180,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"26058:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6184,"nodeType":"RevertStatement","src":"26051:48:14"}]}}]},"documentation":{"id":6163,"nodeType":"StructuredDocumentation","src":"25575:312:14","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6188,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:14","nodeType":"FunctionDefinition","parameters":{"id":6166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6165,"mutability":"mutable","name":"value","nameLocation":"25917:5:14","nodeType":"VariableDeclaration","scope":6188,"src":"25910:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6164,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:14"},"returnParameters":{"id":6169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6168,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:14","nodeType":"VariableDeclaration","scope":6188,"src":"25947:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6167,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:14","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:14"},"scope":6619,"src":"25892:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6213,"nodeType":"Block","src":"26513:150:14","statements":[{"expression":{"id":6201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6196,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6194,"src":"26523:10:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6191,"src":"26543:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6197,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:14","typeDescriptions":{}}},"id":6200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6202,"nodeType":"ExpressionStatement","src":"26523:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6203,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6194,"src":"26563:10:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6191,"src":"26577:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6212,"nodeType":"IfStatement","src":"26559:98:14","trueBody":{"id":6211,"nodeType":"Block","src":"26584:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:14","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6191,"src":"26640:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6206,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"26605:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6210,"nodeType":"RevertStatement","src":"26598:48:14"}]}}]},"documentation":{"id":6189,"nodeType":"StructuredDocumentation","src":"26122:312:14","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6214,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:14","nodeType":"FunctionDefinition","parameters":{"id":6192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6191,"mutability":"mutable","name":"value","nameLocation":"26464:5:14","nodeType":"VariableDeclaration","scope":6214,"src":"26457:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6190,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:14"},"returnParameters":{"id":6195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6194,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:14","nodeType":"VariableDeclaration","scope":6214,"src":"26494:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6193,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:14","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:14"},"scope":6619,"src":"26439:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6239,"nodeType":"Block","src":"27060:150:14","statements":[{"expression":{"id":6227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6222,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"27070:10:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6225,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"27090:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6223,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:14","typeDescriptions":{}}},"id":6226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6228,"nodeType":"ExpressionStatement","src":"27070:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6229,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6220,"src":"27110:10:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6230,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"27124:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6238,"nodeType":"IfStatement","src":"27106:98:14","trueBody":{"id":6237,"nodeType":"Block","src":"27131:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:14","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6217,"src":"27187:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6232,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"27152:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6236,"nodeType":"RevertStatement","src":"27145:48:14"}]}}]},"documentation":{"id":6215,"nodeType":"StructuredDocumentation","src":"26669:312:14","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6240,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:14","nodeType":"FunctionDefinition","parameters":{"id":6218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6217,"mutability":"mutable","name":"value","nameLocation":"27011:5:14","nodeType":"VariableDeclaration","scope":6240,"src":"27004:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6216,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:14"},"returnParameters":{"id":6221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6220,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:14","nodeType":"VariableDeclaration","scope":6240,"src":"27041:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6219,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:14","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:14"},"scope":6619,"src":"26986:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6265,"nodeType":"Block","src":"27607:150:14","statements":[{"expression":{"id":6253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6248,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"27617:10:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"27637:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6249,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:14","typeDescriptions":{}}},"id":6252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6254,"nodeType":"ExpressionStatement","src":"27617:26:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6255,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6246,"src":"27657:10:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"27671:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6264,"nodeType":"IfStatement","src":"27653:98:14","trueBody":{"id":6263,"nodeType":"Block","src":"27678:73:14","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:14","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6243,"src":"27734:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6258,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"27699:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6262,"nodeType":"RevertStatement","src":"27692:48:14"}]}}]},"documentation":{"id":6241,"nodeType":"StructuredDocumentation","src":"27216:312:14","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6266,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:14","nodeType":"FunctionDefinition","parameters":{"id":6244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6243,"mutability":"mutable","name":"value","nameLocation":"27558:5:14","nodeType":"VariableDeclaration","scope":6266,"src":"27551:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6242,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:14"},"returnParameters":{"id":6247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6246,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:14","nodeType":"VariableDeclaration","scope":6266,"src":"27588:17:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6245,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:14","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:14"},"scope":6619,"src":"27533:224:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6291,"nodeType":"Block","src":"28147:148:14","statements":[{"expression":{"id":6279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6274,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6272,"src":"28157:10:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"28176:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6275,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:14","typeDescriptions":{}}},"id":6278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6280,"nodeType":"ExpressionStatement","src":"28157:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6281,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6272,"src":"28196:10:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6282,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"28210:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6290,"nodeType":"IfStatement","src":"28192:97:14","trueBody":{"id":6289,"nodeType":"Block","src":"28217:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:14","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6286,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6269,"src":"28272:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6284,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"28238:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6288,"nodeType":"RevertStatement","src":"28231:47:14"}]}}]},"documentation":{"id":6267,"nodeType":"StructuredDocumentation","src":"27763:307:14","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6292,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:14","nodeType":"FunctionDefinition","parameters":{"id":6270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6269,"mutability":"mutable","name":"value","nameLocation":"28099:5:14","nodeType":"VariableDeclaration","scope":6292,"src":"28092:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6268,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:14"},"returnParameters":{"id":6273,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6272,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:14","nodeType":"VariableDeclaration","scope":6292,"src":"28129:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6271,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:14","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:14"},"scope":6619,"src":"28075:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6317,"nodeType":"Block","src":"28685:148:14","statements":[{"expression":{"id":6305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6300,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"28695:10:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"28714:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6301,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:14","typeDescriptions":{}}},"id":6304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6306,"nodeType":"ExpressionStatement","src":"28695:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6307,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6298,"src":"28734:10:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"28748:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6316,"nodeType":"IfStatement","src":"28730:97:14","trueBody":{"id":6315,"nodeType":"Block","src":"28755:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:14","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6312,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6295,"src":"28810:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6310,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"28776:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6314,"nodeType":"RevertStatement","src":"28769:47:14"}]}}]},"documentation":{"id":6293,"nodeType":"StructuredDocumentation","src":"28301:307:14","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6318,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:14","nodeType":"FunctionDefinition","parameters":{"id":6296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6295,"mutability":"mutable","name":"value","nameLocation":"28637:5:14","nodeType":"VariableDeclaration","scope":6318,"src":"28630:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6294,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:14"},"returnParameters":{"id":6299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6298,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:14","nodeType":"VariableDeclaration","scope":6318,"src":"28667:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6297,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:14","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:14"},"scope":6619,"src":"28613:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6343,"nodeType":"Block","src":"29223:148:14","statements":[{"expression":{"id":6331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6326,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"29233:10:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"29252:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6327,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:14","typeDescriptions":{}}},"id":6330,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6332,"nodeType":"ExpressionStatement","src":"29233:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6333,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6324,"src":"29272:10:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"29286:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6342,"nodeType":"IfStatement","src":"29268:97:14","trueBody":{"id":6341,"nodeType":"Block","src":"29293:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:14","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6338,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6321,"src":"29348:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6336,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"29314:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6340,"nodeType":"RevertStatement","src":"29307:47:14"}]}}]},"documentation":{"id":6319,"nodeType":"StructuredDocumentation","src":"28839:307:14","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6344,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:14","nodeType":"FunctionDefinition","parameters":{"id":6322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6321,"mutability":"mutable","name":"value","nameLocation":"29175:5:14","nodeType":"VariableDeclaration","scope":6344,"src":"29168:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6320,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:14"},"returnParameters":{"id":6325,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6324,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:14","nodeType":"VariableDeclaration","scope":6344,"src":"29205:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6323,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:14","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:14"},"scope":6619,"src":"29151:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6369,"nodeType":"Block","src":"29761:148:14","statements":[{"expression":{"id":6357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6352,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"29771:10:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"29790:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6353,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:14","typeDescriptions":{}}},"id":6356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6358,"nodeType":"ExpressionStatement","src":"29771:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6359,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6350,"src":"29810:10:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"29824:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6368,"nodeType":"IfStatement","src":"29806:97:14","trueBody":{"id":6367,"nodeType":"Block","src":"29831:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:14","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6364,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6347,"src":"29886:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6362,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"29852:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6366,"nodeType":"RevertStatement","src":"29845:47:14"}]}}]},"documentation":{"id":6345,"nodeType":"StructuredDocumentation","src":"29377:307:14","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6370,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:14","nodeType":"FunctionDefinition","parameters":{"id":6348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6347,"mutability":"mutable","name":"value","nameLocation":"29713:5:14","nodeType":"VariableDeclaration","scope":6370,"src":"29706:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6346,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:14"},"returnParameters":{"id":6351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6350,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:14","nodeType":"VariableDeclaration","scope":6370,"src":"29743:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6349,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:14","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:14"},"scope":6619,"src":"29689:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6395,"nodeType":"Block","src":"30299:148:14","statements":[{"expression":{"id":6383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6378,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"30309:10:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6373,"src":"30328:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6380,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6379,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:14","typeDescriptions":{}}},"id":6382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6384,"nodeType":"ExpressionStatement","src":"30309:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6385,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6376,"src":"30348:10:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6386,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6373,"src":"30362:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6394,"nodeType":"IfStatement","src":"30344:97:14","trueBody":{"id":6393,"nodeType":"Block","src":"30369:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:14","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6373,"src":"30424:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6388,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"30390:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6392,"nodeType":"RevertStatement","src":"30383:47:14"}]}}]},"documentation":{"id":6371,"nodeType":"StructuredDocumentation","src":"29915:307:14","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6396,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:14","nodeType":"FunctionDefinition","parameters":{"id":6374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6373,"mutability":"mutable","name":"value","nameLocation":"30251:5:14","nodeType":"VariableDeclaration","scope":6396,"src":"30244:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6372,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:14"},"returnParameters":{"id":6377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6376,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:14","nodeType":"VariableDeclaration","scope":6396,"src":"30281:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6375,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:14","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:14"},"scope":6619,"src":"30227:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6421,"nodeType":"Block","src":"30837:148:14","statements":[{"expression":{"id":6409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6404,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"30847:10:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"30866:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6406,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6405,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:14","typeDescriptions":{}}},"id":6408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6410,"nodeType":"ExpressionStatement","src":"30847:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6411,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6402,"src":"30886:10:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"30900:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6420,"nodeType":"IfStatement","src":"30882:97:14","trueBody":{"id":6419,"nodeType":"Block","src":"30907:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:14","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6399,"src":"30962:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6414,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"30928:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6418,"nodeType":"RevertStatement","src":"30921:47:14"}]}}]},"documentation":{"id":6397,"nodeType":"StructuredDocumentation","src":"30453:307:14","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6422,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:14","nodeType":"FunctionDefinition","parameters":{"id":6400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6399,"mutability":"mutable","name":"value","nameLocation":"30789:5:14","nodeType":"VariableDeclaration","scope":6422,"src":"30782:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6398,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:14"},"returnParameters":{"id":6403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6402,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:14","nodeType":"VariableDeclaration","scope":6422,"src":"30819:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6401,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:14","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:14"},"scope":6619,"src":"30765:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6447,"nodeType":"Block","src":"31375:148:14","statements":[{"expression":{"id":6435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6430,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"31385:10:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6433,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"31404:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6431,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:14","typeDescriptions":{}}},"id":6434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6436,"nodeType":"ExpressionStatement","src":"31385:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6437,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6428,"src":"31424:10:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6438,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"31438:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6446,"nodeType":"IfStatement","src":"31420:97:14","trueBody":{"id":6445,"nodeType":"Block","src":"31445:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:14","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6442,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6425,"src":"31500:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6440,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"31466:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6444,"nodeType":"RevertStatement","src":"31459:47:14"}]}}]},"documentation":{"id":6423,"nodeType":"StructuredDocumentation","src":"30991:307:14","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6448,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:14","nodeType":"FunctionDefinition","parameters":{"id":6426,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6425,"mutability":"mutable","name":"value","nameLocation":"31327:5:14","nodeType":"VariableDeclaration","scope":6448,"src":"31320:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6424,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:14"},"returnParameters":{"id":6429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6428,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:14","nodeType":"VariableDeclaration","scope":6448,"src":"31357:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6427,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:14","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:14"},"scope":6619,"src":"31303:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6473,"nodeType":"Block","src":"31913:148:14","statements":[{"expression":{"id":6461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6456,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"31923:10:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6451,"src":"31942:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6457,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:14","typeDescriptions":{}}},"id":6460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6462,"nodeType":"ExpressionStatement","src":"31923:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6463,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6454,"src":"31962:10:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6451,"src":"31976:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6472,"nodeType":"IfStatement","src":"31958:97:14","trueBody":{"id":6471,"nodeType":"Block","src":"31983:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:14","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6468,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6451,"src":"32038:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6466,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"32004:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6470,"nodeType":"RevertStatement","src":"31997:47:14"}]}}]},"documentation":{"id":6449,"nodeType":"StructuredDocumentation","src":"31529:307:14","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6474,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:14","nodeType":"FunctionDefinition","parameters":{"id":6452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6451,"mutability":"mutable","name":"value","nameLocation":"31865:5:14","nodeType":"VariableDeclaration","scope":6474,"src":"31858:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6450,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:14"},"returnParameters":{"id":6455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6454,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:14","nodeType":"VariableDeclaration","scope":6474,"src":"31895:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6453,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:14","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:14"},"scope":6619,"src":"31841:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6499,"nodeType":"Block","src":"32451:148:14","statements":[{"expression":{"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6482,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"32461:10:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6485,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"32480:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6483,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:14","typeDescriptions":{}}},"id":6486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6488,"nodeType":"ExpressionStatement","src":"32461:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6489,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6480,"src":"32500:10:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"32514:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6498,"nodeType":"IfStatement","src":"32496:97:14","trueBody":{"id":6497,"nodeType":"Block","src":"32521:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:14","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6494,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6477,"src":"32576:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6492,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"32542:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6496,"nodeType":"RevertStatement","src":"32535:47:14"}]}}]},"documentation":{"id":6475,"nodeType":"StructuredDocumentation","src":"32067:307:14","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6500,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:14","nodeType":"FunctionDefinition","parameters":{"id":6478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6477,"mutability":"mutable","name":"value","nameLocation":"32403:5:14","nodeType":"VariableDeclaration","scope":6500,"src":"32396:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6476,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:14"},"returnParameters":{"id":6481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6480,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:14","nodeType":"VariableDeclaration","scope":6500,"src":"32433:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6479,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:14","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:14"},"scope":6619,"src":"32379:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6525,"nodeType":"Block","src":"32989:148:14","statements":[{"expression":{"id":6513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6508,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"32999:10:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6511,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6503,"src":"33018:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6509,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:14","typeDescriptions":{}}},"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6514,"nodeType":"ExpressionStatement","src":"32999:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6515,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6506,"src":"33038:10:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6503,"src":"33052:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6524,"nodeType":"IfStatement","src":"33034:97:14","trueBody":{"id":6523,"nodeType":"Block","src":"33059:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:14","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6503,"src":"33114:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6518,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"33080:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6522,"nodeType":"RevertStatement","src":"33073:47:14"}]}}]},"documentation":{"id":6501,"nodeType":"StructuredDocumentation","src":"32605:307:14","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6526,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:14","nodeType":"FunctionDefinition","parameters":{"id":6504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6503,"mutability":"mutable","name":"value","nameLocation":"32941:5:14","nodeType":"VariableDeclaration","scope":6526,"src":"32934:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6502,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:14"},"returnParameters":{"id":6507,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6506,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:14","nodeType":"VariableDeclaration","scope":6526,"src":"32971:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6505,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:14","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:14"},"scope":6619,"src":"32917:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6551,"nodeType":"Block","src":"33527:148:14","statements":[{"expression":{"id":6539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6534,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"33537:10:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"33556:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6535,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:14","typeDescriptions":{}}},"id":6538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6540,"nodeType":"ExpressionStatement","src":"33537:25:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6541,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6532,"src":"33576:10:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6542,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"33590:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6550,"nodeType":"IfStatement","src":"33572:97:14","trueBody":{"id":6549,"nodeType":"Block","src":"33597:72:14","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:14","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6529,"src":"33652:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6544,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"33618:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6548,"nodeType":"RevertStatement","src":"33611:47:14"}]}}]},"documentation":{"id":6527,"nodeType":"StructuredDocumentation","src":"33143:307:14","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6552,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:14","nodeType":"FunctionDefinition","parameters":{"id":6530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6529,"mutability":"mutable","name":"value","nameLocation":"33479:5:14","nodeType":"VariableDeclaration","scope":6552,"src":"33472:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6528,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:14"},"returnParameters":{"id":6533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6532,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:14","nodeType":"VariableDeclaration","scope":6552,"src":"33509:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6531,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:14","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:14"},"scope":6619,"src":"33455:220:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6577,"nodeType":"Block","src":"34058:146:14","statements":[{"expression":{"id":6565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6560,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"34068:10:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"34086:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6561,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:14","typeDescriptions":{}}},"id":6564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6566,"nodeType":"ExpressionStatement","src":"34068:24:14"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6567,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6558,"src":"34106:10:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"34120:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6576,"nodeType":"IfStatement","src":"34102:96:14","trueBody":{"id":6575,"nodeType":"Block","src":"34127:71:14","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6555,"src":"34181:5:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6570,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4876,"src":"34148:29:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":6573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6574,"nodeType":"RevertStatement","src":"34141:46:14"}]}}]},"documentation":{"id":6553,"nodeType":"StructuredDocumentation","src":"33681:302:14","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6578,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:14","nodeType":"FunctionDefinition","parameters":{"id":6556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6555,"mutability":"mutable","name":"value","nameLocation":"34011:5:14","nodeType":"VariableDeclaration","scope":6578,"src":"34004:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6554,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:14"},"returnParameters":{"id":6559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6558,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:14","nodeType":"VariableDeclaration","scope":6578,"src":"34041:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6557,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:14","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:14"},"scope":6619,"src":"33988:216:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6607,"nodeType":"Block","src":"34444:250:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"34557:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6590,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:14","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6589,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:14","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6593,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:14","memberName":"max","nodeType":"MemberAccess","src":"34573:16:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6587,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:14","typeDescriptions":{}}},"id":6594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6601,"nodeType":"IfStatement","src":"34553:105:14","trueBody":{"id":6600,"nodeType":"Block","src":"34592:66:14","statements":[{"errorCall":{"arguments":[{"id":6597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"34641:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6596,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4881,"src":"34613:27:14","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6598,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6599,"nodeType":"RevertStatement","src":"34606:41:14"}]}},{"expression":{"arguments":[{"id":6604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6581,"src":"34681:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6603,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6602,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:14","typeDescriptions":{}}},"id":6605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6585,"id":6606,"nodeType":"Return","src":"34667:20:14"}]},"documentation":{"id":6579,"nodeType":"StructuredDocumentation","src":"34210:165:14","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6608,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:14","nodeType":"FunctionDefinition","parameters":{"id":6582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6581,"mutability":"mutable","name":"value","nameLocation":"34406:5:14","nodeType":"VariableDeclaration","scope":6608,"src":"34398:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6580,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:14"},"returnParameters":{"id":6585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6608,"src":"34436:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6583,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:14"},"scope":6619,"src":"34380:314:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6617,"nodeType":"Block","src":"34853:87:14","statements":[{"AST":{"nativeSrc":"34888:46:14","nodeType":"YulBlock","src":"34888:46:14","statements":[{"nativeSrc":"34902:22:14","nodeType":"YulAssignment","src":"34902:22:14","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:14","nodeType":"YulIdentifier","src":"34921:1:14"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:14","nodeType":"YulIdentifier","src":"34914:6:14"},"nativeSrc":"34914:9:14","nodeType":"YulFunctionCall","src":"34914:9:14"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:14","nodeType":"YulIdentifier","src":"34907:6:14"},"nativeSrc":"34907:17:14","nodeType":"YulFunctionCall","src":"34907:17:14"},"variableNames":[{"name":"u","nativeSrc":"34902:1:14","nodeType":"YulIdentifier","src":"34902:1:14"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6611,"isOffset":false,"isSlot":false,"src":"34921:1:14","valueSize":1},{"declaration":6614,"isOffset":false,"isSlot":false,"src":"34902:1:14","valueSize":1}],"flags":["memory-safe"],"id":6616,"nodeType":"InlineAssembly","src":"34863:71:14"}]},"documentation":{"id":6609,"nodeType":"StructuredDocumentation","src":"34700:90:14","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6618,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:14","nodeType":"FunctionDefinition","parameters":{"id":6612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6611,"mutability":"mutable","name":"b","nameLocation":"34816:1:14","nodeType":"VariableDeclaration","scope":6618,"src":"34811:6:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6610,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:14"},"returnParameters":{"id":6615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6614,"mutability":"mutable","name":"u","nameLocation":"34850:1:14","nodeType":"VariableDeclaration","scope":6618,"src":"34842:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6613,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:14"},"scope":6619,"src":"34795:145:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6620,"src":"769:34173:14","usedErrors":[4864,4869,4876,4881],"usedEvents":[]}],"src":"192:34751:14"},"id":14},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6619],"SignedMath":[6763]},"id":6764,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6621,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:15"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6623,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6764,"sourceUnit":6620,"src":"135:40:15","symbolAliases":[{"foreign":{"id":6622,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"143:8:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6624,"nodeType":"StructuredDocumentation","src":"177:80:15","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6763,"linearizedBaseContracts":[6763],"name":"SignedMath","nameLocation":"266:10:15","nodeType":"ContractDefinition","nodes":[{"body":{"id":6653,"nodeType":"Block","src":"746:215:15","statements":[{"id":6652,"nodeType":"UncheckedBlock","src":"756:199:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6636,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"894:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6637,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6629,"src":"900:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6638,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6631,"src":"904:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6645,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6627,"src":"932:9:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6643,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"916:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6619_$","typeString":"type(library SafeCast)"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:15","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6618,"src":"916:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6641,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:15","typeDescriptions":{}}},"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6649,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6635,"id":6651,"nodeType":"Return","src":"887:57:15"}]}]},"documentation":{"id":6625,"nodeType":"StructuredDocumentation","src":"283:374:15","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6654,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:15","nodeType":"FunctionDefinition","parameters":{"id":6632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6627,"mutability":"mutable","name":"condition","nameLocation":"684:9:15","nodeType":"VariableDeclaration","scope":6654,"src":"679:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6626,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6629,"mutability":"mutable","name":"a","nameLocation":"702:1:15","nodeType":"VariableDeclaration","scope":6654,"src":"695:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6628,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6631,"mutability":"mutable","name":"b","nameLocation":"712:1:15","nodeType":"VariableDeclaration","scope":6654,"src":"705:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6630,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:15"},"returnParameters":{"id":6635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6654,"src":"738:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6633,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:15"},"scope":6763,"src":"662:299:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6672,"nodeType":"Block","src":"1102:44:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6665,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"1127:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6666,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"1131:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6668,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6657,"src":"1134:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6669,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6659,"src":"1137:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6664,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"1119:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6663,"id":6671,"nodeType":"Return","src":"1112:27:15"}]},"documentation":{"id":6655,"nodeType":"StructuredDocumentation","src":"967:66:15","text":" @dev Returns the largest of two signed numbers."},"id":6673,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:15","nodeType":"FunctionDefinition","parameters":{"id":6660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6657,"mutability":"mutable","name":"a","nameLocation":"1058:1:15","nodeType":"VariableDeclaration","scope":6673,"src":"1051:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6656,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6659,"mutability":"mutable","name":"b","nameLocation":"1068:1:15","nodeType":"VariableDeclaration","scope":6673,"src":"1061:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6658,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:15"},"returnParameters":{"id":6663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6662,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6673,"src":"1094:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6661,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:15"},"scope":6763,"src":"1038:108:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6691,"nodeType":"Block","src":"1288:44:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6684,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"1313:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6685,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"1317:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6687,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6676,"src":"1320:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6688,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6678,"src":"1323:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6683,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6654,"src":"1305:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6682,"id":6690,"nodeType":"Return","src":"1298:27:15"}]},"documentation":{"id":6674,"nodeType":"StructuredDocumentation","src":"1152:67:15","text":" @dev Returns the smallest of two signed numbers."},"id":6692,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:15","nodeType":"FunctionDefinition","parameters":{"id":6679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6676,"mutability":"mutable","name":"a","nameLocation":"1244:1:15","nodeType":"VariableDeclaration","scope":6692,"src":"1237:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6675,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6678,"mutability":"mutable","name":"b","nameLocation":"1254:1:15","nodeType":"VariableDeclaration","scope":6692,"src":"1247:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6677,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:15"},"returnParameters":{"id":6682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6692,"src":"1280:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6680,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:15"},"scope":6763,"src":"1224:108:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6735,"nodeType":"Block","src":"1537:162:15","statements":[{"assignments":[6703],"declarations":[{"constant":false,"id":6703,"mutability":"mutable","name":"x","nameLocation":"1606:1:15","nodeType":"VariableDeclaration","scope":6735,"src":"1599:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6702,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6716,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6704,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"1611:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6705,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"1615:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6707,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6708,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"1622:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6709,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"1626:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6711,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6714,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:15"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6717,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"1651:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6722,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6703,"src":"1671:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:15","typeDescriptions":{}}},"id":6723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6718,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:15","typeDescriptions":{}}},"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6727,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6695,"src":"1685:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6728,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6697,"src":"1689:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6732,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6701,"id":6734,"nodeType":"Return","src":"1644:48:15"}]},"documentation":{"id":6693,"nodeType":"StructuredDocumentation","src":"1338:126:15","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6736,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:15","nodeType":"FunctionDefinition","parameters":{"id":6698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6695,"mutability":"mutable","name":"a","nameLocation":"1493:1:15","nodeType":"VariableDeclaration","scope":6736,"src":"1486:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6694,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6697,"mutability":"mutable","name":"b","nameLocation":"1503:1:15","nodeType":"VariableDeclaration","scope":6736,"src":"1496:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6696,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:15"},"returnParameters":{"id":6701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6736,"src":"1529:6:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6699,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:15"},"scope":6763,"src":"1469:230:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6761,"nodeType":"Block","src":"1843:767:15","statements":[{"id":6760,"nodeType":"UncheckedBlock","src":"1853:751:15","statements":[{"assignments":[6745],"declarations":[{"constant":false,"id":6745,"mutability":"mutable","name":"mask","nameLocation":"2424:4:15","nodeType":"VariableDeclaration","scope":6760,"src":"2417:11:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6744,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6749,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6746,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"2431:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6752,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6739,"src":"2576:1:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6753,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"2580:4:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6755,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6756,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6745,"src":"2588:4:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:15","typeDescriptions":{}}},"id":6758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6743,"id":6759,"nodeType":"Return","src":"2560:33:15"}]}]},"documentation":{"id":6737,"nodeType":"StructuredDocumentation","src":"1705:78:15","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6762,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:15","nodeType":"FunctionDefinition","parameters":{"id":6740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6739,"mutability":"mutable","name":"n","nameLocation":"1808:1:15","nodeType":"VariableDeclaration","scope":6762,"src":"1801:8:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6738,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:15"},"returnParameters":{"id":6743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6762,"src":"1834:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:15"},"scope":6763,"src":"1788:822:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6764,"src":"258:2354:15","usedErrors":[],"usedEvents":[]}],"src":"109:2504:15"},"id":15},"contracts/DAO.sol":{"ast":{"absolutePath":"contracts/DAO.sol","exportedSymbols":{"DAO":[7268],"DAONFT":[7325],"IERC7432":[7376]},"id":7269,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6765,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"32:24:16"},{"absolutePath":"interface/IERC7432.sol","file":"../interface/IERC7432.sol","id":6766,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7269,"sourceUnit":7377,"src":"57:35:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/DAONFT.sol","file":"./DAONFT.sol","id":6768,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7269,"sourceUnit":7326,"src":"93:36:16","symbolAliases":[{"foreign":{"id":6767,"name":"DAONFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7325,"src":"101:6:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6769,"name":"IERC7432","nameLocations":["147:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":7376,"src":"147:8:16"},"id":6770,"nodeType":"InheritanceSpecifier","src":"147:8:16"}],"canonicalName":"DAO","contractDependencies":[7325],"contractKind":"contract","fullyImplemented":true,"id":7268,"linearizedBaseContracts":[7268,7376],"name":"DAO","nameLocation":"140:3:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":6774,"mutability":"mutable","name":"roles","nameLocation":"167:5:16","nodeType":"VariableDeclaration","scope":7268,"src":"160:12:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role[]"},"typeName":{"baseType":{"id":6772,"nodeType":"UserDefinedTypeName","pathNode":{"id":6771,"name":"Role","nameLocations":["160:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":7337,"src":"160:4:16"},"referencedDeclaration":7337,"src":"160:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage_ptr","typeString":"struct IERC7432.Role"}},"id":6773,"nodeType":"ArrayTypeName","src":"160:6:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage_ptr","typeString":"struct IERC7432.Role[]"}},"visibility":"internal"},{"constant":false,"id":6777,"mutability":"mutable","name":"daoNFT","nameLocation":"183:6:16","nodeType":"VariableDeclaration","scope":7268,"src":"176:13:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_DAONFT_$7325","typeString":"contract DAONFT"},"typeName":{"id":6776,"nodeType":"UserDefinedTypeName","pathNode":{"id":6775,"name":"DAONFT","nameLocations":["176:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":7325,"src":"176:6:16"},"referencedDeclaration":7325,"src":"176:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_DAONFT_$7325","typeString":"contract DAONFT"}},"visibility":"internal"},{"canonicalName":"DAO.Proposal","id":6791,"members":[{"constant":false,"id":6779,"mutability":"mutable","name":"title","nameLocation":"223:5:16","nodeType":"VariableDeclaration","scope":6791,"src":"216:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6778,"name":"string","nodeType":"ElementaryTypeName","src":"216:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6781,"mutability":"mutable","name":"description","nameLocation":"241:11:16","nodeType":"VariableDeclaration","scope":6791,"src":"234:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6780,"name":"string","nodeType":"ElementaryTypeName","src":"234:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6783,"mutability":"mutable","name":"numOfVote","nameLocation":"266:9:16","nodeType":"VariableDeclaration","scope":6791,"src":"258:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6782,"name":"uint256","nodeType":"ElementaryTypeName","src":"258:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6785,"mutability":"mutable","name":"startTime","nameLocation":"289:9:16","nodeType":"VariableDeclaration","scope":6791,"src":"281:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6784,"name":"uint256","nodeType":"ElementaryTypeName","src":"281:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6787,"mutability":"mutable","name":"dealine","nameLocation":"312:7:16","nodeType":"VariableDeclaration","scope":6791,"src":"304:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6786,"name":"uint256","nodeType":"ElementaryTypeName","src":"304:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6790,"mutability":"mutable","name":"status","nameLocation":"332:6:16","nodeType":"VariableDeclaration","scope":6791,"src":"325:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$6813","typeString":"enum DAO.Status"},"typeName":{"id":6789,"nodeType":"UserDefinedTypeName","pathNode":{"id":6788,"name":"Status","nameLocations":["325:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":6813,"src":"325:6:16"},"referencedDeclaration":6813,"src":"325:6:16","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$6813","typeString":"enum DAO.Status"}},"visibility":"internal"}],"name":"Proposal","nameLocation":"201:8:16","nodeType":"StructDefinition","scope":7268,"src":"194:150:16","visibility":"public"},{"constant":false,"id":6797,"mutability":"mutable","name":"hasVoted","nameLocation":"392:8:16","nodeType":"VariableDeclaration","scope":7268,"src":"348:52:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"typeName":{"id":6796,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6792,"name":"address","nodeType":"ElementaryTypeName","src":"356:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"348:43:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6795,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6793,"name":"uint256","nodeType":"ElementaryTypeName","src":"374:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"366:24:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6794,"name":"bool","nodeType":"ElementaryTypeName","src":"385:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"internal"},{"constant":false,"id":6801,"mutability":"mutable","name":"proposals","nameLocation":"417:9:16","nodeType":"VariableDeclaration","scope":7268,"src":"406:20:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6791_storage_$dyn_storage","typeString":"struct DAO.Proposal[]"},"typeName":{"baseType":{"id":6799,"nodeType":"UserDefinedTypeName","pathNode":{"id":6798,"name":"Proposal","nameLocations":["406:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":6791,"src":"406:8:16"},"referencedDeclaration":6791,"src":"406:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_storage_ptr","typeString":"struct DAO.Proposal"}},"id":6800,"nodeType":"ArrayTypeName","src":"406:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6791_storage_$dyn_storage_ptr","typeString":"struct DAO.Proposal[]"}},"visibility":"internal"},{"constant":false,"id":6806,"mutability":"mutable","name":"userRole","nameLocation":"457:8:16","nodeType":"VariableDeclaration","scope":7268,"src":"432:33:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Role_$7337_storage_$","typeString":"mapping(address => struct IERC7432.Role)"},"typeName":{"id":6805,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6802,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"432:24:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Role_$7337_storage_$","typeString":"mapping(address => struct IERC7432.Role)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6804,"nodeType":"UserDefinedTypeName","pathNode":{"id":6803,"name":"Role","nameLocations":["451:4:16"],"nodeType":"IdentifierPath","referencedDeclaration":7337,"src":"451:4:16"},"referencedDeclaration":7337,"src":"451:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage_ptr","typeString":"struct IERC7432.Role"}}},"visibility":"internal"},{"constant":false,"id":6808,"mutability":"mutable","name":"_nextTokenId","nameLocation":"488:12:16","nodeType":"VariableDeclaration","scope":7268,"src":"472:28:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6807,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"canonicalName":"DAO.Status","id":6813,"members":[{"id":6809,"name":"ACTIVE","nameLocation":"527:6:16","nodeType":"EnumValue","src":"527:6:16"},{"id":6810,"name":"EXPIRED","nameLocation":"541:7:16","nodeType":"EnumValue","src":"541:7:16"},{"id":6811,"name":"PASSED","nameLocation":"556:6:16","nodeType":"EnumValue","src":"556:6:16"},{"id":6812,"name":"REJECTED","nameLocation":"570:8:16","nodeType":"EnumValue","src":"570:8:16"}],"name":"Status","nameLocation":"512:6:16","nodeType":"EnumDefinition","src":"507:77:16"},{"body":{"id":6857,"nodeType":"Block","src":"604:249:16","statements":[{"assignments":[6818],"declarations":[{"constant":false,"id":6818,"mutability":"mutable","name":"_daonft","nameLocation":"620:7:16","nodeType":"VariableDeclaration","scope":6857,"src":"613:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_DAONFT_$7325","typeString":"contract DAONFT"},"typeName":{"id":6817,"nodeType":"UserDefinedTypeName","pathNode":{"id":6816,"name":"DAONFT","nameLocations":["613:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":7325,"src":"613:6:16"},"referencedDeclaration":7325,"src":"613:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_DAONFT_$7325","typeString":"contract DAONFT"}},"visibility":"internal"}],"id":6823,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":6821,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"630:10:16","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_DAONFT_$7325_$","typeString":"function () returns (contract DAONFT)"},"typeName":{"id":6820,"nodeType":"UserDefinedTypeName","pathNode":{"id":6819,"name":"DAONFT","nameLocations":["634:6:16"],"nodeType":"IdentifierPath","referencedDeclaration":7325,"src":"634:6:16"},"referencedDeclaration":7325,"src":"634:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_DAONFT_$7325","typeString":"contract DAONFT"}}},"id":6822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"630:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_DAONFT_$7325","typeString":"contract DAONFT"}},"nodeType":"VariableDeclarationStatement","src":"613:29:16"},{"expression":{"id":6826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6824,"name":"daoNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"650:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_DAONFT_$7325","typeString":"contract DAONFT"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6825,"name":"_daonft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"659:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_DAONFT_$7325","typeString":"contract DAONFT"}},"src":"650:16:16","typeDescriptions":{"typeIdentifier":"t_contract$_DAONFT_$7325","typeString":"contract DAONFT"}},"id":6827,"nodeType":"ExpressionStatement","src":"650:16:16"},{"expression":{"id":6844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6828,"name":"userRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"681:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Role_$7337_storage_$","typeString":"mapping(address => struct IERC7432.Role storage ref)"}},"id":6831,"indexExpression":{"expression":{"id":6829,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"690:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"694:6:16","memberName":"sender","nodeType":"MemberAccess","src":"690:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"681:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"41444d494e","id":6834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"720:7:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""},"value":"ADMIN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""}],"id":6833,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"710:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"710:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":6838,"name":"_daonft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6818,"src":"738:7:16","typeDescriptions":{"typeIdentifier":"t_contract$_DAONFT_$7325","typeString":"contract DAONFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_DAONFT_$7325","typeString":"contract DAONFT"}],"id":6837,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"730:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":6836,"name":"address","nodeType":"ElementaryTypeName","src":"730:7:16","typeDescriptions":{}}},"id":6839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"730:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6840,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"748:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6841,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"762:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"766:6:16","memberName":"sender","nodeType":"MemberAccess","src":"762:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":6832,"name":"Role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"705:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Role_$7337_storage_ptr_$","typeString":"type(struct IERC7432.Role storage pointer)"}},"id":6843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"705:68:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_memory_ptr","typeString":"struct IERC7432.Role memory"}},"src":"681:92:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":6845,"nodeType":"ExpressionStatement","src":"681:92:16"},{"expression":{"arguments":[{"expression":{"id":6849,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"797:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"801:6:16","memberName":"sender","nodeType":"MemberAccess","src":"797:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":6851,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"809:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6846,"name":"daoNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"781:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_DAONFT_$7325","typeString":"contract DAONFT"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"788:8:16","memberName":"safeMint","nodeType":"MemberAccess","referencedDeclaration":7308,"src":"781:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) external returns (uint256)"}},"id":6852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"781:41:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6853,"nodeType":"ExpressionStatement","src":"781:41:16"},{"expression":{"id":6855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"831:14:16","subExpression":{"id":6854,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"831:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6856,"nodeType":"ExpressionStatement","src":"831:14:16"}]},"id":6858,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":6814,"nodeType":"ParameterList","parameters":[],"src":"601:2:16"},"returnParameters":{"id":6815,"nodeType":"ParameterList","parameters":[],"src":"604:0:16"},"scope":7268,"src":"590:263:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":6881,"nodeType":"Block","src":"958:93:16","statements":[{"expression":{"id":6872,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6867,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"964:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6791_storage_$dyn_storage","typeString":"struct DAO.Proposal storage ref[] storage ref"}},"id":6869,"indexExpression":{"id":6868,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"974:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"964:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_storage","typeString":"struct DAO.Proposal storage ref"}},"id":6870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"982:5:16","memberName":"title","nodeType":"MemberAccess","referencedDeclaration":6779,"src":"964:23:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6871,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6862,"src":"990:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"964:32:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6873,"nodeType":"ExpressionStatement","src":"964:32:16"},{"expression":{"id":6879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6874,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"1002:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6791_storage_$dyn_storage","typeString":"struct DAO.Proposal storage ref[] storage ref"}},"id":6876,"indexExpression":{"id":6875,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6860,"src":"1012:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1002:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_storage","typeString":"struct DAO.Proposal storage ref"}},"id":6877,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1020:11:16","memberName":"description","nodeType":"MemberAccess","referencedDeclaration":6781,"src":"1002:29:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6878,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"1034:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1002:44:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":6880,"nodeType":"ExpressionStatement","src":"1002:44:16"}]},"functionSelector":"d5792041","id":6882,"implemented":true,"kind":"function","modifiers":[],"name":"update_proposal","nameLocation":"866:15:16","nodeType":"FunctionDefinition","parameters":{"id":6865,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6860,"mutability":"mutable","name":"_index","nameLocation":"890:6:16","nodeType":"VariableDeclaration","scope":6882,"src":"882:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6859,"name":"uint256","nodeType":"ElementaryTypeName","src":"882:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6862,"mutability":"mutable","name":"_title","nameLocation":"912:6:16","nodeType":"VariableDeclaration","scope":6882,"src":"898:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6861,"name":"string","nodeType":"ElementaryTypeName","src":"898:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6864,"mutability":"mutable","name":"_description","nameLocation":"934:12:16","nodeType":"VariableDeclaration","scope":6882,"src":"920:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6863,"name":"string","nodeType":"ElementaryTypeName","src":"920:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"881:67:16"},"returnParameters":{"id":6866,"nodeType":"ParameterList","parameters":[],"src":"958:0:16"},"scope":7268,"src":"857:194:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6891,"nodeType":"Block","src":"1122:27:16","statements":[{"expression":{"id":6889,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"1135:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6791_storage_$dyn_storage","typeString":"struct DAO.Proposal storage ref[] storage ref"}},"functionReturnParameters":6888,"id":6890,"nodeType":"Return","src":"1128:16:16"}]},"functionSelector":"c7067752","id":6892,"implemented":true,"kind":"function","modifiers":[],"name":"get_proposals","nameLocation":"1064:13:16","nodeType":"FunctionDefinition","parameters":{"id":6883,"nodeType":"ParameterList","parameters":[],"src":"1077:2:16"},"returnParameters":{"id":6888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6887,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6892,"src":"1103:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr","typeString":"struct DAO.Proposal[]"},"typeName":{"baseType":{"id":6885,"nodeType":"UserDefinedTypeName","pathNode":{"id":6884,"name":"Proposal","nameLocations":["1103:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":6791,"src":"1103:8:16"},"referencedDeclaration":6791,"src":"1103:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_storage_ptr","typeString":"struct DAO.Proposal"}},"id":6886,"nodeType":"ArrayTypeName","src":"1103:10:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6791_storage_$dyn_storage_ptr","typeString":"struct DAO.Proposal[]"}},"visibility":"internal"}],"src":"1102:19:16"},"scope":7268,"src":"1055:94:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6904,"nodeType":"Block","src":"1230:35:16","statements":[{"expression":{"baseExpression":{"id":6900,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"1243:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6791_storage_$dyn_storage","typeString":"struct DAO.Proposal storage ref[] storage ref"}},"id":6902,"indexExpression":{"id":6901,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"1253:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1243:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_storage","typeString":"struct DAO.Proposal storage ref"}},"functionReturnParameters":6899,"id":6903,"nodeType":"Return","src":"1236:24:16"}]},"functionSelector":"3eda5200","id":6905,"implemented":true,"kind":"function","modifiers":[],"name":"get_proposal","nameLocation":"1162:12:16","nodeType":"FunctionDefinition","parameters":{"id":6895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6894,"mutability":"mutable","name":"_index","nameLocation":"1183:6:16","nodeType":"VariableDeclaration","scope":6905,"src":"1175:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1175:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1174:16:16"},"returnParameters":{"id":6899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6898,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6905,"src":"1213:15:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_memory_ptr","typeString":"struct DAO.Proposal"},"typeName":{"id":6897,"nodeType":"UserDefinedTypeName","pathNode":{"id":6896,"name":"Proposal","nameLocations":["1213:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":6791,"src":"1213:8:16"},"referencedDeclaration":6791,"src":"1213:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_storage_ptr","typeString":"struct DAO.Proposal"}},"visibility":"internal"}],"src":"1212:17:16"},"scope":7268,"src":"1153:112:16","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":6957,"nodeType":"Block","src":"1372:320:16","statements":[{"assignments":[6915],"declarations":[{"constant":false,"id":6915,"mutability":"mutable","name":"deadline_","nameLocation":"1387:9:16","nodeType":"VariableDeclaration","scope":6957,"src":"1379:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6914,"name":"uint256","nodeType":"ElementaryTypeName","src":"1379:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6923,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":6916,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1399:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1405:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"1399:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6918,"name":"_deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6911,"src":"1418:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31","id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1430:9:16","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"1"},"src":"1418:21:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6921,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1417:23:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1399:41:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1379:61:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6925,"name":"userRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"1454:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Role_$7337_storage_$","typeString":"mapping(address => struct IERC7432.Role storage ref)"}},"id":6928,"indexExpression":{"expression":{"id":6926,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1463:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1467:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1463:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1454:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":6929,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1475:6:16","memberName":"roleId","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"1454:27:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"41444d494e","id":6931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1495:7:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""},"value":"ADMIN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""}],"id":6930,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1485:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1485:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1454:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792041646d696e2063616e206372656174652050726f706f73616c73","id":6934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1505:33:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792","typeString":"literal_string \"Only Admin can create Proposals\""},"value":"Only Admin can create Proposals"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792","typeString":"literal_string \"Only Admin can create Proposals\""}],"id":6924,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1446:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1446:93:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6936,"nodeType":"ExpressionStatement","src":"1446:93:16"},{"assignments":[6939],"declarations":[{"constant":false,"id":6939,"mutability":"mutable","name":"proposal_","nameLocation":"1566:9:16","nodeType":"VariableDeclaration","scope":6957,"src":"1550:25:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_memory_ptr","typeString":"struct DAO.Proposal"},"typeName":{"id":6938,"nodeType":"UserDefinedTypeName","pathNode":{"id":6937,"name":"Proposal","nameLocations":["1550:8:16"],"nodeType":"IdentifierPath","referencedDeclaration":6791,"src":"1550:8:16"},"referencedDeclaration":6791,"src":"1550:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_storage_ptr","typeString":"struct DAO.Proposal"}},"visibility":"internal"}],"id":6950,"initialValue":{"arguments":[{"id":6941,"name":"_title","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"1587:6:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":6942,"name":"_description","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6909,"src":"1595:12:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":6943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1609:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":6944,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1612:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1618:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"1612:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6946,"name":"deadline_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6915,"src":"1629:9:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6947,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"1640:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$6813_$","typeString":"type(enum DAO.Status)"}},"id":6948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1647:6:16","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":6809,"src":"1640:13:16","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$6813","typeString":"enum DAO.Status"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_Status_$6813","typeString":"enum DAO.Status"}],"id":6940,"name":"Proposal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6791,"src":"1578:8:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Proposal_$6791_storage_ptr_$","typeString":"type(struct DAO.Proposal storage pointer)"}},"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1578:76:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_memory_ptr","typeString":"struct DAO.Proposal memory"}},"nodeType":"VariableDeclarationStatement","src":"1550:104:16"},{"expression":{"arguments":[{"id":6954,"name":"proposal_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6939,"src":"1676:9:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_memory_ptr","typeString":"struct DAO.Proposal memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Proposal_$6791_memory_ptr","typeString":"struct DAO.Proposal memory"}],"expression":{"id":6951,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"1661:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6791_storage_$dyn_storage","typeString":"struct DAO.Proposal storage ref[] storage ref"}},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1671:4:16","memberName":"push","nodeType":"MemberAccess","src":"1661:14:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Proposal_$6791_storage_$dyn_storage_ptr_$_t_struct$_Proposal_$6791_storage_$returns$__$attached_to$_t_array$_t_struct$_Proposal_$6791_storage_$dyn_storage_ptr_$","typeString":"function (struct DAO.Proposal storage ref[] storage pointer,struct DAO.Proposal storage ref)"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1661:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6956,"nodeType":"ExpressionStatement","src":"1661:25:16"}]},"functionSelector":"bd611fe6","id":6958,"implemented":true,"kind":"function","modifiers":[],"name":"create_proposal","nameLocation":"1278:15:16","nodeType":"FunctionDefinition","parameters":{"id":6912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6907,"mutability":"mutable","name":"_title","nameLocation":"1308:6:16","nodeType":"VariableDeclaration","scope":6958,"src":"1294:20:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6906,"name":"string","nodeType":"ElementaryTypeName","src":"1294:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6909,"mutability":"mutable","name":"_description","nameLocation":"1330:12:16","nodeType":"VariableDeclaration","scope":6958,"src":"1316:26:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6908,"name":"string","nodeType":"ElementaryTypeName","src":"1316:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":6911,"mutability":"mutable","name":"_deadline","nameLocation":"1352:9:16","nodeType":"VariableDeclaration","scope":6958,"src":"1344:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6910,"name":"uint256","nodeType":"ElementaryTypeName","src":"1344:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1293:69:16"},"returnParameters":{"id":6913,"nodeType":"ParameterList","parameters":[],"src":"1372:0:16"},"scope":7268,"src":"1269:423:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":7048,"nodeType":"Block","src":"1747:579:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6963,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"1756:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6791_storage_$dyn_storage","typeString":"struct DAO.Proposal storage ref[] storage ref"}},"id":6965,"indexExpression":{"id":6964,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"1766:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1756:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_storage","typeString":"struct DAO.Proposal storage ref"}},"id":6966,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1774:7:16","memberName":"dealine","nodeType":"MemberAccess","referencedDeclaration":6787,"src":"1756:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":6967,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1784:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":6968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1790:9:16","memberName":"timestamp","nodeType":"MemberAccess","src":"1784:15:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1756:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6983,"nodeType":"IfStatement","src":"1753:156:16","trueBody":{"id":6982,"nodeType":"Block","src":"1801:108:16","statements":[{"expression":{"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":6970,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"1809:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6791_storage_$dyn_storage","typeString":"struct DAO.Proposal storage ref[] storage ref"}},"id":6972,"indexExpression":{"id":6971,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"1819:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1809:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_storage","typeString":"struct DAO.Proposal storage ref"}},"id":6973,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1827:6:16","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6790,"src":"1809:24:16","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$6813","typeString":"enum DAO.Status"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":6974,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"1836:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$6813_$","typeString":"type(enum DAO.Status)"}},"id":6975,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1843:7:16","memberName":"EXPIRED","nodeType":"MemberAccess","referencedDeclaration":6810,"src":"1836:14:16","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$6813","typeString":"enum DAO.Status"}},"src":"1809:41:16","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$6813","typeString":"enum DAO.Status"}},"id":6977,"nodeType":"ExpressionStatement","src":"1809:41:16"},{"expression":{"arguments":[{"hexValue":"594f552043414e5420564f5445204f4e20455850495245442050524f504f53414c","id":6979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1866:35:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b","typeString":"literal_string \"YOU CANT VOTE ON EXPIRED PROPOSAL\""},"value":"YOU CANT VOTE ON EXPIRED PROPOSAL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b","typeString":"literal_string \"YOU CANT VOTE ON EXPIRED PROPOSAL\""}],"id":6978,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1859:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":6980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1859:43:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6981,"nodeType":"ExpressionStatement","src":"1859:43:16"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":6993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6985,"name":"userRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"1923:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Role_$7337_storage_$","typeString":"mapping(address => struct IERC7432.Role storage ref)"}},"id":6988,"indexExpression":{"expression":{"id":6986,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1932:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1936:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1932:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1923:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":6989,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1944:6:16","memberName":"roleId","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"1923:27:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"4d454d424552","id":6991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1964:8:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffa60083152bd11704a80cc8c7a409dad8aa74288b454a3ba0e94c0abc7cf168","typeString":"literal_string \"MEMBER\""},"value":"MEMBER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ffa60083152bd11704a80cc8c7a409dad8aa74288b454a3ba0e94c0abc7cf168","typeString":"literal_string \"MEMBER\""}],"id":6990,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1954:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":6992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1954:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1923:50:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":6994,"name":"userRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"1977:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Role_$7337_storage_$","typeString":"mapping(address => struct IERC7432.Role storage ref)"}},"id":6997,"indexExpression":{"expression":{"id":6995,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1986:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1990:6:16","memberName":"sender","nodeType":"MemberAccess","src":"1986:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1977:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":6998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1998:6:16","memberName":"roleId","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"1977:27:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"41444d494e","id":7000,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2018:7:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""},"value":"ADMIN"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_df8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42","typeString":"literal_string \"ADMIN\""}],"id":6999,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2008:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2008:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1977:49:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1923:103:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"594f55204e45454420524f4c4520544f20564f5445","id":7004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2028:23:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660","typeString":"literal_string \"YOU NEED ROLE TO VOTE\""},"value":"YOU NEED ROLE TO VOTE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660","typeString":"literal_string \"YOU NEED ROLE TO VOTE\""}],"id":6984,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1915:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1915:137:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7006,"nodeType":"ExpressionStatement","src":"1915:137:16"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_Status_$6813","typeString":"enum DAO.Status"},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7008,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"2070:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6791_storage_$dyn_storage","typeString":"struct DAO.Proposal storage ref[] storage ref"}},"id":7010,"indexExpression":{"id":7009,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"2080:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2070:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_storage","typeString":"struct DAO.Proposal storage ref"}},"id":7011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2088:6:16","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":6790,"src":"2070:24:16","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$6813","typeString":"enum DAO.Status"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":7012,"name":"Status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6813,"src":"2098:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Status_$6813_$","typeString":"type(enum DAO.Status)"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2105:6:16","memberName":"ACTIVE","nodeType":"MemberAccess","referencedDeclaration":6809,"src":"2098:13:16","typeDescriptions":{"typeIdentifier":"t_enum$_Status_$6813","typeString":"enum DAO.Status"}},"src":"2070:41:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"594f552043414e204f4e4c5920564f5445204f4e204143544956452050524f504f53414c","id":7015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2113:38:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f","typeString":"literal_string \"YOU CAN ONLY VOTE ON ACTIVE PROPOSAL\""},"value":"YOU CAN ONLY VOTE ON ACTIVE PROPOSAL"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f","typeString":"literal_string \"YOU CAN ONLY VOTE ON ACTIVE PROPOSAL\""}],"id":7007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2062:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":7016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2062:90:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7017,"nodeType":"ExpressionStatement","src":"2062:90:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":7018,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"2166:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":7021,"indexExpression":{"expression":{"id":7019,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2175:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2179:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2175:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2166:20:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":7023,"indexExpression":{"id":7022,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"2187:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2166:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":7024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2198:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2166:36:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7031,"nodeType":"IfStatement","src":"2163:79:16","trueBody":{"id":7030,"nodeType":"Block","src":"2204:38:16","statements":[{"expression":{"arguments":[{"hexValue":"414c524541445920564f544544","id":7027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2219:15:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130","typeString":"literal_string \"ALREADY VOTED\""},"value":"ALREADY VOTED"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130","typeString":"literal_string \"ALREADY VOTED\""}],"id":7026,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"2212:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2212:23:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7029,"nodeType":"ExpressionStatement","src":"2212:23:16"}]}},{"expression":{"id":7037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7032,"name":"proposals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6801,"src":"2248:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Proposal_$6791_storage_$dyn_storage","typeString":"struct DAO.Proposal storage ref[] storage ref"}},"id":7034,"indexExpression":{"id":7033,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"2258:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2248:17:16","typeDescriptions":{"typeIdentifier":"t_struct$_Proposal_$6791_storage","typeString":"struct DAO.Proposal storage ref"}},"id":7035,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2266:9:16","memberName":"numOfVote","nodeType":"MemberAccess","referencedDeclaration":6783,"src":"2248:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":7036,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2279:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2248:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7038,"nodeType":"ExpressionStatement","src":"2248:32:16"},{"expression":{"id":7046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":7039,"name":"hasVoted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6797,"src":"2286:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$","typeString":"mapping(address => mapping(uint256 => bool))"}},"id":7043,"indexExpression":{"expression":{"id":7040,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2295:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":7041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2299:6:16","memberName":"sender","nodeType":"MemberAccess","src":"2295:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2286:20:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_bool_$","typeString":"mapping(uint256 => bool)"}},"id":7044,"indexExpression":{"id":7042,"name":"_index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6960,"src":"2307:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2286:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2317:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2286:35:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7047,"nodeType":"ExpressionStatement","src":"2286:35:16"}]},"functionSelector":"c2ca95ec","id":7049,"implemented":true,"kind":"function","modifiers":[],"name":"vote_on_proposal","nameLocation":"1705:16:16","nodeType":"FunctionDefinition","parameters":{"id":6961,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6960,"mutability":"mutable","name":"_index","nameLocation":"1730:6:16","nodeType":"VariableDeclaration","scope":7049,"src":"1722:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1722:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1721:16:16"},"returnParameters":{"id":6962,"nodeType":"ParameterList","parameters":[],"src":"1747:0:16"},"scope":7268,"src":"1696:630:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7347],"body":{"id":7095,"nodeType":"Block","src":"2433:254:16","statements":[{"assignments":[7059],"declarations":[{"constant":false,"id":7059,"mutability":"mutable","name":"roleId_","nameLocation":"2447:7:16","nodeType":"VariableDeclaration","scope":7095,"src":"2439:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2439:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7063,"initialValue":{"arguments":[{"hexValue":"4d454d4245525f524f4c45","id":7061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2467:13:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d4636","typeString":"literal_string \"MEMBER_ROLE\""},"value":"MEMBER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d4636","typeString":"literal_string \"MEMBER_ROLE\""}],"id":7060,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2457:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2457:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2439:42:16"},{"expression":{"id":7067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7064,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"2489:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2500:14:16","subExpression":{"id":7065,"name":"_nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6808,"src":"2500:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2489:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7068,"nodeType":"ExpressionStatement","src":"2489:25:16"},{"expression":{"id":7078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7069,"name":"userRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"2520:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Role_$7337_storage_$","typeString":"mapping(address => struct IERC7432.Role storage ref)"}},"id":7071,"indexExpression":{"id":7070,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7051,"src":"2529:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2520:23:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7073,"name":"roleId_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"2551:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7074,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7051,"src":"2560:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7075,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"2575:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":7076,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"2585:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":7072,"name":"Role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7337,"src":"2546:4:16","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Role_$7337_storage_ptr_$","typeString":"type(struct IERC7432.Role storage pointer)"}},"id":7077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2546:50:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_memory_ptr","typeString":"struct IERC7432.Role memory"}},"src":"2520:76:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":7079,"nodeType":"ExpressionStatement","src":"2520:76:16"},{"expression":{"arguments":[{"id":7083,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"2618:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7084,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"2630:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":7080,"name":"daoNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6777,"src":"2602:6:16","typeDescriptions":{"typeIdentifier":"t_contract$_DAONFT_$7325","typeString":"contract DAONFT"}},"id":7082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2609:8:16","memberName":"safeMint","nodeType":"MemberAccess","referencedDeclaration":7308,"src":"2602:15:16","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) external returns (uint256)"}},"id":7085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2602:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7086,"nodeType":"ExpressionStatement","src":"2602:37:16"},{"expression":{"arguments":[{"baseExpression":{"id":7090,"name":"userRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"2656:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Role_$7337_storage_$","typeString":"mapping(address => struct IERC7432.Role storage ref)"}},"id":7092,"indexExpression":{"id":7091,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7055,"src":"2665:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2656:20:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}],"expression":{"id":7087,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"2645:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2651:4:16","memberName":"push","nodeType":"MemberAccess","src":"2645:10:16","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Role_$7337_storage_$dyn_storage_ptr_$_t_struct$_Role_$7337_storage_$returns$__$attached_to$_t_array$_t_struct$_Role_$7337_storage_$dyn_storage_ptr_$","typeString":"function (struct IERC7432.Role storage ref[] storage pointer,struct IERC7432.Role storage ref)"}},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2645:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7094,"nodeType":"ExpressionStatement","src":"2645:32:16"}]},"functionSelector":"16e744bd","id":7096,"implemented":true,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2338:9:16","nodeType":"FunctionDefinition","parameters":{"id":7056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7051,"mutability":"mutable","name":"_tokenAddress","nameLocation":"2361:13:16","nodeType":"VariableDeclaration","scope":7096,"src":"2353:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7050,"name":"address","nodeType":"ElementaryTypeName","src":"2353:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7053,"mutability":"mutable","name":"_tokenId","nameLocation":"2388:8:16","nodeType":"VariableDeclaration","scope":7096,"src":"2380:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7052,"name":"uint256","nodeType":"ElementaryTypeName","src":"2380:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7055,"mutability":"mutable","name":"_recipient","nameLocation":"2410:10:16","nodeType":"VariableDeclaration","scope":7096,"src":"2402:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7054,"name":"address","nodeType":"ElementaryTypeName","src":"2402:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2347:76:16"},"returnParameters":{"id":7057,"nodeType":"ParameterList","parameters":[],"src":"2433:0:16"},"scope":7268,"src":"2329:358:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7355],"body":{"id":7169,"nodeType":"Block","src":"2761:425:16","statements":[{"body":{"id":7163,"nodeType":"Block","src":"2810:316:16","statements":[{"assignments":[7114],"declarations":[{"constant":false,"id":7114,"mutability":"mutable","name":"addy","nameLocation":"2826:4:16","nodeType":"VariableDeclaration","scope":7163,"src":"2818:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7113,"name":"address","nodeType":"ElementaryTypeName","src":"2818:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7119,"initialValue":{"expression":{"baseExpression":{"id":7115,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"2833:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7117,"indexExpression":{"id":7116,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"2839:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2833:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":7118,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2842:9:16","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7336,"src":"2833:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2818:33:16"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7120,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"2862:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7122,"indexExpression":{"id":7121,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"2868:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2862:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":7123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2871:6:16","memberName":"roleId","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"2862:15:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"4d454d4245525f524f4c45","id":7125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:13:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d4636","typeString":"literal_string \"MEMBER_ROLE\""},"value":"MEMBER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d4636","typeString":"literal_string \"MEMBER_ROLE\""}],"id":7124,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2881:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2881:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2862:43:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7128,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"2909:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7130,"indexExpression":{"id":7129,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"2915:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2909:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":7131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2918:12:16","memberName":"tokenAddress","nodeType":"MemberAccess","referencedDeclaration":7332,"src":"2909:21:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7132,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7098,"src":"2934:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2909:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2862:85:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7135,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"2951:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7137,"indexExpression":{"id":7136,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"2957:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2951:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":7138,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2960:7:16","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7334,"src":"2951:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7139,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7100,"src":"2971:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2951:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2862:117:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7162,"nodeType":"IfStatement","src":"2859:261:16","trueBody":{"id":7161,"nodeType":"Block","src":"2981:139:16","statements":[{"expression":{"id":7149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7142,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"2991:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7144,"indexExpression":{"id":7143,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"2997:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2991:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":7145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3000:6:16","memberName":"roleId","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"2991:15:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"4e4f545f415f4d454d424552","id":7147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3019:14:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_789719e83535ffb09d643a0bf25dd5104145ff4f4daf57b09a6a0db0bfdb8244","typeString":"literal_string \"NOT_A_MEMBER\""},"value":"NOT_A_MEMBER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_789719e83535ffb09d643a0bf25dd5104145ff4f4daf57b09a6a0db0bfdb8244","typeString":"literal_string \"NOT_A_MEMBER\""}],"id":7146,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3009:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3009:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2991:43:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7150,"nodeType":"ExpressionStatement","src":"2991:43:16"},{"expression":{"id":7158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":7151,"name":"userRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"3045:8:16","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Role_$7337_storage_$","typeString":"mapping(address => struct IERC7432.Role storage ref)"}},"id":7153,"indexExpression":{"id":7152,"name":"addy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7114,"src":"3054:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3045:14:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":7154,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3060:6:16","memberName":"roleId","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"3045:21:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"4e4f545f415f4d454d424552","id":7156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3079:14:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_789719e83535ffb09d643a0bf25dd5104145ff4f4daf57b09a6a0db0bfdb8244","typeString":"literal_string \"NOT_A_MEMBER\""},"value":"NOT_A_MEMBER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_789719e83535ffb09d643a0bf25dd5104145ff4f4daf57b09a6a0db0bfdb8244","typeString":"literal_string \"NOT_A_MEMBER\""}],"id":7155,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3069:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3069:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3045:49:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":7159,"nodeType":"ExpressionStatement","src":"3045:49:16"},{"functionReturnParameters":7102,"id":7160,"nodeType":"Return","src":"3105:7:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7106,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"2787:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7107,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"2791:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2797:6:16","memberName":"length","nodeType":"MemberAccess","src":"2791:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2787:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7164,"initializationExpression":{"assignments":[7104],"declarations":[{"constant":false,"id":7104,"mutability":"mutable","name":"i","nameLocation":"2784:1:16","nodeType":"VariableDeclaration","scope":7164,"src":"2776:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7103,"name":"uint256","nodeType":"ElementaryTypeName","src":"2776:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7105,"nodeType":"VariableDeclarationStatement","src":"2776:9:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2805:3:16","subExpression":{"id":7110,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7104,"src":"2805:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7112,"nodeType":"ExpressionStatement","src":"2805:3:16"},"nodeType":"ForStatement","src":"2772:354:16"},{"expression":{"arguments":[{"hexValue":"594f555f43414e5f4f4e4c595f5245564f4b455f415f4d454d4245525f5045524d495353494f4e","id":7166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3139:41:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36","typeString":"literal_string \"YOU_CAN_ONLY_REVOKE_A_MEMBER_PERMISSION\""},"value":"YOU_CAN_ONLY_REVOKE_A_MEMBER_PERMISSION"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36","typeString":"literal_string \"YOU_CAN_ONLY_REVOKE_A_MEMBER_PERMISSION\""}],"id":7165,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3132:6:16","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3132:49:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7168,"nodeType":"ExpressionStatement","src":"3132:49:16"}]},"functionSelector":"0912ed77","id":7170,"implemented":true,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2700:10:16","nodeType":"FunctionDefinition","parameters":{"id":7101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7098,"mutability":"mutable","name":"_tokenAddress","nameLocation":"2719:13:16","nodeType":"VariableDeclaration","scope":7170,"src":"2711:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7097,"name":"address","nodeType":"ElementaryTypeName","src":"2711:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7100,"mutability":"mutable","name":"_tokenId","nameLocation":"2742:8:16","nodeType":"VariableDeclaration","scope":7170,"src":"2734:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7099,"name":"uint256","nodeType":"ElementaryTypeName","src":"2734:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2710:41:16"},"returnParameters":{"id":7102,"nodeType":"ParameterList","parameters":[],"src":"2761:0:16"},"scope":7268,"src":"2691:495:16","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[7365],"body":{"id":7211,"nodeType":"Block","src":"3288:188:16","statements":[{"body":{"id":7209,"nodeType":"Block","src":"3337:134:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7189,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"3348:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7191,"indexExpression":{"id":7190,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"3354:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3348:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":7192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3357:12:16","memberName":"tokenAddress","nodeType":"MemberAccess","referencedDeclaration":7332,"src":"3348:21:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7193,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7172,"src":"3373:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3348:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7195,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"3390:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7197,"indexExpression":{"id":7196,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"3396:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3390:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":7198,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3399:7:16","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7334,"src":"3390:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7199,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7174,"src":"3410:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3390:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3348:70:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7208,"nodeType":"IfStatement","src":"3345:120:16","trueBody":{"id":7207,"nodeType":"Block","src":"3420:45:16","statements":[{"expression":{"expression":{"baseExpression":{"id":7202,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"3438:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7204,"indexExpression":{"id":7203,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"3444:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3438:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":7205,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3447:9:16","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7336,"src":"3438:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7178,"id":7206,"nodeType":"Return","src":"3431:25:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7182,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"3314:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7183,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"3318:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3324:6:16","memberName":"length","nodeType":"MemberAccess","src":"3318:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3314:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7210,"initializationExpression":{"assignments":[7180],"declarations":[{"constant":false,"id":7180,"mutability":"mutable","name":"i","nameLocation":"3311:1:16","nodeType":"VariableDeclaration","scope":7210,"src":"3303:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7179,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7181,"nodeType":"VariableDeclarationStatement","src":"3303:9:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3332:3:16","subExpression":{"id":7186,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"3332:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7188,"nodeType":"ExpressionStatement","src":"3332:3:16"},"nodeType":"ForStatement","src":"3299:172:16"}]},"functionSelector":"1f29d2dc","id":7212,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"3200:7:16","nodeType":"FunctionDefinition","parameters":{"id":7175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7172,"mutability":"mutable","name":"_tokenAddress","nameLocation":"3216:13:16","nodeType":"VariableDeclaration","scope":7212,"src":"3208:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7171,"name":"address","nodeType":"ElementaryTypeName","src":"3208:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7174,"mutability":"mutable","name":"_tokenId","nameLocation":"3239:8:16","nodeType":"VariableDeclaration","scope":7212,"src":"3231:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7173,"name":"uint256","nodeType":"ElementaryTypeName","src":"3231:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3207:41:16"},"returnParameters":{"id":7178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7177,"mutability":"mutable","name":"owner_","nameLocation":"3280:6:16","nodeType":"VariableDeclaration","scope":7212,"src":"3272:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7176,"name":"address","nodeType":"ElementaryTypeName","src":"3272:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3271:16:16"},"scope":7268,"src":"3191:285:16","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[7375],"body":{"id":7266,"nodeType":"Block","src":"3599:262:16","statements":[{"assignments":[7222],"declarations":[{"constant":false,"id":7222,"mutability":"mutable","name":"_roleId","nameLocation":"3613:7:16","nodeType":"VariableDeclaration","scope":7266,"src":"3605:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7221,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3605:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7226,"initialValue":{"arguments":[{"hexValue":"4d454d424552","id":7224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3633:8:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_ffa60083152bd11704a80cc8c7a409dad8aa74288b454a3ba0e94c0abc7cf168","typeString":"literal_string \"MEMBER\""},"value":"MEMBER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_ffa60083152bd11704a80cc8c7a409dad8aa74288b454a3ba0e94c0abc7cf168","typeString":"literal_string \"MEMBER\""}],"id":7223,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3623:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3623:19:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3605:37:16"},{"body":{"id":7264,"nodeType":"Block","src":"3688:169:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7237,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"3704:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7239,"indexExpression":{"id":7238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"3710:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3704:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":7240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3713:12:16","memberName":"tokenAddress","nodeType":"MemberAccess","referencedDeclaration":7332,"src":"3704:21:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7241,"name":"_tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7214,"src":"3729:13:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3704:38:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7248,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7243,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"3746:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7245,"indexExpression":{"id":7244,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"3752:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3746:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":7246,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3755:7:16","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":7334,"src":"3746:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7247,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7216,"src":"3766:8:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3746:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3704:70:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":7250,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"3778:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7252,"indexExpression":{"id":7251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"3784:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3778:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":7253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3787:6:16","memberName":"roleId","nodeType":"MemberAccess","referencedDeclaration":7330,"src":"3778:15:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7254,"name":"_roleId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7222,"src":"3797:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3778:26:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3704:100:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7263,"nodeType":"IfStatement","src":"3701:150:16","trueBody":{"id":7262,"nodeType":"Block","src":"3806:45:16","statements":[{"expression":{"expression":{"baseExpression":{"id":7257,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"3824:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7259,"indexExpression":{"id":7258,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"3830:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3824:8:16","typeDescriptions":{"typeIdentifier":"t_struct$_Role_$7337_storage","typeString":"struct IERC7432.Role storage ref"}},"id":7260,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3833:9:16","memberName":"recipient","nodeType":"MemberAccess","referencedDeclaration":7336,"src":"3824:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7220,"id":7261,"nodeType":"Return","src":"3817:25:16"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7230,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"3665:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":7231,"name":"roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6774,"src":"3669:5:16","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Role_$7337_storage_$dyn_storage","typeString":"struct IERC7432.Role storage ref[] storage ref"}},"id":7232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3675:6:16","memberName":"length","nodeType":"MemberAccess","src":"3669:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3665:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7265,"initializationExpression":{"assignments":[7228],"declarations":[{"constant":false,"id":7228,"mutability":"mutable","name":"i","nameLocation":"3662:1:16","nodeType":"VariableDeclaration","scope":7265,"src":"3654:9:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7227,"name":"uint256","nodeType":"ElementaryTypeName","src":"3654:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7229,"nodeType":"VariableDeclarationStatement","src":"3654:9:16"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3683:3:16","subExpression":{"id":7234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7228,"src":"3683:1:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7236,"nodeType":"ExpressionStatement","src":"3683:3:16"},"nodeType":"ForStatement","src":"3650:207:16"}]},"functionSelector":"7d5aea4f","id":7267,"implemented":true,"kind":"function","modifiers":[],"name":"recipientOf","nameLocation":"3490:11:16","nodeType":"FunctionDefinition","parameters":{"id":7217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7214,"mutability":"mutable","name":"_tokenAddress","nameLocation":"3515:13:16","nodeType":"VariableDeclaration","scope":7267,"src":"3507:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7213,"name":"address","nodeType":"ElementaryTypeName","src":"3507:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7216,"mutability":"mutable","name":"_tokenId","nameLocation":"3542:8:16","nodeType":"VariableDeclaration","scope":7267,"src":"3534:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3534:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3501:54:16"},"returnParameters":{"id":7220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7219,"mutability":"mutable","name":"recipient_","nameLocation":"3587:10:16","nodeType":"VariableDeclaration","scope":7267,"src":"3579:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7218,"name":"address","nodeType":"ElementaryTypeName","src":"3579:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3578:20:16"},"scope":7268,"src":"3481:380:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7269,"src":"131:3739:16","usedErrors":[],"usedEvents":[]}],"src":"32:3845:16"},"id":16},"contracts/DAONFT.sol":{"ast":{"absolutePath":"contracts/DAONFT.sol","exportedSymbols":{"AccessControl":[296],"DAONFT":[7325],"ERC721":[1473]},"id":7326,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7270,"literals":["solidity","^","0.8",".23"],"nodeType":"PragmaDirective","src":"32:24:17"},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":7272,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7326,"sourceUnit":297,"src":"58:79:17","symbolAliases":[{"foreign":{"id":7271,"name":"AccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"66:13:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":7274,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7326,"sourceUnit":1474,"src":"138:71:17","symbolAliases":[{"foreign":{"id":7273,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"146:6:17","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7275,"name":"ERC721","nameLocations":["230:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1473,"src":"230:6:17"},"id":7276,"nodeType":"InheritanceSpecifier","src":"230:6:17"},{"baseName":{"id":7277,"name":"AccessControl","nameLocations":["238:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"238:13:17"},"id":7278,"nodeType":"InheritanceSpecifier","src":"238:13:17"}],"canonicalName":"DAONFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":7325,"linearizedBaseContracts":[7325,296,1473,469,1636,1590,3221,3233,379,1743],"name":"DAONFT","nameLocation":"220:6:17","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":7283,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"282:11:17","nodeType":"VariableDeclaration","scope":7325,"src":"258:62:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"258:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":7281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"306:13:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":7280,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"296:9:17","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"296:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"body":{"id":7290,"nodeType":"Block","src":"366:2:17","statements":[]},"id":7291,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"44414f4e4654","id":7286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"348:8:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_17b89983461c785f0fa175630cab3f759bafc08c348f44582ce7207b90fe170a","typeString":"literal_string \"DAONFT\""},"value":"DAONFT"},{"hexValue":"444e4654","id":7287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"358:6:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_39adae696be8f7ed986f5e0980fbd662ca426107f658cc21b67c9b780c600e93","typeString":"literal_string \"DNFT\""},"value":"DNFT"}],"id":7288,"kind":"baseConstructorSpecifier","modifierName":{"id":7285,"name":"ERC721","nameLocations":["341:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1473,"src":"341:6:17"},"nodeType":"ModifierInvocation","src":"341:24:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":7284,"nodeType":"ParameterList","parameters":[],"src":"338:2:17"},"returnParameters":{"id":7289,"nodeType":"ParameterList","parameters":[],"src":"366:0:17"},"scope":7325,"src":"327:41:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7307,"nodeType":"Block","src":"449:65:17","statements":[{"expression":{"arguments":[{"id":7301,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7293,"src":"469:2:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":7302,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"473:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7300,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[1151,1181],"referencedDeclaration":1151,"src":"459:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"459:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7304,"nodeType":"ExpressionStatement","src":"459:23:17"},{"expression":{"id":7305,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7295,"src":"499:8:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7299,"id":7306,"nodeType":"Return","src":"492:15:17"}]},"functionSelector":"a1448194","id":7308,"implemented":true,"kind":"function","modifiers":[],"name":"safeMint","nameLocation":"383:8:17","nodeType":"FunctionDefinition","parameters":{"id":7296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7293,"mutability":"mutable","name":"to","nameLocation":"400:2:17","nodeType":"VariableDeclaration","scope":7308,"src":"392:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7292,"name":"address","nodeType":"ElementaryTypeName","src":"392:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7295,"mutability":"mutable","name":"_tokenId","nameLocation":"412:8:17","nodeType":"VariableDeclaration","scope":7308,"src":"404:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7294,"name":"uint256","nodeType":"ElementaryTypeName","src":"404:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"391:30:17"},"returnParameters":{"id":7299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7308,"src":"440:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7297,"name":"uint256","nodeType":"ElementaryTypeName","src":"440:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"439:9:17"},"scope":7325,"src":"374:140:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[63,617],"body":{"id":7323,"nodeType":"Block","src":"694:60:17","statements":[{"expression":{"arguments":[{"id":7320,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7310,"src":"735:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":7318,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"711:5:17","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_DAONFT_$7325_$","typeString":"type(contract super DAONFT)"}},"id":7319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"717:17:17","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":63,"src":"711:23:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":7321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"711:36:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7317,"id":7322,"nodeType":"Return","src":"704:43:17"}]},"functionSelector":"01ffc9a7","id":7324,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"597:17:17","nodeType":"FunctionDefinition","overrides":{"id":7314,"nodeType":"OverrideSpecifier","overrides":[{"id":7312,"name":"ERC721","nameLocations":["656:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1473,"src":"656:6:17"},{"id":7313,"name":"AccessControl","nameLocations":["664:13:17"],"nodeType":"IdentifierPath","referencedDeclaration":296,"src":"664:13:17"}],"src":"647:31:17"},"parameters":{"id":7311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7310,"mutability":"mutable","name":"interfaceId","nameLocation":"622:11:17","nodeType":"VariableDeclaration","scope":7324,"src":"615:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":7309,"name":"bytes4","nodeType":"ElementaryTypeName","src":"615:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"614:20:17"},"returnParameters":{"id":7317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7316,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7324,"src":"688:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7315,"name":"bool","nodeType":"ElementaryTypeName","src":"688:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"687:6:17"},"scope":7325,"src":"588:166:17","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":7326,"src":"211:545:17","usedErrors":[306,309,427,432,441,446,451,458,463,468],"usedEvents":[318,327,336,1489,1498,1507]}],"src":"32:725:17"},"id":17},"interface/IERC7432.sol":{"ast":{"absolutePath":"interface/IERC7432.sol","exportedSymbols":{"IERC7432":[7376]},"id":7377,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7327,"literals":["solidity","^","0.8",".24"],"nodeType":"PragmaDirective","src":"31:24:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC7432","contractDependencies":[],"contractKind":"interface","documentation":{"id":7328,"nodeType":"StructuredDocumentation","src":"57:165:18","text":"@title ERC-7432 Non-Fungible Token Roles\n @dev See https://eips.ethereum.org/EIPS/eip-7432\n Note: the ERC-165 identifier for this interface is 0xd00ca5cf."},"fullyImplemented":false,"id":7376,"linearizedBaseContracts":[7376],"name":"IERC7432","nameLocation":"232:8:18","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IERC7432.Role","id":7337,"members":[{"constant":false,"id":7330,"mutability":"mutable","name":"roleId","nameLocation":"289:6:18","nodeType":"VariableDeclaration","scope":7337,"src":"281:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"281:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":7332,"mutability":"mutable","name":"tokenAddress","nameLocation":"309:12:18","nodeType":"VariableDeclaration","scope":7337,"src":"301:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7331,"name":"address","nodeType":"ElementaryTypeName","src":"301:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7334,"mutability":"mutable","name":"tokenId","nameLocation":"335:7:18","nodeType":"VariableDeclaration","scope":7337,"src":"327:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7333,"name":"uint256","nodeType":"ElementaryTypeName","src":"327:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7336,"mutability":"mutable","name":"recipient","nameLocation":"356:9:18","nodeType":"VariableDeclaration","scope":7337,"src":"348:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7335,"name":"address","nodeType":"ElementaryTypeName","src":"348:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Role","nameLocation":"270:4:18","nodeType":"StructDefinition","scope":7376,"src":"263:107:18","visibility":"public"},{"documentation":{"id":7338,"nodeType":"StructuredDocumentation","src":"405:99:18","text":"@notice Grants a role to a user.\n @dev Reverts if sender is not approved or the NFT owner."},"functionSelector":"16e744bd","id":7347,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"516:9:18","nodeType":"FunctionDefinition","parameters":{"id":7345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7340,"mutability":"mutable","name":"tokenAddress","nameLocation":"539:12:18","nodeType":"VariableDeclaration","scope":7347,"src":"531:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7339,"name":"address","nodeType":"ElementaryTypeName","src":"531:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7342,"mutability":"mutable","name":"tokenId","nameLocation":"565:7:18","nodeType":"VariableDeclaration","scope":7347,"src":"557:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7341,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":7344,"mutability":"mutable","name":"recipient","nameLocation":"586:9:18","nodeType":"VariableDeclaration","scope":7347,"src":"578:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7343,"name":"address","nodeType":"ElementaryTypeName","src":"578:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"525:74:18"},"returnParameters":{"id":7346,"nodeType":"ParameterList","parameters":[],"src":"608:0:18"},"scope":7376,"src":"507:102:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7348,"nodeType":"StructuredDocumentation","src":"613:197:18","text":"@notice Revokes a role from a user.\n @dev Reverts if sender is not approved or the original owner.\n @param _tokenAddress The token address.\n @param _tokenId The token identifier."},"functionSelector":"0912ed77","id":7355,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"825:10:18","nodeType":"FunctionDefinition","parameters":{"id":7353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7350,"mutability":"mutable","name":"_tokenAddress","nameLocation":"844:13:18","nodeType":"VariableDeclaration","scope":7355,"src":"836:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7349,"name":"address","nodeType":"ElementaryTypeName","src":"836:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7352,"mutability":"mutable","name":"_tokenId","nameLocation":"867:8:18","nodeType":"VariableDeclaration","scope":7355,"src":"859:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7351,"name":"uint256","nodeType":"ElementaryTypeName","src":"859:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"835:41:18"},"returnParameters":{"id":7354,"nodeType":"ParameterList","parameters":[],"src":"885:0:18"},"scope":7376,"src":"816:70:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":7356,"nodeType":"StructuredDocumentation","src":"918:187:18","text":"@notice Retrieves the original owner of the NFT.\n @param _tokenAddress The token address.\n @param _tokenId The token identifier.\n @return owner_ The owner of the token."},"functionSelector":"1f29d2dc","id":7365,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1117:7:18","nodeType":"FunctionDefinition","parameters":{"id":7361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7358,"mutability":"mutable","name":"_tokenAddress","nameLocation":"1133:13:18","nodeType":"VariableDeclaration","scope":7365,"src":"1125:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7357,"name":"address","nodeType":"ElementaryTypeName","src":"1125:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7360,"mutability":"mutable","name":"_tokenId","nameLocation":"1156:8:18","nodeType":"VariableDeclaration","scope":7365,"src":"1148:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7359,"name":"uint256","nodeType":"ElementaryTypeName","src":"1148:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1124:41:18"},"returnParameters":{"id":7364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7363,"mutability":"mutable","name":"owner_","nameLocation":"1197:6:18","nodeType":"VariableDeclaration","scope":7365,"src":"1189:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7362,"name":"address","nodeType":"ElementaryTypeName","src":"1189:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1188:16:18"},"scope":7376,"src":"1108:97:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":7366,"nodeType":"StructuredDocumentation","src":"1209:199:18","text":"@notice Retrieves the recipient of an NFT role.\n @param _tokenAddress The token address.\n @param _tokenId The token identifier.\n @return recipient_ The user that received the role."},"functionSelector":"7d5aea4f","id":7375,"implemented":false,"kind":"function","modifiers":[],"name":"recipientOf","nameLocation":"1420:11:18","nodeType":"FunctionDefinition","parameters":{"id":7371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7368,"mutability":"mutable","name":"_tokenAddress","nameLocation":"1445:13:18","nodeType":"VariableDeclaration","scope":7375,"src":"1437:21:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7367,"name":"address","nodeType":"ElementaryTypeName","src":"1437:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7370,"mutability":"mutable","name":"_tokenId","nameLocation":"1472:8:18","nodeType":"VariableDeclaration","scope":7375,"src":"1464:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7369,"name":"uint256","nodeType":"ElementaryTypeName","src":"1464:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1431:53:18"},"returnParameters":{"id":7374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7373,"mutability":"mutable","name":"recipient_","nameLocation":"1516:10:18","nodeType":"VariableDeclaration","scope":7375,"src":"1508:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7372,"name":"address","nodeType":"ElementaryTypeName","src":"1508:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1507:20:18"},"scope":7376,"src":"1411:117:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":7377,"src":"222:1311:18","usedErrors":[],"usedEvents":[]}],"src":"31:1503:18"},"id":18}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f33108d9bc395b8b0a8a6116f02cd625bd3bdd2f0ad3b7611d6129b7685301764736f6c63430008190033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F CALLER LT DUP14 SWAP12 0xC3 SWAP6 0xB8 0xB0 0xA8 0xA6 GT PUSH16 0x2CD625BD3BDD2F0AD3B7611D6129B76 DUP6 ADDRESS OR PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"431:1490:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204f33108d9bc395b8b0a8a6116f02cd625bd3bdd2f0ad3b7611d6129b7685301764736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F CALLER LT DUP14 SWAP12 0xC3 SWAP6 0xB8 0xB0 0xA8 0xA6 GT PUSH16 0x2CD625BD3BDD2F0AD3B7611D6129B76 DUP6 ADDRESS OR PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"431:1490:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5db4a50238769fe7e2e6a56934375bb3e70faaab386b6bbfb9816993c3cc47c64736f6c63430008190033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xDB BLOBBASEFEE POP 0x23 DUP8 PUSH10 0xFE7E2E6A56934375BB3E PUSH17 0xFAAAB386B6BBFB9816993C3CC47C64736F PUSH13 0x63430008190033000000000000 ","sourceMap":"657:1315:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f5db4a50238769fe7e2e6a56934375bb3e70faaab386b6bbfb9816993c3cc47c64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xDB BLOBBASEFEE POP 0x23 DUP8 PUSH10 0xFE7E2E6A56934375BB3E PUSH17 0xFAAAB386B6BBFB9816993C3CC47C64736F PUSH13 0x63430008190033000000000000 ","sourceMap":"657:1315:9:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edfa203fc99218f1c03a4cea6a11ea57e9a3a48b0179d34ebfa72ca533e3dddf64736f6c63430008190033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED STATICCALL KECCAK256 EXTCODEHASH 0xC9 SWAP3 XOR CALL 0xC0 GASPRICE 0x4C 0xEA PUSH11 0x11EA57E9A3A48B0179D34E 0xBF 0xA7 0x2C 0xA5 CALLER 0xE3 0xDD 0xDF PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"297:18982:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edfa203fc99218f1c03a4cea6a11ea57e9a3a48b0179d34ebfa72ca533e3dddf64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED STATICCALL KECCAK256 EXTCODEHASH 0xC9 SWAP3 XOR CALL 0xC0 GASPRICE 0x4C 0xEA PUSH11 0x11EA57E9A3A48B0179D34E 0xBF 0xA7 0x2C 0xA5 CALLER 0xE3 0xDD 0xDF PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"297:18982:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122079a9f9e7afed15ccc4f34bb2b73ebb418485899362dc6ed6bcd8cd2c4e50418a64736f6c63430008190033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xA9F9E7AFED15CCC4F34BB2B73EBB418485899362DC6ED6BCD8CD 0x2C 0x4E POP COINBASE DUP11 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"281:31863:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122079a9f9e7afed15ccc4f34bb2b73ebb418485899362dc6ed6bcd8cd2c4e50418a64736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0xA9F9E7AFED15CCC4F34BB2B73EBB418485899362DC6ED6BCD8CD 0x2C 0x4E POP COINBASE DUP11 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"281:31863:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001f8cdd19e110441e5066f185f97f89d72fe69fedc31a5450174f60c2849573964736f6c63430008190033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xF8 0xCD 0xD1 SWAP15 GT DIV COINBASE 0xE5 MOD PUSH16 0x185F97F89D72FE69FEDC31A5450174F6 0xC 0x28 BLOBHASH JUMPI CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"769:34173:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001f8cdd19e110441e5066f185f97f89d72fe69fedc31a5450174f60c2849573964736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xF8 0xCD 0xD1 SWAP15 GT DIV COINBASE 0xE5 MOD PUSH16 0x185F97F89D72FE69FEDC31A5450174F6 0xC 0x28 BLOBHASH JUMPI CODECOPY PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ","sourceMap":"769:34173:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e634d07c2bcac686e23b9141c76cebcbf1791a7fb88fb3a063e22c4d682e07964736f6c63430008190033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E PUSH4 0x4D07C2BC 0xAC PUSH9 0x6E23B9141C76CEBCBF OR SWAP2 0xA7 0xFB DUP9 0xFB GASPRICE MOD RETURNDATACOPY 0x22 0xC4 0xD6 DUP3 0xE0 PUSH26 0x64736F6C63430008190033000000000000000000000000000000 ","sourceMap":"258:2354:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201e634d07c2bcac686e23b9141c76cebcbf1791a7fb88fb3a063e22c4d682e07964736f6c63430008190033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1E PUSH4 0x4D07C2BC 0xAC PUSH9 0x6E23B9141C76CEBCBF OR SWAP2 0xA7 0xFB DUP9 0xFB GASPRICE MOD RETURNDATACOPY 0x22 0xC4 0xD6 DUP3 0xE0 PUSH26 0x64736F6C63430008190033000000000000000000000000000000 ","sourceMap":"258:2354:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/DAO.sol":{"DAO":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"string","name":"_title","type":"string"},{"internalType":"string","name":"_description","type":"string"},{"internalType":"uint256","name":"_deadline","type":"uint256"}],"name":"create_proposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"get_proposal","outputs":[{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"numOfVote","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"dealine","type":"uint256"},{"internalType":"enum DAO.Status","name":"status","type":"uint8"}],"internalType":"struct DAO.Proposal","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"get_proposals","outputs":[{"components":[{"internalType":"string","name":"title","type":"string"},{"internalType":"string","name":"description","type":"string"},{"internalType":"uint256","name":"numOfVote","type":"uint256"},{"internalType":"uint256","name":"startTime","type":"uint256"},{"internalType":"uint256","name":"dealine","type":"uint256"},{"internalType":"enum DAO.Status","name":"status","type":"uint8"}],"internalType":"struct DAO.Proposal[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"recipientOf","outputs":[{"internalType":"address","name":"recipient_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"},{"internalType":"string","name":"_title","type":"string"},{"internalType":"string","name":"_description","type":"string"}],"name":"update_proposal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"vote_on_proposal","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_6858":{"entryPoint":null,"id":6858,"parameterSlots":0,"returnSlots":0},"abi_decode_t_uint256_fromMemory":{"entryPoint":831,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":852,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":722,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":747,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":762,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":704,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":672,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":737,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":944,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":897,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":803,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":808,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:2293:19","nodeType":"YulBlock","src":"0:2293:19","statements":[{"body":{"nativeSrc":"52:81:19","nodeType":"YulBlock","src":"52:81:19","statements":[{"nativeSrc":"62:65:19","nodeType":"YulAssignment","src":"62:65:19","value":{"arguments":[{"name":"value","nativeSrc":"77:5:19","nodeType":"YulIdentifier","src":"77:5:19"},{"kind":"number","nativeSrc":"84:42:19","nodeType":"YulLiteral","src":"84:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"73:3:19","nodeType":"YulIdentifier","src":"73:3:19"},"nativeSrc":"73:54:19","nodeType":"YulFunctionCall","src":"73:54:19"},"variableNames":[{"name":"cleaned","nativeSrc":"62:7:19","nodeType":"YulIdentifier","src":"62:7:19"}]}]},"name":"cleanup_t_uint160","nativeSrc":"7:126:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"34:5:19","nodeType":"YulTypedName","src":"34:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"44:7:19","nodeType":"YulTypedName","src":"44:7:19","type":""}],"src":"7:126:19"},{"body":{"nativeSrc":"184:51:19","nodeType":"YulBlock","src":"184:51:19","statements":[{"nativeSrc":"194:35:19","nodeType":"YulAssignment","src":"194:35:19","value":{"arguments":[{"name":"value","nativeSrc":"223:5:19","nodeType":"YulIdentifier","src":"223:5:19"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"205:17:19","nodeType":"YulIdentifier","src":"205:17:19"},"nativeSrc":"205:24:19","nodeType":"YulFunctionCall","src":"205:24:19"},"variableNames":[{"name":"cleaned","nativeSrc":"194:7:19","nodeType":"YulIdentifier","src":"194:7:19"}]}]},"name":"cleanup_t_address","nativeSrc":"139:96:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"166:5:19","nodeType":"YulTypedName","src":"166:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"176:7:19","nodeType":"YulTypedName","src":"176:7:19","type":""}],"src":"139:96:19"},{"body":{"nativeSrc":"306:53:19","nodeType":"YulBlock","src":"306:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"323:3:19","nodeType":"YulIdentifier","src":"323:3:19"},{"arguments":[{"name":"value","nativeSrc":"346:5:19","nodeType":"YulIdentifier","src":"346:5:19"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"328:17:19","nodeType":"YulIdentifier","src":"328:17:19"},"nativeSrc":"328:24:19","nodeType":"YulFunctionCall","src":"328:24:19"}],"functionName":{"name":"mstore","nativeSrc":"316:6:19","nodeType":"YulIdentifier","src":"316:6:19"},"nativeSrc":"316:37:19","nodeType":"YulFunctionCall","src":"316:37:19"},"nativeSrc":"316:37:19","nodeType":"YulExpressionStatement","src":"316:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"241:118:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"294:5:19","nodeType":"YulTypedName","src":"294:5:19","type":""},{"name":"pos","nativeSrc":"301:3:19","nodeType":"YulTypedName","src":"301:3:19","type":""}],"src":"241:118:19"},{"body":{"nativeSrc":"410:32:19","nodeType":"YulBlock","src":"410:32:19","statements":[{"nativeSrc":"420:16:19","nodeType":"YulAssignment","src":"420:16:19","value":{"name":"value","nativeSrc":"431:5:19","nodeType":"YulIdentifier","src":"431:5:19"},"variableNames":[{"name":"cleaned","nativeSrc":"420:7:19","nodeType":"YulIdentifier","src":"420:7:19"}]}]},"name":"cleanup_t_uint256","nativeSrc":"365:77:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"392:5:19","nodeType":"YulTypedName","src":"392:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"402:7:19","nodeType":"YulTypedName","src":"402:7:19","type":""}],"src":"365:77:19"},{"body":{"nativeSrc":"513:53:19","nodeType":"YulBlock","src":"513:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"530:3:19","nodeType":"YulIdentifier","src":"530:3:19"},{"arguments":[{"name":"value","nativeSrc":"553:5:19","nodeType":"YulIdentifier","src":"553:5:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"535:17:19","nodeType":"YulIdentifier","src":"535:17:19"},"nativeSrc":"535:24:19","nodeType":"YulFunctionCall","src":"535:24:19"}],"functionName":{"name":"mstore","nativeSrc":"523:6:19","nodeType":"YulIdentifier","src":"523:6:19"},"nativeSrc":"523:37:19","nodeType":"YulFunctionCall","src":"523:37:19"},"nativeSrc":"523:37:19","nodeType":"YulExpressionStatement","src":"523:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"448:118:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"501:5:19","nodeType":"YulTypedName","src":"501:5:19","type":""},{"name":"pos","nativeSrc":"508:3:19","nodeType":"YulTypedName","src":"508:3:19","type":""}],"src":"448:118:19"},{"body":{"nativeSrc":"698:206:19","nodeType":"YulBlock","src":"698:206:19","statements":[{"nativeSrc":"708:26:19","nodeType":"YulAssignment","src":"708:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"720:9:19","nodeType":"YulIdentifier","src":"720:9:19"},{"kind":"number","nativeSrc":"731:2:19","nodeType":"YulLiteral","src":"731:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"716:3:19","nodeType":"YulIdentifier","src":"716:3:19"},"nativeSrc":"716:18:19","nodeType":"YulFunctionCall","src":"716:18:19"},"variableNames":[{"name":"tail","nativeSrc":"708:4:19","nodeType":"YulIdentifier","src":"708:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"788:6:19","nodeType":"YulIdentifier","src":"788:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"801:9:19","nodeType":"YulIdentifier","src":"801:9:19"},{"kind":"number","nativeSrc":"812:1:19","nodeType":"YulLiteral","src":"812:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"797:3:19","nodeType":"YulIdentifier","src":"797:3:19"},"nativeSrc":"797:17:19","nodeType":"YulFunctionCall","src":"797:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"744:43:19","nodeType":"YulIdentifier","src":"744:43:19"},"nativeSrc":"744:71:19","nodeType":"YulFunctionCall","src":"744:71:19"},"nativeSrc":"744:71:19","nodeType":"YulExpressionStatement","src":"744:71:19"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"869:6:19","nodeType":"YulIdentifier","src":"869:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"882:9:19","nodeType":"YulIdentifier","src":"882:9:19"},{"kind":"number","nativeSrc":"893:2:19","nodeType":"YulLiteral","src":"893:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"878:3:19","nodeType":"YulIdentifier","src":"878:3:19"},"nativeSrc":"878:18:19","nodeType":"YulFunctionCall","src":"878:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"825:43:19","nodeType":"YulIdentifier","src":"825:43:19"},"nativeSrc":"825:72:19","nodeType":"YulFunctionCall","src":"825:72:19"},"nativeSrc":"825:72:19","nodeType":"YulExpressionStatement","src":"825:72:19"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"572:332:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"662:9:19","nodeType":"YulTypedName","src":"662:9:19","type":""},{"name":"value1","nativeSrc":"674:6:19","nodeType":"YulTypedName","src":"674:6:19","type":""},{"name":"value0","nativeSrc":"682:6:19","nodeType":"YulTypedName","src":"682:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"693:4:19","nodeType":"YulTypedName","src":"693:4:19","type":""}],"src":"572:332:19"},{"body":{"nativeSrc":"950:35:19","nodeType":"YulBlock","src":"950:35:19","statements":[{"nativeSrc":"960:19:19","nodeType":"YulAssignment","src":"960:19:19","value":{"arguments":[{"kind":"number","nativeSrc":"976:2:19","nodeType":"YulLiteral","src":"976:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"970:5:19","nodeType":"YulIdentifier","src":"970:5:19"},"nativeSrc":"970:9:19","nodeType":"YulFunctionCall","src":"970:9:19"},"variableNames":[{"name":"memPtr","nativeSrc":"960:6:19","nodeType":"YulIdentifier","src":"960:6:19"}]}]},"name":"allocate_unbounded","nativeSrc":"910:75:19","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"943:6:19","nodeType":"YulTypedName","src":"943:6:19","type":""}],"src":"910:75:19"},{"body":{"nativeSrc":"1080:28:19","nodeType":"YulBlock","src":"1080:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1097:1:19","nodeType":"YulLiteral","src":"1097:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"1100:1:19","nodeType":"YulLiteral","src":"1100:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1090:6:19","nodeType":"YulIdentifier","src":"1090:6:19"},"nativeSrc":"1090:12:19","nodeType":"YulFunctionCall","src":"1090:12:19"},"nativeSrc":"1090:12:19","nodeType":"YulExpressionStatement","src":"1090:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"991:117:19","nodeType":"YulFunctionDefinition","src":"991:117:19"},{"body":{"nativeSrc":"1203:28:19","nodeType":"YulBlock","src":"1203:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1220:1:19","nodeType":"YulLiteral","src":"1220:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"1223:1:19","nodeType":"YulLiteral","src":"1223:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1213:6:19","nodeType":"YulIdentifier","src":"1213:6:19"},"nativeSrc":"1213:12:19","nodeType":"YulFunctionCall","src":"1213:12:19"},"nativeSrc":"1213:12:19","nodeType":"YulExpressionStatement","src":"1213:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"1114:117:19","nodeType":"YulFunctionDefinition","src":"1114:117:19"},{"body":{"nativeSrc":"1280:79:19","nodeType":"YulBlock","src":"1280:79:19","statements":[{"body":{"nativeSrc":"1337:16:19","nodeType":"YulBlock","src":"1337:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1346:1:19","nodeType":"YulLiteral","src":"1346:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"1349:1:19","nodeType":"YulLiteral","src":"1349:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1339:6:19","nodeType":"YulIdentifier","src":"1339:6:19"},"nativeSrc":"1339:12:19","nodeType":"YulFunctionCall","src":"1339:12:19"},"nativeSrc":"1339:12:19","nodeType":"YulExpressionStatement","src":"1339:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1303:5:19","nodeType":"YulIdentifier","src":"1303:5:19"},{"arguments":[{"name":"value","nativeSrc":"1328:5:19","nodeType":"YulIdentifier","src":"1328:5:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1310:17:19","nodeType":"YulIdentifier","src":"1310:17:19"},"nativeSrc":"1310:24:19","nodeType":"YulFunctionCall","src":"1310:24:19"}],"functionName":{"name":"eq","nativeSrc":"1300:2:19","nodeType":"YulIdentifier","src":"1300:2:19"},"nativeSrc":"1300:35:19","nodeType":"YulFunctionCall","src":"1300:35:19"}],"functionName":{"name":"iszero","nativeSrc":"1293:6:19","nodeType":"YulIdentifier","src":"1293:6:19"},"nativeSrc":"1293:43:19","nodeType":"YulFunctionCall","src":"1293:43:19"},"nativeSrc":"1290:63:19","nodeType":"YulIf","src":"1290:63:19"}]},"name":"validator_revert_t_uint256","nativeSrc":"1237:122:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1273:5:19","nodeType":"YulTypedName","src":"1273:5:19","type":""}],"src":"1237:122:19"},{"body":{"nativeSrc":"1428:80:19","nodeType":"YulBlock","src":"1428:80:19","statements":[{"nativeSrc":"1438:22:19","nodeType":"YulAssignment","src":"1438:22:19","value":{"arguments":[{"name":"offset","nativeSrc":"1453:6:19","nodeType":"YulIdentifier","src":"1453:6:19"}],"functionName":{"name":"mload","nativeSrc":"1447:5:19","nodeType":"YulIdentifier","src":"1447:5:19"},"nativeSrc":"1447:13:19","nodeType":"YulFunctionCall","src":"1447:13:19"},"variableNames":[{"name":"value","nativeSrc":"1438:5:19","nodeType":"YulIdentifier","src":"1438:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1496:5:19","nodeType":"YulIdentifier","src":"1496:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1469:26:19","nodeType":"YulIdentifier","src":"1469:26:19"},"nativeSrc":"1469:33:19","nodeType":"YulFunctionCall","src":"1469:33:19"},"nativeSrc":"1469:33:19","nodeType":"YulExpressionStatement","src":"1469:33:19"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1365:143:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1406:6:19","nodeType":"YulTypedName","src":"1406:6:19","type":""},{"name":"end","nativeSrc":"1414:3:19","nodeType":"YulTypedName","src":"1414:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1422:5:19","nodeType":"YulTypedName","src":"1422:5:19","type":""}],"src":"1365:143:19"},{"body":{"nativeSrc":"1591:274:19","nodeType":"YulBlock","src":"1591:274:19","statements":[{"body":{"nativeSrc":"1637:83:19","nodeType":"YulBlock","src":"1637:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1639:77:19","nodeType":"YulIdentifier","src":"1639:77:19"},"nativeSrc":"1639:79:19","nodeType":"YulFunctionCall","src":"1639:79:19"},"nativeSrc":"1639:79:19","nodeType":"YulExpressionStatement","src":"1639:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1612:7:19","nodeType":"YulIdentifier","src":"1612:7:19"},{"name":"headStart","nativeSrc":"1621:9:19","nodeType":"YulIdentifier","src":"1621:9:19"}],"functionName":{"name":"sub","nativeSrc":"1608:3:19","nodeType":"YulIdentifier","src":"1608:3:19"},"nativeSrc":"1608:23:19","nodeType":"YulFunctionCall","src":"1608:23:19"},{"kind":"number","nativeSrc":"1633:2:19","nodeType":"YulLiteral","src":"1633:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"1604:3:19","nodeType":"YulIdentifier","src":"1604:3:19"},"nativeSrc":"1604:32:19","nodeType":"YulFunctionCall","src":"1604:32:19"},"nativeSrc":"1601:119:19","nodeType":"YulIf","src":"1601:119:19"},{"nativeSrc":"1730:128:19","nodeType":"YulBlock","src":"1730:128:19","statements":[{"nativeSrc":"1745:15:19","nodeType":"YulVariableDeclaration","src":"1745:15:19","value":{"kind":"number","nativeSrc":"1759:1:19","nodeType":"YulLiteral","src":"1759:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1749:6:19","nodeType":"YulTypedName","src":"1749:6:19","type":""}]},{"nativeSrc":"1774:74:19","nodeType":"YulAssignment","src":"1774:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1820:9:19","nodeType":"YulIdentifier","src":"1820:9:19"},{"name":"offset","nativeSrc":"1831:6:19","nodeType":"YulIdentifier","src":"1831:6:19"}],"functionName":{"name":"add","nativeSrc":"1816:3:19","nodeType":"YulIdentifier","src":"1816:3:19"},"nativeSrc":"1816:22:19","nodeType":"YulFunctionCall","src":"1816:22:19"},{"name":"dataEnd","nativeSrc":"1840:7:19","nodeType":"YulIdentifier","src":"1840:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"1784:31:19","nodeType":"YulIdentifier","src":"1784:31:19"},"nativeSrc":"1784:64:19","nodeType":"YulFunctionCall","src":"1784:64:19"},"variableNames":[{"name":"value0","nativeSrc":"1774:6:19","nodeType":"YulIdentifier","src":"1774:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"1514:351:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1561:9:19","nodeType":"YulTypedName","src":"1561:9:19","type":""},{"name":"dataEnd","nativeSrc":"1572:7:19","nodeType":"YulTypedName","src":"1572:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1584:6:19","nodeType":"YulTypedName","src":"1584:6:19","type":""}],"src":"1514:351:19"},{"body":{"nativeSrc":"1899:152:19","nodeType":"YulBlock","src":"1899:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1916:1:19","nodeType":"YulLiteral","src":"1916:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"1919:77:19","nodeType":"YulLiteral","src":"1919:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"1909:6:19","nodeType":"YulIdentifier","src":"1909:6:19"},"nativeSrc":"1909:88:19","nodeType":"YulFunctionCall","src":"1909:88:19"},"nativeSrc":"1909:88:19","nodeType":"YulExpressionStatement","src":"1909:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2013:1:19","nodeType":"YulLiteral","src":"2013:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"2016:4:19","nodeType":"YulLiteral","src":"2016:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"2006:6:19","nodeType":"YulIdentifier","src":"2006:6:19"},"nativeSrc":"2006:15:19","nodeType":"YulFunctionCall","src":"2006:15:19"},"nativeSrc":"2006:15:19","nodeType":"YulExpressionStatement","src":"2006:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"2037:1:19","nodeType":"YulLiteral","src":"2037:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"2040:4:19","nodeType":"YulLiteral","src":"2040:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"2030:6:19","nodeType":"YulIdentifier","src":"2030:6:19"},"nativeSrc":"2030:15:19","nodeType":"YulFunctionCall","src":"2030:15:19"},"nativeSrc":"2030:15:19","nodeType":"YulExpressionStatement","src":"2030:15:19"}]},"name":"panic_error_0x11","nativeSrc":"1871:180:19","nodeType":"YulFunctionDefinition","src":"1871:180:19"},{"body":{"nativeSrc":"2100:190:19","nodeType":"YulBlock","src":"2100:190:19","statements":[{"nativeSrc":"2110:33:19","nodeType":"YulAssignment","src":"2110:33:19","value":{"arguments":[{"name":"value","nativeSrc":"2137:5:19","nodeType":"YulIdentifier","src":"2137:5:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"2119:17:19","nodeType":"YulIdentifier","src":"2119:17:19"},"nativeSrc":"2119:24:19","nodeType":"YulFunctionCall","src":"2119:24:19"},"variableNames":[{"name":"value","nativeSrc":"2110:5:19","nodeType":"YulIdentifier","src":"2110:5:19"}]},{"body":{"nativeSrc":"2233:22:19","nodeType":"YulBlock","src":"2233:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"2235:16:19","nodeType":"YulIdentifier","src":"2235:16:19"},"nativeSrc":"2235:18:19","nodeType":"YulFunctionCall","src":"2235:18:19"},"nativeSrc":"2235:18:19","nodeType":"YulExpressionStatement","src":"2235:18:19"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"2158:5:19","nodeType":"YulIdentifier","src":"2158:5:19"},{"kind":"number","nativeSrc":"2165:66:19","nodeType":"YulLiteral","src":"2165:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"2155:2:19","nodeType":"YulIdentifier","src":"2155:2:19"},"nativeSrc":"2155:77:19","nodeType":"YulFunctionCall","src":"2155:77:19"},"nativeSrc":"2152:103:19","nodeType":"YulIf","src":"2152:103:19"},{"nativeSrc":"2264:20:19","nodeType":"YulAssignment","src":"2264:20:19","value":{"arguments":[{"name":"value","nativeSrc":"2275:5:19","nodeType":"YulIdentifier","src":"2275:5:19"},{"kind":"number","nativeSrc":"2282:1:19","nodeType":"YulLiteral","src":"2282:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2271:3:19","nodeType":"YulIdentifier","src":"2271:3:19"},"nativeSrc":"2271:13:19","nodeType":"YulFunctionCall","src":"2271:13:19"},"variableNames":[{"name":"ret","nativeSrc":"2264:3:19","nodeType":"YulIdentifier","src":"2264:3:19"}]}]},"name":"increment_t_uint256","nativeSrc":"2057:233:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2086:5:19","nodeType":"YulTypedName","src":"2086:5:19","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"2096:3:19","nodeType":"YulTypedName","src":"2096:3:19","type":""}],"src":"2057:233:19"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600060405161001f90610293565b604051809103906000f08015801561003b573d6000803e3d6000fd5b50905080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060405180608001604052807fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec4281526020018273ffffffffffffffffffffffffffffffffffffffff16815260200160055481526020013373ffffffffffffffffffffffffffffffffffffffff16815250600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a1448194336005546040518363ffffffff1660e01b81526004016102319291906102fa565b6020604051808303816000875af1158015610250573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102749190610354565b5060056000815480929190610288906103b0565b9190505550506103f8565b61286c8061269c83390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102cb826102a0565b9050919050565b6102db816102c0565b82525050565b6000819050919050565b6102f4816102e1565b82525050565b600060408201905061030f60008301856102d2565b61031c60208301846102eb565b9392505050565b600080fd5b610331816102e1565b811461033c57600080fd5b50565b60008151905061034e81610328565b92915050565b60006020828403121561036a57610369610323565b5b60006103788482850161033f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006103bb826102e1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036103ed576103ec610381565b5b600182019050919050565b612295806104076000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80637d5aea4f116100665780637d5aea4f14610130578063bd611fe614610160578063c2ca95ec1461017c578063c706775214610198578063d5792041146101b657610093565b80630912ed771461009857806316e744bd146100b45780631f29d2dc146100d05780633eda520014610100575b600080fd5b6100b260048036038101906100ad919061146f565b6101d2565b005b6100ce60048036038101906100c991906114af565b61042a565b005b6100ea60048036038101906100e5919061146f565b61078e565b6040516100f79190611511565b60405180910390f35b61011a6004803603810190610115919061152c565b6108ab565b60405161012791906116ff565b60405180910390f35b61014a6004803603810190610145919061146f565b610a64565b6040516101579190611511565b60405180910390f35b61017a60048036038101906101759190611856565b610bd8565b005b6101966004803603810190610191919061152c565b610d8c565b005b6101a0611138565b6040516101ad9190611a33565b60405180910390f35b6101d060048036038101906101cb9190611a55565b611314565b005b60005b6000805490508110156103ea5760008082815481106101f7576101f6611ae0565b5b906000526020600020906004020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690507f829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d4636600083815481106102605761025f611ae0565b5b9060005260206000209060040201600001541480156102ef57508373ffffffffffffffffffffffffffffffffffffffff16600083815481106102a5576102a4611ae0565b5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b801561031f5750826000838154811061030b5761030a611ae0565b5b906000526020600020906004020160020154145b156103dc577f789719e83535ffb09d643a0bf25dd5104145ff4f4daf57b09a6a0db0bfdb82446000838154811061035957610358611ae0565b5b9060005260206000209060040201600001819055507f789719e83535ffb09d643a0bf25dd5104145ff4f4daf57b09a6a0db0bfdb8244600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505050610426565b5080806001019150506101d5565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041d90611b92565b60405180910390fd5b5050565b60007f829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d463690506005600081548092919061046290611be1565b91905055925060405180608001604052808281526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815250600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a144819483856040518363ffffffff1660e01b81526004016105f6929190611c38565b6020604051808303816000875af1158015610615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106399190611c76565b506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600282015481600201556003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050565b6000805b6000805490508110156108a3578373ffffffffffffffffffffffffffffffffffffffff16600082815481106107ca576107c9611ae0565b5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156108435750826000828154811061082f5761082e611ae0565b5b906000526020600020906004020160020154145b15610896576000818154811061085c5761085b611ae0565b5b906000526020600020906004020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150506108a5565b8080600101915050610792565b505b92915050565b6108b361137f565b600382815481106108c7576108c6611ae0565b5b90600052602060002090600602016040518060c00160405290816000820180546108f090611cd2565b80601f016020809104026020016040519081016040528092919081815260200182805461091c90611cd2565b80156109695780601f1061093e57610100808354040283529160200191610969565b820191906000526020600020905b81548152906001019060200180831161094c57829003601f168201915b5050505050815260200160018201805461098290611cd2565b80601f01602080910402602001604051908101604052809291908181526020018280546109ae90611cd2565b80156109fb5780601f106109d0576101008083540402835291602001916109fb565b820191906000526020600020905b8154815290600101906020018083116109de57829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff166003811115610a4757610a466115f8565b5b6003811115610a5957610a586115f8565b5b815250509050919050565b6000807fffa60083152bd11704a80cc8c7a409dad8aa74288b454a3ba0e94c0abc7cf168905060005b600080549050811015610bcf578473ffffffffffffffffffffffffffffffffffffffff1660008281548110610ac557610ac4611ae0565b5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610b3e57508360008281548110610b2a57610b29611ae0565b5b906000526020600020906004020160020154145b8015610b6e57508160008281548110610b5a57610b59611ae0565b5b906000526020600020906004020160000154145b15610bc25760008181548110610b8757610b86611ae0565b5b906000526020600020906004020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692505050610bd2565b8080600101915050610a8d565b50505b92915050565b6000603c82610be79190611d03565b42610bf29190611d45565b90507fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610c98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8f90611dc5565b60405180910390fd5b60006040518060c001604052808681526020018581526020016000815260200142815260200183815260200160006003811115610cd857610cd76115f8565b5b815250905060038190806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000019081610d1e9190611f91565b506020820151816001019081610d349190611f91565b5060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690836003811115610d7e57610d7d6115f8565b5b021790555050505050505050565b4260038281548110610da157610da0611ae0565b5b9060005260206000209060060201600401541115610e4257600160038281548110610dcf57610dce611ae0565b5b906000526020600020906006020160050160006101000a81548160ff02191690836003811115610e0257610e016115f8565b5b02179055506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e39906120d5565b60405180910390fd5b7fffa60083152bd11704a80cc8c7a409dad8aa74288b454a3ba0e94c0abc7cf168600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541480610f1357507fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154145b610f52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4990612141565b60405180910390fd5b60006003811115610f6657610f656115f8565b5b60038281548110610f7a57610f79611ae0565b5b906000526020600020906006020160050160009054906101000a900460ff166003811115610fab57610faa6115f8565b5b14610feb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe2906121d3565b60405180910390fd5b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff1615150361108f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110869061223f565b60405180910390fd5b6001600382815481106110a5576110a4611ae0565b5b906000526020600020906006020160020160008282546110c59190611d45565b925050819055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60606003805480602002602001604051908101604052809291908181526020016000905b8282101561130b57838290600052602060002090600602016040518060c001604052908160008201805461118f90611cd2565b80601f01602080910402602001604051908101604052809291908181526020018280546111bb90611cd2565b80156112085780601f106111dd57610100808354040283529160200191611208565b820191906000526020600020905b8154815290600101906020018083116111eb57829003601f168201915b5050505050815260200160018201805461122190611cd2565b80601f016020809104026020016040519081016040528092919081815260200182805461124d90611cd2565b801561129a5780601f1061126f5761010080835404028352916020019161129a565b820191906000526020600020905b81548152906001019060200180831161127d57829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1660038111156112e6576112e56115f8565b5b60038111156112f8576112f76115f8565b5b815250508152602001906001019061115c565b50505050905090565b816003848154811061132957611328611ae0565b5b906000526020600020906006020160000190816113469190611f91565b50806003848154811061135c5761135b611ae0565b5b906000526020600020906006020160010190816113799190611f91565b50505050565b6040518060c001604052806060815260200160608152602001600081526020016000815260200160008152602001600060038111156113c1576113c06115f8565b5b81525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611406826113db565b9050919050565b611416816113fb565b811461142157600080fd5b50565b6000813590506114338161140d565b92915050565b6000819050919050565b61144c81611439565b811461145757600080fd5b50565b60008135905061146981611443565b92915050565b60008060408385031215611486576114856113d1565b5b600061149485828601611424565b92505060206114a58582860161145a565b9150509250929050565b6000806000606084860312156114c8576114c76113d1565b5b60006114d686828701611424565b93505060206114e78682870161145a565b92505060406114f886828701611424565b9150509250925092565b61150b816113fb565b82525050565b60006020820190506115266000830184611502565b92915050565b600060208284031215611542576115416113d1565b5b60006115508482850161145a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611593578082015181840152602081019050611578565b60008484015250505050565b6000601f19601f8301169050919050565b60006115bb82611559565b6115c58185611564565b93506115d5818560208601611575565b6115de8161159f565b840191505092915050565b6115f281611439565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611638576116376115f8565b5b50565b600081905061164982611627565b919050565b60006116598261163b565b9050919050565b6116698161164e565b82525050565b600060c083016000830151848203600086015261168c82826115b0565b915050602083015184820360208601526116a682826115b0565b91505060408301516116bb60408601826115e9565b5060608301516116ce60608601826115e9565b5060808301516116e160808601826115e9565b5060a08301516116f460a0860182611660565b508091505092915050565b60006020820190508181036000830152611719818461166f565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117638261159f565b810181811067ffffffffffffffff821117156117825761178161172b565b5b80604052505050565b60006117956113c7565b90506117a1828261175a565b919050565b600067ffffffffffffffff8211156117c1576117c061172b565b5b6117ca8261159f565b9050602081019050919050565b82818337600083830152505050565b60006117f96117f4846117a6565b61178b565b90508281526020810184848401111561181557611814611726565b5b6118208482856117d7565b509392505050565b600082601f83011261183d5761183c611721565b5b813561184d8482602086016117e6565b91505092915050565b60008060006060848603121561186f5761186e6113d1565b5b600084013567ffffffffffffffff81111561188d5761188c6113d6565b5b61189986828701611828565b935050602084013567ffffffffffffffff8111156118ba576118b96113d6565b5b6118c686828701611828565b92505060406118d78682870161145a565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060c083016000830151848203600086015261192a82826115b0565b9150506020830151848203602086015261194482826115b0565b915050604083015161195960408601826115e9565b50606083015161196c60608601826115e9565b50608083015161197f60808601826115e9565b5060a083015161199260a0860182611660565b508091505092915050565b60006119a9838361190d565b905092915050565b6000602082019050919050565b60006119c9826118e1565b6119d381856118ec565b9350836020820285016119e5856118fd565b8060005b85811015611a215784840389528151611a02858261199d565b9450611a0d836119b1565b925060208a019950506001810190506119e9565b50829750879550505050505092915050565b60006020820190508181036000830152611a4d81846119be565b905092915050565b600080600060608486031215611a6e57611a6d6113d1565b5b6000611a7c8682870161145a565b935050602084013567ffffffffffffffff811115611a9d57611a9c6113d6565b5b611aa986828701611828565b925050604084013567ffffffffffffffff811115611aca57611ac96113d6565b5b611ad686828701611828565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f594f555f43414e5f4f4e4c595f5245564f4b455f415f4d454d4245525f50455260008201527f4d495353494f4e00000000000000000000000000000000000000000000000000602082015250565b6000611b7c602783611b0f565b9150611b8782611b20565b604082019050919050565b60006020820190508181036000830152611bab81611b6f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bec82611439565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c1e57611c1d611bb2565b5b600182019050919050565b611c3281611439565b82525050565b6000604082019050611c4d6000830185611502565b611c5a6020830184611c29565b9392505050565b600081519050611c7081611443565b92915050565b600060208284031215611c8c57611c8b6113d1565b5b6000611c9a84828501611c61565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cea57607f821691505b602082108103611cfd57611cfc611ca3565b5b50919050565b6000611d0e82611439565b9150611d1983611439565b9250828202611d2781611439565b91508282048414831517611d3e57611d3d611bb2565b5b5092915050565b6000611d5082611439565b9150611d5b83611439565b9250828201905080821115611d7357611d72611bb2565b5b92915050565b7f4f6e6c792041646d696e2063616e206372656174652050726f706f73616c7300600082015250565b6000611daf601f83611b0f565b9150611dba82611d79565b602082019050919050565b60006020820190508181036000830152611dde81611da2565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611e477fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611e0a565b611e518683611e0a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611e8e611e89611e8484611439565b611e69565b611439565b9050919050565b6000819050919050565b611ea883611e73565b611ebc611eb482611e95565b848454611e17565b825550505050565b600090565b611ed1611ec4565b611edc818484611e9f565b505050565b5b81811015611f0057611ef5600082611ec9565b600181019050611ee2565b5050565b601f821115611f4557611f1681611de5565b611f1f84611dfa565b81016020851015611f2e578190505b611f42611f3a85611dfa565b830182611ee1565b50505b505050565b600082821c905092915050565b6000611f6860001984600802611f4a565b1980831691505092915050565b6000611f818383611f57565b9150826002028217905092915050565b611f9a82611559565b67ffffffffffffffff811115611fb357611fb261172b565b5b611fbd8254611cd2565b611fc8828285611f04565b600060209050601f831160018114611ffb5760008415611fe9578287015190505b611ff38582611f75565b86555061205b565b601f19841661200986611de5565b60005b828110156120315784890151825560018201915060208501945060208101905061200c565b8683101561204e578489015161204a601f891682611f57565b8355505b6001600288020188555050505b505050505050565b7f594f552043414e5420564f5445204f4e20455850495245442050524f504f534160008201527f4c00000000000000000000000000000000000000000000000000000000000000602082015250565b60006120bf602183611b0f565b91506120ca82612063565b604082019050919050565b600060208201905081810360008301526120ee816120b2565b9050919050565b7f594f55204e45454420524f4c4520544f20564f54450000000000000000000000600082015250565b600061212b601583611b0f565b9150612136826120f5565b602082019050919050565b6000602082019050818103600083015261215a8161211e565b9050919050565b7f594f552043414e204f4e4c5920564f5445204f4e204143544956452050524f5060008201527f4f53414c00000000000000000000000000000000000000000000000000000000602082015250565b60006121bd602483611b0f565b91506121c882612161565b604082019050919050565b600060208201905081810360008301526121ec816121b0565b9050919050565b7f414c524541445920564f54454400000000000000000000000000000000000000600082015250565b6000612229600d83611b0f565b9150612234826121f3565b602082019050919050565b600060208201905081810360008301526122588161221c565b905091905056fea26469706673582212203d30bd45406dcf1dd9663c5a8606a199a09688877205e39ac7772b187047036564736f6c63430008190033608060405234801561001057600080fd5b506040518060400160405280600681526020017f44414f4e465400000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f444e465400000000000000000000000000000000000000000000000000000000815250816000908161008c91906102f4565b50806001908161009c91906102f4565b5050506103c6565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061012557607f821691505b602082108103610138576101376100de565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026101a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610163565b6101aa8683610163565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006101f16101ec6101e7846101c2565b6101cc565b6101c2565b9050919050565b6000819050919050565b61020b836101d6565b61021f610217826101f8565b848454610170565b825550505050565b600090565b610234610227565b61023f818484610202565b505050565b5b818110156102635761025860008261022c565b600181019050610245565b5050565b601f8211156102a8576102798161013e565b61028284610153565b81016020851015610291578190505b6102a561029d85610153565b830182610244565b50505b505050565b600082821c905092915050565b60006102cb600019846008026102ad565b1980831691505092915050565b60006102e483836102ba565b9150826002028217905092915050565b6102fd826100a4565b67ffffffffffffffff811115610316576103156100af565b5b610320825461010d565b61032b828285610267565b600060209050601f83116001811461035e576000841561034c578287015190505b61035685826102d8565b8655506103be565b601f19841661036c8661013e565b60005b828110156103945784890151825560018201915060208501945060208101905061036f565b868310156103b157848901516103ad601f8916826102ba565b8355505b6001600288020188555050505b505050505050565b612497806103d56000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a22cb4651161007c578063a22cb46514610372578063b88d4fde1461038e578063c87b56dd146103aa578063d5391393146103da578063d547741f146103f8578063e985e9c51461041457610137565b806370a08231146102a657806391d14854146102d657806395d89b4114610306578063a144819414610324578063a217fddf1461035457610137565b8063248a9ca3116100ff578063248a9ca3146101f25780632f2ff15d1461022257806336568abe1461023e57806342842e0e1461025a5780636352211e1461027657610137565b806301ffc9a71461013c57806306fdde031461016c578063081812fc1461018a578063095ea7b3146101ba57806323b872dd146101d6575b600080fd5b61015660048036038101906101519190611beb565b610444565b6040516101639190611c33565b60405180910390f35b610174610456565b6040516101819190611cde565b60405180910390f35b6101a4600480360381019061019f9190611d36565b6104e8565b6040516101b19190611da4565b60405180910390f35b6101d460048036038101906101cf9190611deb565b610504565b005b6101f060048036038101906101eb9190611e2b565b61051a565b005b61020c60048036038101906102079190611eb4565b61061c565b6040516102199190611ef0565b60405180910390f35b61023c60048036038101906102379190611f0b565b61063c565b005b61025860048036038101906102539190611f0b565b61065e565b005b610274600480360381019061026f9190611e2b565b6106d9565b005b610290600480360381019061028b9190611d36565b6106f9565b60405161029d9190611da4565b60405180910390f35b6102c060048036038101906102bb9190611f4b565b61070b565b6040516102cd9190611f87565b60405180910390f35b6102f060048036038101906102eb9190611f0b565b6107c5565b6040516102fd9190611c33565b60405180910390f35b61030e610830565b60405161031b9190611cde565b60405180910390f35b61033e60048036038101906103399190611deb565b6108c2565b60405161034b9190611f87565b60405180910390f35b61035c6108d7565b6040516103699190611ef0565b60405180910390f35b61038c60048036038101906103879190611fce565b6108de565b005b6103a860048036038101906103a39190612143565b6108f4565b005b6103c460048036038101906103bf9190611d36565b610919565b6040516103d19190611cde565b60405180910390f35b6103e2610982565b6040516103ef9190611ef0565b60405180910390f35b610412600480360381019061040d9190611f0b565b6109a6565b005b61042e600480360381019061042991906121c6565b6109c8565b60405161043b9190611c33565b60405180910390f35b600061044f82610a5c565b9050919050565b60606000805461046590612235565b80601f016020809104026020016040519081016040528092919081815260200182805461049190612235565b80156104de5780601f106104b3576101008083540402835291602001916104de565b820191906000526020600020905b8154815290600101906020018083116104c157829003601f168201915b5050505050905090565b60006104f382610ad6565b506104fd82610b5e565b9050919050565b6105168282610511610b9b565b610ba3565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361058c5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105839190611da4565b60405180910390fd5b60006105a0838361059b610b9b565b610bb5565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610616578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161060d93929190612266565b60405180910390fd5b50505050565b600060066000838152602001908152602001600020600101549050919050565b6106458261061c565b61064e81610dcf565b6106588383610de3565b50505050565b610666610b9b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106ca576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d48282610ed5565b505050565b6106f4838383604051806020016040528060008152506108f4565b505050565b600061070482610ad6565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361077e5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107759190611da4565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006006600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60606001805461083f90612235565b80601f016020809104026020016040519081016040528092919081815260200182805461086b90612235565b80156108b85780601f1061088d576101008083540402835291602001916108b8565b820191906000526020600020905b81548152906001019060200180831161089b57829003601f168201915b5050505050905090565b60006108ce8383610fc8565b81905092915050565b6000801b81565b6108f06108e9610b9b565b8383610fe6565b5050565b6108ff84848461051a565b61091361090a610b9b565b85858585611155565b50505050565b606061092482610ad6565b50600061092f611306565b9050600081511161094f576040518060200160405280600081525061097a565b806109598461131d565b60405160200161096a9291906122d9565b6040516020818303038152906040525b915050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6109af8261061c565b6109b881610dcf565b6109c28383610ed5565b50505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610acf5750610ace826113eb565b5b9050919050565b600080610ae2836114cd565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b5557826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b4c9190611f87565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610bb0838383600161150a565b505050565b600080610bc1846114cd565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c0357610c028184866116cf565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c9457610c4560008560008061150a565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d17576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610de081610ddb610b9b565b611793565b50565b6000610def83836107c5565b610eca5760016006600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e67610b9b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610ecf565b600090505b92915050565b6000610ee183836107c5565b15610fbd5760006006600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610f5a610b9b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610fc2565b600090505b92915050565b610fe28282604051806020016040528060008152506117e4565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361105757816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161104e9190611da4565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111489190611c33565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156112ff578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b81526004016111b49493929190612352565b6020604051808303816000875af19250505080156111f057506040513d601f19601f820116820180604052508101906111ed91906123b3565b60015b611274573d8060008114611220576040519150601f19603f3d011682016040523d82523d6000602084013e611225565b606091505b50600081510361126c57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112639190611da4565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112fd57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112f49190611da4565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b60606000600161132c84611808565b01905060008167ffffffffffffffff81111561134b5761134a612018565b5b6040519080825280601f01601f19166020018201604052801561137d5781602001600182028036833780820191505090505b509050600082602083010190505b6001156113e0578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816113d4576113d36123e0565b5b0494506000850361138b575b819350505050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806114b657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806114c657506114c58261195b565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806115435750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561167757600061155384610ad6565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115be57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115d157506115cf81846109c8565b155b1561161357826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161160a9190611da4565b60405180910390fd5b811561167557838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116da8383836119c5565b61178e57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361174f57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117469190611f87565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161178592919061240f565b60405180910390fd5b505050565b61179d82826107c5565b6117e05780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016117d7929190612438565b60405180910390fd5b5050565b6117ee8383611a86565b6118036117f9610b9b565b6000858585611155565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611866577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161185c5761185b6123e0565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106118a3576d04ee2d6d415b85acef81000000008381611899576118986123e0565b5b0492506020810190505b662386f26fc1000083106118d257662386f26fc1000083816118c8576118c76123e0565b5b0492506010810190505b6305f5e10083106118fb576305f5e10083816118f1576118f06123e0565b5b0492506008810190505b6127108310611920576127108381611916576119156123e0565b5b0492506004810190505b606483106119435760648381611939576119386123e0565b5b0492506002810190505b600a8310611952576001810190505b80915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611a7d57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a3e5750611a3d84846109c8565b5b80611a7c57508273ffffffffffffffffffffffffffffffffffffffff16611a6483610b5e565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611af85760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611aef9190611da4565b60405180910390fd5b6000611b0683836000610bb5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b7a5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611b719190611da4565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611bc881611b93565b8114611bd357600080fd5b50565b600081359050611be581611bbf565b92915050565b600060208284031215611c0157611c00611b89565b5b6000611c0f84828501611bd6565b91505092915050565b60008115159050919050565b611c2d81611c18565b82525050565b6000602082019050611c486000830184611c24565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c88578082015181840152602081019050611c6d565b60008484015250505050565b6000601f19601f8301169050919050565b6000611cb082611c4e565b611cba8185611c59565b9350611cca818560208601611c6a565b611cd381611c94565b840191505092915050565b60006020820190508181036000830152611cf88184611ca5565b905092915050565b6000819050919050565b611d1381611d00565b8114611d1e57600080fd5b50565b600081359050611d3081611d0a565b92915050565b600060208284031215611d4c57611d4b611b89565b5b6000611d5a84828501611d21565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d8e82611d63565b9050919050565b611d9e81611d83565b82525050565b6000602082019050611db96000830184611d95565b92915050565b611dc881611d83565b8114611dd357600080fd5b50565b600081359050611de581611dbf565b92915050565b60008060408385031215611e0257611e01611b89565b5b6000611e1085828601611dd6565b9250506020611e2185828601611d21565b9150509250929050565b600080600060608486031215611e4457611e43611b89565b5b6000611e5286828701611dd6565b9350506020611e6386828701611dd6565b9250506040611e7486828701611d21565b9150509250925092565b6000819050919050565b611e9181611e7e565b8114611e9c57600080fd5b50565b600081359050611eae81611e88565b92915050565b600060208284031215611eca57611ec9611b89565b5b6000611ed884828501611e9f565b91505092915050565b611eea81611e7e565b82525050565b6000602082019050611f056000830184611ee1565b92915050565b60008060408385031215611f2257611f21611b89565b5b6000611f3085828601611e9f565b9250506020611f4185828601611dd6565b9150509250929050565b600060208284031215611f6157611f60611b89565b5b6000611f6f84828501611dd6565b91505092915050565b611f8181611d00565b82525050565b6000602082019050611f9c6000830184611f78565b92915050565b611fab81611c18565b8114611fb657600080fd5b50565b600081359050611fc881611fa2565b92915050565b60008060408385031215611fe557611fe4611b89565b5b6000611ff385828601611dd6565b925050602061200485828601611fb9565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61205082611c94565b810181811067ffffffffffffffff8211171561206f5761206e612018565b5b80604052505050565b6000612082611b7f565b905061208e8282612047565b919050565b600067ffffffffffffffff8211156120ae576120ad612018565b5b6120b782611c94565b9050602081019050919050565b82818337600083830152505050565b60006120e66120e184612093565b612078565b90508281526020810184848401111561210257612101612013565b5b61210d8482856120c4565b509392505050565b600082601f83011261212a5761212961200e565b5b813561213a8482602086016120d3565b91505092915050565b6000806000806080858703121561215d5761215c611b89565b5b600061216b87828801611dd6565b945050602061217c87828801611dd6565b935050604061218d87828801611d21565b925050606085013567ffffffffffffffff8111156121ae576121ad611b8e565b5b6121ba87828801612115565b91505092959194509250565b600080604083850312156121dd576121dc611b89565b5b60006121eb85828601611dd6565b92505060206121fc85828601611dd6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061224d57607f821691505b6020821081036122605761225f612206565b5b50919050565b600060608201905061227b6000830186611d95565b6122886020830185611f78565b6122956040830184611d95565b949350505050565b600081905092915050565b60006122b382611c4e565b6122bd818561229d565b93506122cd818560208601611c6a565b80840191505092915050565b60006122e582856122a8565b91506122f182846122a8565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000612324826122fd565b61232e8185612308565b935061233e818560208601611c6a565b61234781611c94565b840191505092915050565b60006080820190506123676000830187611d95565b6123746020830186611d95565b6123816040830185611f78565b81810360608301526123938184612319565b905095945050505050565b6000815190506123ad81611bbf565b92915050565b6000602082840312156123c9576123c8611b89565b5b60006123d78482850161239e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506124246000830185611d95565b6124316020830184611f78565b9392505050565b600060408201905061244d6000830185611d95565b61245a6020830184611ee1565b939250505056fea26469706673582212205decdeefa1460b4f3f9c05553572548e8a385180a45c420bb95842462bda795664736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x1F SWAP1 PUSH2 0x293 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0x3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 SLOAD DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1448194 CALLER PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x231 SWAP3 SWAP2 SWAP1 PUSH2 0x2FA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x250 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x354 JUMP JUMPDEST POP PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x288 SWAP1 PUSH2 0x3B0 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP PUSH2 0x3F8 JUMP JUMPDEST PUSH2 0x286C DUP1 PUSH2 0x269C DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB DUP3 PUSH2 0x2A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DB DUP2 PUSH2 0x2C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F4 DUP2 PUSH2 0x2E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x30F PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D2 JUMP JUMPDEST PUSH2 0x31C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2EB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x331 DUP2 PUSH2 0x2E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x33C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x34E DUP2 PUSH2 0x328 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36A JUMPI PUSH2 0x369 PUSH2 0x323 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x378 DUP5 DUP3 DUP6 ADD PUSH2 0x33F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3BB DUP3 PUSH2 0x2E1 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3ED JUMPI PUSH2 0x3EC PUSH2 0x381 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2295 DUP1 PUSH2 0x407 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D5AEA4F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x7D5AEA4F EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xBD611FE6 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xC2CA95EC EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xC7067752 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xD5792041 EQ PUSH2 0x1B6 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x912ED77 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x16E744BD EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x1F29D2DC EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x3EDA5200 EQ PUSH2 0x100 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH2 0x1D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1856 JUMP JUMPDEST PUSH2 0xBD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH2 0xD8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A0 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x1314 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F7 JUMPI PUSH2 0x1F6 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH32 0x829B824E2329E205435D941C9F13BAF578548505283D29261236D8E6596D4636 PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x260 JUMPI PUSH2 0x25F PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x2EF JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2A5 JUMPI PUSH2 0x2A4 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x31F JUMPI POP DUP3 PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x30B JUMPI PUSH2 0x30A PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x3DC JUMPI PUSH32 0x789719E83535FFB09D643A0BF25DD5104145FF4F4DAF57B09A6A0DB0BFDB8244 PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x359 JUMPI PUSH2 0x358 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x789719E83535FFB09D643A0BF25DD5104145FF4F4DAF57B09A6A0DB0BFDB8244 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x426 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1D5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP1 PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x829B824E2329E205435D941C9F13BAF578548505283D29261236D8E6596D4636 SWAP1 POP PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x462 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1448194 DUP4 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F6 SWAP3 SWAP2 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x615 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x1C76 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x8A3 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7CA JUMPI PUSH2 0x7C9 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x843 JUMPI POP DUP3 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x82F JUMPI PUSH2 0x82E PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x896 JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x85C JUMPI PUSH2 0x85B PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP PUSH2 0x8A5 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x792 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8B3 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8C7 JUMPI PUSH2 0x8C6 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x8F0 SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x91C SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x969 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x93E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x969 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x94C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x982 SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9AE SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA47 JUMPI PUSH2 0xA46 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA59 JUMPI PUSH2 0xA58 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFA60083152BD11704A80CC8C7A409DAD8AA74288B454A3BA0E94C0ABC7CF168 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xBCF JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAC5 JUMPI PUSH2 0xAC4 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB3E JUMPI POP DUP4 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB2A JUMPI PUSH2 0xB29 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0xB6E JUMPI POP DUP2 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB5A JUMPI PUSH2 0xB59 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB87 JUMPI PUSH2 0xB86 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP POP PUSH2 0xBD2 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA8D JUMP JUMPDEST POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C DUP3 PUSH2 0xBE7 SWAP2 SWAP1 PUSH2 0x1D03 JUMP JUMPDEST TIMESTAMP PUSH2 0xBF2 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST SWAP1 POP PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8F SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCD8 JUMPI PUSH2 0xCD7 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH1 0x3 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0xD1E SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xD34 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD7E JUMPI PUSH2 0xD7D PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST TIMESTAMP PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD GT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x1 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDCF JUMPI PUSH2 0xDCE PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE02 JUMPI PUSH2 0xE01 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE39 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFA60083152BD11704A80CC8C7A409DAD8AA74288B454A3BA0E94C0ABC7CF168 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 PUSH2 0xF13 JUMPI POP PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF49 SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF66 JUMPI PUSH2 0xF65 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF7A JUMPI PUSH2 0xF79 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFAB JUMPI PUSH2 0xFAA PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xFEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE2 SWAP1 PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x108F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1086 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10A5 JUMPI PUSH2 0x10A4 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10C5 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x130B JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x118F SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11BB SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1208 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1208 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1221 SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x124D SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x129A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x126F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x129A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x127D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12E6 JUMPI PUSH2 0x12E5 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12F8 JUMPI PUSH2 0x12F7 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x115C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1329 JUMPI PUSH2 0x1328 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1346 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST POP DUP1 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x135C JUMPI PUSH2 0x135B PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1379 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13C1 JUMPI PUSH2 0x13C0 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1406 DUP3 PUSH2 0x13DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1416 DUP2 PUSH2 0x13FB JUMP JUMPDEST DUP2 EQ PUSH2 0x1421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1433 DUP2 PUSH2 0x140D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x1439 JUMP JUMPDEST DUP2 EQ PUSH2 0x1457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1469 DUP2 PUSH2 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH2 0x1485 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1494 DUP6 DUP3 DUP7 ADD PUSH2 0x1424 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A5 DUP6 DUP3 DUP7 ADD PUSH2 0x145A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C8 JUMPI PUSH2 0x14C7 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D6 DUP7 DUP3 DUP8 ADD PUSH2 0x1424 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14E7 DUP7 DUP3 DUP8 ADD PUSH2 0x145A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14F8 DUP7 DUP3 DUP8 ADD PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x150B DUP2 PUSH2 0x13FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1526 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1502 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1542 JUMPI PUSH2 0x1541 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1550 DUP5 DUP3 DUP6 ADD PUSH2 0x145A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1593 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BB DUP3 PUSH2 0x1559 JUMP JUMPDEST PUSH2 0x15C5 DUP2 DUP6 PUSH2 0x1564 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1575 JUMP JUMPDEST PUSH2 0x15DE DUP2 PUSH2 0x159F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15F2 DUP2 PUSH2 0x1439 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x1638 JUMPI PUSH2 0x1637 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1649 DUP3 PUSH2 0x1627 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1659 DUP3 PUSH2 0x163B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1669 DUP2 PUSH2 0x164E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x168C DUP3 DUP3 PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x16A6 DUP3 DUP3 PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x16BB PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x15E9 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x16CE PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x15E9 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x16E1 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x15E9 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x16F4 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1719 DUP2 DUP5 PUSH2 0x166F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1763 DUP3 PUSH2 0x159F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1782 JUMPI PUSH2 0x1781 PUSH2 0x172B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1795 PUSH2 0x13C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x17A1 DUP3 DUP3 PUSH2 0x175A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17C1 JUMPI PUSH2 0x17C0 PUSH2 0x172B JUMP JUMPDEST JUMPDEST PUSH2 0x17CA DUP3 PUSH2 0x159F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F9 PUSH2 0x17F4 DUP5 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x178B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1815 JUMPI PUSH2 0x1814 PUSH2 0x1726 JUMP JUMPDEST JUMPDEST PUSH2 0x1820 DUP5 DUP3 DUP6 PUSH2 0x17D7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x183D JUMPI PUSH2 0x183C PUSH2 0x1721 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x184D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x186F JUMPI PUSH2 0x186E PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x188D JUMPI PUSH2 0x188C PUSH2 0x13D6 JUMP JUMPDEST JUMPDEST PUSH2 0x1899 DUP7 DUP3 DUP8 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18BA JUMPI PUSH2 0x18B9 PUSH2 0x13D6 JUMP JUMPDEST JUMPDEST PUSH2 0x18C6 DUP7 DUP3 DUP8 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18D7 DUP7 DUP3 DUP8 ADD PUSH2 0x145A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x192A DUP3 DUP3 PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1944 DUP3 DUP3 PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1959 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x15E9 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x196C PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x15E9 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x197F PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x15E9 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x1992 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A9 DUP4 DUP4 PUSH2 0x190D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C9 DUP3 PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x19D3 DUP2 DUP6 PUSH2 0x18EC JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x19E5 DUP6 PUSH2 0x18FD JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1A21 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1A02 DUP6 DUP3 PUSH2 0x199D JUMP JUMPDEST SWAP5 POP PUSH2 0x1A0D DUP4 PUSH2 0x19B1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x19E9 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4D DUP2 DUP5 PUSH2 0x19BE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A6E JUMPI PUSH2 0x1A6D PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A7C DUP7 DUP3 DUP8 ADD PUSH2 0x145A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A9D JUMPI PUSH2 0x1A9C PUSH2 0x13D6 JUMP JUMPDEST JUMPDEST PUSH2 0x1AA9 DUP7 DUP3 DUP8 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ACA JUMPI PUSH2 0x1AC9 PUSH2 0x13D6 JUMP JUMPDEST JUMPDEST PUSH2 0x1AD6 DUP7 DUP3 DUP8 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x594F555F43414E5F4F4E4C595F5245564F4B455F415F4D454D4245525F504552 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4D495353494F4E00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B7C PUSH1 0x27 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B87 DUP3 PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BAB DUP2 PUSH2 0x1B6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BEC DUP3 PUSH2 0x1439 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1C1E JUMPI PUSH2 0x1C1D PUSH2 0x1BB2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C32 DUP2 PUSH2 0x1439 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C4D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x1C5A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C29 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C70 DUP2 PUSH2 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8C JUMPI PUSH2 0x1C8B PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C9A DUP5 DUP3 DUP6 ADD PUSH2 0x1C61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CEA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CFD JUMPI PUSH2 0x1CFC PUSH2 0x1CA3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0E DUP3 PUSH2 0x1439 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D19 DUP4 PUSH2 0x1439 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D27 DUP2 PUSH2 0x1439 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D3E JUMPI PUSH2 0x1D3D PUSH2 0x1BB2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D50 DUP3 PUSH2 0x1439 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5B DUP4 PUSH2 0x1439 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D73 JUMPI PUSH2 0x1D72 PUSH2 0x1BB2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792041646D696E2063616E206372656174652050726F706F73616C7300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAF PUSH1 0x1F DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBA DUP3 PUSH2 0x1D79 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DDE DUP2 PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1E47 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1E0A JUMP JUMPDEST PUSH2 0x1E51 DUP7 DUP4 PUSH2 0x1E0A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8E PUSH2 0x1E89 PUSH2 0x1E84 DUP5 PUSH2 0x1439 JUMP JUMPDEST PUSH2 0x1E69 JUMP JUMPDEST PUSH2 0x1439 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA8 DUP4 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x1EBC PUSH2 0x1EB4 DUP3 PUSH2 0x1E95 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1E17 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1ED1 PUSH2 0x1EC4 JUMP JUMPDEST PUSH2 0x1EDC DUP2 DUP5 DUP5 PUSH2 0x1E9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F00 JUMPI PUSH2 0x1EF5 PUSH1 0x0 DUP3 PUSH2 0x1EC9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1EE2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1F45 JUMPI PUSH2 0x1F16 DUP2 PUSH2 0x1DE5 JUMP JUMPDEST PUSH2 0x1F1F DUP5 PUSH2 0x1DFA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1F2E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1F42 PUSH2 0x1F3A DUP6 PUSH2 0x1DFA JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1EE1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F68 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1F4A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F81 DUP4 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F9A DUP3 PUSH2 0x1559 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FB3 JUMPI PUSH2 0x1FB2 PUSH2 0x172B JUMP JUMPDEST JUMPDEST PUSH2 0x1FBD DUP3 SLOAD PUSH2 0x1CD2 JUMP JUMPDEST PUSH2 0x1FC8 DUP3 DUP3 DUP6 PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1FFB JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1FE9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1FF3 DUP6 DUP3 PUSH2 0x1F75 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x205B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2009 DUP7 PUSH2 0x1DE5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2031 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x200C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x204E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x204A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1F57 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x594F552043414E5420564F5445204F4E20455850495245442050524F504F5341 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20BF PUSH1 0x21 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x20CA DUP3 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20EE DUP2 PUSH2 0x20B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x594F55204E45454420524F4C4520544F20564F54450000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212B PUSH1 0x15 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x2136 DUP3 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x215A DUP2 PUSH2 0x211E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x594F552043414E204F4E4C5920564F5445204F4E204143544956452050524F50 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4F53414C00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BD PUSH1 0x24 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x21C8 DUP3 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21EC DUP2 PUSH2 0x21B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414C524541445920564F54454400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2229 PUSH1 0xD DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x2234 DUP3 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2258 DUP2 PUSH2 0x221C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE ADDRESS 0xBD GASLIMIT BLOCKHASH PUSH14 0xCF1DD9663C5A8606A199A0968887 PUSH19 0x5E39AC7772B187047036564736F6C63430008 NOT STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44414F4E46540000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x444E465400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP POP POP PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x125 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x138 JUMPI PUSH2 0x137 PUSH2 0xDE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x1AA DUP7 DUP4 PUSH2 0x163 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1 PUSH2 0x1EC PUSH2 0x1E7 DUP5 PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B DUP4 PUSH2 0x1D6 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x217 DUP3 PUSH2 0x1F8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x170 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x23F DUP2 DUP5 DUP5 PUSH2 0x202 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH2 0x258 PUSH1 0x0 DUP3 PUSH2 0x22C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x245 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x279 DUP2 PUSH2 0x13E JUMP JUMPDEST PUSH2 0x282 DUP5 PUSH2 0x153 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x291 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2A5 PUSH2 0x29D DUP6 PUSH2 0x153 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x244 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2AD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4 DUP4 DUP4 PUSH2 0x2BA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FD DUP3 PUSH2 0xA4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x316 JUMPI PUSH2 0x315 PUSH2 0xAF JUMP JUMPDEST JUMPDEST PUSH2 0x320 DUP3 SLOAD PUSH2 0x10D JUMP JUMPDEST PUSH2 0x32B DUP3 DUP3 DUP6 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x35E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x34C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x356 DUP6 DUP3 PUSH2 0x2D8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x36C DUP7 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x394 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3B1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3AD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2BA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2497 DUP1 PUSH2 0x3D5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x414 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xA1448194 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x354 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x276 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1DEB JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x51A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x6D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1DEB JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST PUSH2 0x8DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x2143 JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E2 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP3 PUSH2 0xA5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x465 SWAP1 PUSH2 0x2235 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x491 SWAP1 PUSH2 0x2235 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F3 DUP3 PUSH2 0xAD6 JUMP JUMPDEST POP PUSH2 0x4FD DUP3 PUSH2 0xB5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x516 DUP3 DUP3 PUSH2 0x511 PUSH2 0xB9B JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x583 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5A0 DUP4 DUP4 PUSH2 0x59B PUSH2 0xB9B JUMP JUMPDEST PUSH2 0xBB5 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x616 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x645 DUP3 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x64E DUP2 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x658 DUP4 DUP4 PUSH2 0xDE3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x666 PUSH2 0xB9B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D4 DUP3 DUP3 PUSH2 0xED5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6F4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x704 DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x83F SWAP1 PUSH2 0x2235 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x86B SWAP1 PUSH2 0x2235 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x88D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x89B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CE DUP4 DUP4 PUSH2 0xFC8 JUMP JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x8F0 PUSH2 0x8E9 PUSH2 0xB9B JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8FF DUP5 DUP5 DUP5 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x913 PUSH2 0x90A PUSH2 0xB9B JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1155 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x924 DUP3 PUSH2 0xAD6 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x92F PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x97A JUMP JUMPDEST DUP1 PUSH2 0x959 DUP5 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x96A SWAP3 SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x9AF DUP3 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x9B8 DUP2 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x9C2 DUP4 DUP4 PUSH2 0xED5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xACF JUMPI POP PUSH2 0xACE DUP3 PUSH2 0x13EB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAE2 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB55 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBB0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x150A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBC1 DUP5 PUSH2 0x14CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC03 JUMPI PUSH2 0xC02 DUP2 DUP5 DUP7 PUSH2 0x16CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC94 JUMPI PUSH2 0xC45 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD17 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDE0 DUP2 PUSH2 0xDDB PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x1793 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEF DUP4 DUP4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0xECA JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE67 PUSH2 0xB9B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xECF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE1 DUP4 DUP4 PUSH2 0x7C5 JUMP JUMPDEST ISZERO PUSH2 0xFBD JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF5A PUSH2 0xB9B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFE2 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x17E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1057 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104E SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1148 SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12FF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11F0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1274 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x126C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1263 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12FD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x132C DUP5 PUSH2 0x1808 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0x2018 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x137D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 DUP4 ADD ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13E0 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x13D4 JUMPI PUSH2 0x13D3 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x138B JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x14B6 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x14C6 JUMPI POP PUSH2 0x14C5 DUP3 PUSH2 0x195B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1543 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1677 JUMPI PUSH1 0x0 PUSH2 0x1553 DUP5 PUSH2 0xAD6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15BE JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15D1 JUMPI POP PUSH2 0x15CF DUP2 DUP5 PUSH2 0x9C8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1613 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160A SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1675 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16DA DUP4 DUP4 DUP4 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0x178E JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x174F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1746 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1785 SWAP3 SWAP2 SWAP1 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x179D DUP3 DUP3 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x17E0 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D7 SWAP3 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x17EE DUP4 DUP4 PUSH2 0x1A86 JUMP JUMPDEST PUSH2 0x1803 PUSH2 0x17F9 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x1155 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1866 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x185C JUMPI PUSH2 0x185B PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x18A3 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1899 JUMPI PUSH2 0x1898 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x18D2 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x18FB JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x18F1 JUMPI PUSH2 0x18F0 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1920 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1916 JUMPI PUSH2 0x1915 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1943 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1939 JUMPI PUSH2 0x1938 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1952 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1A7D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1A3E JUMPI POP PUSH2 0x1A3D DUP5 DUP5 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1A7C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A64 DUP4 PUSH2 0xB5E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AF8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AEF SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B06 DUP4 DUP4 PUSH1 0x0 PUSH2 0xBB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B7A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B71 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC8 DUP2 PUSH2 0x1B93 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BE5 DUP2 PUSH2 0x1BBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C01 JUMPI PUSH2 0x1C00 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C0F DUP5 DUP3 DUP6 ADD PUSH2 0x1BD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2D DUP2 PUSH2 0x1C18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C88 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB0 DUP3 PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x1CBA DUP2 DUP6 PUSH2 0x1C59 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CCA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x1CD3 DUP2 PUSH2 0x1C94 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF8 DUP2 DUP5 PUSH2 0x1CA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D13 DUP2 PUSH2 0x1D00 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D30 DUP2 PUSH2 0x1D0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D4C JUMPI PUSH2 0x1D4B PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D5A DUP5 DUP3 DUP6 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8E DUP3 PUSH2 0x1D63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D9E DUP2 PUSH2 0x1D83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DB9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DC8 DUP2 PUSH2 0x1D83 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DE5 DUP2 PUSH2 0x1DBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E02 JUMPI PUSH2 0x1E01 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E10 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E21 DUP6 DUP3 DUP7 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E44 JUMPI PUSH2 0x1E43 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E52 DUP7 DUP3 DUP8 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E63 DUP7 DUP3 DUP8 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E74 DUP7 DUP3 DUP8 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E91 DUP2 PUSH2 0x1E7E JUMP JUMPDEST DUP2 EQ PUSH2 0x1E9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EAE DUP2 PUSH2 0x1E88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ECA JUMPI PUSH2 0x1EC9 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED8 DUP5 DUP3 DUP6 ADD PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EEA DUP2 PUSH2 0x1E7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F22 JUMPI PUSH2 0x1F21 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F30 DUP6 DUP3 DUP7 ADD PUSH2 0x1E9F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F41 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F61 JUMPI PUSH2 0x1F60 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F6F DUP5 DUP3 DUP6 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F81 DUP2 PUSH2 0x1D00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FAB DUP2 PUSH2 0x1C18 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FC8 DUP2 PUSH2 0x1FA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FE5 JUMPI PUSH2 0x1FE4 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FF3 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2004 DUP6 DUP3 DUP7 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2050 DUP3 PUSH2 0x1C94 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x206F JUMPI PUSH2 0x206E PUSH2 0x2018 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2082 PUSH2 0x1B7F JUMP JUMPDEST SWAP1 POP PUSH2 0x208E DUP3 DUP3 PUSH2 0x2047 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20AE JUMPI PUSH2 0x20AD PUSH2 0x2018 JUMP JUMPDEST JUMPDEST PUSH2 0x20B7 DUP3 PUSH2 0x1C94 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E6 PUSH2 0x20E1 DUP5 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x2078 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2102 JUMPI PUSH2 0x2101 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST PUSH2 0x210D DUP5 DUP3 DUP6 PUSH2 0x20C4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x200E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x213A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x215D JUMPI PUSH2 0x215C PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x216B DUP8 DUP3 DUP9 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x217C DUP8 DUP3 DUP9 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x218D DUP8 DUP3 DUP9 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21AE JUMPI PUSH2 0x21AD PUSH2 0x1B8E JUMP JUMPDEST JUMPDEST PUSH2 0x21BA DUP8 DUP3 DUP9 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21DD JUMPI PUSH2 0x21DC PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21EB DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21FC DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x224D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x2206 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x227B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x2288 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x2295 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D95 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B3 DUP3 PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x22BD DUP2 DUP6 PUSH2 0x229D JUMP JUMPDEST SWAP4 POP PUSH2 0x22CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C6A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E5 DUP3 DUP6 PUSH2 0x22A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x22F1 DUP3 DUP5 PUSH2 0x22A8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2324 DUP3 PUSH2 0x22FD JUMP JUMPDEST PUSH2 0x232E DUP2 DUP6 PUSH2 0x2308 JUMP JUMPDEST SWAP4 POP PUSH2 0x233E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x2347 DUP2 PUSH2 0x1C94 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2367 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x2374 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x2381 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F78 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2393 DUP2 DUP5 PUSH2 0x2319 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x23AD DUP2 PUSH2 0x1BBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C9 JUMPI PUSH2 0x23C8 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23D7 DUP5 DUP3 DUP6 ADD PUSH2 0x239E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2424 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x2431 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x244D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x245A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0xEC 0xDE 0xEF LOG1 CHAINID SIGNEXTEND 0x4F EXTCODEHASH SWAP13 SDIV SSTORE CALLDATALOAD PUSH19 0x548E8A385180A45C420BB95842462BDA795664 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"131:3739:16:-:0;;;590:263;;;;;;;;;;613:14;630:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;613:29;;659:7;650:6;;:16;;;;;;;;;;;;;;;;;;705:68;;;;;;;;710:18;705:68;;;;738:7;705:68;;;;;;748:12;;705:68;;;;762:10;705:68;;;;;681:8;:20;690:10;681:20;;;;;;;;;;;;;;;:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;781:6;;;;;;;;;;;:15;;;797:10;809:12;;781:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;831:12;;:14;;;;;;;;;:::i;:::-;;;;;;604:249;131:3739;;;;;;;;;;:::o;7:126:19:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:77::-;402:7;431:5;420:16;;365:77;;;:::o;448:118::-;535:24;553:5;535:24;:::i;:::-;530:3;523:37;448:118;;:::o;572:332::-;693:4;731:2;720:9;716:18;708:26;;744:71;812:1;801:9;797:17;788:6;744:71;:::i;:::-;825:72;893:2;882:9;878:18;869:6;825:72;:::i;:::-;572:332;;;;;:::o;991:117::-;1100:1;1097;1090:12;1237:122;1310:24;1328:5;1310:24;:::i;:::-;1303:5;1300:35;1290:63;;1349:1;1346;1339:12;1290:63;1237:122;:::o;1365:143::-;1422:5;1453:6;1447:13;1438:22;;1469:33;1496:5;1469:33;:::i;:::-;1365:143;;;;:::o;1514:351::-;1584:6;1633:2;1621:9;1612:7;1608:23;1604:32;1601:119;;;1639:79;;:::i;:::-;1601:119;1759:1;1784:64;1840:7;1831:6;1820:9;1816:22;1784:64;:::i;:::-;1774:74;;1730:128;1514:351;;;;:::o;1871:180::-;1919:77;1916:1;1909:88;2016:4;2013:1;2006:15;2040:4;2037:1;2030:15;2057:233;2096:3;2119:24;2137:5;2119:24;:::i;:::-;2110:33;;2165:66;2158:5;2155:77;2152:103;;2235:18;;:::i;:::-;2152:103;2282:1;2275:5;2271:13;2264:20;;2057:233;;;:::o;131:3739:16:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@create_proposal_6958":{"entryPoint":3032,"id":6958,"parameterSlots":3,"returnSlots":0},"@get_proposal_6905":{"entryPoint":2219,"id":6905,"parameterSlots":1,"returnSlots":1},"@get_proposals_6892":{"entryPoint":4408,"id":6892,"parameterSlots":0,"returnSlots":1},"@grantRole_7096":{"entryPoint":1066,"id":7096,"parameterSlots":3,"returnSlots":0},"@ownerOf_7212":{"entryPoint":1934,"id":7212,"parameterSlots":2,"returnSlots":1},"@recipientOf_7267":{"entryPoint":2660,"id":7267,"parameterSlots":2,"returnSlots":1},"@revokeRole_7170":{"entryPoint":466,"id":7170,"parameterSlots":2,"returnSlots":0},"@update_proposal_6882":{"entryPoint":4884,"id":6882,"parameterSlots":3,"returnSlots":0},"@vote_on_proposal_7049":{"entryPoint":3468,"id":7049,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":6118,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5156,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":6184,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5210,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256_fromMemory":{"entryPoint":7265,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5231,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_address":{"entryPoint":5295,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256":{"entryPoint":6230,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":5420,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":7286,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr":{"entryPoint":6741,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr":{"entryPoint":6557,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5378,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":6590,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_enum$_Status_$6813_to_t_uint8":{"entryPoint":5728,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":5552,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130_to_t_string_memory_ptr_fromStack":{"entryPoint":8732,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f_to_t_string_memory_ptr_fromStack":{"entryPoint":8624,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36_to_t_string_memory_ptr_fromStack":{"entryPoint":7023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b_to_t_string_memory_ptr_fromStack":{"entryPoint":8370,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660_to_t_string_memory_ptr_fromStack":{"entryPoint":8478,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792_to_t_string_memory_ptr_fromStack":{"entryPoint":7586,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr":{"entryPoint":6413,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr_fromStack":{"entryPoint":5743,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":5609,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7209,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5393,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":7224,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":6707,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8767,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8659,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8405,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8513,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7621,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Proposal_$6791_memory_ptr__to_t_struct$_Proposal_$6791_memory_ptr__fromStack_reversed":{"entryPoint":5887,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6027,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5063,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":6054,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr":{"entryPoint":6397,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":7653,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr":{"entryPoint":6369,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5465,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr":{"entryPoint":6577,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":6380,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":5476,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6927,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":7493,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":7427,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":7940,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":5115,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_enum$_Status_$6813":{"entryPoint":5691,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5083,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5177,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":7905,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_enum$_Status_$6813_to_t_uint8":{"entryPoint":5710,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":7795,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":8081,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6103,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5493,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":7674,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":7378,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":8053,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":5978,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":7785,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":7137,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":8023,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":7090,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":5624,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":7331,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":6880,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":5931,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":7829,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":5921,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":5926,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5078,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5073,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5535,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":7690,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":8010,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":7881,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130":{"entryPoint":8691,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f":{"entryPoint":8545,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36":{"entryPoint":6944,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b":{"entryPoint":8291,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660":{"entryPoint":8437,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792":{"entryPoint":7545,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":7703,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":7839,"id":null,"parameterSlots":3,"returnSlots":0},"validator_assert_t_enum$_Status_$6813":{"entryPoint":5671,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5133,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5187,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":7876,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:28029:19","nodeType":"YulBlock","src":"0:28029:19","statements":[{"body":{"nativeSrc":"47:35:19","nodeType":"YulBlock","src":"47:35:19","statements":[{"nativeSrc":"57:19:19","nodeType":"YulAssignment","src":"57:19:19","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:19","nodeType":"YulLiteral","src":"73:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:19","nodeType":"YulIdentifier","src":"67:5:19"},"nativeSrc":"67:9:19","nodeType":"YulFunctionCall","src":"67:9:19"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:19","nodeType":"YulIdentifier","src":"57:6:19"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:19","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:19","nodeType":"YulTypedName","src":"40:6:19","type":""}],"src":"7:75:19"},{"body":{"nativeSrc":"177:28:19","nodeType":"YulBlock","src":"177:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:19","nodeType":"YulLiteral","src":"194:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:19","nodeType":"YulLiteral","src":"197:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:19","nodeType":"YulIdentifier","src":"187:6:19"},"nativeSrc":"187:12:19","nodeType":"YulFunctionCall","src":"187:12:19"},"nativeSrc":"187:12:19","nodeType":"YulExpressionStatement","src":"187:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:19","nodeType":"YulFunctionDefinition","src":"88:117:19"},{"body":{"nativeSrc":"300:28:19","nodeType":"YulBlock","src":"300:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:19","nodeType":"YulLiteral","src":"317:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:19","nodeType":"YulLiteral","src":"320:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:19","nodeType":"YulIdentifier","src":"310:6:19"},"nativeSrc":"310:12:19","nodeType":"YulFunctionCall","src":"310:12:19"},"nativeSrc":"310:12:19","nodeType":"YulExpressionStatement","src":"310:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:19","nodeType":"YulFunctionDefinition","src":"211:117:19"},{"body":{"nativeSrc":"379:81:19","nodeType":"YulBlock","src":"379:81:19","statements":[{"nativeSrc":"389:65:19","nodeType":"YulAssignment","src":"389:65:19","value":{"arguments":[{"name":"value","nativeSrc":"404:5:19","nodeType":"YulIdentifier","src":"404:5:19"},{"kind":"number","nativeSrc":"411:42:19","nodeType":"YulLiteral","src":"411:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"400:3:19","nodeType":"YulIdentifier","src":"400:3:19"},"nativeSrc":"400:54:19","nodeType":"YulFunctionCall","src":"400:54:19"},"variableNames":[{"name":"cleaned","nativeSrc":"389:7:19","nodeType":"YulIdentifier","src":"389:7:19"}]}]},"name":"cleanup_t_uint160","nativeSrc":"334:126:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"361:5:19","nodeType":"YulTypedName","src":"361:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"371:7:19","nodeType":"YulTypedName","src":"371:7:19","type":""}],"src":"334:126:19"},{"body":{"nativeSrc":"511:51:19","nodeType":"YulBlock","src":"511:51:19","statements":[{"nativeSrc":"521:35:19","nodeType":"YulAssignment","src":"521:35:19","value":{"arguments":[{"name":"value","nativeSrc":"550:5:19","nodeType":"YulIdentifier","src":"550:5:19"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"532:17:19","nodeType":"YulIdentifier","src":"532:17:19"},"nativeSrc":"532:24:19","nodeType":"YulFunctionCall","src":"532:24:19"},"variableNames":[{"name":"cleaned","nativeSrc":"521:7:19","nodeType":"YulIdentifier","src":"521:7:19"}]}]},"name":"cleanup_t_address","nativeSrc":"466:96:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"493:5:19","nodeType":"YulTypedName","src":"493:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"503:7:19","nodeType":"YulTypedName","src":"503:7:19","type":""}],"src":"466:96:19"},{"body":{"nativeSrc":"611:79:19","nodeType":"YulBlock","src":"611:79:19","statements":[{"body":{"nativeSrc":"668:16:19","nodeType":"YulBlock","src":"668:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"677:1:19","nodeType":"YulLiteral","src":"677:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"680:1:19","nodeType":"YulLiteral","src":"680:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"670:6:19","nodeType":"YulIdentifier","src":"670:6:19"},"nativeSrc":"670:12:19","nodeType":"YulFunctionCall","src":"670:12:19"},"nativeSrc":"670:12:19","nodeType":"YulExpressionStatement","src":"670:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"634:5:19","nodeType":"YulIdentifier","src":"634:5:19"},{"arguments":[{"name":"value","nativeSrc":"659:5:19","nodeType":"YulIdentifier","src":"659:5:19"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"641:17:19","nodeType":"YulIdentifier","src":"641:17:19"},"nativeSrc":"641:24:19","nodeType":"YulFunctionCall","src":"641:24:19"}],"functionName":{"name":"eq","nativeSrc":"631:2:19","nodeType":"YulIdentifier","src":"631:2:19"},"nativeSrc":"631:35:19","nodeType":"YulFunctionCall","src":"631:35:19"}],"functionName":{"name":"iszero","nativeSrc":"624:6:19","nodeType":"YulIdentifier","src":"624:6:19"},"nativeSrc":"624:43:19","nodeType":"YulFunctionCall","src":"624:43:19"},"nativeSrc":"621:63:19","nodeType":"YulIf","src":"621:63:19"}]},"name":"validator_revert_t_address","nativeSrc":"568:122:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"604:5:19","nodeType":"YulTypedName","src":"604:5:19","type":""}],"src":"568:122:19"},{"body":{"nativeSrc":"748:87:19","nodeType":"YulBlock","src":"748:87:19","statements":[{"nativeSrc":"758:29:19","nodeType":"YulAssignment","src":"758:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"780:6:19","nodeType":"YulIdentifier","src":"780:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"767:12:19","nodeType":"YulIdentifier","src":"767:12:19"},"nativeSrc":"767:20:19","nodeType":"YulFunctionCall","src":"767:20:19"},"variableNames":[{"name":"value","nativeSrc":"758:5:19","nodeType":"YulIdentifier","src":"758:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"823:5:19","nodeType":"YulIdentifier","src":"823:5:19"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"796:26:19","nodeType":"YulIdentifier","src":"796:26:19"},"nativeSrc":"796:33:19","nodeType":"YulFunctionCall","src":"796:33:19"},"nativeSrc":"796:33:19","nodeType":"YulExpressionStatement","src":"796:33:19"}]},"name":"abi_decode_t_address","nativeSrc":"696:139:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"726:6:19","nodeType":"YulTypedName","src":"726:6:19","type":""},{"name":"end","nativeSrc":"734:3:19","nodeType":"YulTypedName","src":"734:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"742:5:19","nodeType":"YulTypedName","src":"742:5:19","type":""}],"src":"696:139:19"},{"body":{"nativeSrc":"886:32:19","nodeType":"YulBlock","src":"886:32:19","statements":[{"nativeSrc":"896:16:19","nodeType":"YulAssignment","src":"896:16:19","value":{"name":"value","nativeSrc":"907:5:19","nodeType":"YulIdentifier","src":"907:5:19"},"variableNames":[{"name":"cleaned","nativeSrc":"896:7:19","nodeType":"YulIdentifier","src":"896:7:19"}]}]},"name":"cleanup_t_uint256","nativeSrc":"841:77:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"868:5:19","nodeType":"YulTypedName","src":"868:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"878:7:19","nodeType":"YulTypedName","src":"878:7:19","type":""}],"src":"841:77:19"},{"body":{"nativeSrc":"967:79:19","nodeType":"YulBlock","src":"967:79:19","statements":[{"body":{"nativeSrc":"1024:16:19","nodeType":"YulBlock","src":"1024:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1033:1:19","nodeType":"YulLiteral","src":"1033:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"1036:1:19","nodeType":"YulLiteral","src":"1036:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"1026:6:19","nodeType":"YulIdentifier","src":"1026:6:19"},"nativeSrc":"1026:12:19","nodeType":"YulFunctionCall","src":"1026:12:19"},"nativeSrc":"1026:12:19","nodeType":"YulExpressionStatement","src":"1026:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"990:5:19","nodeType":"YulIdentifier","src":"990:5:19"},{"arguments":[{"name":"value","nativeSrc":"1015:5:19","nodeType":"YulIdentifier","src":"1015:5:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"997:17:19","nodeType":"YulIdentifier","src":"997:17:19"},"nativeSrc":"997:24:19","nodeType":"YulFunctionCall","src":"997:24:19"}],"functionName":{"name":"eq","nativeSrc":"987:2:19","nodeType":"YulIdentifier","src":"987:2:19"},"nativeSrc":"987:35:19","nodeType":"YulFunctionCall","src":"987:35:19"}],"functionName":{"name":"iszero","nativeSrc":"980:6:19","nodeType":"YulIdentifier","src":"980:6:19"},"nativeSrc":"980:43:19","nodeType":"YulFunctionCall","src":"980:43:19"},"nativeSrc":"977:63:19","nodeType":"YulIf","src":"977:63:19"}]},"name":"validator_revert_t_uint256","nativeSrc":"924:122:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"960:5:19","nodeType":"YulTypedName","src":"960:5:19","type":""}],"src":"924:122:19"},{"body":{"nativeSrc":"1104:87:19","nodeType":"YulBlock","src":"1104:87:19","statements":[{"nativeSrc":"1114:29:19","nodeType":"YulAssignment","src":"1114:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"1136:6:19","nodeType":"YulIdentifier","src":"1136:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"1123:12:19","nodeType":"YulIdentifier","src":"1123:12:19"},"nativeSrc":"1123:20:19","nodeType":"YulFunctionCall","src":"1123:20:19"},"variableNames":[{"name":"value","nativeSrc":"1114:5:19","nodeType":"YulIdentifier","src":"1114:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"1179:5:19","nodeType":"YulIdentifier","src":"1179:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"1152:26:19","nodeType":"YulIdentifier","src":"1152:26:19"},"nativeSrc":"1152:33:19","nodeType":"YulFunctionCall","src":"1152:33:19"},"nativeSrc":"1152:33:19","nodeType":"YulExpressionStatement","src":"1152:33:19"}]},"name":"abi_decode_t_uint256","nativeSrc":"1052:139:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"1082:6:19","nodeType":"YulTypedName","src":"1082:6:19","type":""},{"name":"end","nativeSrc":"1090:3:19","nodeType":"YulTypedName","src":"1090:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"1098:5:19","nodeType":"YulTypedName","src":"1098:5:19","type":""}],"src":"1052:139:19"},{"body":{"nativeSrc":"1280:391:19","nodeType":"YulBlock","src":"1280:391:19","statements":[{"body":{"nativeSrc":"1326:83:19","nodeType":"YulBlock","src":"1326:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1328:77:19","nodeType":"YulIdentifier","src":"1328:77:19"},"nativeSrc":"1328:79:19","nodeType":"YulFunctionCall","src":"1328:79:19"},"nativeSrc":"1328:79:19","nodeType":"YulExpressionStatement","src":"1328:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1301:7:19","nodeType":"YulIdentifier","src":"1301:7:19"},{"name":"headStart","nativeSrc":"1310:9:19","nodeType":"YulIdentifier","src":"1310:9:19"}],"functionName":{"name":"sub","nativeSrc":"1297:3:19","nodeType":"YulIdentifier","src":"1297:3:19"},"nativeSrc":"1297:23:19","nodeType":"YulFunctionCall","src":"1297:23:19"},{"kind":"number","nativeSrc":"1322:2:19","nodeType":"YulLiteral","src":"1322:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"1293:3:19","nodeType":"YulIdentifier","src":"1293:3:19"},"nativeSrc":"1293:32:19","nodeType":"YulFunctionCall","src":"1293:32:19"},"nativeSrc":"1290:119:19","nodeType":"YulIf","src":"1290:119:19"},{"nativeSrc":"1419:117:19","nodeType":"YulBlock","src":"1419:117:19","statements":[{"nativeSrc":"1434:15:19","nodeType":"YulVariableDeclaration","src":"1434:15:19","value":{"kind":"number","nativeSrc":"1448:1:19","nodeType":"YulLiteral","src":"1448:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1438:6:19","nodeType":"YulTypedName","src":"1438:6:19","type":""}]},{"nativeSrc":"1463:63:19","nodeType":"YulAssignment","src":"1463:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1498:9:19","nodeType":"YulIdentifier","src":"1498:9:19"},{"name":"offset","nativeSrc":"1509:6:19","nodeType":"YulIdentifier","src":"1509:6:19"}],"functionName":{"name":"add","nativeSrc":"1494:3:19","nodeType":"YulIdentifier","src":"1494:3:19"},"nativeSrc":"1494:22:19","nodeType":"YulFunctionCall","src":"1494:22:19"},{"name":"dataEnd","nativeSrc":"1518:7:19","nodeType":"YulIdentifier","src":"1518:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1473:20:19","nodeType":"YulIdentifier","src":"1473:20:19"},"nativeSrc":"1473:53:19","nodeType":"YulFunctionCall","src":"1473:53:19"},"variableNames":[{"name":"value0","nativeSrc":"1463:6:19","nodeType":"YulIdentifier","src":"1463:6:19"}]}]},{"nativeSrc":"1546:118:19","nodeType":"YulBlock","src":"1546:118:19","statements":[{"nativeSrc":"1561:16:19","nodeType":"YulVariableDeclaration","src":"1561:16:19","value":{"kind":"number","nativeSrc":"1575:2:19","nodeType":"YulLiteral","src":"1575:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"1565:6:19","nodeType":"YulTypedName","src":"1565:6:19","type":""}]},{"nativeSrc":"1591:63:19","nodeType":"YulAssignment","src":"1591:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1626:9:19","nodeType":"YulIdentifier","src":"1626:9:19"},{"name":"offset","nativeSrc":"1637:6:19","nodeType":"YulIdentifier","src":"1637:6:19"}],"functionName":{"name":"add","nativeSrc":"1622:3:19","nodeType":"YulIdentifier","src":"1622:3:19"},"nativeSrc":"1622:22:19","nodeType":"YulFunctionCall","src":"1622:22:19"},{"name":"dataEnd","nativeSrc":"1646:7:19","nodeType":"YulIdentifier","src":"1646:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"1601:20:19","nodeType":"YulIdentifier","src":"1601:20:19"},"nativeSrc":"1601:53:19","nodeType":"YulFunctionCall","src":"1601:53:19"},"variableNames":[{"name":"value1","nativeSrc":"1591:6:19","nodeType":"YulIdentifier","src":"1591:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"1197:474:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1242:9:19","nodeType":"YulTypedName","src":"1242:9:19","type":""},{"name":"dataEnd","nativeSrc":"1253:7:19","nodeType":"YulTypedName","src":"1253:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1265:6:19","nodeType":"YulTypedName","src":"1265:6:19","type":""},{"name":"value1","nativeSrc":"1273:6:19","nodeType":"YulTypedName","src":"1273:6:19","type":""}],"src":"1197:474:19"},{"body":{"nativeSrc":"1777:519:19","nodeType":"YulBlock","src":"1777:519:19","statements":[{"body":{"nativeSrc":"1823:83:19","nodeType":"YulBlock","src":"1823:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"1825:77:19","nodeType":"YulIdentifier","src":"1825:77:19"},"nativeSrc":"1825:79:19","nodeType":"YulFunctionCall","src":"1825:79:19"},"nativeSrc":"1825:79:19","nodeType":"YulExpressionStatement","src":"1825:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"1798:7:19","nodeType":"YulIdentifier","src":"1798:7:19"},{"name":"headStart","nativeSrc":"1807:9:19","nodeType":"YulIdentifier","src":"1807:9:19"}],"functionName":{"name":"sub","nativeSrc":"1794:3:19","nodeType":"YulIdentifier","src":"1794:3:19"},"nativeSrc":"1794:23:19","nodeType":"YulFunctionCall","src":"1794:23:19"},{"kind":"number","nativeSrc":"1819:2:19","nodeType":"YulLiteral","src":"1819:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"1790:3:19","nodeType":"YulIdentifier","src":"1790:3:19"},"nativeSrc":"1790:32:19","nodeType":"YulFunctionCall","src":"1790:32:19"},"nativeSrc":"1787:119:19","nodeType":"YulIf","src":"1787:119:19"},{"nativeSrc":"1916:117:19","nodeType":"YulBlock","src":"1916:117:19","statements":[{"nativeSrc":"1931:15:19","nodeType":"YulVariableDeclaration","src":"1931:15:19","value":{"kind":"number","nativeSrc":"1945:1:19","nodeType":"YulLiteral","src":"1945:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"1935:6:19","nodeType":"YulTypedName","src":"1935:6:19","type":""}]},{"nativeSrc":"1960:63:19","nodeType":"YulAssignment","src":"1960:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1995:9:19","nodeType":"YulIdentifier","src":"1995:9:19"},{"name":"offset","nativeSrc":"2006:6:19","nodeType":"YulIdentifier","src":"2006:6:19"}],"functionName":{"name":"add","nativeSrc":"1991:3:19","nodeType":"YulIdentifier","src":"1991:3:19"},"nativeSrc":"1991:22:19","nodeType":"YulFunctionCall","src":"1991:22:19"},{"name":"dataEnd","nativeSrc":"2015:7:19","nodeType":"YulIdentifier","src":"2015:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"1970:20:19","nodeType":"YulIdentifier","src":"1970:20:19"},"nativeSrc":"1970:53:19","nodeType":"YulFunctionCall","src":"1970:53:19"},"variableNames":[{"name":"value0","nativeSrc":"1960:6:19","nodeType":"YulIdentifier","src":"1960:6:19"}]}]},{"nativeSrc":"2043:118:19","nodeType":"YulBlock","src":"2043:118:19","statements":[{"nativeSrc":"2058:16:19","nodeType":"YulVariableDeclaration","src":"2058:16:19","value":{"kind":"number","nativeSrc":"2072:2:19","nodeType":"YulLiteral","src":"2072:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"2062:6:19","nodeType":"YulTypedName","src":"2062:6:19","type":""}]},{"nativeSrc":"2088:63:19","nodeType":"YulAssignment","src":"2088:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2123:9:19","nodeType":"YulIdentifier","src":"2123:9:19"},{"name":"offset","nativeSrc":"2134:6:19","nodeType":"YulIdentifier","src":"2134:6:19"}],"functionName":{"name":"add","nativeSrc":"2119:3:19","nodeType":"YulIdentifier","src":"2119:3:19"},"nativeSrc":"2119:22:19","nodeType":"YulFunctionCall","src":"2119:22:19"},{"name":"dataEnd","nativeSrc":"2143:7:19","nodeType":"YulIdentifier","src":"2143:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2098:20:19","nodeType":"YulIdentifier","src":"2098:20:19"},"nativeSrc":"2098:53:19","nodeType":"YulFunctionCall","src":"2098:53:19"},"variableNames":[{"name":"value1","nativeSrc":"2088:6:19","nodeType":"YulIdentifier","src":"2088:6:19"}]}]},{"nativeSrc":"2171:118:19","nodeType":"YulBlock","src":"2171:118:19","statements":[{"nativeSrc":"2186:16:19","nodeType":"YulVariableDeclaration","src":"2186:16:19","value":{"kind":"number","nativeSrc":"2200:2:19","nodeType":"YulLiteral","src":"2200:2:19","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"2190:6:19","nodeType":"YulTypedName","src":"2190:6:19","type":""}]},{"nativeSrc":"2216:63:19","nodeType":"YulAssignment","src":"2216:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2251:9:19","nodeType":"YulIdentifier","src":"2251:9:19"},{"name":"offset","nativeSrc":"2262:6:19","nodeType":"YulIdentifier","src":"2262:6:19"}],"functionName":{"name":"add","nativeSrc":"2247:3:19","nodeType":"YulIdentifier","src":"2247:3:19"},"nativeSrc":"2247:22:19","nodeType":"YulFunctionCall","src":"2247:22:19"},{"name":"dataEnd","nativeSrc":"2271:7:19","nodeType":"YulIdentifier","src":"2271:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"2226:20:19","nodeType":"YulIdentifier","src":"2226:20:19"},"nativeSrc":"2226:53:19","nodeType":"YulFunctionCall","src":"2226:53:19"},"variableNames":[{"name":"value2","nativeSrc":"2216:6:19","nodeType":"YulIdentifier","src":"2216:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_address","nativeSrc":"1677:619:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1731:9:19","nodeType":"YulTypedName","src":"1731:9:19","type":""},{"name":"dataEnd","nativeSrc":"1742:7:19","nodeType":"YulTypedName","src":"1742:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"1754:6:19","nodeType":"YulTypedName","src":"1754:6:19","type":""},{"name":"value1","nativeSrc":"1762:6:19","nodeType":"YulTypedName","src":"1762:6:19","type":""},{"name":"value2","nativeSrc":"1770:6:19","nodeType":"YulTypedName","src":"1770:6:19","type":""}],"src":"1677:619:19"},{"body":{"nativeSrc":"2367:53:19","nodeType":"YulBlock","src":"2367:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"2384:3:19","nodeType":"YulIdentifier","src":"2384:3:19"},{"arguments":[{"name":"value","nativeSrc":"2407:5:19","nodeType":"YulIdentifier","src":"2407:5:19"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"2389:17:19","nodeType":"YulIdentifier","src":"2389:17:19"},"nativeSrc":"2389:24:19","nodeType":"YulFunctionCall","src":"2389:24:19"}],"functionName":{"name":"mstore","nativeSrc":"2377:6:19","nodeType":"YulIdentifier","src":"2377:6:19"},"nativeSrc":"2377:37:19","nodeType":"YulFunctionCall","src":"2377:37:19"},"nativeSrc":"2377:37:19","nodeType":"YulExpressionStatement","src":"2377:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2302:118:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2355:5:19","nodeType":"YulTypedName","src":"2355:5:19","type":""},{"name":"pos","nativeSrc":"2362:3:19","nodeType":"YulTypedName","src":"2362:3:19","type":""}],"src":"2302:118:19"},{"body":{"nativeSrc":"2524:124:19","nodeType":"YulBlock","src":"2524:124:19","statements":[{"nativeSrc":"2534:26:19","nodeType":"YulAssignment","src":"2534:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"2546:9:19","nodeType":"YulIdentifier","src":"2546:9:19"},{"kind":"number","nativeSrc":"2557:2:19","nodeType":"YulLiteral","src":"2557:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2542:3:19","nodeType":"YulIdentifier","src":"2542:3:19"},"nativeSrc":"2542:18:19","nodeType":"YulFunctionCall","src":"2542:18:19"},"variableNames":[{"name":"tail","nativeSrc":"2534:4:19","nodeType":"YulIdentifier","src":"2534:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"2614:6:19","nodeType":"YulIdentifier","src":"2614:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"2627:9:19","nodeType":"YulIdentifier","src":"2627:9:19"},{"kind":"number","nativeSrc":"2638:1:19","nodeType":"YulLiteral","src":"2638:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2623:3:19","nodeType":"YulIdentifier","src":"2623:3:19"},"nativeSrc":"2623:17:19","nodeType":"YulFunctionCall","src":"2623:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"2570:43:19","nodeType":"YulIdentifier","src":"2570:43:19"},"nativeSrc":"2570:71:19","nodeType":"YulFunctionCall","src":"2570:71:19"},"nativeSrc":"2570:71:19","nodeType":"YulExpressionStatement","src":"2570:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"2426:222:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2496:9:19","nodeType":"YulTypedName","src":"2496:9:19","type":""},{"name":"value0","nativeSrc":"2508:6:19","nodeType":"YulTypedName","src":"2508:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2519:4:19","nodeType":"YulTypedName","src":"2519:4:19","type":""}],"src":"2426:222:19"},{"body":{"nativeSrc":"2720:263:19","nodeType":"YulBlock","src":"2720:263:19","statements":[{"body":{"nativeSrc":"2766:83:19","nodeType":"YulBlock","src":"2766:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"2768:77:19","nodeType":"YulIdentifier","src":"2768:77:19"},"nativeSrc":"2768:79:19","nodeType":"YulFunctionCall","src":"2768:79:19"},"nativeSrc":"2768:79:19","nodeType":"YulExpressionStatement","src":"2768:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"2741:7:19","nodeType":"YulIdentifier","src":"2741:7:19"},{"name":"headStart","nativeSrc":"2750:9:19","nodeType":"YulIdentifier","src":"2750:9:19"}],"functionName":{"name":"sub","nativeSrc":"2737:3:19","nodeType":"YulIdentifier","src":"2737:3:19"},"nativeSrc":"2737:23:19","nodeType":"YulFunctionCall","src":"2737:23:19"},{"kind":"number","nativeSrc":"2762:2:19","nodeType":"YulLiteral","src":"2762:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"2733:3:19","nodeType":"YulIdentifier","src":"2733:3:19"},"nativeSrc":"2733:32:19","nodeType":"YulFunctionCall","src":"2733:32:19"},"nativeSrc":"2730:119:19","nodeType":"YulIf","src":"2730:119:19"},{"nativeSrc":"2859:117:19","nodeType":"YulBlock","src":"2859:117:19","statements":[{"nativeSrc":"2874:15:19","nodeType":"YulVariableDeclaration","src":"2874:15:19","value":{"kind":"number","nativeSrc":"2888:1:19","nodeType":"YulLiteral","src":"2888:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"2878:6:19","nodeType":"YulTypedName","src":"2878:6:19","type":""}]},{"nativeSrc":"2903:63:19","nodeType":"YulAssignment","src":"2903:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2938:9:19","nodeType":"YulIdentifier","src":"2938:9:19"},{"name":"offset","nativeSrc":"2949:6:19","nodeType":"YulIdentifier","src":"2949:6:19"}],"functionName":{"name":"add","nativeSrc":"2934:3:19","nodeType":"YulIdentifier","src":"2934:3:19"},"nativeSrc":"2934:22:19","nodeType":"YulFunctionCall","src":"2934:22:19"},{"name":"dataEnd","nativeSrc":"2958:7:19","nodeType":"YulIdentifier","src":"2958:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"2913:20:19","nodeType":"YulIdentifier","src":"2913:20:19"},"nativeSrc":"2913:53:19","nodeType":"YulFunctionCall","src":"2913:53:19"},"variableNames":[{"name":"value0","nativeSrc":"2903:6:19","nodeType":"YulIdentifier","src":"2903:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"2654:329:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2690:9:19","nodeType":"YulTypedName","src":"2690:9:19","type":""},{"name":"dataEnd","nativeSrc":"2701:7:19","nodeType":"YulTypedName","src":"2701:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"2713:6:19","nodeType":"YulTypedName","src":"2713:6:19","type":""}],"src":"2654:329:19"},{"body":{"nativeSrc":"3048:40:19","nodeType":"YulBlock","src":"3048:40:19","statements":[{"nativeSrc":"3059:22:19","nodeType":"YulAssignment","src":"3059:22:19","value":{"arguments":[{"name":"value","nativeSrc":"3075:5:19","nodeType":"YulIdentifier","src":"3075:5:19"}],"functionName":{"name":"mload","nativeSrc":"3069:5:19","nodeType":"YulIdentifier","src":"3069:5:19"},"nativeSrc":"3069:12:19","nodeType":"YulFunctionCall","src":"3069:12:19"},"variableNames":[{"name":"length","nativeSrc":"3059:6:19","nodeType":"YulIdentifier","src":"3059:6:19"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"2989:99:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3031:5:19","nodeType":"YulTypedName","src":"3031:5:19","type":""}],"returnVariables":[{"name":"length","nativeSrc":"3041:6:19","nodeType":"YulTypedName","src":"3041:6:19","type":""}],"src":"2989:99:19"},{"body":{"nativeSrc":"3180:73:19","nodeType":"YulBlock","src":"3180:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3197:3:19","nodeType":"YulIdentifier","src":"3197:3:19"},{"name":"length","nativeSrc":"3202:6:19","nodeType":"YulIdentifier","src":"3202:6:19"}],"functionName":{"name":"mstore","nativeSrc":"3190:6:19","nodeType":"YulIdentifier","src":"3190:6:19"},"nativeSrc":"3190:19:19","nodeType":"YulFunctionCall","src":"3190:19:19"},"nativeSrc":"3190:19:19","nodeType":"YulExpressionStatement","src":"3190:19:19"},{"nativeSrc":"3218:29:19","nodeType":"YulAssignment","src":"3218:29:19","value":{"arguments":[{"name":"pos","nativeSrc":"3237:3:19","nodeType":"YulIdentifier","src":"3237:3:19"},{"kind":"number","nativeSrc":"3242:4:19","nodeType":"YulLiteral","src":"3242:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3233:3:19","nodeType":"YulIdentifier","src":"3233:3:19"},"nativeSrc":"3233:14:19","nodeType":"YulFunctionCall","src":"3233:14:19"},"variableNames":[{"name":"updated_pos","nativeSrc":"3218:11:19","nodeType":"YulIdentifier","src":"3218:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nativeSrc":"3094:159:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"3152:3:19","nodeType":"YulTypedName","src":"3152:3:19","type":""},{"name":"length","nativeSrc":"3157:6:19","nodeType":"YulTypedName","src":"3157:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"3168:11:19","nodeType":"YulTypedName","src":"3168:11:19","type":""}],"src":"3094:159:19"},{"body":{"nativeSrc":"3321:186:19","nodeType":"YulBlock","src":"3321:186:19","statements":[{"nativeSrc":"3332:10:19","nodeType":"YulVariableDeclaration","src":"3332:10:19","value":{"kind":"number","nativeSrc":"3341:1:19","nodeType":"YulLiteral","src":"3341:1:19","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"3336:1:19","nodeType":"YulTypedName","src":"3336:1:19","type":""}]},{"body":{"nativeSrc":"3401:63:19","nodeType":"YulBlock","src":"3401:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3426:3:19","nodeType":"YulIdentifier","src":"3426:3:19"},{"name":"i","nativeSrc":"3431:1:19","nodeType":"YulIdentifier","src":"3431:1:19"}],"functionName":{"name":"add","nativeSrc":"3422:3:19","nodeType":"YulIdentifier","src":"3422:3:19"},"nativeSrc":"3422:11:19","nodeType":"YulFunctionCall","src":"3422:11:19"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"3445:3:19","nodeType":"YulIdentifier","src":"3445:3:19"},{"name":"i","nativeSrc":"3450:1:19","nodeType":"YulIdentifier","src":"3450:1:19"}],"functionName":{"name":"add","nativeSrc":"3441:3:19","nodeType":"YulIdentifier","src":"3441:3:19"},"nativeSrc":"3441:11:19","nodeType":"YulFunctionCall","src":"3441:11:19"}],"functionName":{"name":"mload","nativeSrc":"3435:5:19","nodeType":"YulIdentifier","src":"3435:5:19"},"nativeSrc":"3435:18:19","nodeType":"YulFunctionCall","src":"3435:18:19"}],"functionName":{"name":"mstore","nativeSrc":"3415:6:19","nodeType":"YulIdentifier","src":"3415:6:19"},"nativeSrc":"3415:39:19","nodeType":"YulFunctionCall","src":"3415:39:19"},"nativeSrc":"3415:39:19","nodeType":"YulExpressionStatement","src":"3415:39:19"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"3362:1:19","nodeType":"YulIdentifier","src":"3362:1:19"},{"name":"length","nativeSrc":"3365:6:19","nodeType":"YulIdentifier","src":"3365:6:19"}],"functionName":{"name":"lt","nativeSrc":"3359:2:19","nodeType":"YulIdentifier","src":"3359:2:19"},"nativeSrc":"3359:13:19","nodeType":"YulFunctionCall","src":"3359:13:19"},"nativeSrc":"3351:113:19","nodeType":"YulForLoop","post":{"nativeSrc":"3373:19:19","nodeType":"YulBlock","src":"3373:19:19","statements":[{"nativeSrc":"3375:15:19","nodeType":"YulAssignment","src":"3375:15:19","value":{"arguments":[{"name":"i","nativeSrc":"3384:1:19","nodeType":"YulIdentifier","src":"3384:1:19"},{"kind":"number","nativeSrc":"3387:2:19","nodeType":"YulLiteral","src":"3387:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"3380:3:19","nodeType":"YulIdentifier","src":"3380:3:19"},"nativeSrc":"3380:10:19","nodeType":"YulFunctionCall","src":"3380:10:19"},"variableNames":[{"name":"i","nativeSrc":"3375:1:19","nodeType":"YulIdentifier","src":"3375:1:19"}]}]},"pre":{"nativeSrc":"3355:3:19","nodeType":"YulBlock","src":"3355:3:19","statements":[]},"src":"3351:113:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"3484:3:19","nodeType":"YulIdentifier","src":"3484:3:19"},{"name":"length","nativeSrc":"3489:6:19","nodeType":"YulIdentifier","src":"3489:6:19"}],"functionName":{"name":"add","nativeSrc":"3480:3:19","nodeType":"YulIdentifier","src":"3480:3:19"},"nativeSrc":"3480:16:19","nodeType":"YulFunctionCall","src":"3480:16:19"},{"kind":"number","nativeSrc":"3498:1:19","nodeType":"YulLiteral","src":"3498:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"3473:6:19","nodeType":"YulIdentifier","src":"3473:6:19"},"nativeSrc":"3473:27:19","nodeType":"YulFunctionCall","src":"3473:27:19"},"nativeSrc":"3473:27:19","nodeType":"YulExpressionStatement","src":"3473:27:19"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3259:248:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"3303:3:19","nodeType":"YulTypedName","src":"3303:3:19","type":""},{"name":"dst","nativeSrc":"3308:3:19","nodeType":"YulTypedName","src":"3308:3:19","type":""},{"name":"length","nativeSrc":"3313:6:19","nodeType":"YulTypedName","src":"3313:6:19","type":""}],"src":"3259:248:19"},{"body":{"nativeSrc":"3561:54:19","nodeType":"YulBlock","src":"3561:54:19","statements":[{"nativeSrc":"3571:38:19","nodeType":"YulAssignment","src":"3571:38:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3589:5:19","nodeType":"YulIdentifier","src":"3589:5:19"},{"kind":"number","nativeSrc":"3596:2:19","nodeType":"YulLiteral","src":"3596:2:19","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"3585:3:19","nodeType":"YulIdentifier","src":"3585:3:19"},"nativeSrc":"3585:14:19","nodeType":"YulFunctionCall","src":"3585:14:19"},{"arguments":[{"kind":"number","nativeSrc":"3605:2:19","nodeType":"YulLiteral","src":"3605:2:19","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"3601:3:19","nodeType":"YulIdentifier","src":"3601:3:19"},"nativeSrc":"3601:7:19","nodeType":"YulFunctionCall","src":"3601:7:19"}],"functionName":{"name":"and","nativeSrc":"3581:3:19","nodeType":"YulIdentifier","src":"3581:3:19"},"nativeSrc":"3581:28:19","nodeType":"YulFunctionCall","src":"3581:28:19"},"variableNames":[{"name":"result","nativeSrc":"3571:6:19","nodeType":"YulIdentifier","src":"3571:6:19"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"3513:102:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3544:5:19","nodeType":"YulTypedName","src":"3544:5:19","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3554:6:19","nodeType":"YulTypedName","src":"3554:6:19","type":""}],"src":"3513:102:19"},{"body":{"nativeSrc":"3703:275:19","nodeType":"YulBlock","src":"3703:275:19","statements":[{"nativeSrc":"3713:53:19","nodeType":"YulVariableDeclaration","src":"3713:53:19","value":{"arguments":[{"name":"value","nativeSrc":"3760:5:19","nodeType":"YulIdentifier","src":"3760:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3727:32:19","nodeType":"YulIdentifier","src":"3727:32:19"},"nativeSrc":"3727:39:19","nodeType":"YulFunctionCall","src":"3727:39:19"},"variables":[{"name":"length","nativeSrc":"3717:6:19","nodeType":"YulTypedName","src":"3717:6:19","type":""}]},{"nativeSrc":"3775:68:19","nodeType":"YulAssignment","src":"3775:68:19","value":{"arguments":[{"name":"pos","nativeSrc":"3831:3:19","nodeType":"YulIdentifier","src":"3831:3:19"},{"name":"length","nativeSrc":"3836:6:19","nodeType":"YulIdentifier","src":"3836:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nativeSrc":"3782:48:19","nodeType":"YulIdentifier","src":"3782:48:19"},"nativeSrc":"3782:61:19","nodeType":"YulFunctionCall","src":"3782:61:19"},"variableNames":[{"name":"pos","nativeSrc":"3775:3:19","nodeType":"YulIdentifier","src":"3775:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3891:5:19","nodeType":"YulIdentifier","src":"3891:5:19"},{"kind":"number","nativeSrc":"3898:4:19","nodeType":"YulLiteral","src":"3898:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"3887:3:19","nodeType":"YulIdentifier","src":"3887:3:19"},"nativeSrc":"3887:16:19","nodeType":"YulFunctionCall","src":"3887:16:19"},{"name":"pos","nativeSrc":"3905:3:19","nodeType":"YulIdentifier","src":"3905:3:19"},{"name":"length","nativeSrc":"3910:6:19","nodeType":"YulIdentifier","src":"3910:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"3852:34:19","nodeType":"YulIdentifier","src":"3852:34:19"},"nativeSrc":"3852:65:19","nodeType":"YulFunctionCall","src":"3852:65:19"},"nativeSrc":"3852:65:19","nodeType":"YulExpressionStatement","src":"3852:65:19"},{"nativeSrc":"3926:46:19","nodeType":"YulAssignment","src":"3926:46:19","value":{"arguments":[{"name":"pos","nativeSrc":"3937:3:19","nodeType":"YulIdentifier","src":"3937:3:19"},{"arguments":[{"name":"length","nativeSrc":"3964:6:19","nodeType":"YulIdentifier","src":"3964:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"3942:21:19","nodeType":"YulIdentifier","src":"3942:21:19"},"nativeSrc":"3942:29:19","nodeType":"YulFunctionCall","src":"3942:29:19"}],"functionName":{"name":"add","nativeSrc":"3933:3:19","nodeType":"YulIdentifier","src":"3933:3:19"},"nativeSrc":"3933:39:19","nodeType":"YulFunctionCall","src":"3933:39:19"},"variableNames":[{"name":"end","nativeSrc":"3926:3:19","nodeType":"YulIdentifier","src":"3926:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"3621:357:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3684:5:19","nodeType":"YulTypedName","src":"3684:5:19","type":""},{"name":"pos","nativeSrc":"3691:3:19","nodeType":"YulTypedName","src":"3691:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"3699:3:19","nodeType":"YulTypedName","src":"3699:3:19","type":""}],"src":"3621:357:19"},{"body":{"nativeSrc":"4039:53:19","nodeType":"YulBlock","src":"4039:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4056:3:19","nodeType":"YulIdentifier","src":"4056:3:19"},{"arguments":[{"name":"value","nativeSrc":"4079:5:19","nodeType":"YulIdentifier","src":"4079:5:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"4061:17:19","nodeType":"YulIdentifier","src":"4061:17:19"},"nativeSrc":"4061:24:19","nodeType":"YulFunctionCall","src":"4061:24:19"}],"functionName":{"name":"mstore","nativeSrc":"4049:6:19","nodeType":"YulIdentifier","src":"4049:6:19"},"nativeSrc":"4049:37:19","nodeType":"YulFunctionCall","src":"4049:37:19"},"nativeSrc":"4049:37:19","nodeType":"YulExpressionStatement","src":"4049:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"3984:108:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4027:5:19","nodeType":"YulTypedName","src":"4027:5:19","type":""},{"name":"pos","nativeSrc":"4034:3:19","nodeType":"YulTypedName","src":"4034:3:19","type":""}],"src":"3984:108:19"},{"body":{"nativeSrc":"4126:152:19","nodeType":"YulBlock","src":"4126:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4143:1:19","nodeType":"YulLiteral","src":"4143:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"4146:77:19","nodeType":"YulLiteral","src":"4146:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"4136:6:19","nodeType":"YulIdentifier","src":"4136:6:19"},"nativeSrc":"4136:88:19","nodeType":"YulFunctionCall","src":"4136:88:19"},"nativeSrc":"4136:88:19","nodeType":"YulExpressionStatement","src":"4136:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4240:1:19","nodeType":"YulLiteral","src":"4240:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"4243:4:19","nodeType":"YulLiteral","src":"4243:4:19","type":"","value":"0x21"}],"functionName":{"name":"mstore","nativeSrc":"4233:6:19","nodeType":"YulIdentifier","src":"4233:6:19"},"nativeSrc":"4233:15:19","nodeType":"YulFunctionCall","src":"4233:15:19"},"nativeSrc":"4233:15:19","nodeType":"YulExpressionStatement","src":"4233:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"4264:1:19","nodeType":"YulLiteral","src":"4264:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"4267:4:19","nodeType":"YulLiteral","src":"4267:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"4257:6:19","nodeType":"YulIdentifier","src":"4257:6:19"},"nativeSrc":"4257:15:19","nodeType":"YulFunctionCall","src":"4257:15:19"},"nativeSrc":"4257:15:19","nodeType":"YulExpressionStatement","src":"4257:15:19"}]},"name":"panic_error_0x21","nativeSrc":"4098:180:19","nodeType":"YulFunctionDefinition","src":"4098:180:19"},{"body":{"nativeSrc":"4338:62:19","nodeType":"YulBlock","src":"4338:62:19","statements":[{"body":{"nativeSrc":"4372:22:19","nodeType":"YulBlock","src":"4372:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x21","nativeSrc":"4374:16:19","nodeType":"YulIdentifier","src":"4374:16:19"},"nativeSrc":"4374:18:19","nodeType":"YulFunctionCall","src":"4374:18:19"},"nativeSrc":"4374:18:19","nodeType":"YulExpressionStatement","src":"4374:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4361:5:19","nodeType":"YulIdentifier","src":"4361:5:19"},{"kind":"number","nativeSrc":"4368:1:19","nodeType":"YulLiteral","src":"4368:1:19","type":"","value":"4"}],"functionName":{"name":"lt","nativeSrc":"4358:2:19","nodeType":"YulIdentifier","src":"4358:2:19"},"nativeSrc":"4358:12:19","nodeType":"YulFunctionCall","src":"4358:12:19"}],"functionName":{"name":"iszero","nativeSrc":"4351:6:19","nodeType":"YulIdentifier","src":"4351:6:19"},"nativeSrc":"4351:20:19","nodeType":"YulFunctionCall","src":"4351:20:19"},"nativeSrc":"4348:46:19","nodeType":"YulIf","src":"4348:46:19"}]},"name":"validator_assert_t_enum$_Status_$6813","nativeSrc":"4284:116:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4331:5:19","nodeType":"YulTypedName","src":"4331:5:19","type":""}],"src":"4284:116:19"},{"body":{"nativeSrc":"4462:77:19","nodeType":"YulBlock","src":"4462:77:19","statements":[{"nativeSrc":"4472:16:19","nodeType":"YulAssignment","src":"4472:16:19","value":{"name":"value","nativeSrc":"4483:5:19","nodeType":"YulIdentifier","src":"4483:5:19"},"variableNames":[{"name":"cleaned","nativeSrc":"4472:7:19","nodeType":"YulIdentifier","src":"4472:7:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4527:5:19","nodeType":"YulIdentifier","src":"4527:5:19"}],"functionName":{"name":"validator_assert_t_enum$_Status_$6813","nativeSrc":"4489:37:19","nodeType":"YulIdentifier","src":"4489:37:19"},"nativeSrc":"4489:44:19","nodeType":"YulFunctionCall","src":"4489:44:19"},"nativeSrc":"4489:44:19","nodeType":"YulExpressionStatement","src":"4489:44:19"}]},"name":"cleanup_t_enum$_Status_$6813","nativeSrc":"4406:133:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4444:5:19","nodeType":"YulTypedName","src":"4444:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"4454:7:19","nodeType":"YulTypedName","src":"4454:7:19","type":""}],"src":"4406:133:19"},{"body":{"nativeSrc":"4614:64:19","nodeType":"YulBlock","src":"4614:64:19","statements":[{"nativeSrc":"4624:48:19","nodeType":"YulAssignment","src":"4624:48:19","value":{"arguments":[{"name":"value","nativeSrc":"4666:5:19","nodeType":"YulIdentifier","src":"4666:5:19"}],"functionName":{"name":"cleanup_t_enum$_Status_$6813","nativeSrc":"4637:28:19","nodeType":"YulIdentifier","src":"4637:28:19"},"nativeSrc":"4637:35:19","nodeType":"YulFunctionCall","src":"4637:35:19"},"variableNames":[{"name":"converted","nativeSrc":"4624:9:19","nodeType":"YulIdentifier","src":"4624:9:19"}]}]},"name":"convert_t_enum$_Status_$6813_to_t_uint8","nativeSrc":"4545:133:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4594:5:19","nodeType":"YulTypedName","src":"4594:5:19","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"4604:9:19","nodeType":"YulTypedName","src":"4604:9:19","type":""}],"src":"4545:133:19"},{"body":{"nativeSrc":"4748:75:19","nodeType":"YulBlock","src":"4748:75:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"4765:3:19","nodeType":"YulIdentifier","src":"4765:3:19"},{"arguments":[{"name":"value","nativeSrc":"4810:5:19","nodeType":"YulIdentifier","src":"4810:5:19"}],"functionName":{"name":"convert_t_enum$_Status_$6813_to_t_uint8","nativeSrc":"4770:39:19","nodeType":"YulIdentifier","src":"4770:39:19"},"nativeSrc":"4770:46:19","nodeType":"YulFunctionCall","src":"4770:46:19"}],"functionName":{"name":"mstore","nativeSrc":"4758:6:19","nodeType":"YulIdentifier","src":"4758:6:19"},"nativeSrc":"4758:59:19","nodeType":"YulFunctionCall","src":"4758:59:19"},"nativeSrc":"4758:59:19","nodeType":"YulExpressionStatement","src":"4758:59:19"}]},"name":"abi_encode_t_enum$_Status_$6813_to_t_uint8","nativeSrc":"4684:139:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4736:5:19","nodeType":"YulTypedName","src":"4736:5:19","type":""},{"name":"pos","nativeSrc":"4743:3:19","nodeType":"YulTypedName","src":"4743:3:19","type":""}],"src":"4684:139:19"},{"body":{"nativeSrc":"5005:1281:19","nodeType":"YulBlock","src":"5005:1281:19","statements":[{"nativeSrc":"5015:26:19","nodeType":"YulVariableDeclaration","src":"5015:26:19","value":{"arguments":[{"name":"pos","nativeSrc":"5031:3:19","nodeType":"YulIdentifier","src":"5031:3:19"},{"kind":"number","nativeSrc":"5036:4:19","nodeType":"YulLiteral","src":"5036:4:19","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"5027:3:19","nodeType":"YulIdentifier","src":"5027:3:19"},"nativeSrc":"5027:14:19","nodeType":"YulFunctionCall","src":"5027:14:19"},"variables":[{"name":"tail","nativeSrc":"5019:4:19","nodeType":"YulTypedName","src":"5019:4:19","type":""}]},{"nativeSrc":"5051:236:19","nodeType":"YulBlock","src":"5051:236:19","statements":[{"nativeSrc":"5087:43:19","nodeType":"YulVariableDeclaration","src":"5087:43:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5117:5:19","nodeType":"YulIdentifier","src":"5117:5:19"},{"kind":"number","nativeSrc":"5124:4:19","nodeType":"YulLiteral","src":"5124:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"5113:3:19","nodeType":"YulIdentifier","src":"5113:3:19"},"nativeSrc":"5113:16:19","nodeType":"YulFunctionCall","src":"5113:16:19"}],"functionName":{"name":"mload","nativeSrc":"5107:5:19","nodeType":"YulIdentifier","src":"5107:5:19"},"nativeSrc":"5107:23:19","nodeType":"YulFunctionCall","src":"5107:23:19"},"variables":[{"name":"memberValue0","nativeSrc":"5091:12:19","nodeType":"YulTypedName","src":"5091:12:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"5155:3:19","nodeType":"YulIdentifier","src":"5155:3:19"},{"kind":"number","nativeSrc":"5160:4:19","nodeType":"YulLiteral","src":"5160:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"5151:3:19","nodeType":"YulIdentifier","src":"5151:3:19"},"nativeSrc":"5151:14:19","nodeType":"YulFunctionCall","src":"5151:14:19"},{"arguments":[{"name":"tail","nativeSrc":"5171:4:19","nodeType":"YulIdentifier","src":"5171:4:19"},{"name":"pos","nativeSrc":"5177:3:19","nodeType":"YulIdentifier","src":"5177:3:19"}],"functionName":{"name":"sub","nativeSrc":"5167:3:19","nodeType":"YulIdentifier","src":"5167:3:19"},"nativeSrc":"5167:14:19","nodeType":"YulFunctionCall","src":"5167:14:19"}],"functionName":{"name":"mstore","nativeSrc":"5144:6:19","nodeType":"YulIdentifier","src":"5144:6:19"},"nativeSrc":"5144:38:19","nodeType":"YulFunctionCall","src":"5144:38:19"},"nativeSrc":"5144:38:19","nodeType":"YulExpressionStatement","src":"5144:38:19"},{"nativeSrc":"5195:81:19","nodeType":"YulAssignment","src":"5195:81:19","value":{"arguments":[{"name":"memberValue0","nativeSrc":"5257:12:19","nodeType":"YulIdentifier","src":"5257:12:19"},{"name":"tail","nativeSrc":"5271:4:19","nodeType":"YulIdentifier","src":"5271:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"5203:53:19","nodeType":"YulIdentifier","src":"5203:53:19"},"nativeSrc":"5203:73:19","nodeType":"YulFunctionCall","src":"5203:73:19"},"variableNames":[{"name":"tail","nativeSrc":"5195:4:19","nodeType":"YulIdentifier","src":"5195:4:19"}]}]},{"nativeSrc":"5297:242:19","nodeType":"YulBlock","src":"5297:242:19","statements":[{"nativeSrc":"5339:43:19","nodeType":"YulVariableDeclaration","src":"5339:43:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5369:5:19","nodeType":"YulIdentifier","src":"5369:5:19"},{"kind":"number","nativeSrc":"5376:4:19","nodeType":"YulLiteral","src":"5376:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5365:3:19","nodeType":"YulIdentifier","src":"5365:3:19"},"nativeSrc":"5365:16:19","nodeType":"YulFunctionCall","src":"5365:16:19"}],"functionName":{"name":"mload","nativeSrc":"5359:5:19","nodeType":"YulIdentifier","src":"5359:5:19"},"nativeSrc":"5359:23:19","nodeType":"YulFunctionCall","src":"5359:23:19"},"variables":[{"name":"memberValue0","nativeSrc":"5343:12:19","nodeType":"YulTypedName","src":"5343:12:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"5407:3:19","nodeType":"YulIdentifier","src":"5407:3:19"},{"kind":"number","nativeSrc":"5412:4:19","nodeType":"YulLiteral","src":"5412:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"5403:3:19","nodeType":"YulIdentifier","src":"5403:3:19"},"nativeSrc":"5403:14:19","nodeType":"YulFunctionCall","src":"5403:14:19"},{"arguments":[{"name":"tail","nativeSrc":"5423:4:19","nodeType":"YulIdentifier","src":"5423:4:19"},{"name":"pos","nativeSrc":"5429:3:19","nodeType":"YulIdentifier","src":"5429:3:19"}],"functionName":{"name":"sub","nativeSrc":"5419:3:19","nodeType":"YulIdentifier","src":"5419:3:19"},"nativeSrc":"5419:14:19","nodeType":"YulFunctionCall","src":"5419:14:19"}],"functionName":{"name":"mstore","nativeSrc":"5396:6:19","nodeType":"YulIdentifier","src":"5396:6:19"},"nativeSrc":"5396:38:19","nodeType":"YulFunctionCall","src":"5396:38:19"},"nativeSrc":"5396:38:19","nodeType":"YulExpressionStatement","src":"5396:38:19"},{"nativeSrc":"5447:81:19","nodeType":"YulAssignment","src":"5447:81:19","value":{"arguments":[{"name":"memberValue0","nativeSrc":"5509:12:19","nodeType":"YulIdentifier","src":"5509:12:19"},{"name":"tail","nativeSrc":"5523:4:19","nodeType":"YulIdentifier","src":"5523:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"5455:53:19","nodeType":"YulIdentifier","src":"5455:53:19"},"nativeSrc":"5455:73:19","nodeType":"YulFunctionCall","src":"5455:73:19"},"variableNames":[{"name":"tail","nativeSrc":"5447:4:19","nodeType":"YulIdentifier","src":"5447:4:19"}]}]},{"nativeSrc":"5549:169:19","nodeType":"YulBlock","src":"5549:169:19","statements":[{"nativeSrc":"5589:43:19","nodeType":"YulVariableDeclaration","src":"5589:43:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5619:5:19","nodeType":"YulIdentifier","src":"5619:5:19"},{"kind":"number","nativeSrc":"5626:4:19","nodeType":"YulLiteral","src":"5626:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"5615:3:19","nodeType":"YulIdentifier","src":"5615:3:19"},"nativeSrc":"5615:16:19","nodeType":"YulFunctionCall","src":"5615:16:19"}],"functionName":{"name":"mload","nativeSrc":"5609:5:19","nodeType":"YulIdentifier","src":"5609:5:19"},"nativeSrc":"5609:23:19","nodeType":"YulFunctionCall","src":"5609:23:19"},"variables":[{"name":"memberValue0","nativeSrc":"5593:12:19","nodeType":"YulTypedName","src":"5593:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"5679:12:19","nodeType":"YulIdentifier","src":"5679:12:19"},{"arguments":[{"name":"pos","nativeSrc":"5697:3:19","nodeType":"YulIdentifier","src":"5697:3:19"},{"kind":"number","nativeSrc":"5702:4:19","nodeType":"YulLiteral","src":"5702:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"5693:3:19","nodeType":"YulIdentifier","src":"5693:3:19"},"nativeSrc":"5693:14:19","nodeType":"YulFunctionCall","src":"5693:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"5645:33:19","nodeType":"YulIdentifier","src":"5645:33:19"},"nativeSrc":"5645:63:19","nodeType":"YulFunctionCall","src":"5645:63:19"},"nativeSrc":"5645:63:19","nodeType":"YulExpressionStatement","src":"5645:63:19"}]},{"nativeSrc":"5728:169:19","nodeType":"YulBlock","src":"5728:169:19","statements":[{"nativeSrc":"5768:43:19","nodeType":"YulVariableDeclaration","src":"5768:43:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5798:5:19","nodeType":"YulIdentifier","src":"5798:5:19"},{"kind":"number","nativeSrc":"5805:4:19","nodeType":"YulLiteral","src":"5805:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"5794:3:19","nodeType":"YulIdentifier","src":"5794:3:19"},"nativeSrc":"5794:16:19","nodeType":"YulFunctionCall","src":"5794:16:19"}],"functionName":{"name":"mload","nativeSrc":"5788:5:19","nodeType":"YulIdentifier","src":"5788:5:19"},"nativeSrc":"5788:23:19","nodeType":"YulFunctionCall","src":"5788:23:19"},"variables":[{"name":"memberValue0","nativeSrc":"5772:12:19","nodeType":"YulTypedName","src":"5772:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"5858:12:19","nodeType":"YulIdentifier","src":"5858:12:19"},{"arguments":[{"name":"pos","nativeSrc":"5876:3:19","nodeType":"YulIdentifier","src":"5876:3:19"},{"kind":"number","nativeSrc":"5881:4:19","nodeType":"YulLiteral","src":"5881:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"5872:3:19","nodeType":"YulIdentifier","src":"5872:3:19"},"nativeSrc":"5872:14:19","nodeType":"YulFunctionCall","src":"5872:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"5824:33:19","nodeType":"YulIdentifier","src":"5824:33:19"},"nativeSrc":"5824:63:19","nodeType":"YulFunctionCall","src":"5824:63:19"},"nativeSrc":"5824:63:19","nodeType":"YulExpressionStatement","src":"5824:63:19"}]},{"nativeSrc":"5907:167:19","nodeType":"YulBlock","src":"5907:167:19","statements":[{"nativeSrc":"5945:43:19","nodeType":"YulVariableDeclaration","src":"5945:43:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5975:5:19","nodeType":"YulIdentifier","src":"5975:5:19"},{"kind":"number","nativeSrc":"5982:4:19","nodeType":"YulLiteral","src":"5982:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"5971:3:19","nodeType":"YulIdentifier","src":"5971:3:19"},"nativeSrc":"5971:16:19","nodeType":"YulFunctionCall","src":"5971:16:19"}],"functionName":{"name":"mload","nativeSrc":"5965:5:19","nodeType":"YulIdentifier","src":"5965:5:19"},"nativeSrc":"5965:23:19","nodeType":"YulFunctionCall","src":"5965:23:19"},"variables":[{"name":"memberValue0","nativeSrc":"5949:12:19","nodeType":"YulTypedName","src":"5949:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"6035:12:19","nodeType":"YulIdentifier","src":"6035:12:19"},{"arguments":[{"name":"pos","nativeSrc":"6053:3:19","nodeType":"YulIdentifier","src":"6053:3:19"},{"kind":"number","nativeSrc":"6058:4:19","nodeType":"YulLiteral","src":"6058:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"6049:3:19","nodeType":"YulIdentifier","src":"6049:3:19"},"nativeSrc":"6049:14:19","nodeType":"YulFunctionCall","src":"6049:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"6001:33:19","nodeType":"YulIdentifier","src":"6001:33:19"},"nativeSrc":"6001:63:19","nodeType":"YulFunctionCall","src":"6001:63:19"},"nativeSrc":"6001:63:19","nodeType":"YulExpressionStatement","src":"6001:63:19"}]},{"nativeSrc":"6084:175:19","nodeType":"YulBlock","src":"6084:175:19","statements":[{"nativeSrc":"6121:43:19","nodeType":"YulVariableDeclaration","src":"6121:43:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"6151:5:19","nodeType":"YulIdentifier","src":"6151:5:19"},{"kind":"number","nativeSrc":"6158:4:19","nodeType":"YulLiteral","src":"6158:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"6147:3:19","nodeType":"YulIdentifier","src":"6147:3:19"},"nativeSrc":"6147:16:19","nodeType":"YulFunctionCall","src":"6147:16:19"}],"functionName":{"name":"mload","nativeSrc":"6141:5:19","nodeType":"YulIdentifier","src":"6141:5:19"},"nativeSrc":"6141:23:19","nodeType":"YulFunctionCall","src":"6141:23:19"},"variables":[{"name":"memberValue0","nativeSrc":"6125:12:19","nodeType":"YulTypedName","src":"6125:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"6220:12:19","nodeType":"YulIdentifier","src":"6220:12:19"},{"arguments":[{"name":"pos","nativeSrc":"6238:3:19","nodeType":"YulIdentifier","src":"6238:3:19"},{"kind":"number","nativeSrc":"6243:4:19","nodeType":"YulLiteral","src":"6243:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"6234:3:19","nodeType":"YulIdentifier","src":"6234:3:19"},"nativeSrc":"6234:14:19","nodeType":"YulFunctionCall","src":"6234:14:19"}],"functionName":{"name":"abi_encode_t_enum$_Status_$6813_to_t_uint8","nativeSrc":"6177:42:19","nodeType":"YulIdentifier","src":"6177:42:19"},"nativeSrc":"6177:72:19","nodeType":"YulFunctionCall","src":"6177:72:19"},"nativeSrc":"6177:72:19","nodeType":"YulExpressionStatement","src":"6177:72:19"}]},{"nativeSrc":"6269:11:19","nodeType":"YulAssignment","src":"6269:11:19","value":{"name":"tail","nativeSrc":"6276:4:19","nodeType":"YulIdentifier","src":"6276:4:19"},"variableNames":[{"name":"end","nativeSrc":"6269:3:19","nodeType":"YulIdentifier","src":"6269:3:19"}]}]},"name":"abi_encode_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr_fromStack","nativeSrc":"4879:1407:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4984:5:19","nodeType":"YulTypedName","src":"4984:5:19","type":""},{"name":"pos","nativeSrc":"4991:3:19","nodeType":"YulTypedName","src":"4991:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"5000:3:19","nodeType":"YulTypedName","src":"5000:3:19","type":""}],"src":"4879:1407:19"},{"body":{"nativeSrc":"6442:227:19","nodeType":"YulBlock","src":"6442:227:19","statements":[{"nativeSrc":"6452:26:19","nodeType":"YulAssignment","src":"6452:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"6464:9:19","nodeType":"YulIdentifier","src":"6464:9:19"},{"kind":"number","nativeSrc":"6475:2:19","nodeType":"YulLiteral","src":"6475:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6460:3:19","nodeType":"YulIdentifier","src":"6460:3:19"},"nativeSrc":"6460:18:19","nodeType":"YulFunctionCall","src":"6460:18:19"},"variableNames":[{"name":"tail","nativeSrc":"6452:4:19","nodeType":"YulIdentifier","src":"6452:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6499:9:19","nodeType":"YulIdentifier","src":"6499:9:19"},{"kind":"number","nativeSrc":"6510:1:19","nodeType":"YulLiteral","src":"6510:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6495:3:19","nodeType":"YulIdentifier","src":"6495:3:19"},"nativeSrc":"6495:17:19","nodeType":"YulFunctionCall","src":"6495:17:19"},{"arguments":[{"name":"tail","nativeSrc":"6518:4:19","nodeType":"YulIdentifier","src":"6518:4:19"},{"name":"headStart","nativeSrc":"6524:9:19","nodeType":"YulIdentifier","src":"6524:9:19"}],"functionName":{"name":"sub","nativeSrc":"6514:3:19","nodeType":"YulIdentifier","src":"6514:3:19"},"nativeSrc":"6514:20:19","nodeType":"YulFunctionCall","src":"6514:20:19"}],"functionName":{"name":"mstore","nativeSrc":"6488:6:19","nodeType":"YulIdentifier","src":"6488:6:19"},"nativeSrc":"6488:47:19","nodeType":"YulFunctionCall","src":"6488:47:19"},"nativeSrc":"6488:47:19","nodeType":"YulExpressionStatement","src":"6488:47:19"},{"nativeSrc":"6544:118:19","nodeType":"YulAssignment","src":"6544:118:19","value":{"arguments":[{"name":"value0","nativeSrc":"6648:6:19","nodeType":"YulIdentifier","src":"6648:6:19"},{"name":"tail","nativeSrc":"6657:4:19","nodeType":"YulIdentifier","src":"6657:4:19"}],"functionName":{"name":"abi_encode_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr_fromStack","nativeSrc":"6552:95:19","nodeType":"YulIdentifier","src":"6552:95:19"},"nativeSrc":"6552:110:19","nodeType":"YulFunctionCall","src":"6552:110:19"},"variableNames":[{"name":"tail","nativeSrc":"6544:4:19","nodeType":"YulIdentifier","src":"6544:4:19"}]}]},"name":"abi_encode_tuple_t_struct$_Proposal_$6791_memory_ptr__to_t_struct$_Proposal_$6791_memory_ptr__fromStack_reversed","nativeSrc":"6292:377:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6414:9:19","nodeType":"YulTypedName","src":"6414:9:19","type":""},{"name":"value0","nativeSrc":"6426:6:19","nodeType":"YulTypedName","src":"6426:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6437:4:19","nodeType":"YulTypedName","src":"6437:4:19","type":""}],"src":"6292:377:19"},{"body":{"nativeSrc":"6764:28:19","nodeType":"YulBlock","src":"6764:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6781:1:19","nodeType":"YulLiteral","src":"6781:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"6784:1:19","nodeType":"YulLiteral","src":"6784:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6774:6:19","nodeType":"YulIdentifier","src":"6774:6:19"},"nativeSrc":"6774:12:19","nodeType":"YulFunctionCall","src":"6774:12:19"},"nativeSrc":"6774:12:19","nodeType":"YulExpressionStatement","src":"6774:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"6675:117:19","nodeType":"YulFunctionDefinition","src":"6675:117:19"},{"body":{"nativeSrc":"6887:28:19","nodeType":"YulBlock","src":"6887:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6904:1:19","nodeType":"YulLiteral","src":"6904:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"6907:1:19","nodeType":"YulLiteral","src":"6907:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"6897:6:19","nodeType":"YulIdentifier","src":"6897:6:19"},"nativeSrc":"6897:12:19","nodeType":"YulFunctionCall","src":"6897:12:19"},"nativeSrc":"6897:12:19","nodeType":"YulExpressionStatement","src":"6897:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"6798:117:19","nodeType":"YulFunctionDefinition","src":"6798:117:19"},{"body":{"nativeSrc":"6949:152:19","nodeType":"YulBlock","src":"6949:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"6966:1:19","nodeType":"YulLiteral","src":"6966:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"6969:77:19","nodeType":"YulLiteral","src":"6969:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"6959:6:19","nodeType":"YulIdentifier","src":"6959:6:19"},"nativeSrc":"6959:88:19","nodeType":"YulFunctionCall","src":"6959:88:19"},"nativeSrc":"6959:88:19","nodeType":"YulExpressionStatement","src":"6959:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7063:1:19","nodeType":"YulLiteral","src":"7063:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"7066:4:19","nodeType":"YulLiteral","src":"7066:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"7056:6:19","nodeType":"YulIdentifier","src":"7056:6:19"},"nativeSrc":"7056:15:19","nodeType":"YulFunctionCall","src":"7056:15:19"},"nativeSrc":"7056:15:19","nodeType":"YulExpressionStatement","src":"7056:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7087:1:19","nodeType":"YulLiteral","src":"7087:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"7090:4:19","nodeType":"YulLiteral","src":"7090:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"7080:6:19","nodeType":"YulIdentifier","src":"7080:6:19"},"nativeSrc":"7080:15:19","nodeType":"YulFunctionCall","src":"7080:15:19"},"nativeSrc":"7080:15:19","nodeType":"YulExpressionStatement","src":"7080:15:19"}]},"name":"panic_error_0x41","nativeSrc":"6921:180:19","nodeType":"YulFunctionDefinition","src":"6921:180:19"},{"body":{"nativeSrc":"7150:238:19","nodeType":"YulBlock","src":"7150:238:19","statements":[{"nativeSrc":"7160:58:19","nodeType":"YulVariableDeclaration","src":"7160:58:19","value":{"arguments":[{"name":"memPtr","nativeSrc":"7182:6:19","nodeType":"YulIdentifier","src":"7182:6:19"},{"arguments":[{"name":"size","nativeSrc":"7212:4:19","nodeType":"YulIdentifier","src":"7212:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7190:21:19","nodeType":"YulIdentifier","src":"7190:21:19"},"nativeSrc":"7190:27:19","nodeType":"YulFunctionCall","src":"7190:27:19"}],"functionName":{"name":"add","nativeSrc":"7178:3:19","nodeType":"YulIdentifier","src":"7178:3:19"},"nativeSrc":"7178:40:19","nodeType":"YulFunctionCall","src":"7178:40:19"},"variables":[{"name":"newFreePtr","nativeSrc":"7164:10:19","nodeType":"YulTypedName","src":"7164:10:19","type":""}]},{"body":{"nativeSrc":"7329:22:19","nodeType":"YulBlock","src":"7329:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7331:16:19","nodeType":"YulIdentifier","src":"7331:16:19"},"nativeSrc":"7331:18:19","nodeType":"YulFunctionCall","src":"7331:18:19"},"nativeSrc":"7331:18:19","nodeType":"YulExpressionStatement","src":"7331:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"7272:10:19","nodeType":"YulIdentifier","src":"7272:10:19"},{"kind":"number","nativeSrc":"7284:18:19","nodeType":"YulLiteral","src":"7284:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7269:2:19","nodeType":"YulIdentifier","src":"7269:2:19"},"nativeSrc":"7269:34:19","nodeType":"YulFunctionCall","src":"7269:34:19"},{"arguments":[{"name":"newFreePtr","nativeSrc":"7308:10:19","nodeType":"YulIdentifier","src":"7308:10:19"},{"name":"memPtr","nativeSrc":"7320:6:19","nodeType":"YulIdentifier","src":"7320:6:19"}],"functionName":{"name":"lt","nativeSrc":"7305:2:19","nodeType":"YulIdentifier","src":"7305:2:19"},"nativeSrc":"7305:22:19","nodeType":"YulFunctionCall","src":"7305:22:19"}],"functionName":{"name":"or","nativeSrc":"7266:2:19","nodeType":"YulIdentifier","src":"7266:2:19"},"nativeSrc":"7266:62:19","nodeType":"YulFunctionCall","src":"7266:62:19"},"nativeSrc":"7263:88:19","nodeType":"YulIf","src":"7263:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"7367:2:19","nodeType":"YulLiteral","src":"7367:2:19","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"7371:10:19","nodeType":"YulIdentifier","src":"7371:10:19"}],"functionName":{"name":"mstore","nativeSrc":"7360:6:19","nodeType":"YulIdentifier","src":"7360:6:19"},"nativeSrc":"7360:22:19","nodeType":"YulFunctionCall","src":"7360:22:19"},"nativeSrc":"7360:22:19","nodeType":"YulExpressionStatement","src":"7360:22:19"}]},"name":"finalize_allocation","nativeSrc":"7107:281:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"7136:6:19","nodeType":"YulTypedName","src":"7136:6:19","type":""},{"name":"size","nativeSrc":"7144:4:19","nodeType":"YulTypedName","src":"7144:4:19","type":""}],"src":"7107:281:19"},{"body":{"nativeSrc":"7435:88:19","nodeType":"YulBlock","src":"7435:88:19","statements":[{"nativeSrc":"7445:30:19","nodeType":"YulAssignment","src":"7445:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"7455:18:19","nodeType":"YulIdentifier","src":"7455:18:19"},"nativeSrc":"7455:20:19","nodeType":"YulFunctionCall","src":"7455:20:19"},"variableNames":[{"name":"memPtr","nativeSrc":"7445:6:19","nodeType":"YulIdentifier","src":"7445:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"7504:6:19","nodeType":"YulIdentifier","src":"7504:6:19"},{"name":"size","nativeSrc":"7512:4:19","nodeType":"YulIdentifier","src":"7512:4:19"}],"functionName":{"name":"finalize_allocation","nativeSrc":"7484:19:19","nodeType":"YulIdentifier","src":"7484:19:19"},"nativeSrc":"7484:33:19","nodeType":"YulFunctionCall","src":"7484:33:19"},"nativeSrc":"7484:33:19","nodeType":"YulExpressionStatement","src":"7484:33:19"}]},"name":"allocate_memory","nativeSrc":"7394:129:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"7419:4:19","nodeType":"YulTypedName","src":"7419:4:19","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"7428:6:19","nodeType":"YulTypedName","src":"7428:6:19","type":""}],"src":"7394:129:19"},{"body":{"nativeSrc":"7596:241:19","nodeType":"YulBlock","src":"7596:241:19","statements":[{"body":{"nativeSrc":"7701:22:19","nodeType":"YulBlock","src":"7701:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"7703:16:19","nodeType":"YulIdentifier","src":"7703:16:19"},"nativeSrc":"7703:18:19","nodeType":"YulFunctionCall","src":"7703:18:19"},"nativeSrc":"7703:18:19","nodeType":"YulExpressionStatement","src":"7703:18:19"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"7673:6:19","nodeType":"YulIdentifier","src":"7673:6:19"},{"kind":"number","nativeSrc":"7681:18:19","nodeType":"YulLiteral","src":"7681:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"7670:2:19","nodeType":"YulIdentifier","src":"7670:2:19"},"nativeSrc":"7670:30:19","nodeType":"YulFunctionCall","src":"7670:30:19"},"nativeSrc":"7667:56:19","nodeType":"YulIf","src":"7667:56:19"},{"nativeSrc":"7733:37:19","nodeType":"YulAssignment","src":"7733:37:19","value":{"arguments":[{"name":"length","nativeSrc":"7763:6:19","nodeType":"YulIdentifier","src":"7763:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"7741:21:19","nodeType":"YulIdentifier","src":"7741:21:19"},"nativeSrc":"7741:29:19","nodeType":"YulFunctionCall","src":"7741:29:19"},"variableNames":[{"name":"size","nativeSrc":"7733:4:19","nodeType":"YulIdentifier","src":"7733:4:19"}]},{"nativeSrc":"7807:23:19","nodeType":"YulAssignment","src":"7807:23:19","value":{"arguments":[{"name":"size","nativeSrc":"7819:4:19","nodeType":"YulIdentifier","src":"7819:4:19"},{"kind":"number","nativeSrc":"7825:4:19","nodeType":"YulLiteral","src":"7825:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"7815:3:19","nodeType":"YulIdentifier","src":"7815:3:19"},"nativeSrc":"7815:15:19","nodeType":"YulFunctionCall","src":"7815:15:19"},"variableNames":[{"name":"size","nativeSrc":"7807:4:19","nodeType":"YulIdentifier","src":"7807:4:19"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"7529:308:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"7580:6:19","nodeType":"YulTypedName","src":"7580:6:19","type":""}],"returnVariables":[{"name":"size","nativeSrc":"7591:4:19","nodeType":"YulTypedName","src":"7591:4:19","type":""}],"src":"7529:308:19"},{"body":{"nativeSrc":"7907:84:19","nodeType":"YulBlock","src":"7907:84:19","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"7931:3:19","nodeType":"YulIdentifier","src":"7931:3:19"},{"name":"src","nativeSrc":"7936:3:19","nodeType":"YulIdentifier","src":"7936:3:19"},{"name":"length","nativeSrc":"7941:6:19","nodeType":"YulIdentifier","src":"7941:6:19"}],"functionName":{"name":"calldatacopy","nativeSrc":"7918:12:19","nodeType":"YulIdentifier","src":"7918:12:19"},"nativeSrc":"7918:30:19","nodeType":"YulFunctionCall","src":"7918:30:19"},"nativeSrc":"7918:30:19","nodeType":"YulExpressionStatement","src":"7918:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"7968:3:19","nodeType":"YulIdentifier","src":"7968:3:19"},{"name":"length","nativeSrc":"7973:6:19","nodeType":"YulIdentifier","src":"7973:6:19"}],"functionName":{"name":"add","nativeSrc":"7964:3:19","nodeType":"YulIdentifier","src":"7964:3:19"},"nativeSrc":"7964:16:19","nodeType":"YulFunctionCall","src":"7964:16:19"},{"kind":"number","nativeSrc":"7982:1:19","nodeType":"YulLiteral","src":"7982:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"7957:6:19","nodeType":"YulIdentifier","src":"7957:6:19"},"nativeSrc":"7957:27:19","nodeType":"YulFunctionCall","src":"7957:27:19"},"nativeSrc":"7957:27:19","nodeType":"YulExpressionStatement","src":"7957:27:19"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"7843:148:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"7889:3:19","nodeType":"YulTypedName","src":"7889:3:19","type":""},{"name":"dst","nativeSrc":"7894:3:19","nodeType":"YulTypedName","src":"7894:3:19","type":""},{"name":"length","nativeSrc":"7899:6:19","nodeType":"YulTypedName","src":"7899:6:19","type":""}],"src":"7843:148:19"},{"body":{"nativeSrc":"8081:341:19","nodeType":"YulBlock","src":"8081:341:19","statements":[{"nativeSrc":"8091:75:19","nodeType":"YulAssignment","src":"8091:75:19","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"8158:6:19","nodeType":"YulIdentifier","src":"8158:6:19"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nativeSrc":"8116:41:19","nodeType":"YulIdentifier","src":"8116:41:19"},"nativeSrc":"8116:49:19","nodeType":"YulFunctionCall","src":"8116:49:19"}],"functionName":{"name":"allocate_memory","nativeSrc":"8100:15:19","nodeType":"YulIdentifier","src":"8100:15:19"},"nativeSrc":"8100:66:19","nodeType":"YulFunctionCall","src":"8100:66:19"},"variableNames":[{"name":"array","nativeSrc":"8091:5:19","nodeType":"YulIdentifier","src":"8091:5:19"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"8182:5:19","nodeType":"YulIdentifier","src":"8182:5:19"},{"name":"length","nativeSrc":"8189:6:19","nodeType":"YulIdentifier","src":"8189:6:19"}],"functionName":{"name":"mstore","nativeSrc":"8175:6:19","nodeType":"YulIdentifier","src":"8175:6:19"},"nativeSrc":"8175:21:19","nodeType":"YulFunctionCall","src":"8175:21:19"},"nativeSrc":"8175:21:19","nodeType":"YulExpressionStatement","src":"8175:21:19"},{"nativeSrc":"8205:27:19","nodeType":"YulVariableDeclaration","src":"8205:27:19","value":{"arguments":[{"name":"array","nativeSrc":"8220:5:19","nodeType":"YulIdentifier","src":"8220:5:19"},{"kind":"number","nativeSrc":"8227:4:19","nodeType":"YulLiteral","src":"8227:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8216:3:19","nodeType":"YulIdentifier","src":"8216:3:19"},"nativeSrc":"8216:16:19","nodeType":"YulFunctionCall","src":"8216:16:19"},"variables":[{"name":"dst","nativeSrc":"8209:3:19","nodeType":"YulTypedName","src":"8209:3:19","type":""}]},{"body":{"nativeSrc":"8270:83:19","nodeType":"YulBlock","src":"8270:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"8272:77:19","nodeType":"YulIdentifier","src":"8272:77:19"},"nativeSrc":"8272:79:19","nodeType":"YulFunctionCall","src":"8272:79:19"},"nativeSrc":"8272:79:19","nodeType":"YulExpressionStatement","src":"8272:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"8251:3:19","nodeType":"YulIdentifier","src":"8251:3:19"},{"name":"length","nativeSrc":"8256:6:19","nodeType":"YulIdentifier","src":"8256:6:19"}],"functionName":{"name":"add","nativeSrc":"8247:3:19","nodeType":"YulIdentifier","src":"8247:3:19"},"nativeSrc":"8247:16:19","nodeType":"YulFunctionCall","src":"8247:16:19"},{"name":"end","nativeSrc":"8265:3:19","nodeType":"YulIdentifier","src":"8265:3:19"}],"functionName":{"name":"gt","nativeSrc":"8244:2:19","nodeType":"YulIdentifier","src":"8244:2:19"},"nativeSrc":"8244:25:19","nodeType":"YulFunctionCall","src":"8244:25:19"},"nativeSrc":"8241:112:19","nodeType":"YulIf","src":"8241:112:19"},{"expression":{"arguments":[{"name":"src","nativeSrc":"8399:3:19","nodeType":"YulIdentifier","src":"8399:3:19"},{"name":"dst","nativeSrc":"8404:3:19","nodeType":"YulIdentifier","src":"8404:3:19"},{"name":"length","nativeSrc":"8409:6:19","nodeType":"YulIdentifier","src":"8409:6:19"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"8362:36:19","nodeType":"YulIdentifier","src":"8362:36:19"},"nativeSrc":"8362:54:19","nodeType":"YulFunctionCall","src":"8362:54:19"},"nativeSrc":"8362:54:19","nodeType":"YulExpressionStatement","src":"8362:54:19"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"7997:425:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"8054:3:19","nodeType":"YulTypedName","src":"8054:3:19","type":""},{"name":"length","nativeSrc":"8059:6:19","nodeType":"YulTypedName","src":"8059:6:19","type":""},{"name":"end","nativeSrc":"8067:3:19","nodeType":"YulTypedName","src":"8067:3:19","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8075:5:19","nodeType":"YulTypedName","src":"8075:5:19","type":""}],"src":"7997:425:19"},{"body":{"nativeSrc":"8504:278:19","nodeType":"YulBlock","src":"8504:278:19","statements":[{"body":{"nativeSrc":"8553:83:19","nodeType":"YulBlock","src":"8553:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8555:77:19","nodeType":"YulIdentifier","src":"8555:77:19"},"nativeSrc":"8555:79:19","nodeType":"YulFunctionCall","src":"8555:79:19"},"nativeSrc":"8555:79:19","nodeType":"YulExpressionStatement","src":"8555:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8532:6:19","nodeType":"YulIdentifier","src":"8532:6:19"},{"kind":"number","nativeSrc":"8540:4:19","nodeType":"YulLiteral","src":"8540:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"8528:3:19","nodeType":"YulIdentifier","src":"8528:3:19"},"nativeSrc":"8528:17:19","nodeType":"YulFunctionCall","src":"8528:17:19"},{"name":"end","nativeSrc":"8547:3:19","nodeType":"YulIdentifier","src":"8547:3:19"}],"functionName":{"name":"slt","nativeSrc":"8524:3:19","nodeType":"YulIdentifier","src":"8524:3:19"},"nativeSrc":"8524:27:19","nodeType":"YulFunctionCall","src":"8524:27:19"}],"functionName":{"name":"iszero","nativeSrc":"8517:6:19","nodeType":"YulIdentifier","src":"8517:6:19"},"nativeSrc":"8517:35:19","nodeType":"YulFunctionCall","src":"8517:35:19"},"nativeSrc":"8514:122:19","nodeType":"YulIf","src":"8514:122:19"},{"nativeSrc":"8645:34:19","nodeType":"YulVariableDeclaration","src":"8645:34:19","value":{"arguments":[{"name":"offset","nativeSrc":"8672:6:19","nodeType":"YulIdentifier","src":"8672:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"8659:12:19","nodeType":"YulIdentifier","src":"8659:12:19"},"nativeSrc":"8659:20:19","nodeType":"YulFunctionCall","src":"8659:20:19"},"variables":[{"name":"length","nativeSrc":"8649:6:19","nodeType":"YulTypedName","src":"8649:6:19","type":""}]},{"nativeSrc":"8688:88:19","nodeType":"YulAssignment","src":"8688:88:19","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"8749:6:19","nodeType":"YulIdentifier","src":"8749:6:19"},{"kind":"number","nativeSrc":"8757:4:19","nodeType":"YulLiteral","src":"8757:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"8745:3:19","nodeType":"YulIdentifier","src":"8745:3:19"},"nativeSrc":"8745:17:19","nodeType":"YulFunctionCall","src":"8745:17:19"},{"name":"length","nativeSrc":"8764:6:19","nodeType":"YulIdentifier","src":"8764:6:19"},{"name":"end","nativeSrc":"8772:3:19","nodeType":"YulIdentifier","src":"8772:3:19"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nativeSrc":"8697:47:19","nodeType":"YulIdentifier","src":"8697:47:19"},"nativeSrc":"8697:79:19","nodeType":"YulFunctionCall","src":"8697:79:19"},"variableNames":[{"name":"array","nativeSrc":"8688:5:19","nodeType":"YulIdentifier","src":"8688:5:19"}]}]},"name":"abi_decode_t_string_memory_ptr","nativeSrc":"8442:340:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"8482:6:19","nodeType":"YulTypedName","src":"8482:6:19","type":""},{"name":"end","nativeSrc":"8490:3:19","nodeType":"YulTypedName","src":"8490:3:19","type":""}],"returnVariables":[{"name":"array","nativeSrc":"8498:5:19","nodeType":"YulTypedName","src":"8498:5:19","type":""}],"src":"8442:340:19"},{"body":{"nativeSrc":"8908:859:19","nodeType":"YulBlock","src":"8908:859:19","statements":[{"body":{"nativeSrc":"8954:83:19","nodeType":"YulBlock","src":"8954:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8956:77:19","nodeType":"YulIdentifier","src":"8956:77:19"},"nativeSrc":"8956:79:19","nodeType":"YulFunctionCall","src":"8956:79:19"},"nativeSrc":"8956:79:19","nodeType":"YulExpressionStatement","src":"8956:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8929:7:19","nodeType":"YulIdentifier","src":"8929:7:19"},{"name":"headStart","nativeSrc":"8938:9:19","nodeType":"YulIdentifier","src":"8938:9:19"}],"functionName":{"name":"sub","nativeSrc":"8925:3:19","nodeType":"YulIdentifier","src":"8925:3:19"},"nativeSrc":"8925:23:19","nodeType":"YulFunctionCall","src":"8925:23:19"},{"kind":"number","nativeSrc":"8950:2:19","nodeType":"YulLiteral","src":"8950:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"8921:3:19","nodeType":"YulIdentifier","src":"8921:3:19"},"nativeSrc":"8921:32:19","nodeType":"YulFunctionCall","src":"8921:32:19"},"nativeSrc":"8918:119:19","nodeType":"YulIf","src":"8918:119:19"},{"nativeSrc":"9047:287:19","nodeType":"YulBlock","src":"9047:287:19","statements":[{"nativeSrc":"9062:45:19","nodeType":"YulVariableDeclaration","src":"9062:45:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9093:9:19","nodeType":"YulIdentifier","src":"9093:9:19"},{"kind":"number","nativeSrc":"9104:1:19","nodeType":"YulLiteral","src":"9104:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"9089:3:19","nodeType":"YulIdentifier","src":"9089:3:19"},"nativeSrc":"9089:17:19","nodeType":"YulFunctionCall","src":"9089:17:19"}],"functionName":{"name":"calldataload","nativeSrc":"9076:12:19","nodeType":"YulIdentifier","src":"9076:12:19"},"nativeSrc":"9076:31:19","nodeType":"YulFunctionCall","src":"9076:31:19"},"variables":[{"name":"offset","nativeSrc":"9066:6:19","nodeType":"YulTypedName","src":"9066:6:19","type":""}]},{"body":{"nativeSrc":"9154:83:19","nodeType":"YulBlock","src":"9154:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9156:77:19","nodeType":"YulIdentifier","src":"9156:77:19"},"nativeSrc":"9156:79:19","nodeType":"YulFunctionCall","src":"9156:79:19"},"nativeSrc":"9156:79:19","nodeType":"YulExpressionStatement","src":"9156:79:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9126:6:19","nodeType":"YulIdentifier","src":"9126:6:19"},{"kind":"number","nativeSrc":"9134:18:19","nodeType":"YulLiteral","src":"9134:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9123:2:19","nodeType":"YulIdentifier","src":"9123:2:19"},"nativeSrc":"9123:30:19","nodeType":"YulFunctionCall","src":"9123:30:19"},"nativeSrc":"9120:117:19","nodeType":"YulIf","src":"9120:117:19"},{"nativeSrc":"9251:73:19","nodeType":"YulAssignment","src":"9251:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9296:9:19","nodeType":"YulIdentifier","src":"9296:9:19"},{"name":"offset","nativeSrc":"9307:6:19","nodeType":"YulIdentifier","src":"9307:6:19"}],"functionName":{"name":"add","nativeSrc":"9292:3:19","nodeType":"YulIdentifier","src":"9292:3:19"},"nativeSrc":"9292:22:19","nodeType":"YulFunctionCall","src":"9292:22:19"},{"name":"dataEnd","nativeSrc":"9316:7:19","nodeType":"YulIdentifier","src":"9316:7:19"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"9261:30:19","nodeType":"YulIdentifier","src":"9261:30:19"},"nativeSrc":"9261:63:19","nodeType":"YulFunctionCall","src":"9261:63:19"},"variableNames":[{"name":"value0","nativeSrc":"9251:6:19","nodeType":"YulIdentifier","src":"9251:6:19"}]}]},{"nativeSrc":"9344:288:19","nodeType":"YulBlock","src":"9344:288:19","statements":[{"nativeSrc":"9359:46:19","nodeType":"YulVariableDeclaration","src":"9359:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9390:9:19","nodeType":"YulIdentifier","src":"9390:9:19"},{"kind":"number","nativeSrc":"9401:2:19","nodeType":"YulLiteral","src":"9401:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"9386:3:19","nodeType":"YulIdentifier","src":"9386:3:19"},"nativeSrc":"9386:18:19","nodeType":"YulFunctionCall","src":"9386:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"9373:12:19","nodeType":"YulIdentifier","src":"9373:12:19"},"nativeSrc":"9373:32:19","nodeType":"YulFunctionCall","src":"9373:32:19"},"variables":[{"name":"offset","nativeSrc":"9363:6:19","nodeType":"YulTypedName","src":"9363:6:19","type":""}]},{"body":{"nativeSrc":"9452:83:19","nodeType":"YulBlock","src":"9452:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"9454:77:19","nodeType":"YulIdentifier","src":"9454:77:19"},"nativeSrc":"9454:79:19","nodeType":"YulFunctionCall","src":"9454:79:19"},"nativeSrc":"9454:79:19","nodeType":"YulExpressionStatement","src":"9454:79:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"9424:6:19","nodeType":"YulIdentifier","src":"9424:6:19"},{"kind":"number","nativeSrc":"9432:18:19","nodeType":"YulLiteral","src":"9432:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9421:2:19","nodeType":"YulIdentifier","src":"9421:2:19"},"nativeSrc":"9421:30:19","nodeType":"YulFunctionCall","src":"9421:30:19"},"nativeSrc":"9418:117:19","nodeType":"YulIf","src":"9418:117:19"},{"nativeSrc":"9549:73:19","nodeType":"YulAssignment","src":"9549:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9594:9:19","nodeType":"YulIdentifier","src":"9594:9:19"},{"name":"offset","nativeSrc":"9605:6:19","nodeType":"YulIdentifier","src":"9605:6:19"}],"functionName":{"name":"add","nativeSrc":"9590:3:19","nodeType":"YulIdentifier","src":"9590:3:19"},"nativeSrc":"9590:22:19","nodeType":"YulFunctionCall","src":"9590:22:19"},{"name":"dataEnd","nativeSrc":"9614:7:19","nodeType":"YulIdentifier","src":"9614:7:19"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"9559:30:19","nodeType":"YulIdentifier","src":"9559:30:19"},"nativeSrc":"9559:63:19","nodeType":"YulFunctionCall","src":"9559:63:19"},"variableNames":[{"name":"value1","nativeSrc":"9549:6:19","nodeType":"YulIdentifier","src":"9549:6:19"}]}]},{"nativeSrc":"9642:118:19","nodeType":"YulBlock","src":"9642:118:19","statements":[{"nativeSrc":"9657:16:19","nodeType":"YulVariableDeclaration","src":"9657:16:19","value":{"kind":"number","nativeSrc":"9671:2:19","nodeType":"YulLiteral","src":"9671:2:19","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"9661:6:19","nodeType":"YulTypedName","src":"9661:6:19","type":""}]},{"nativeSrc":"9687:63:19","nodeType":"YulAssignment","src":"9687:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"9722:9:19","nodeType":"YulIdentifier","src":"9722:9:19"},{"name":"offset","nativeSrc":"9733:6:19","nodeType":"YulIdentifier","src":"9733:6:19"}],"functionName":{"name":"add","nativeSrc":"9718:3:19","nodeType":"YulIdentifier","src":"9718:3:19"},"nativeSrc":"9718:22:19","nodeType":"YulFunctionCall","src":"9718:22:19"},{"name":"dataEnd","nativeSrc":"9742:7:19","nodeType":"YulIdentifier","src":"9742:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"9697:20:19","nodeType":"YulIdentifier","src":"9697:20:19"},"nativeSrc":"9697:53:19","nodeType":"YulFunctionCall","src":"9697:53:19"},"variableNames":[{"name":"value2","nativeSrc":"9687:6:19","nodeType":"YulIdentifier","src":"9687:6:19"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256","nativeSrc":"8788:979:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8862:9:19","nodeType":"YulTypedName","src":"8862:9:19","type":""},{"name":"dataEnd","nativeSrc":"8873:7:19","nodeType":"YulTypedName","src":"8873:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8885:6:19","nodeType":"YulTypedName","src":"8885:6:19","type":""},{"name":"value1","nativeSrc":"8893:6:19","nodeType":"YulTypedName","src":"8893:6:19","type":""},{"name":"value2","nativeSrc":"8901:6:19","nodeType":"YulTypedName","src":"8901:6:19","type":""}],"src":"8788:979:19"},{"body":{"nativeSrc":"9873:40:19","nodeType":"YulBlock","src":"9873:40:19","statements":[{"nativeSrc":"9884:22:19","nodeType":"YulAssignment","src":"9884:22:19","value":{"arguments":[{"name":"value","nativeSrc":"9900:5:19","nodeType":"YulIdentifier","src":"9900:5:19"}],"functionName":{"name":"mload","nativeSrc":"9894:5:19","nodeType":"YulIdentifier","src":"9894:5:19"},"nativeSrc":"9894:12:19","nodeType":"YulFunctionCall","src":"9894:12:19"},"variableNames":[{"name":"length","nativeSrc":"9884:6:19","nodeType":"YulIdentifier","src":"9884:6:19"}]}]},"name":"array_length_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr","nativeSrc":"9773:140:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"9856:5:19","nodeType":"YulTypedName","src":"9856:5:19","type":""}],"returnVariables":[{"name":"length","nativeSrc":"9866:6:19","nodeType":"YulTypedName","src":"9866:6:19","type":""}],"src":"9773:140:19"},{"body":{"nativeSrc":"10056:73:19","nodeType":"YulBlock","src":"10056:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"10073:3:19","nodeType":"YulIdentifier","src":"10073:3:19"},{"name":"length","nativeSrc":"10078:6:19","nodeType":"YulIdentifier","src":"10078:6:19"}],"functionName":{"name":"mstore","nativeSrc":"10066:6:19","nodeType":"YulIdentifier","src":"10066:6:19"},"nativeSrc":"10066:19:19","nodeType":"YulFunctionCall","src":"10066:19:19"},"nativeSrc":"10066:19:19","nodeType":"YulExpressionStatement","src":"10066:19:19"},{"nativeSrc":"10094:29:19","nodeType":"YulAssignment","src":"10094:29:19","value":{"arguments":[{"name":"pos","nativeSrc":"10113:3:19","nodeType":"YulIdentifier","src":"10113:3:19"},{"kind":"number","nativeSrc":"10118:4:19","nodeType":"YulLiteral","src":"10118:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10109:3:19","nodeType":"YulIdentifier","src":"10109:3:19"},"nativeSrc":"10109:14:19","nodeType":"YulFunctionCall","src":"10109:14:19"},"variableNames":[{"name":"updated_pos","nativeSrc":"10094:11:19","nodeType":"YulIdentifier","src":"10094:11:19"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"9919:210:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"10028:3:19","nodeType":"YulTypedName","src":"10028:3:19","type":""},{"name":"length","nativeSrc":"10033:6:19","nodeType":"YulTypedName","src":"10033:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"10044:11:19","nodeType":"YulTypedName","src":"10044:11:19","type":""}],"src":"9919:210:19"},{"body":{"nativeSrc":"10233:60:19","nodeType":"YulBlock","src":"10233:60:19","statements":[{"nativeSrc":"10243:11:19","nodeType":"YulAssignment","src":"10243:11:19","value":{"name":"ptr","nativeSrc":"10251:3:19","nodeType":"YulIdentifier","src":"10251:3:19"},"variableNames":[{"name":"data","nativeSrc":"10243:4:19","nodeType":"YulIdentifier","src":"10243:4:19"}]},{"nativeSrc":"10264:22:19","nodeType":"YulAssignment","src":"10264:22:19","value":{"arguments":[{"name":"ptr","nativeSrc":"10276:3:19","nodeType":"YulIdentifier","src":"10276:3:19"},{"kind":"number","nativeSrc":"10281:4:19","nodeType":"YulLiteral","src":"10281:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10272:3:19","nodeType":"YulIdentifier","src":"10272:3:19"},"nativeSrc":"10272:14:19","nodeType":"YulFunctionCall","src":"10272:14:19"},"variableNames":[{"name":"data","nativeSrc":"10264:4:19","nodeType":"YulIdentifier","src":"10264:4:19"}]}]},"name":"array_dataslot_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr","nativeSrc":"10135:158:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"10220:3:19","nodeType":"YulTypedName","src":"10220:3:19","type":""}],"returnVariables":[{"name":"data","nativeSrc":"10228:4:19","nodeType":"YulTypedName","src":"10228:4:19","type":""}],"src":"10135:158:19"},{"body":{"nativeSrc":"10465:1281:19","nodeType":"YulBlock","src":"10465:1281:19","statements":[{"nativeSrc":"10475:26:19","nodeType":"YulVariableDeclaration","src":"10475:26:19","value":{"arguments":[{"name":"pos","nativeSrc":"10491:3:19","nodeType":"YulIdentifier","src":"10491:3:19"},{"kind":"number","nativeSrc":"10496:4:19","nodeType":"YulLiteral","src":"10496:4:19","type":"","value":"0xc0"}],"functionName":{"name":"add","nativeSrc":"10487:3:19","nodeType":"YulIdentifier","src":"10487:3:19"},"nativeSrc":"10487:14:19","nodeType":"YulFunctionCall","src":"10487:14:19"},"variables":[{"name":"tail","nativeSrc":"10479:4:19","nodeType":"YulTypedName","src":"10479:4:19","type":""}]},{"nativeSrc":"10511:236:19","nodeType":"YulBlock","src":"10511:236:19","statements":[{"nativeSrc":"10547:43:19","nodeType":"YulVariableDeclaration","src":"10547:43:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10577:5:19","nodeType":"YulIdentifier","src":"10577:5:19"},{"kind":"number","nativeSrc":"10584:4:19","nodeType":"YulLiteral","src":"10584:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"10573:3:19","nodeType":"YulIdentifier","src":"10573:3:19"},"nativeSrc":"10573:16:19","nodeType":"YulFunctionCall","src":"10573:16:19"}],"functionName":{"name":"mload","nativeSrc":"10567:5:19","nodeType":"YulIdentifier","src":"10567:5:19"},"nativeSrc":"10567:23:19","nodeType":"YulFunctionCall","src":"10567:23:19"},"variables":[{"name":"memberValue0","nativeSrc":"10551:12:19","nodeType":"YulTypedName","src":"10551:12:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"10615:3:19","nodeType":"YulIdentifier","src":"10615:3:19"},{"kind":"number","nativeSrc":"10620:4:19","nodeType":"YulLiteral","src":"10620:4:19","type":"","value":"0x00"}],"functionName":{"name":"add","nativeSrc":"10611:3:19","nodeType":"YulIdentifier","src":"10611:3:19"},"nativeSrc":"10611:14:19","nodeType":"YulFunctionCall","src":"10611:14:19"},{"arguments":[{"name":"tail","nativeSrc":"10631:4:19","nodeType":"YulIdentifier","src":"10631:4:19"},{"name":"pos","nativeSrc":"10637:3:19","nodeType":"YulIdentifier","src":"10637:3:19"}],"functionName":{"name":"sub","nativeSrc":"10627:3:19","nodeType":"YulIdentifier","src":"10627:3:19"},"nativeSrc":"10627:14:19","nodeType":"YulFunctionCall","src":"10627:14:19"}],"functionName":{"name":"mstore","nativeSrc":"10604:6:19","nodeType":"YulIdentifier","src":"10604:6:19"},"nativeSrc":"10604:38:19","nodeType":"YulFunctionCall","src":"10604:38:19"},"nativeSrc":"10604:38:19","nodeType":"YulExpressionStatement","src":"10604:38:19"},{"nativeSrc":"10655:81:19","nodeType":"YulAssignment","src":"10655:81:19","value":{"arguments":[{"name":"memberValue0","nativeSrc":"10717:12:19","nodeType":"YulIdentifier","src":"10717:12:19"},{"name":"tail","nativeSrc":"10731:4:19","nodeType":"YulIdentifier","src":"10731:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"10663:53:19","nodeType":"YulIdentifier","src":"10663:53:19"},"nativeSrc":"10663:73:19","nodeType":"YulFunctionCall","src":"10663:73:19"},"variableNames":[{"name":"tail","nativeSrc":"10655:4:19","nodeType":"YulIdentifier","src":"10655:4:19"}]}]},{"nativeSrc":"10757:242:19","nodeType":"YulBlock","src":"10757:242:19","statements":[{"nativeSrc":"10799:43:19","nodeType":"YulVariableDeclaration","src":"10799:43:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"10829:5:19","nodeType":"YulIdentifier","src":"10829:5:19"},{"kind":"number","nativeSrc":"10836:4:19","nodeType":"YulLiteral","src":"10836:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10825:3:19","nodeType":"YulIdentifier","src":"10825:3:19"},"nativeSrc":"10825:16:19","nodeType":"YulFunctionCall","src":"10825:16:19"}],"functionName":{"name":"mload","nativeSrc":"10819:5:19","nodeType":"YulIdentifier","src":"10819:5:19"},"nativeSrc":"10819:23:19","nodeType":"YulFunctionCall","src":"10819:23:19"},"variables":[{"name":"memberValue0","nativeSrc":"10803:12:19","nodeType":"YulTypedName","src":"10803:12:19","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nativeSrc":"10867:3:19","nodeType":"YulIdentifier","src":"10867:3:19"},{"kind":"number","nativeSrc":"10872:4:19","nodeType":"YulLiteral","src":"10872:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10863:3:19","nodeType":"YulIdentifier","src":"10863:3:19"},"nativeSrc":"10863:14:19","nodeType":"YulFunctionCall","src":"10863:14:19"},{"arguments":[{"name":"tail","nativeSrc":"10883:4:19","nodeType":"YulIdentifier","src":"10883:4:19"},{"name":"pos","nativeSrc":"10889:3:19","nodeType":"YulIdentifier","src":"10889:3:19"}],"functionName":{"name":"sub","nativeSrc":"10879:3:19","nodeType":"YulIdentifier","src":"10879:3:19"},"nativeSrc":"10879:14:19","nodeType":"YulFunctionCall","src":"10879:14:19"}],"functionName":{"name":"mstore","nativeSrc":"10856:6:19","nodeType":"YulIdentifier","src":"10856:6:19"},"nativeSrc":"10856:38:19","nodeType":"YulFunctionCall","src":"10856:38:19"},"nativeSrc":"10856:38:19","nodeType":"YulExpressionStatement","src":"10856:38:19"},{"nativeSrc":"10907:81:19","nodeType":"YulAssignment","src":"10907:81:19","value":{"arguments":[{"name":"memberValue0","nativeSrc":"10969:12:19","nodeType":"YulIdentifier","src":"10969:12:19"},{"name":"tail","nativeSrc":"10983:4:19","nodeType":"YulIdentifier","src":"10983:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nativeSrc":"10915:53:19","nodeType":"YulIdentifier","src":"10915:53:19"},"nativeSrc":"10915:73:19","nodeType":"YulFunctionCall","src":"10915:73:19"},"variableNames":[{"name":"tail","nativeSrc":"10907:4:19","nodeType":"YulIdentifier","src":"10907:4:19"}]}]},{"nativeSrc":"11009:169:19","nodeType":"YulBlock","src":"11009:169:19","statements":[{"nativeSrc":"11049:43:19","nodeType":"YulVariableDeclaration","src":"11049:43:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11079:5:19","nodeType":"YulIdentifier","src":"11079:5:19"},{"kind":"number","nativeSrc":"11086:4:19","nodeType":"YulLiteral","src":"11086:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"11075:3:19","nodeType":"YulIdentifier","src":"11075:3:19"},"nativeSrc":"11075:16:19","nodeType":"YulFunctionCall","src":"11075:16:19"}],"functionName":{"name":"mload","nativeSrc":"11069:5:19","nodeType":"YulIdentifier","src":"11069:5:19"},"nativeSrc":"11069:23:19","nodeType":"YulFunctionCall","src":"11069:23:19"},"variables":[{"name":"memberValue0","nativeSrc":"11053:12:19","nodeType":"YulTypedName","src":"11053:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"11139:12:19","nodeType":"YulIdentifier","src":"11139:12:19"},{"arguments":[{"name":"pos","nativeSrc":"11157:3:19","nodeType":"YulIdentifier","src":"11157:3:19"},{"kind":"number","nativeSrc":"11162:4:19","nodeType":"YulLiteral","src":"11162:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"11153:3:19","nodeType":"YulIdentifier","src":"11153:3:19"},"nativeSrc":"11153:14:19","nodeType":"YulFunctionCall","src":"11153:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"11105:33:19","nodeType":"YulIdentifier","src":"11105:33:19"},"nativeSrc":"11105:63:19","nodeType":"YulFunctionCall","src":"11105:63:19"},"nativeSrc":"11105:63:19","nodeType":"YulExpressionStatement","src":"11105:63:19"}]},{"nativeSrc":"11188:169:19","nodeType":"YulBlock","src":"11188:169:19","statements":[{"nativeSrc":"11228:43:19","nodeType":"YulVariableDeclaration","src":"11228:43:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11258:5:19","nodeType":"YulIdentifier","src":"11258:5:19"},{"kind":"number","nativeSrc":"11265:4:19","nodeType":"YulLiteral","src":"11265:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"11254:3:19","nodeType":"YulIdentifier","src":"11254:3:19"},"nativeSrc":"11254:16:19","nodeType":"YulFunctionCall","src":"11254:16:19"}],"functionName":{"name":"mload","nativeSrc":"11248:5:19","nodeType":"YulIdentifier","src":"11248:5:19"},"nativeSrc":"11248:23:19","nodeType":"YulFunctionCall","src":"11248:23:19"},"variables":[{"name":"memberValue0","nativeSrc":"11232:12:19","nodeType":"YulTypedName","src":"11232:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"11318:12:19","nodeType":"YulIdentifier","src":"11318:12:19"},{"arguments":[{"name":"pos","nativeSrc":"11336:3:19","nodeType":"YulIdentifier","src":"11336:3:19"},{"kind":"number","nativeSrc":"11341:4:19","nodeType":"YulLiteral","src":"11341:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"11332:3:19","nodeType":"YulIdentifier","src":"11332:3:19"},"nativeSrc":"11332:14:19","nodeType":"YulFunctionCall","src":"11332:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"11284:33:19","nodeType":"YulIdentifier","src":"11284:33:19"},"nativeSrc":"11284:63:19","nodeType":"YulFunctionCall","src":"11284:63:19"},"nativeSrc":"11284:63:19","nodeType":"YulExpressionStatement","src":"11284:63:19"}]},{"nativeSrc":"11367:167:19","nodeType":"YulBlock","src":"11367:167:19","statements":[{"nativeSrc":"11405:43:19","nodeType":"YulVariableDeclaration","src":"11405:43:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11435:5:19","nodeType":"YulIdentifier","src":"11435:5:19"},{"kind":"number","nativeSrc":"11442:4:19","nodeType":"YulLiteral","src":"11442:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"11431:3:19","nodeType":"YulIdentifier","src":"11431:3:19"},"nativeSrc":"11431:16:19","nodeType":"YulFunctionCall","src":"11431:16:19"}],"functionName":{"name":"mload","nativeSrc":"11425:5:19","nodeType":"YulIdentifier","src":"11425:5:19"},"nativeSrc":"11425:23:19","nodeType":"YulFunctionCall","src":"11425:23:19"},"variables":[{"name":"memberValue0","nativeSrc":"11409:12:19","nodeType":"YulTypedName","src":"11409:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"11495:12:19","nodeType":"YulIdentifier","src":"11495:12:19"},{"arguments":[{"name":"pos","nativeSrc":"11513:3:19","nodeType":"YulIdentifier","src":"11513:3:19"},{"kind":"number","nativeSrc":"11518:4:19","nodeType":"YulLiteral","src":"11518:4:19","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"11509:3:19","nodeType":"YulIdentifier","src":"11509:3:19"},"nativeSrc":"11509:14:19","nodeType":"YulFunctionCall","src":"11509:14:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nativeSrc":"11461:33:19","nodeType":"YulIdentifier","src":"11461:33:19"},"nativeSrc":"11461:63:19","nodeType":"YulFunctionCall","src":"11461:63:19"},"nativeSrc":"11461:63:19","nodeType":"YulExpressionStatement","src":"11461:63:19"}]},{"nativeSrc":"11544:175:19","nodeType":"YulBlock","src":"11544:175:19","statements":[{"nativeSrc":"11581:43:19","nodeType":"YulVariableDeclaration","src":"11581:43:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"11611:5:19","nodeType":"YulIdentifier","src":"11611:5:19"},{"kind":"number","nativeSrc":"11618:4:19","nodeType":"YulLiteral","src":"11618:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"11607:3:19","nodeType":"YulIdentifier","src":"11607:3:19"},"nativeSrc":"11607:16:19","nodeType":"YulFunctionCall","src":"11607:16:19"}],"functionName":{"name":"mload","nativeSrc":"11601:5:19","nodeType":"YulIdentifier","src":"11601:5:19"},"nativeSrc":"11601:23:19","nodeType":"YulFunctionCall","src":"11601:23:19"},"variables":[{"name":"memberValue0","nativeSrc":"11585:12:19","nodeType":"YulTypedName","src":"11585:12:19","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nativeSrc":"11680:12:19","nodeType":"YulIdentifier","src":"11680:12:19"},{"arguments":[{"name":"pos","nativeSrc":"11698:3:19","nodeType":"YulIdentifier","src":"11698:3:19"},{"kind":"number","nativeSrc":"11703:4:19","nodeType":"YulLiteral","src":"11703:4:19","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"11694:3:19","nodeType":"YulIdentifier","src":"11694:3:19"},"nativeSrc":"11694:14:19","nodeType":"YulFunctionCall","src":"11694:14:19"}],"functionName":{"name":"abi_encode_t_enum$_Status_$6813_to_t_uint8","nativeSrc":"11637:42:19","nodeType":"YulIdentifier","src":"11637:42:19"},"nativeSrc":"11637:72:19","nodeType":"YulFunctionCall","src":"11637:72:19"},"nativeSrc":"11637:72:19","nodeType":"YulExpressionStatement","src":"11637:72:19"}]},{"nativeSrc":"11729:11:19","nodeType":"YulAssignment","src":"11729:11:19","value":{"name":"tail","nativeSrc":"11736:4:19","nodeType":"YulIdentifier","src":"11736:4:19"},"variableNames":[{"name":"end","nativeSrc":"11729:3:19","nodeType":"YulIdentifier","src":"11729:3:19"}]}]},"name":"abi_encode_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr","nativeSrc":"10349:1397:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"10444:5:19","nodeType":"YulTypedName","src":"10444:5:19","type":""},{"name":"pos","nativeSrc":"10451:3:19","nodeType":"YulTypedName","src":"10451:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"10460:3:19","nodeType":"YulTypedName","src":"10460:3:19","type":""}],"src":"10349:1397:19"},{"body":{"nativeSrc":"11884:128:19","nodeType":"YulBlock","src":"11884:128:19","statements":[{"nativeSrc":"11894:112:19","nodeType":"YulAssignment","src":"11894:112:19","value":{"arguments":[{"name":"value0","nativeSrc":"11994:6:19","nodeType":"YulIdentifier","src":"11994:6:19"},{"name":"pos","nativeSrc":"12002:3:19","nodeType":"YulIdentifier","src":"12002:3:19"}],"functionName":{"name":"abi_encode_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr","nativeSrc":"11908:85:19","nodeType":"YulIdentifier","src":"11908:85:19"},"nativeSrc":"11908:98:19","nodeType":"YulFunctionCall","src":"11908:98:19"},"variableNames":[{"name":"updatedPos","nativeSrc":"11894:10:19","nodeType":"YulIdentifier","src":"11894:10:19"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr","nativeSrc":"11752:260:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nativeSrc":"11857:6:19","nodeType":"YulTypedName","src":"11857:6:19","type":""},{"name":"pos","nativeSrc":"11865:3:19","nodeType":"YulTypedName","src":"11865:3:19","type":""}],"returnVariables":[{"name":"updatedPos","nativeSrc":"11873:10:19","nodeType":"YulTypedName","src":"11873:10:19","type":""}],"src":"11752:260:19"},{"body":{"nativeSrc":"12119:38:19","nodeType":"YulBlock","src":"12119:38:19","statements":[{"nativeSrc":"12129:22:19","nodeType":"YulAssignment","src":"12129:22:19","value":{"arguments":[{"name":"ptr","nativeSrc":"12141:3:19","nodeType":"YulIdentifier","src":"12141:3:19"},{"kind":"number","nativeSrc":"12146:4:19","nodeType":"YulLiteral","src":"12146:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"12137:3:19","nodeType":"YulIdentifier","src":"12137:3:19"},"nativeSrc":"12137:14:19","nodeType":"YulFunctionCall","src":"12137:14:19"},"variableNames":[{"name":"next","nativeSrc":"12129:4:19","nodeType":"YulIdentifier","src":"12129:4:19"}]}]},"name":"array_nextElement_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr","nativeSrc":"12018:139:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"12106:3:19","nodeType":"YulTypedName","src":"12106:3:19","type":""}],"returnVariables":[{"name":"next","nativeSrc":"12114:4:19","nodeType":"YulTypedName","src":"12114:4:19","type":""}],"src":"12018:139:19"},{"body":{"nativeSrc":"12393:943:19","nodeType":"YulBlock","src":"12393:943:19","statements":[{"nativeSrc":"12403:94:19","nodeType":"YulVariableDeclaration","src":"12403:94:19","value":{"arguments":[{"name":"value","nativeSrc":"12491:5:19","nodeType":"YulIdentifier","src":"12491:5:19"}],"functionName":{"name":"array_length_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr","nativeSrc":"12417:73:19","nodeType":"YulIdentifier","src":"12417:73:19"},"nativeSrc":"12417:80:19","nodeType":"YulFunctionCall","src":"12417:80:19"},"variables":[{"name":"length","nativeSrc":"12407:6:19","nodeType":"YulTypedName","src":"12407:6:19","type":""}]},{"nativeSrc":"12506:119:19","nodeType":"YulAssignment","src":"12506:119:19","value":{"arguments":[{"name":"pos","nativeSrc":"12613:3:19","nodeType":"YulIdentifier","src":"12613:3:19"},{"name":"length","nativeSrc":"12618:6:19","nodeType":"YulIdentifier","src":"12618:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"12513:99:19","nodeType":"YulIdentifier","src":"12513:99:19"},"nativeSrc":"12513:112:19","nodeType":"YulFunctionCall","src":"12513:112:19"},"variableNames":[{"name":"pos","nativeSrc":"12506:3:19","nodeType":"YulIdentifier","src":"12506:3:19"}]},{"nativeSrc":"12634:20:19","nodeType":"YulVariableDeclaration","src":"12634:20:19","value":{"name":"pos","nativeSrc":"12651:3:19","nodeType":"YulIdentifier","src":"12651:3:19"},"variables":[{"name":"headStart","nativeSrc":"12638:9:19","nodeType":"YulTypedName","src":"12638:9:19","type":""}]},{"nativeSrc":"12663:39:19","nodeType":"YulVariableDeclaration","src":"12663:39:19","value":{"arguments":[{"name":"pos","nativeSrc":"12679:3:19","nodeType":"YulIdentifier","src":"12679:3:19"},{"arguments":[{"name":"length","nativeSrc":"12688:6:19","nodeType":"YulIdentifier","src":"12688:6:19"},{"kind":"number","nativeSrc":"12696:4:19","nodeType":"YulLiteral","src":"12696:4:19","type":"","value":"0x20"}],"functionName":{"name":"mul","nativeSrc":"12684:3:19","nodeType":"YulIdentifier","src":"12684:3:19"},"nativeSrc":"12684:17:19","nodeType":"YulFunctionCall","src":"12684:17:19"}],"functionName":{"name":"add","nativeSrc":"12675:3:19","nodeType":"YulIdentifier","src":"12675:3:19"},"nativeSrc":"12675:27:19","nodeType":"YulFunctionCall","src":"12675:27:19"},"variables":[{"name":"tail","nativeSrc":"12667:4:19","nodeType":"YulTypedName","src":"12667:4:19","type":""}]},{"nativeSrc":"12711:97:19","nodeType":"YulVariableDeclaration","src":"12711:97:19","value":{"arguments":[{"name":"value","nativeSrc":"12802:5:19","nodeType":"YulIdentifier","src":"12802:5:19"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr","nativeSrc":"12726:75:19","nodeType":"YulIdentifier","src":"12726:75:19"},"nativeSrc":"12726:82:19","nodeType":"YulFunctionCall","src":"12726:82:19"},"variables":[{"name":"baseRef","nativeSrc":"12715:7:19","nodeType":"YulTypedName","src":"12715:7:19","type":""}]},{"nativeSrc":"12817:21:19","nodeType":"YulVariableDeclaration","src":"12817:21:19","value":{"name":"baseRef","nativeSrc":"12831:7:19","nodeType":"YulIdentifier","src":"12831:7:19"},"variables":[{"name":"srcPtr","nativeSrc":"12821:6:19","nodeType":"YulTypedName","src":"12821:6:19","type":""}]},{"body":{"nativeSrc":"12907:384:19","nodeType":"YulBlock","src":"12907:384:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"12928:3:19","nodeType":"YulIdentifier","src":"12928:3:19"},{"arguments":[{"name":"tail","nativeSrc":"12937:4:19","nodeType":"YulIdentifier","src":"12937:4:19"},{"name":"headStart","nativeSrc":"12943:9:19","nodeType":"YulIdentifier","src":"12943:9:19"}],"functionName":{"name":"sub","nativeSrc":"12933:3:19","nodeType":"YulIdentifier","src":"12933:3:19"},"nativeSrc":"12933:20:19","nodeType":"YulFunctionCall","src":"12933:20:19"}],"functionName":{"name":"mstore","nativeSrc":"12921:6:19","nodeType":"YulIdentifier","src":"12921:6:19"},"nativeSrc":"12921:33:19","nodeType":"YulFunctionCall","src":"12921:33:19"},"nativeSrc":"12921:33:19","nodeType":"YulExpressionStatement","src":"12921:33:19"},{"nativeSrc":"12967:34:19","nodeType":"YulVariableDeclaration","src":"12967:34:19","value":{"arguments":[{"name":"srcPtr","nativeSrc":"12994:6:19","nodeType":"YulIdentifier","src":"12994:6:19"}],"functionName":{"name":"mload","nativeSrc":"12988:5:19","nodeType":"YulIdentifier","src":"12988:5:19"},"nativeSrc":"12988:13:19","nodeType":"YulFunctionCall","src":"12988:13:19"},"variables":[{"name":"elementValue0","nativeSrc":"12971:13:19","nodeType":"YulTypedName","src":"12971:13:19","type":""}]},{"nativeSrc":"13014:124:19","nodeType":"YulAssignment","src":"13014:124:19","value":{"arguments":[{"name":"elementValue0","nativeSrc":"13118:13:19","nodeType":"YulIdentifier","src":"13118:13:19"},{"name":"tail","nativeSrc":"13133:4:19","nodeType":"YulIdentifier","src":"13133:4:19"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr","nativeSrc":"13022:95:19","nodeType":"YulIdentifier","src":"13022:95:19"},"nativeSrc":"13022:116:19","nodeType":"YulFunctionCall","src":"13022:116:19"},"variableNames":[{"name":"tail","nativeSrc":"13014:4:19","nodeType":"YulIdentifier","src":"13014:4:19"}]},{"nativeSrc":"13151:96:19","nodeType":"YulAssignment","src":"13151:96:19","value":{"arguments":[{"name":"srcPtr","nativeSrc":"13240:6:19","nodeType":"YulIdentifier","src":"13240:6:19"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr","nativeSrc":"13161:78:19","nodeType":"YulIdentifier","src":"13161:78:19"},"nativeSrc":"13161:86:19","nodeType":"YulFunctionCall","src":"13161:86:19"},"variableNames":[{"name":"srcPtr","nativeSrc":"13151:6:19","nodeType":"YulIdentifier","src":"13151:6:19"}]},{"nativeSrc":"13260:21:19","nodeType":"YulAssignment","src":"13260:21:19","value":{"arguments":[{"name":"pos","nativeSrc":"13271:3:19","nodeType":"YulIdentifier","src":"13271:3:19"},{"kind":"number","nativeSrc":"13276:4:19","nodeType":"YulLiteral","src":"13276:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13267:3:19","nodeType":"YulIdentifier","src":"13267:3:19"},"nativeSrc":"13267:14:19","nodeType":"YulFunctionCall","src":"13267:14:19"},"variableNames":[{"name":"pos","nativeSrc":"13260:3:19","nodeType":"YulIdentifier","src":"13260:3:19"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"12869:1:19","nodeType":"YulIdentifier","src":"12869:1:19"},{"name":"length","nativeSrc":"12872:6:19","nodeType":"YulIdentifier","src":"12872:6:19"}],"functionName":{"name":"lt","nativeSrc":"12866:2:19","nodeType":"YulIdentifier","src":"12866:2:19"},"nativeSrc":"12866:13:19","nodeType":"YulFunctionCall","src":"12866:13:19"},"nativeSrc":"12847:444:19","nodeType":"YulForLoop","post":{"nativeSrc":"12880:18:19","nodeType":"YulBlock","src":"12880:18:19","statements":[{"nativeSrc":"12882:14:19","nodeType":"YulAssignment","src":"12882:14:19","value":{"arguments":[{"name":"i","nativeSrc":"12891:1:19","nodeType":"YulIdentifier","src":"12891:1:19"},{"kind":"number","nativeSrc":"12894:1:19","nodeType":"YulLiteral","src":"12894:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"12887:3:19","nodeType":"YulIdentifier","src":"12887:3:19"},"nativeSrc":"12887:9:19","nodeType":"YulFunctionCall","src":"12887:9:19"},"variableNames":[{"name":"i","nativeSrc":"12882:1:19","nodeType":"YulIdentifier","src":"12882:1:19"}]}]},"pre":{"nativeSrc":"12851:14:19","nodeType":"YulBlock","src":"12851:14:19","statements":[{"nativeSrc":"12853:10:19","nodeType":"YulVariableDeclaration","src":"12853:10:19","value":{"kind":"number","nativeSrc":"12862:1:19","nodeType":"YulLiteral","src":"12862:1:19","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"12857:1:19","nodeType":"YulTypedName","src":"12857:1:19","type":""}]}]},"src":"12847:444:19"},{"nativeSrc":"13300:11:19","nodeType":"YulAssignment","src":"13300:11:19","value":{"name":"tail","nativeSrc":"13307:4:19","nodeType":"YulIdentifier","src":"13307:4:19"},"variableNames":[{"name":"pos","nativeSrc":"13300:3:19","nodeType":"YulIdentifier","src":"13300:3:19"}]},{"nativeSrc":"13320:10:19","nodeType":"YulAssignment","src":"13320:10:19","value":{"name":"pos","nativeSrc":"13327:3:19","nodeType":"YulIdentifier","src":"13327:3:19"},"variableNames":[{"name":"end","nativeSrc":"13320:3:19","nodeType":"YulIdentifier","src":"13320:3:19"}]}]},"name":"abi_encode_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"12217:1119:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"12372:5:19","nodeType":"YulTypedName","src":"12372:5:19","type":""},{"name":"pos","nativeSrc":"12379:3:19","nodeType":"YulTypedName","src":"12379:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"12388:3:19","nodeType":"YulTypedName","src":"12388:3:19","type":""}],"src":"12217:1119:19"},{"body":{"nativeSrc":"13542:277:19","nodeType":"YulBlock","src":"13542:277:19","statements":[{"nativeSrc":"13552:26:19","nodeType":"YulAssignment","src":"13552:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"13564:9:19","nodeType":"YulIdentifier","src":"13564:9:19"},{"kind":"number","nativeSrc":"13575:2:19","nodeType":"YulLiteral","src":"13575:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"13560:3:19","nodeType":"YulIdentifier","src":"13560:3:19"},"nativeSrc":"13560:18:19","nodeType":"YulFunctionCall","src":"13560:18:19"},"variableNames":[{"name":"tail","nativeSrc":"13552:4:19","nodeType":"YulIdentifier","src":"13552:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"13599:9:19","nodeType":"YulIdentifier","src":"13599:9:19"},{"kind":"number","nativeSrc":"13610:1:19","nodeType":"YulLiteral","src":"13610:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"13595:3:19","nodeType":"YulIdentifier","src":"13595:3:19"},"nativeSrc":"13595:17:19","nodeType":"YulFunctionCall","src":"13595:17:19"},{"arguments":[{"name":"tail","nativeSrc":"13618:4:19","nodeType":"YulIdentifier","src":"13618:4:19"},{"name":"headStart","nativeSrc":"13624:9:19","nodeType":"YulIdentifier","src":"13624:9:19"}],"functionName":{"name":"sub","nativeSrc":"13614:3:19","nodeType":"YulIdentifier","src":"13614:3:19"},"nativeSrc":"13614:20:19","nodeType":"YulFunctionCall","src":"13614:20:19"}],"functionName":{"name":"mstore","nativeSrc":"13588:6:19","nodeType":"YulIdentifier","src":"13588:6:19"},"nativeSrc":"13588:47:19","nodeType":"YulFunctionCall","src":"13588:47:19"},"nativeSrc":"13588:47:19","nodeType":"YulExpressionStatement","src":"13588:47:19"},{"nativeSrc":"13644:168:19","nodeType":"YulAssignment","src":"13644:168:19","value":{"arguments":[{"name":"value0","nativeSrc":"13798:6:19","nodeType":"YulIdentifier","src":"13798:6:19"},{"name":"tail","nativeSrc":"13807:4:19","nodeType":"YulIdentifier","src":"13807:4:19"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_fromStack","nativeSrc":"13652:145:19","nodeType":"YulIdentifier","src":"13652:145:19"},"nativeSrc":"13652:160:19","nodeType":"YulFunctionCall","src":"13652:160:19"},"variableNames":[{"name":"tail","nativeSrc":"13644:4:19","nodeType":"YulIdentifier","src":"13644:4:19"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nativeSrc":"13342:477:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13514:9:19","nodeType":"YulTypedName","src":"13514:9:19","type":""},{"name":"value0","nativeSrc":"13526:6:19","nodeType":"YulTypedName","src":"13526:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"13537:4:19","nodeType":"YulTypedName","src":"13537:4:19","type":""}],"src":"13342:477:19"},{"body":{"nativeSrc":"13945:859:19","nodeType":"YulBlock","src":"13945:859:19","statements":[{"body":{"nativeSrc":"13991:83:19","nodeType":"YulBlock","src":"13991:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"13993:77:19","nodeType":"YulIdentifier","src":"13993:77:19"},"nativeSrc":"13993:79:19","nodeType":"YulFunctionCall","src":"13993:79:19"},"nativeSrc":"13993:79:19","nodeType":"YulExpressionStatement","src":"13993:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"13966:7:19","nodeType":"YulIdentifier","src":"13966:7:19"},{"name":"headStart","nativeSrc":"13975:9:19","nodeType":"YulIdentifier","src":"13975:9:19"}],"functionName":{"name":"sub","nativeSrc":"13962:3:19","nodeType":"YulIdentifier","src":"13962:3:19"},"nativeSrc":"13962:23:19","nodeType":"YulFunctionCall","src":"13962:23:19"},{"kind":"number","nativeSrc":"13987:2:19","nodeType":"YulLiteral","src":"13987:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"13958:3:19","nodeType":"YulIdentifier","src":"13958:3:19"},"nativeSrc":"13958:32:19","nodeType":"YulFunctionCall","src":"13958:32:19"},"nativeSrc":"13955:119:19","nodeType":"YulIf","src":"13955:119:19"},{"nativeSrc":"14084:117:19","nodeType":"YulBlock","src":"14084:117:19","statements":[{"nativeSrc":"14099:15:19","nodeType":"YulVariableDeclaration","src":"14099:15:19","value":{"kind":"number","nativeSrc":"14113:1:19","nodeType":"YulLiteral","src":"14113:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"14103:6:19","nodeType":"YulTypedName","src":"14103:6:19","type":""}]},{"nativeSrc":"14128:63:19","nodeType":"YulAssignment","src":"14128:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14163:9:19","nodeType":"YulIdentifier","src":"14163:9:19"},{"name":"offset","nativeSrc":"14174:6:19","nodeType":"YulIdentifier","src":"14174:6:19"}],"functionName":{"name":"add","nativeSrc":"14159:3:19","nodeType":"YulIdentifier","src":"14159:3:19"},"nativeSrc":"14159:22:19","nodeType":"YulFunctionCall","src":"14159:22:19"},{"name":"dataEnd","nativeSrc":"14183:7:19","nodeType":"YulIdentifier","src":"14183:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"14138:20:19","nodeType":"YulIdentifier","src":"14138:20:19"},"nativeSrc":"14138:53:19","nodeType":"YulFunctionCall","src":"14138:53:19"},"variableNames":[{"name":"value0","nativeSrc":"14128:6:19","nodeType":"YulIdentifier","src":"14128:6:19"}]}]},{"nativeSrc":"14211:288:19","nodeType":"YulBlock","src":"14211:288:19","statements":[{"nativeSrc":"14226:46:19","nodeType":"YulVariableDeclaration","src":"14226:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14257:9:19","nodeType":"YulIdentifier","src":"14257:9:19"},{"kind":"number","nativeSrc":"14268:2:19","nodeType":"YulLiteral","src":"14268:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14253:3:19","nodeType":"YulIdentifier","src":"14253:3:19"},"nativeSrc":"14253:18:19","nodeType":"YulFunctionCall","src":"14253:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"14240:12:19","nodeType":"YulIdentifier","src":"14240:12:19"},"nativeSrc":"14240:32:19","nodeType":"YulFunctionCall","src":"14240:32:19"},"variables":[{"name":"offset","nativeSrc":"14230:6:19","nodeType":"YulTypedName","src":"14230:6:19","type":""}]},{"body":{"nativeSrc":"14319:83:19","nodeType":"YulBlock","src":"14319:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"14321:77:19","nodeType":"YulIdentifier","src":"14321:77:19"},"nativeSrc":"14321:79:19","nodeType":"YulFunctionCall","src":"14321:79:19"},"nativeSrc":"14321:79:19","nodeType":"YulExpressionStatement","src":"14321:79:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"14291:6:19","nodeType":"YulIdentifier","src":"14291:6:19"},{"kind":"number","nativeSrc":"14299:18:19","nodeType":"YulLiteral","src":"14299:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14288:2:19","nodeType":"YulIdentifier","src":"14288:2:19"},"nativeSrc":"14288:30:19","nodeType":"YulFunctionCall","src":"14288:30:19"},"nativeSrc":"14285:117:19","nodeType":"YulIf","src":"14285:117:19"},{"nativeSrc":"14416:73:19","nodeType":"YulAssignment","src":"14416:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14461:9:19","nodeType":"YulIdentifier","src":"14461:9:19"},{"name":"offset","nativeSrc":"14472:6:19","nodeType":"YulIdentifier","src":"14472:6:19"}],"functionName":{"name":"add","nativeSrc":"14457:3:19","nodeType":"YulIdentifier","src":"14457:3:19"},"nativeSrc":"14457:22:19","nodeType":"YulFunctionCall","src":"14457:22:19"},{"name":"dataEnd","nativeSrc":"14481:7:19","nodeType":"YulIdentifier","src":"14481:7:19"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"14426:30:19","nodeType":"YulIdentifier","src":"14426:30:19"},"nativeSrc":"14426:63:19","nodeType":"YulFunctionCall","src":"14426:63:19"},"variableNames":[{"name":"value1","nativeSrc":"14416:6:19","nodeType":"YulIdentifier","src":"14416:6:19"}]}]},{"nativeSrc":"14509:288:19","nodeType":"YulBlock","src":"14509:288:19","statements":[{"nativeSrc":"14524:46:19","nodeType":"YulVariableDeclaration","src":"14524:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14555:9:19","nodeType":"YulIdentifier","src":"14555:9:19"},{"kind":"number","nativeSrc":"14566:2:19","nodeType":"YulLiteral","src":"14566:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"14551:3:19","nodeType":"YulIdentifier","src":"14551:3:19"},"nativeSrc":"14551:18:19","nodeType":"YulFunctionCall","src":"14551:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"14538:12:19","nodeType":"YulIdentifier","src":"14538:12:19"},"nativeSrc":"14538:32:19","nodeType":"YulFunctionCall","src":"14538:32:19"},"variables":[{"name":"offset","nativeSrc":"14528:6:19","nodeType":"YulTypedName","src":"14528:6:19","type":""}]},{"body":{"nativeSrc":"14617:83:19","nodeType":"YulBlock","src":"14617:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"14619:77:19","nodeType":"YulIdentifier","src":"14619:77:19"},"nativeSrc":"14619:79:19","nodeType":"YulFunctionCall","src":"14619:79:19"},"nativeSrc":"14619:79:19","nodeType":"YulExpressionStatement","src":"14619:79:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"14589:6:19","nodeType":"YulIdentifier","src":"14589:6:19"},{"kind":"number","nativeSrc":"14597:18:19","nodeType":"YulLiteral","src":"14597:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"14586:2:19","nodeType":"YulIdentifier","src":"14586:2:19"},"nativeSrc":"14586:30:19","nodeType":"YulFunctionCall","src":"14586:30:19"},"nativeSrc":"14583:117:19","nodeType":"YulIf","src":"14583:117:19"},{"nativeSrc":"14714:73:19","nodeType":"YulAssignment","src":"14714:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"14759:9:19","nodeType":"YulIdentifier","src":"14759:9:19"},{"name":"offset","nativeSrc":"14770:6:19","nodeType":"YulIdentifier","src":"14770:6:19"}],"functionName":{"name":"add","nativeSrc":"14755:3:19","nodeType":"YulIdentifier","src":"14755:3:19"},"nativeSrc":"14755:22:19","nodeType":"YulFunctionCall","src":"14755:22:19"},{"name":"dataEnd","nativeSrc":"14779:7:19","nodeType":"YulIdentifier","src":"14779:7:19"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nativeSrc":"14724:30:19","nodeType":"YulIdentifier","src":"14724:30:19"},"nativeSrc":"14724:63:19","nodeType":"YulFunctionCall","src":"14724:63:19"},"variableNames":[{"name":"value2","nativeSrc":"14714:6:19","nodeType":"YulIdentifier","src":"14714:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr","nativeSrc":"13825:979:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"13899:9:19","nodeType":"YulTypedName","src":"13899:9:19","type":""},{"name":"dataEnd","nativeSrc":"13910:7:19","nodeType":"YulTypedName","src":"13910:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"13922:6:19","nodeType":"YulTypedName","src":"13922:6:19","type":""},{"name":"value1","nativeSrc":"13930:6:19","nodeType":"YulTypedName","src":"13930:6:19","type":""},{"name":"value2","nativeSrc":"13938:6:19","nodeType":"YulTypedName","src":"13938:6:19","type":""}],"src":"13825:979:19"},{"body":{"nativeSrc":"14838:152:19","nodeType":"YulBlock","src":"14838:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"14855:1:19","nodeType":"YulLiteral","src":"14855:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"14858:77:19","nodeType":"YulLiteral","src":"14858:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"14848:6:19","nodeType":"YulIdentifier","src":"14848:6:19"},"nativeSrc":"14848:88:19","nodeType":"YulFunctionCall","src":"14848:88:19"},"nativeSrc":"14848:88:19","nodeType":"YulExpressionStatement","src":"14848:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14952:1:19","nodeType":"YulLiteral","src":"14952:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"14955:4:19","nodeType":"YulLiteral","src":"14955:4:19","type":"","value":"0x32"}],"functionName":{"name":"mstore","nativeSrc":"14945:6:19","nodeType":"YulIdentifier","src":"14945:6:19"},"nativeSrc":"14945:15:19","nodeType":"YulFunctionCall","src":"14945:15:19"},"nativeSrc":"14945:15:19","nodeType":"YulExpressionStatement","src":"14945:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"14976:1:19","nodeType":"YulLiteral","src":"14976:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"14979:4:19","nodeType":"YulLiteral","src":"14979:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"14969:6:19","nodeType":"YulIdentifier","src":"14969:6:19"},"nativeSrc":"14969:15:19","nodeType":"YulFunctionCall","src":"14969:15:19"},"nativeSrc":"14969:15:19","nodeType":"YulExpressionStatement","src":"14969:15:19"}]},"name":"panic_error_0x32","nativeSrc":"14810:180:19","nodeType":"YulFunctionDefinition","src":"14810:180:19"},{"body":{"nativeSrc":"15092:73:19","nodeType":"YulBlock","src":"15092:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"15109:3:19","nodeType":"YulIdentifier","src":"15109:3:19"},{"name":"length","nativeSrc":"15114:6:19","nodeType":"YulIdentifier","src":"15114:6:19"}],"functionName":{"name":"mstore","nativeSrc":"15102:6:19","nodeType":"YulIdentifier","src":"15102:6:19"},"nativeSrc":"15102:19:19","nodeType":"YulFunctionCall","src":"15102:19:19"},"nativeSrc":"15102:19:19","nodeType":"YulExpressionStatement","src":"15102:19:19"},{"nativeSrc":"15130:29:19","nodeType":"YulAssignment","src":"15130:29:19","value":{"arguments":[{"name":"pos","nativeSrc":"15149:3:19","nodeType":"YulIdentifier","src":"15149:3:19"},{"kind":"number","nativeSrc":"15154:4:19","nodeType":"YulLiteral","src":"15154:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15145:3:19","nodeType":"YulIdentifier","src":"15145:3:19"},"nativeSrc":"15145:14:19","nodeType":"YulFunctionCall","src":"15145:14:19"},"variableNames":[{"name":"updated_pos","nativeSrc":"15130:11:19","nodeType":"YulIdentifier","src":"15130:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"14996:169:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15064:3:19","nodeType":"YulTypedName","src":"15064:3:19","type":""},{"name":"length","nativeSrc":"15069:6:19","nodeType":"YulTypedName","src":"15069:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"15080:11:19","nodeType":"YulTypedName","src":"15080:11:19","type":""}],"src":"14996:169:19"},{"body":{"nativeSrc":"15277:120:19","nodeType":"YulBlock","src":"15277:120:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15299:6:19","nodeType":"YulIdentifier","src":"15299:6:19"},{"kind":"number","nativeSrc":"15307:1:19","nodeType":"YulLiteral","src":"15307:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15295:3:19","nodeType":"YulIdentifier","src":"15295:3:19"},"nativeSrc":"15295:14:19","nodeType":"YulFunctionCall","src":"15295:14:19"},{"hexValue":"594f555f43414e5f4f4e4c595f5245564f4b455f415f4d454d4245525f504552","kind":"string","nativeSrc":"15311:34:19","nodeType":"YulLiteral","src":"15311:34:19","type":"","value":"YOU_CAN_ONLY_REVOKE_A_MEMBER_PER"}],"functionName":{"name":"mstore","nativeSrc":"15288:6:19","nodeType":"YulIdentifier","src":"15288:6:19"},"nativeSrc":"15288:58:19","nodeType":"YulFunctionCall","src":"15288:58:19"},"nativeSrc":"15288:58:19","nodeType":"YulExpressionStatement","src":"15288:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"15367:6:19","nodeType":"YulIdentifier","src":"15367:6:19"},{"kind":"number","nativeSrc":"15375:2:19","nodeType":"YulLiteral","src":"15375:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15363:3:19","nodeType":"YulIdentifier","src":"15363:3:19"},"nativeSrc":"15363:15:19","nodeType":"YulFunctionCall","src":"15363:15:19"},{"hexValue":"4d495353494f4e","kind":"string","nativeSrc":"15380:9:19","nodeType":"YulLiteral","src":"15380:9:19","type":"","value":"MISSION"}],"functionName":{"name":"mstore","nativeSrc":"15356:6:19","nodeType":"YulIdentifier","src":"15356:6:19"},"nativeSrc":"15356:34:19","nodeType":"YulFunctionCall","src":"15356:34:19"},"nativeSrc":"15356:34:19","nodeType":"YulExpressionStatement","src":"15356:34:19"}]},"name":"store_literal_in_memory_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36","nativeSrc":"15171:226:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"15269:6:19","nodeType":"YulTypedName","src":"15269:6:19","type":""}],"src":"15171:226:19"},{"body":{"nativeSrc":"15549:220:19","nodeType":"YulBlock","src":"15549:220:19","statements":[{"nativeSrc":"15559:74:19","nodeType":"YulAssignment","src":"15559:74:19","value":{"arguments":[{"name":"pos","nativeSrc":"15625:3:19","nodeType":"YulIdentifier","src":"15625:3:19"},{"kind":"number","nativeSrc":"15630:2:19","nodeType":"YulLiteral","src":"15630:2:19","type":"","value":"39"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"15566:58:19","nodeType":"YulIdentifier","src":"15566:58:19"},"nativeSrc":"15566:67:19","nodeType":"YulFunctionCall","src":"15566:67:19"},"variableNames":[{"name":"pos","nativeSrc":"15559:3:19","nodeType":"YulIdentifier","src":"15559:3:19"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"15731:3:19","nodeType":"YulIdentifier","src":"15731:3:19"}],"functionName":{"name":"store_literal_in_memory_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36","nativeSrc":"15642:88:19","nodeType":"YulIdentifier","src":"15642:88:19"},"nativeSrc":"15642:93:19","nodeType":"YulFunctionCall","src":"15642:93:19"},"nativeSrc":"15642:93:19","nodeType":"YulExpressionStatement","src":"15642:93:19"},{"nativeSrc":"15744:19:19","nodeType":"YulAssignment","src":"15744:19:19","value":{"arguments":[{"name":"pos","nativeSrc":"15755:3:19","nodeType":"YulIdentifier","src":"15755:3:19"},{"kind":"number","nativeSrc":"15760:2:19","nodeType":"YulLiteral","src":"15760:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15751:3:19","nodeType":"YulIdentifier","src":"15751:3:19"},"nativeSrc":"15751:12:19","nodeType":"YulFunctionCall","src":"15751:12:19"},"variableNames":[{"name":"end","nativeSrc":"15744:3:19","nodeType":"YulIdentifier","src":"15744:3:19"}]}]},"name":"abi_encode_t_stringliteral_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36_to_t_string_memory_ptr_fromStack","nativeSrc":"15403:366:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"15537:3:19","nodeType":"YulTypedName","src":"15537:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"15545:3:19","nodeType":"YulTypedName","src":"15545:3:19","type":""}],"src":"15403:366:19"},{"body":{"nativeSrc":"15946:248:19","nodeType":"YulBlock","src":"15946:248:19","statements":[{"nativeSrc":"15956:26:19","nodeType":"YulAssignment","src":"15956:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"15968:9:19","nodeType":"YulIdentifier","src":"15968:9:19"},{"kind":"number","nativeSrc":"15979:2:19","nodeType":"YulLiteral","src":"15979:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"15964:3:19","nodeType":"YulIdentifier","src":"15964:3:19"},"nativeSrc":"15964:18:19","nodeType":"YulFunctionCall","src":"15964:18:19"},"variableNames":[{"name":"tail","nativeSrc":"15956:4:19","nodeType":"YulIdentifier","src":"15956:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"16003:9:19","nodeType":"YulIdentifier","src":"16003:9:19"},{"kind":"number","nativeSrc":"16014:1:19","nodeType":"YulLiteral","src":"16014:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"15999:3:19","nodeType":"YulIdentifier","src":"15999:3:19"},"nativeSrc":"15999:17:19","nodeType":"YulFunctionCall","src":"15999:17:19"},{"arguments":[{"name":"tail","nativeSrc":"16022:4:19","nodeType":"YulIdentifier","src":"16022:4:19"},{"name":"headStart","nativeSrc":"16028:9:19","nodeType":"YulIdentifier","src":"16028:9:19"}],"functionName":{"name":"sub","nativeSrc":"16018:3:19","nodeType":"YulIdentifier","src":"16018:3:19"},"nativeSrc":"16018:20:19","nodeType":"YulFunctionCall","src":"16018:20:19"}],"functionName":{"name":"mstore","nativeSrc":"15992:6:19","nodeType":"YulIdentifier","src":"15992:6:19"},"nativeSrc":"15992:47:19","nodeType":"YulFunctionCall","src":"15992:47:19"},"nativeSrc":"15992:47:19","nodeType":"YulExpressionStatement","src":"15992:47:19"},{"nativeSrc":"16048:139:19","nodeType":"YulAssignment","src":"16048:139:19","value":{"arguments":[{"name":"tail","nativeSrc":"16182:4:19","nodeType":"YulIdentifier","src":"16182:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36_to_t_string_memory_ptr_fromStack","nativeSrc":"16056:124:19","nodeType":"YulIdentifier","src":"16056:124:19"},"nativeSrc":"16056:131:19","nodeType":"YulFunctionCall","src":"16056:131:19"},"variableNames":[{"name":"tail","nativeSrc":"16048:4:19","nodeType":"YulIdentifier","src":"16048:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"15775:419:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15926:9:19","nodeType":"YulTypedName","src":"15926:9:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"15941:4:19","nodeType":"YulTypedName","src":"15941:4:19","type":""}],"src":"15775:419:19"},{"body":{"nativeSrc":"16228:152:19","nodeType":"YulBlock","src":"16228:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"16245:1:19","nodeType":"YulLiteral","src":"16245:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"16248:77:19","nodeType":"YulLiteral","src":"16248:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"16238:6:19","nodeType":"YulIdentifier","src":"16238:6:19"},"nativeSrc":"16238:88:19","nodeType":"YulFunctionCall","src":"16238:88:19"},"nativeSrc":"16238:88:19","nodeType":"YulExpressionStatement","src":"16238:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16342:1:19","nodeType":"YulLiteral","src":"16342:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"16345:4:19","nodeType":"YulLiteral","src":"16345:4:19","type":"","value":"0x11"}],"functionName":{"name":"mstore","nativeSrc":"16335:6:19","nodeType":"YulIdentifier","src":"16335:6:19"},"nativeSrc":"16335:15:19","nodeType":"YulFunctionCall","src":"16335:15:19"},"nativeSrc":"16335:15:19","nodeType":"YulExpressionStatement","src":"16335:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"16366:1:19","nodeType":"YulLiteral","src":"16366:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"16369:4:19","nodeType":"YulLiteral","src":"16369:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"16359:6:19","nodeType":"YulIdentifier","src":"16359:6:19"},"nativeSrc":"16359:15:19","nodeType":"YulFunctionCall","src":"16359:15:19"},"nativeSrc":"16359:15:19","nodeType":"YulExpressionStatement","src":"16359:15:19"}]},"name":"panic_error_0x11","nativeSrc":"16200:180:19","nodeType":"YulFunctionDefinition","src":"16200:180:19"},{"body":{"nativeSrc":"16429:190:19","nodeType":"YulBlock","src":"16429:190:19","statements":[{"nativeSrc":"16439:33:19","nodeType":"YulAssignment","src":"16439:33:19","value":{"arguments":[{"name":"value","nativeSrc":"16466:5:19","nodeType":"YulIdentifier","src":"16466:5:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16448:17:19","nodeType":"YulIdentifier","src":"16448:17:19"},"nativeSrc":"16448:24:19","nodeType":"YulFunctionCall","src":"16448:24:19"},"variableNames":[{"name":"value","nativeSrc":"16439:5:19","nodeType":"YulIdentifier","src":"16439:5:19"}]},{"body":{"nativeSrc":"16562:22:19","nodeType":"YulBlock","src":"16562:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"16564:16:19","nodeType":"YulIdentifier","src":"16564:16:19"},"nativeSrc":"16564:18:19","nodeType":"YulFunctionCall","src":"16564:18:19"},"nativeSrc":"16564:18:19","nodeType":"YulExpressionStatement","src":"16564:18:19"}]},"condition":{"arguments":[{"name":"value","nativeSrc":"16487:5:19","nodeType":"YulIdentifier","src":"16487:5:19"},{"kind":"number","nativeSrc":"16494:66:19","nodeType":"YulLiteral","src":"16494:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nativeSrc":"16484:2:19","nodeType":"YulIdentifier","src":"16484:2:19"},"nativeSrc":"16484:77:19","nodeType":"YulFunctionCall","src":"16484:77:19"},"nativeSrc":"16481:103:19","nodeType":"YulIf","src":"16481:103:19"},{"nativeSrc":"16593:20:19","nodeType":"YulAssignment","src":"16593:20:19","value":{"arguments":[{"name":"value","nativeSrc":"16604:5:19","nodeType":"YulIdentifier","src":"16604:5:19"},{"kind":"number","nativeSrc":"16611:1:19","nodeType":"YulLiteral","src":"16611:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"16600:3:19","nodeType":"YulIdentifier","src":"16600:3:19"},"nativeSrc":"16600:13:19","nodeType":"YulFunctionCall","src":"16600:13:19"},"variableNames":[{"name":"ret","nativeSrc":"16593:3:19","nodeType":"YulIdentifier","src":"16593:3:19"}]}]},"name":"increment_t_uint256","nativeSrc":"16386:233:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16415:5:19","nodeType":"YulTypedName","src":"16415:5:19","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"16425:3:19","nodeType":"YulTypedName","src":"16425:3:19","type":""}],"src":"16386:233:19"},{"body":{"nativeSrc":"16690:53:19","nodeType":"YulBlock","src":"16690:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"16707:3:19","nodeType":"YulIdentifier","src":"16707:3:19"},{"arguments":[{"name":"value","nativeSrc":"16730:5:19","nodeType":"YulIdentifier","src":"16730:5:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"16712:17:19","nodeType":"YulIdentifier","src":"16712:17:19"},"nativeSrc":"16712:24:19","nodeType":"YulFunctionCall","src":"16712:24:19"}],"functionName":{"name":"mstore","nativeSrc":"16700:6:19","nodeType":"YulIdentifier","src":"16700:6:19"},"nativeSrc":"16700:37:19","nodeType":"YulFunctionCall","src":"16700:37:19"},"nativeSrc":"16700:37:19","nodeType":"YulExpressionStatement","src":"16700:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16625:118:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"16678:5:19","nodeType":"YulTypedName","src":"16678:5:19","type":""},{"name":"pos","nativeSrc":"16685:3:19","nodeType":"YulTypedName","src":"16685:3:19","type":""}],"src":"16625:118:19"},{"body":{"nativeSrc":"16875:206:19","nodeType":"YulBlock","src":"16875:206:19","statements":[{"nativeSrc":"16885:26:19","nodeType":"YulAssignment","src":"16885:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"16897:9:19","nodeType":"YulIdentifier","src":"16897:9:19"},{"kind":"number","nativeSrc":"16908:2:19","nodeType":"YulLiteral","src":"16908:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16893:3:19","nodeType":"YulIdentifier","src":"16893:3:19"},"nativeSrc":"16893:18:19","nodeType":"YulFunctionCall","src":"16893:18:19"},"variableNames":[{"name":"tail","nativeSrc":"16885:4:19","nodeType":"YulIdentifier","src":"16885:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16965:6:19","nodeType":"YulIdentifier","src":"16965:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"16978:9:19","nodeType":"YulIdentifier","src":"16978:9:19"},{"kind":"number","nativeSrc":"16989:1:19","nodeType":"YulLiteral","src":"16989:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16974:3:19","nodeType":"YulIdentifier","src":"16974:3:19"},"nativeSrc":"16974:17:19","nodeType":"YulFunctionCall","src":"16974:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16921:43:19","nodeType":"YulIdentifier","src":"16921:43:19"},"nativeSrc":"16921:71:19","nodeType":"YulFunctionCall","src":"16921:71:19"},"nativeSrc":"16921:71:19","nodeType":"YulExpressionStatement","src":"16921:71:19"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"17046:6:19","nodeType":"YulIdentifier","src":"17046:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"17059:9:19","nodeType":"YulIdentifier","src":"17059:9:19"},{"kind":"number","nativeSrc":"17070:2:19","nodeType":"YulLiteral","src":"17070:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"17055:3:19","nodeType":"YulIdentifier","src":"17055:3:19"},"nativeSrc":"17055:18:19","nodeType":"YulFunctionCall","src":"17055:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"17002:43:19","nodeType":"YulIdentifier","src":"17002:43:19"},"nativeSrc":"17002:72:19","nodeType":"YulFunctionCall","src":"17002:72:19"},"nativeSrc":"17002:72:19","nodeType":"YulExpressionStatement","src":"17002:72:19"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"16749:332:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16839:9:19","nodeType":"YulTypedName","src":"16839:9:19","type":""},{"name":"value1","nativeSrc":"16851:6:19","nodeType":"YulTypedName","src":"16851:6:19","type":""},{"name":"value0","nativeSrc":"16859:6:19","nodeType":"YulTypedName","src":"16859:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16870:4:19","nodeType":"YulTypedName","src":"16870:4:19","type":""}],"src":"16749:332:19"},{"body":{"nativeSrc":"17150:80:19","nodeType":"YulBlock","src":"17150:80:19","statements":[{"nativeSrc":"17160:22:19","nodeType":"YulAssignment","src":"17160:22:19","value":{"arguments":[{"name":"offset","nativeSrc":"17175:6:19","nodeType":"YulIdentifier","src":"17175:6:19"}],"functionName":{"name":"mload","nativeSrc":"17169:5:19","nodeType":"YulIdentifier","src":"17169:5:19"},"nativeSrc":"17169:13:19","nodeType":"YulFunctionCall","src":"17169:13:19"},"variableNames":[{"name":"value","nativeSrc":"17160:5:19","nodeType":"YulIdentifier","src":"17160:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"17218:5:19","nodeType":"YulIdentifier","src":"17218:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"17191:26:19","nodeType":"YulIdentifier","src":"17191:26:19"},"nativeSrc":"17191:33:19","nodeType":"YulFunctionCall","src":"17191:33:19"},"nativeSrc":"17191:33:19","nodeType":"YulExpressionStatement","src":"17191:33:19"}]},"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"17087:143:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"17128:6:19","nodeType":"YulTypedName","src":"17128:6:19","type":""},{"name":"end","nativeSrc":"17136:3:19","nodeType":"YulTypedName","src":"17136:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"17144:5:19","nodeType":"YulTypedName","src":"17144:5:19","type":""}],"src":"17087:143:19"},{"body":{"nativeSrc":"17313:274:19","nodeType":"YulBlock","src":"17313:274:19","statements":[{"body":{"nativeSrc":"17359:83:19","nodeType":"YulBlock","src":"17359:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"17361:77:19","nodeType":"YulIdentifier","src":"17361:77:19"},"nativeSrc":"17361:79:19","nodeType":"YulFunctionCall","src":"17361:79:19"},"nativeSrc":"17361:79:19","nodeType":"YulExpressionStatement","src":"17361:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"17334:7:19","nodeType":"YulIdentifier","src":"17334:7:19"},{"name":"headStart","nativeSrc":"17343:9:19","nodeType":"YulIdentifier","src":"17343:9:19"}],"functionName":{"name":"sub","nativeSrc":"17330:3:19","nodeType":"YulIdentifier","src":"17330:3:19"},"nativeSrc":"17330:23:19","nodeType":"YulFunctionCall","src":"17330:23:19"},{"kind":"number","nativeSrc":"17355:2:19","nodeType":"YulLiteral","src":"17355:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"17326:3:19","nodeType":"YulIdentifier","src":"17326:3:19"},"nativeSrc":"17326:32:19","nodeType":"YulFunctionCall","src":"17326:32:19"},"nativeSrc":"17323:119:19","nodeType":"YulIf","src":"17323:119:19"},{"nativeSrc":"17452:128:19","nodeType":"YulBlock","src":"17452:128:19","statements":[{"nativeSrc":"17467:15:19","nodeType":"YulVariableDeclaration","src":"17467:15:19","value":{"kind":"number","nativeSrc":"17481:1:19","nodeType":"YulLiteral","src":"17481:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"17471:6:19","nodeType":"YulTypedName","src":"17471:6:19","type":""}]},{"nativeSrc":"17496:74:19","nodeType":"YulAssignment","src":"17496:74:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"17542:9:19","nodeType":"YulIdentifier","src":"17542:9:19"},{"name":"offset","nativeSrc":"17553:6:19","nodeType":"YulIdentifier","src":"17553:6:19"}],"functionName":{"name":"add","nativeSrc":"17538:3:19","nodeType":"YulIdentifier","src":"17538:3:19"},"nativeSrc":"17538:22:19","nodeType":"YulFunctionCall","src":"17538:22:19"},{"name":"dataEnd","nativeSrc":"17562:7:19","nodeType":"YulIdentifier","src":"17562:7:19"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nativeSrc":"17506:31:19","nodeType":"YulIdentifier","src":"17506:31:19"},"nativeSrc":"17506:64:19","nodeType":"YulFunctionCall","src":"17506:64:19"},"variableNames":[{"name":"value0","nativeSrc":"17496:6:19","nodeType":"YulIdentifier","src":"17496:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nativeSrc":"17236:351:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"17283:9:19","nodeType":"YulTypedName","src":"17283:9:19","type":""},{"name":"dataEnd","nativeSrc":"17294:7:19","nodeType":"YulTypedName","src":"17294:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"17306:6:19","nodeType":"YulTypedName","src":"17306:6:19","type":""}],"src":"17236:351:19"},{"body":{"nativeSrc":"17621:152:19","nodeType":"YulBlock","src":"17621:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"17638:1:19","nodeType":"YulLiteral","src":"17638:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"17641:77:19","nodeType":"YulLiteral","src":"17641:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"17631:6:19","nodeType":"YulIdentifier","src":"17631:6:19"},"nativeSrc":"17631:88:19","nodeType":"YulFunctionCall","src":"17631:88:19"},"nativeSrc":"17631:88:19","nodeType":"YulExpressionStatement","src":"17631:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17735:1:19","nodeType":"YulLiteral","src":"17735:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"17738:4:19","nodeType":"YulLiteral","src":"17738:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"17728:6:19","nodeType":"YulIdentifier","src":"17728:6:19"},"nativeSrc":"17728:15:19","nodeType":"YulFunctionCall","src":"17728:15:19"},"nativeSrc":"17728:15:19","nodeType":"YulExpressionStatement","src":"17728:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17759:1:19","nodeType":"YulLiteral","src":"17759:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"17762:4:19","nodeType":"YulLiteral","src":"17762:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"17752:6:19","nodeType":"YulIdentifier","src":"17752:6:19"},"nativeSrc":"17752:15:19","nodeType":"YulFunctionCall","src":"17752:15:19"},"nativeSrc":"17752:15:19","nodeType":"YulExpressionStatement","src":"17752:15:19"}]},"name":"panic_error_0x22","nativeSrc":"17593:180:19","nodeType":"YulFunctionDefinition","src":"17593:180:19"},{"body":{"nativeSrc":"17830:269:19","nodeType":"YulBlock","src":"17830:269:19","statements":[{"nativeSrc":"17840:22:19","nodeType":"YulAssignment","src":"17840:22:19","value":{"arguments":[{"name":"data","nativeSrc":"17854:4:19","nodeType":"YulIdentifier","src":"17854:4:19"},{"kind":"number","nativeSrc":"17860:1:19","nodeType":"YulLiteral","src":"17860:1:19","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"17850:3:19","nodeType":"YulIdentifier","src":"17850:3:19"},"nativeSrc":"17850:12:19","nodeType":"YulFunctionCall","src":"17850:12:19"},"variableNames":[{"name":"length","nativeSrc":"17840:6:19","nodeType":"YulIdentifier","src":"17840:6:19"}]},{"nativeSrc":"17871:38:19","nodeType":"YulVariableDeclaration","src":"17871:38:19","value":{"arguments":[{"name":"data","nativeSrc":"17901:4:19","nodeType":"YulIdentifier","src":"17901:4:19"},{"kind":"number","nativeSrc":"17907:1:19","nodeType":"YulLiteral","src":"17907:1:19","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"17897:3:19","nodeType":"YulIdentifier","src":"17897:3:19"},"nativeSrc":"17897:12:19","nodeType":"YulFunctionCall","src":"17897:12:19"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"17875:18:19","nodeType":"YulTypedName","src":"17875:18:19","type":""}]},{"body":{"nativeSrc":"17948:51:19","nodeType":"YulBlock","src":"17948:51:19","statements":[{"nativeSrc":"17962:27:19","nodeType":"YulAssignment","src":"17962:27:19","value":{"arguments":[{"name":"length","nativeSrc":"17976:6:19","nodeType":"YulIdentifier","src":"17976:6:19"},{"kind":"number","nativeSrc":"17984:4:19","nodeType":"YulLiteral","src":"17984:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"17972:3:19","nodeType":"YulIdentifier","src":"17972:3:19"},"nativeSrc":"17972:17:19","nodeType":"YulFunctionCall","src":"17972:17:19"},"variableNames":[{"name":"length","nativeSrc":"17962:6:19","nodeType":"YulIdentifier","src":"17962:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"17928:18:19","nodeType":"YulIdentifier","src":"17928:18:19"}],"functionName":{"name":"iszero","nativeSrc":"17921:6:19","nodeType":"YulIdentifier","src":"17921:6:19"},"nativeSrc":"17921:26:19","nodeType":"YulFunctionCall","src":"17921:26:19"},"nativeSrc":"17918:81:19","nodeType":"YulIf","src":"17918:81:19"},{"body":{"nativeSrc":"18051:42:19","nodeType":"YulBlock","src":"18051:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"18065:16:19","nodeType":"YulIdentifier","src":"18065:16:19"},"nativeSrc":"18065:18:19","nodeType":"YulFunctionCall","src":"18065:18:19"},"nativeSrc":"18065:18:19","nodeType":"YulExpressionStatement","src":"18065:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"18015:18:19","nodeType":"YulIdentifier","src":"18015:18:19"},{"arguments":[{"name":"length","nativeSrc":"18038:6:19","nodeType":"YulIdentifier","src":"18038:6:19"},{"kind":"number","nativeSrc":"18046:2:19","nodeType":"YulLiteral","src":"18046:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"18035:2:19","nodeType":"YulIdentifier","src":"18035:2:19"},"nativeSrc":"18035:14:19","nodeType":"YulFunctionCall","src":"18035:14:19"}],"functionName":{"name":"eq","nativeSrc":"18012:2:19","nodeType":"YulIdentifier","src":"18012:2:19"},"nativeSrc":"18012:38:19","nodeType":"YulFunctionCall","src":"18012:38:19"},"nativeSrc":"18009:84:19","nodeType":"YulIf","src":"18009:84:19"}]},"name":"extract_byte_array_length","nativeSrc":"17779:320:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"17814:4:19","nodeType":"YulTypedName","src":"17814:4:19","type":""}],"returnVariables":[{"name":"length","nativeSrc":"17823:6:19","nodeType":"YulTypedName","src":"17823:6:19","type":""}],"src":"17779:320:19"},{"body":{"nativeSrc":"18153:362:19","nodeType":"YulBlock","src":"18153:362:19","statements":[{"nativeSrc":"18163:25:19","nodeType":"YulAssignment","src":"18163:25:19","value":{"arguments":[{"name":"x","nativeSrc":"18186:1:19","nodeType":"YulIdentifier","src":"18186:1:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18168:17:19","nodeType":"YulIdentifier","src":"18168:17:19"},"nativeSrc":"18168:20:19","nodeType":"YulFunctionCall","src":"18168:20:19"},"variableNames":[{"name":"x","nativeSrc":"18163:1:19","nodeType":"YulIdentifier","src":"18163:1:19"}]},{"nativeSrc":"18197:25:19","nodeType":"YulAssignment","src":"18197:25:19","value":{"arguments":[{"name":"y","nativeSrc":"18220:1:19","nodeType":"YulIdentifier","src":"18220:1:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18202:17:19","nodeType":"YulIdentifier","src":"18202:17:19"},"nativeSrc":"18202:20:19","nodeType":"YulFunctionCall","src":"18202:20:19"},"variableNames":[{"name":"y","nativeSrc":"18197:1:19","nodeType":"YulIdentifier","src":"18197:1:19"}]},{"nativeSrc":"18231:28:19","nodeType":"YulVariableDeclaration","src":"18231:28:19","value":{"arguments":[{"name":"x","nativeSrc":"18254:1:19","nodeType":"YulIdentifier","src":"18254:1:19"},{"name":"y","nativeSrc":"18257:1:19","nodeType":"YulIdentifier","src":"18257:1:19"}],"functionName":{"name":"mul","nativeSrc":"18250:3:19","nodeType":"YulIdentifier","src":"18250:3:19"},"nativeSrc":"18250:9:19","nodeType":"YulFunctionCall","src":"18250:9:19"},"variables":[{"name":"product_raw","nativeSrc":"18235:11:19","nodeType":"YulTypedName","src":"18235:11:19","type":""}]},{"nativeSrc":"18268:41:19","nodeType":"YulAssignment","src":"18268:41:19","value":{"arguments":[{"name":"product_raw","nativeSrc":"18297:11:19","nodeType":"YulIdentifier","src":"18297:11:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18279:17:19","nodeType":"YulIdentifier","src":"18279:17:19"},"nativeSrc":"18279:30:19","nodeType":"YulFunctionCall","src":"18279:30:19"},"variableNames":[{"name":"product","nativeSrc":"18268:7:19","nodeType":"YulIdentifier","src":"18268:7:19"}]},{"body":{"nativeSrc":"18486:22:19","nodeType":"YulBlock","src":"18486:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"18488:16:19","nodeType":"YulIdentifier","src":"18488:16:19"},"nativeSrc":"18488:18:19","nodeType":"YulFunctionCall","src":"18488:18:19"},"nativeSrc":"18488:18:19","nodeType":"YulExpressionStatement","src":"18488:18:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nativeSrc":"18419:1:19","nodeType":"YulIdentifier","src":"18419:1:19"}],"functionName":{"name":"iszero","nativeSrc":"18412:6:19","nodeType":"YulIdentifier","src":"18412:6:19"},"nativeSrc":"18412:9:19","nodeType":"YulFunctionCall","src":"18412:9:19"},{"arguments":[{"name":"y","nativeSrc":"18442:1:19","nodeType":"YulIdentifier","src":"18442:1:19"},{"arguments":[{"name":"product","nativeSrc":"18449:7:19","nodeType":"YulIdentifier","src":"18449:7:19"},{"name":"x","nativeSrc":"18458:1:19","nodeType":"YulIdentifier","src":"18458:1:19"}],"functionName":{"name":"div","nativeSrc":"18445:3:19","nodeType":"YulIdentifier","src":"18445:3:19"},"nativeSrc":"18445:15:19","nodeType":"YulFunctionCall","src":"18445:15:19"}],"functionName":{"name":"eq","nativeSrc":"18439:2:19","nodeType":"YulIdentifier","src":"18439:2:19"},"nativeSrc":"18439:22:19","nodeType":"YulFunctionCall","src":"18439:22:19"}],"functionName":{"name":"or","nativeSrc":"18392:2:19","nodeType":"YulIdentifier","src":"18392:2:19"},"nativeSrc":"18392:83:19","nodeType":"YulFunctionCall","src":"18392:83:19"}],"functionName":{"name":"iszero","nativeSrc":"18372:6:19","nodeType":"YulIdentifier","src":"18372:6:19"},"nativeSrc":"18372:113:19","nodeType":"YulFunctionCall","src":"18372:113:19"},"nativeSrc":"18369:139:19","nodeType":"YulIf","src":"18369:139:19"}]},"name":"checked_mul_t_uint256","nativeSrc":"18105:410:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"18136:1:19","nodeType":"YulTypedName","src":"18136:1:19","type":""},{"name":"y","nativeSrc":"18139:1:19","nodeType":"YulTypedName","src":"18139:1:19","type":""}],"returnVariables":[{"name":"product","nativeSrc":"18145:7:19","nodeType":"YulTypedName","src":"18145:7:19","type":""}],"src":"18105:410:19"},{"body":{"nativeSrc":"18565:147:19","nodeType":"YulBlock","src":"18565:147:19","statements":[{"nativeSrc":"18575:25:19","nodeType":"YulAssignment","src":"18575:25:19","value":{"arguments":[{"name":"x","nativeSrc":"18598:1:19","nodeType":"YulIdentifier","src":"18598:1:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18580:17:19","nodeType":"YulIdentifier","src":"18580:17:19"},"nativeSrc":"18580:20:19","nodeType":"YulFunctionCall","src":"18580:20:19"},"variableNames":[{"name":"x","nativeSrc":"18575:1:19","nodeType":"YulIdentifier","src":"18575:1:19"}]},{"nativeSrc":"18609:25:19","nodeType":"YulAssignment","src":"18609:25:19","value":{"arguments":[{"name":"y","nativeSrc":"18632:1:19","nodeType":"YulIdentifier","src":"18632:1:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"18614:17:19","nodeType":"YulIdentifier","src":"18614:17:19"},"nativeSrc":"18614:20:19","nodeType":"YulFunctionCall","src":"18614:20:19"},"variableNames":[{"name":"y","nativeSrc":"18609:1:19","nodeType":"YulIdentifier","src":"18609:1:19"}]},{"nativeSrc":"18643:16:19","nodeType":"YulAssignment","src":"18643:16:19","value":{"arguments":[{"name":"x","nativeSrc":"18654:1:19","nodeType":"YulIdentifier","src":"18654:1:19"},{"name":"y","nativeSrc":"18657:1:19","nodeType":"YulIdentifier","src":"18657:1:19"}],"functionName":{"name":"add","nativeSrc":"18650:3:19","nodeType":"YulIdentifier","src":"18650:3:19"},"nativeSrc":"18650:9:19","nodeType":"YulFunctionCall","src":"18650:9:19"},"variableNames":[{"name":"sum","nativeSrc":"18643:3:19","nodeType":"YulIdentifier","src":"18643:3:19"}]},{"body":{"nativeSrc":"18683:22:19","nodeType":"YulBlock","src":"18683:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nativeSrc":"18685:16:19","nodeType":"YulIdentifier","src":"18685:16:19"},"nativeSrc":"18685:18:19","nodeType":"YulFunctionCall","src":"18685:18:19"},"nativeSrc":"18685:18:19","nodeType":"YulExpressionStatement","src":"18685:18:19"}]},"condition":{"arguments":[{"name":"x","nativeSrc":"18675:1:19","nodeType":"YulIdentifier","src":"18675:1:19"},{"name":"sum","nativeSrc":"18678:3:19","nodeType":"YulIdentifier","src":"18678:3:19"}],"functionName":{"name":"gt","nativeSrc":"18672:2:19","nodeType":"YulIdentifier","src":"18672:2:19"},"nativeSrc":"18672:10:19","nodeType":"YulFunctionCall","src":"18672:10:19"},"nativeSrc":"18669:36:19","nodeType":"YulIf","src":"18669:36:19"}]},"name":"checked_add_t_uint256","nativeSrc":"18521:191:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nativeSrc":"18552:1:19","nodeType":"YulTypedName","src":"18552:1:19","type":""},{"name":"y","nativeSrc":"18555:1:19","nodeType":"YulTypedName","src":"18555:1:19","type":""}],"returnVariables":[{"name":"sum","nativeSrc":"18561:3:19","nodeType":"YulTypedName","src":"18561:3:19","type":""}],"src":"18521:191:19"},{"body":{"nativeSrc":"18824:75:19","nodeType":"YulBlock","src":"18824:75:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"18846:6:19","nodeType":"YulIdentifier","src":"18846:6:19"},{"kind":"number","nativeSrc":"18854:1:19","nodeType":"YulLiteral","src":"18854:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"18842:3:19","nodeType":"YulIdentifier","src":"18842:3:19"},"nativeSrc":"18842:14:19","nodeType":"YulFunctionCall","src":"18842:14:19"},{"hexValue":"4f6e6c792041646d696e2063616e206372656174652050726f706f73616c73","kind":"string","nativeSrc":"18858:33:19","nodeType":"YulLiteral","src":"18858:33:19","type":"","value":"Only Admin can create Proposals"}],"functionName":{"name":"mstore","nativeSrc":"18835:6:19","nodeType":"YulIdentifier","src":"18835:6:19"},"nativeSrc":"18835:57:19","nodeType":"YulFunctionCall","src":"18835:57:19"},"nativeSrc":"18835:57:19","nodeType":"YulExpressionStatement","src":"18835:57:19"}]},"name":"store_literal_in_memory_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792","nativeSrc":"18718:181:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"18816:6:19","nodeType":"YulTypedName","src":"18816:6:19","type":""}],"src":"18718:181:19"},{"body":{"nativeSrc":"19051:220:19","nodeType":"YulBlock","src":"19051:220:19","statements":[{"nativeSrc":"19061:74:19","nodeType":"YulAssignment","src":"19061:74:19","value":{"arguments":[{"name":"pos","nativeSrc":"19127:3:19","nodeType":"YulIdentifier","src":"19127:3:19"},{"kind":"number","nativeSrc":"19132:2:19","nodeType":"YulLiteral","src":"19132:2:19","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"19068:58:19","nodeType":"YulIdentifier","src":"19068:58:19"},"nativeSrc":"19068:67:19","nodeType":"YulFunctionCall","src":"19068:67:19"},"variableNames":[{"name":"pos","nativeSrc":"19061:3:19","nodeType":"YulIdentifier","src":"19061:3:19"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"19233:3:19","nodeType":"YulIdentifier","src":"19233:3:19"}],"functionName":{"name":"store_literal_in_memory_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792","nativeSrc":"19144:88:19","nodeType":"YulIdentifier","src":"19144:88:19"},"nativeSrc":"19144:93:19","nodeType":"YulFunctionCall","src":"19144:93:19"},"nativeSrc":"19144:93:19","nodeType":"YulExpressionStatement","src":"19144:93:19"},{"nativeSrc":"19246:19:19","nodeType":"YulAssignment","src":"19246:19:19","value":{"arguments":[{"name":"pos","nativeSrc":"19257:3:19","nodeType":"YulIdentifier","src":"19257:3:19"},{"kind":"number","nativeSrc":"19262:2:19","nodeType":"YulLiteral","src":"19262:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19253:3:19","nodeType":"YulIdentifier","src":"19253:3:19"},"nativeSrc":"19253:12:19","nodeType":"YulFunctionCall","src":"19253:12:19"},"variableNames":[{"name":"end","nativeSrc":"19246:3:19","nodeType":"YulIdentifier","src":"19246:3:19"}]}]},"name":"abi_encode_t_stringliteral_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792_to_t_string_memory_ptr_fromStack","nativeSrc":"18905:366:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"19039:3:19","nodeType":"YulTypedName","src":"19039:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"19047:3:19","nodeType":"YulTypedName","src":"19047:3:19","type":""}],"src":"18905:366:19"},{"body":{"nativeSrc":"19448:248:19","nodeType":"YulBlock","src":"19448:248:19","statements":[{"nativeSrc":"19458:26:19","nodeType":"YulAssignment","src":"19458:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"19470:9:19","nodeType":"YulIdentifier","src":"19470:9:19"},{"kind":"number","nativeSrc":"19481:2:19","nodeType":"YulLiteral","src":"19481:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"19466:3:19","nodeType":"YulIdentifier","src":"19466:3:19"},"nativeSrc":"19466:18:19","nodeType":"YulFunctionCall","src":"19466:18:19"},"variableNames":[{"name":"tail","nativeSrc":"19458:4:19","nodeType":"YulIdentifier","src":"19458:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"19505:9:19","nodeType":"YulIdentifier","src":"19505:9:19"},{"kind":"number","nativeSrc":"19516:1:19","nodeType":"YulLiteral","src":"19516:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"19501:3:19","nodeType":"YulIdentifier","src":"19501:3:19"},"nativeSrc":"19501:17:19","nodeType":"YulFunctionCall","src":"19501:17:19"},{"arguments":[{"name":"tail","nativeSrc":"19524:4:19","nodeType":"YulIdentifier","src":"19524:4:19"},{"name":"headStart","nativeSrc":"19530:9:19","nodeType":"YulIdentifier","src":"19530:9:19"}],"functionName":{"name":"sub","nativeSrc":"19520:3:19","nodeType":"YulIdentifier","src":"19520:3:19"},"nativeSrc":"19520:20:19","nodeType":"YulFunctionCall","src":"19520:20:19"}],"functionName":{"name":"mstore","nativeSrc":"19494:6:19","nodeType":"YulIdentifier","src":"19494:6:19"},"nativeSrc":"19494:47:19","nodeType":"YulFunctionCall","src":"19494:47:19"},"nativeSrc":"19494:47:19","nodeType":"YulExpressionStatement","src":"19494:47:19"},{"nativeSrc":"19550:139:19","nodeType":"YulAssignment","src":"19550:139:19","value":{"arguments":[{"name":"tail","nativeSrc":"19684:4:19","nodeType":"YulIdentifier","src":"19684:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792_to_t_string_memory_ptr_fromStack","nativeSrc":"19558:124:19","nodeType":"YulIdentifier","src":"19558:124:19"},"nativeSrc":"19558:131:19","nodeType":"YulFunctionCall","src":"19558:131:19"},"variableNames":[{"name":"tail","nativeSrc":"19550:4:19","nodeType":"YulIdentifier","src":"19550:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"19277:419:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"19428:9:19","nodeType":"YulTypedName","src":"19428:9:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"19443:4:19","nodeType":"YulTypedName","src":"19443:4:19","type":""}],"src":"19277:419:19"},{"body":{"nativeSrc":"19756:87:19","nodeType":"YulBlock","src":"19756:87:19","statements":[{"nativeSrc":"19766:11:19","nodeType":"YulAssignment","src":"19766:11:19","value":{"name":"ptr","nativeSrc":"19774:3:19","nodeType":"YulIdentifier","src":"19774:3:19"},"variableNames":[{"name":"data","nativeSrc":"19766:4:19","nodeType":"YulIdentifier","src":"19766:4:19"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"19794:1:19","nodeType":"YulLiteral","src":"19794:1:19","type":"","value":"0"},{"name":"ptr","nativeSrc":"19797:3:19","nodeType":"YulIdentifier","src":"19797:3:19"}],"functionName":{"name":"mstore","nativeSrc":"19787:6:19","nodeType":"YulIdentifier","src":"19787:6:19"},"nativeSrc":"19787:14:19","nodeType":"YulFunctionCall","src":"19787:14:19"},"nativeSrc":"19787:14:19","nodeType":"YulExpressionStatement","src":"19787:14:19"},{"nativeSrc":"19810:26:19","nodeType":"YulAssignment","src":"19810:26:19","value":{"arguments":[{"kind":"number","nativeSrc":"19828:1:19","nodeType":"YulLiteral","src":"19828:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"19831:4:19","nodeType":"YulLiteral","src":"19831:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"19818:9:19","nodeType":"YulIdentifier","src":"19818:9:19"},"nativeSrc":"19818:18:19","nodeType":"YulFunctionCall","src":"19818:18:19"},"variableNames":[{"name":"data","nativeSrc":"19810:4:19","nodeType":"YulIdentifier","src":"19810:4:19"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"19702:141:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"19743:3:19","nodeType":"YulTypedName","src":"19743:3:19","type":""}],"returnVariables":[{"name":"data","nativeSrc":"19751:4:19","nodeType":"YulTypedName","src":"19751:4:19","type":""}],"src":"19702:141:19"},{"body":{"nativeSrc":"19893:49:19","nodeType":"YulBlock","src":"19893:49:19","statements":[{"nativeSrc":"19903:33:19","nodeType":"YulAssignment","src":"19903:33:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"19921:5:19","nodeType":"YulIdentifier","src":"19921:5:19"},{"kind":"number","nativeSrc":"19928:2:19","nodeType":"YulLiteral","src":"19928:2:19","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"19917:3:19","nodeType":"YulIdentifier","src":"19917:3:19"},"nativeSrc":"19917:14:19","nodeType":"YulFunctionCall","src":"19917:14:19"},{"kind":"number","nativeSrc":"19933:2:19","nodeType":"YulLiteral","src":"19933:2:19","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"19913:3:19","nodeType":"YulIdentifier","src":"19913:3:19"},"nativeSrc":"19913:23:19","nodeType":"YulFunctionCall","src":"19913:23:19"},"variableNames":[{"name":"result","nativeSrc":"19903:6:19","nodeType":"YulIdentifier","src":"19903:6:19"}]}]},"name":"divide_by_32_ceil","nativeSrc":"19849:93:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"19876:5:19","nodeType":"YulTypedName","src":"19876:5:19","type":""}],"returnVariables":[{"name":"result","nativeSrc":"19886:6:19","nodeType":"YulTypedName","src":"19886:6:19","type":""}],"src":"19849:93:19"},{"body":{"nativeSrc":"20001:54:19","nodeType":"YulBlock","src":"20001:54:19","statements":[{"nativeSrc":"20011:37:19","nodeType":"YulAssignment","src":"20011:37:19","value":{"arguments":[{"name":"bits","nativeSrc":"20036:4:19","nodeType":"YulIdentifier","src":"20036:4:19"},{"name":"value","nativeSrc":"20042:5:19","nodeType":"YulIdentifier","src":"20042:5:19"}],"functionName":{"name":"shl","nativeSrc":"20032:3:19","nodeType":"YulIdentifier","src":"20032:3:19"},"nativeSrc":"20032:16:19","nodeType":"YulFunctionCall","src":"20032:16:19"},"variableNames":[{"name":"newValue","nativeSrc":"20011:8:19","nodeType":"YulIdentifier","src":"20011:8:19"}]}]},"name":"shift_left_dynamic","nativeSrc":"19948:107:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"19976:4:19","nodeType":"YulTypedName","src":"19976:4:19","type":""},{"name":"value","nativeSrc":"19982:5:19","nodeType":"YulTypedName","src":"19982:5:19","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"19992:8:19","nodeType":"YulTypedName","src":"19992:8:19","type":""}],"src":"19948:107:19"},{"body":{"nativeSrc":"20137:317:19","nodeType":"YulBlock","src":"20137:317:19","statements":[{"nativeSrc":"20147:35:19","nodeType":"YulVariableDeclaration","src":"20147:35:19","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"20168:10:19","nodeType":"YulIdentifier","src":"20168:10:19"},{"kind":"number","nativeSrc":"20180:1:19","nodeType":"YulLiteral","src":"20180:1:19","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"20164:3:19","nodeType":"YulIdentifier","src":"20164:3:19"},"nativeSrc":"20164:18:19","nodeType":"YulFunctionCall","src":"20164:18:19"},"variables":[{"name":"shiftBits","nativeSrc":"20151:9:19","nodeType":"YulTypedName","src":"20151:9:19","type":""}]},{"nativeSrc":"20191:109:19","nodeType":"YulVariableDeclaration","src":"20191:109:19","value":{"arguments":[{"name":"shiftBits","nativeSrc":"20222:9:19","nodeType":"YulIdentifier","src":"20222:9:19"},{"kind":"number","nativeSrc":"20233:66:19","nodeType":"YulLiteral","src":"20233:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"20203:18:19","nodeType":"YulIdentifier","src":"20203:18:19"},"nativeSrc":"20203:97:19","nodeType":"YulFunctionCall","src":"20203:97:19"},"variables":[{"name":"mask","nativeSrc":"20195:4:19","nodeType":"YulTypedName","src":"20195:4:19","type":""}]},{"nativeSrc":"20309:51:19","nodeType":"YulAssignment","src":"20309:51:19","value":{"arguments":[{"name":"shiftBits","nativeSrc":"20340:9:19","nodeType":"YulIdentifier","src":"20340:9:19"},{"name":"toInsert","nativeSrc":"20351:8:19","nodeType":"YulIdentifier","src":"20351:8:19"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"20321:18:19","nodeType":"YulIdentifier","src":"20321:18:19"},"nativeSrc":"20321:39:19","nodeType":"YulFunctionCall","src":"20321:39:19"},"variableNames":[{"name":"toInsert","nativeSrc":"20309:8:19","nodeType":"YulIdentifier","src":"20309:8:19"}]},{"nativeSrc":"20369:30:19","nodeType":"YulAssignment","src":"20369:30:19","value":{"arguments":[{"name":"value","nativeSrc":"20382:5:19","nodeType":"YulIdentifier","src":"20382:5:19"},{"arguments":[{"name":"mask","nativeSrc":"20393:4:19","nodeType":"YulIdentifier","src":"20393:4:19"}],"functionName":{"name":"not","nativeSrc":"20389:3:19","nodeType":"YulIdentifier","src":"20389:3:19"},"nativeSrc":"20389:9:19","nodeType":"YulFunctionCall","src":"20389:9:19"}],"functionName":{"name":"and","nativeSrc":"20378:3:19","nodeType":"YulIdentifier","src":"20378:3:19"},"nativeSrc":"20378:21:19","nodeType":"YulFunctionCall","src":"20378:21:19"},"variableNames":[{"name":"value","nativeSrc":"20369:5:19","nodeType":"YulIdentifier","src":"20369:5:19"}]},{"nativeSrc":"20408:40:19","nodeType":"YulAssignment","src":"20408:40:19","value":{"arguments":[{"name":"value","nativeSrc":"20421:5:19","nodeType":"YulIdentifier","src":"20421:5:19"},{"arguments":[{"name":"toInsert","nativeSrc":"20432:8:19","nodeType":"YulIdentifier","src":"20432:8:19"},{"name":"mask","nativeSrc":"20442:4:19","nodeType":"YulIdentifier","src":"20442:4:19"}],"functionName":{"name":"and","nativeSrc":"20428:3:19","nodeType":"YulIdentifier","src":"20428:3:19"},"nativeSrc":"20428:19:19","nodeType":"YulFunctionCall","src":"20428:19:19"}],"functionName":{"name":"or","nativeSrc":"20418:2:19","nodeType":"YulIdentifier","src":"20418:2:19"},"nativeSrc":"20418:30:19","nodeType":"YulFunctionCall","src":"20418:30:19"},"variableNames":[{"name":"result","nativeSrc":"20408:6:19","nodeType":"YulIdentifier","src":"20408:6:19"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"20061:393:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20098:5:19","nodeType":"YulTypedName","src":"20098:5:19","type":""},{"name":"shiftBytes","nativeSrc":"20105:10:19","nodeType":"YulTypedName","src":"20105:10:19","type":""},{"name":"toInsert","nativeSrc":"20117:8:19","nodeType":"YulTypedName","src":"20117:8:19","type":""}],"returnVariables":[{"name":"result","nativeSrc":"20130:6:19","nodeType":"YulTypedName","src":"20130:6:19","type":""}],"src":"20061:393:19"},{"body":{"nativeSrc":"20492:28:19","nodeType":"YulBlock","src":"20492:28:19","statements":[{"nativeSrc":"20502:12:19","nodeType":"YulAssignment","src":"20502:12:19","value":{"name":"value","nativeSrc":"20509:5:19","nodeType":"YulIdentifier","src":"20509:5:19"},"variableNames":[{"name":"ret","nativeSrc":"20502:3:19","nodeType":"YulIdentifier","src":"20502:3:19"}]}]},"name":"identity","nativeSrc":"20460:60:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20478:5:19","nodeType":"YulTypedName","src":"20478:5:19","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"20488:3:19","nodeType":"YulTypedName","src":"20488:3:19","type":""}],"src":"20460:60:19"},{"body":{"nativeSrc":"20586:82:19","nodeType":"YulBlock","src":"20586:82:19","statements":[{"nativeSrc":"20596:66:19","nodeType":"YulAssignment","src":"20596:66:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"20654:5:19","nodeType":"YulIdentifier","src":"20654:5:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"20636:17:19","nodeType":"YulIdentifier","src":"20636:17:19"},"nativeSrc":"20636:24:19","nodeType":"YulFunctionCall","src":"20636:24:19"}],"functionName":{"name":"identity","nativeSrc":"20627:8:19","nodeType":"YulIdentifier","src":"20627:8:19"},"nativeSrc":"20627:34:19","nodeType":"YulFunctionCall","src":"20627:34:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"20609:17:19","nodeType":"YulIdentifier","src":"20609:17:19"},"nativeSrc":"20609:53:19","nodeType":"YulFunctionCall","src":"20609:53:19"},"variableNames":[{"name":"converted","nativeSrc":"20596:9:19","nodeType":"YulIdentifier","src":"20596:9:19"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"20526:142:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20566:5:19","nodeType":"YulTypedName","src":"20566:5:19","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"20576:9:19","nodeType":"YulTypedName","src":"20576:9:19","type":""}],"src":"20526:142:19"},{"body":{"nativeSrc":"20721:28:19","nodeType":"YulBlock","src":"20721:28:19","statements":[{"nativeSrc":"20731:12:19","nodeType":"YulAssignment","src":"20731:12:19","value":{"name":"value","nativeSrc":"20738:5:19","nodeType":"YulIdentifier","src":"20738:5:19"},"variableNames":[{"name":"ret","nativeSrc":"20731:3:19","nodeType":"YulIdentifier","src":"20731:3:19"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"20674:75:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"20707:5:19","nodeType":"YulTypedName","src":"20707:5:19","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"20717:3:19","nodeType":"YulTypedName","src":"20717:3:19","type":""}],"src":"20674:75:19"},{"body":{"nativeSrc":"20831:193:19","nodeType":"YulBlock","src":"20831:193:19","statements":[{"nativeSrc":"20841:63:19","nodeType":"YulVariableDeclaration","src":"20841:63:19","value":{"arguments":[{"name":"value_0","nativeSrc":"20896:7:19","nodeType":"YulIdentifier","src":"20896:7:19"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"20865:30:19","nodeType":"YulIdentifier","src":"20865:30:19"},"nativeSrc":"20865:39:19","nodeType":"YulFunctionCall","src":"20865:39:19"},"variables":[{"name":"convertedValue_0","nativeSrc":"20845:16:19","nodeType":"YulTypedName","src":"20845:16:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"20920:4:19","nodeType":"YulIdentifier","src":"20920:4:19"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"20960:4:19","nodeType":"YulIdentifier","src":"20960:4:19"}],"functionName":{"name":"sload","nativeSrc":"20954:5:19","nodeType":"YulIdentifier","src":"20954:5:19"},"nativeSrc":"20954:11:19","nodeType":"YulFunctionCall","src":"20954:11:19"},{"name":"offset","nativeSrc":"20967:6:19","nodeType":"YulIdentifier","src":"20967:6:19"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"20999:16:19","nodeType":"YulIdentifier","src":"20999:16:19"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"20975:23:19","nodeType":"YulIdentifier","src":"20975:23:19"},"nativeSrc":"20975:41:19","nodeType":"YulFunctionCall","src":"20975:41:19"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"20926:27:19","nodeType":"YulIdentifier","src":"20926:27:19"},"nativeSrc":"20926:91:19","nodeType":"YulFunctionCall","src":"20926:91:19"}],"functionName":{"name":"sstore","nativeSrc":"20913:6:19","nodeType":"YulIdentifier","src":"20913:6:19"},"nativeSrc":"20913:105:19","nodeType":"YulFunctionCall","src":"20913:105:19"},"nativeSrc":"20913:105:19","nodeType":"YulExpressionStatement","src":"20913:105:19"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"20755:269:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"20808:4:19","nodeType":"YulTypedName","src":"20808:4:19","type":""},{"name":"offset","nativeSrc":"20814:6:19","nodeType":"YulTypedName","src":"20814:6:19","type":""},{"name":"value_0","nativeSrc":"20822:7:19","nodeType":"YulTypedName","src":"20822:7:19","type":""}],"src":"20755:269:19"},{"body":{"nativeSrc":"21079:24:19","nodeType":"YulBlock","src":"21079:24:19","statements":[{"nativeSrc":"21089:8:19","nodeType":"YulAssignment","src":"21089:8:19","value":{"kind":"number","nativeSrc":"21096:1:19","nodeType":"YulLiteral","src":"21096:1:19","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"21089:3:19","nodeType":"YulIdentifier","src":"21089:3:19"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"21030:73:19","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"21075:3:19","nodeType":"YulTypedName","src":"21075:3:19","type":""}],"src":"21030:73:19"},{"body":{"nativeSrc":"21162:136:19","nodeType":"YulBlock","src":"21162:136:19","statements":[{"nativeSrc":"21172:46:19","nodeType":"YulVariableDeclaration","src":"21172:46:19","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"21186:30:19","nodeType":"YulIdentifier","src":"21186:30:19"},"nativeSrc":"21186:32:19","nodeType":"YulFunctionCall","src":"21186:32:19"},"variables":[{"name":"zero_0","nativeSrc":"21176:6:19","nodeType":"YulTypedName","src":"21176:6:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"21271:4:19","nodeType":"YulIdentifier","src":"21271:4:19"},{"name":"offset","nativeSrc":"21277:6:19","nodeType":"YulIdentifier","src":"21277:6:19"},{"name":"zero_0","nativeSrc":"21285:6:19","nodeType":"YulIdentifier","src":"21285:6:19"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"21227:43:19","nodeType":"YulIdentifier","src":"21227:43:19"},"nativeSrc":"21227:65:19","nodeType":"YulFunctionCall","src":"21227:65:19"},"nativeSrc":"21227:65:19","nodeType":"YulExpressionStatement","src":"21227:65:19"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"21109:189:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"21148:4:19","nodeType":"YulTypedName","src":"21148:4:19","type":""},{"name":"offset","nativeSrc":"21154:6:19","nodeType":"YulTypedName","src":"21154:6:19","type":""}],"src":"21109:189:19"},{"body":{"nativeSrc":"21354:136:19","nodeType":"YulBlock","src":"21354:136:19","statements":[{"body":{"nativeSrc":"21421:63:19","nodeType":"YulBlock","src":"21421:63:19","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"21465:5:19","nodeType":"YulIdentifier","src":"21465:5:19"},{"kind":"number","nativeSrc":"21472:1:19","nodeType":"YulLiteral","src":"21472:1:19","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"21435:29:19","nodeType":"YulIdentifier","src":"21435:29:19"},"nativeSrc":"21435:39:19","nodeType":"YulFunctionCall","src":"21435:39:19"},"nativeSrc":"21435:39:19","nodeType":"YulExpressionStatement","src":"21435:39:19"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"21374:5:19","nodeType":"YulIdentifier","src":"21374:5:19"},{"name":"end","nativeSrc":"21381:3:19","nodeType":"YulIdentifier","src":"21381:3:19"}],"functionName":{"name":"lt","nativeSrc":"21371:2:19","nodeType":"YulIdentifier","src":"21371:2:19"},"nativeSrc":"21371:14:19","nodeType":"YulFunctionCall","src":"21371:14:19"},"nativeSrc":"21364:120:19","nodeType":"YulForLoop","post":{"nativeSrc":"21386:26:19","nodeType":"YulBlock","src":"21386:26:19","statements":[{"nativeSrc":"21388:22:19","nodeType":"YulAssignment","src":"21388:22:19","value":{"arguments":[{"name":"start","nativeSrc":"21401:5:19","nodeType":"YulIdentifier","src":"21401:5:19"},{"kind":"number","nativeSrc":"21408:1:19","nodeType":"YulLiteral","src":"21408:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"21397:3:19","nodeType":"YulIdentifier","src":"21397:3:19"},"nativeSrc":"21397:13:19","nodeType":"YulFunctionCall","src":"21397:13:19"},"variableNames":[{"name":"start","nativeSrc":"21388:5:19","nodeType":"YulIdentifier","src":"21388:5:19"}]}]},"pre":{"nativeSrc":"21368:2:19","nodeType":"YulBlock","src":"21368:2:19","statements":[]},"src":"21364:120:19"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"21304:186:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"21342:5:19","nodeType":"YulTypedName","src":"21342:5:19","type":""},{"name":"end","nativeSrc":"21349:3:19","nodeType":"YulTypedName","src":"21349:3:19","type":""}],"src":"21304:186:19"},{"body":{"nativeSrc":"21575:464:19","nodeType":"YulBlock","src":"21575:464:19","statements":[{"body":{"nativeSrc":"21601:431:19","nodeType":"YulBlock","src":"21601:431:19","statements":[{"nativeSrc":"21615:54:19","nodeType":"YulVariableDeclaration","src":"21615:54:19","value":{"arguments":[{"name":"array","nativeSrc":"21663:5:19","nodeType":"YulIdentifier","src":"21663:5:19"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"21631:31:19","nodeType":"YulIdentifier","src":"21631:31:19"},"nativeSrc":"21631:38:19","nodeType":"YulFunctionCall","src":"21631:38:19"},"variables":[{"name":"dataArea","nativeSrc":"21619:8:19","nodeType":"YulTypedName","src":"21619:8:19","type":""}]},{"nativeSrc":"21682:63:19","nodeType":"YulVariableDeclaration","src":"21682:63:19","value":{"arguments":[{"name":"dataArea","nativeSrc":"21705:8:19","nodeType":"YulIdentifier","src":"21705:8:19"},{"arguments":[{"name":"startIndex","nativeSrc":"21733:10:19","nodeType":"YulIdentifier","src":"21733:10:19"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"21715:17:19","nodeType":"YulIdentifier","src":"21715:17:19"},"nativeSrc":"21715:29:19","nodeType":"YulFunctionCall","src":"21715:29:19"}],"functionName":{"name":"add","nativeSrc":"21701:3:19","nodeType":"YulIdentifier","src":"21701:3:19"},"nativeSrc":"21701:44:19","nodeType":"YulFunctionCall","src":"21701:44:19"},"variables":[{"name":"deleteStart","nativeSrc":"21686:11:19","nodeType":"YulTypedName","src":"21686:11:19","type":""}]},{"body":{"nativeSrc":"21902:27:19","nodeType":"YulBlock","src":"21902:27:19","statements":[{"nativeSrc":"21904:23:19","nodeType":"YulAssignment","src":"21904:23:19","value":{"name":"dataArea","nativeSrc":"21919:8:19","nodeType":"YulIdentifier","src":"21919:8:19"},"variableNames":[{"name":"deleteStart","nativeSrc":"21904:11:19","nodeType":"YulIdentifier","src":"21904:11:19"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"21886:10:19","nodeType":"YulIdentifier","src":"21886:10:19"},{"kind":"number","nativeSrc":"21898:2:19","nodeType":"YulLiteral","src":"21898:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"21883:2:19","nodeType":"YulIdentifier","src":"21883:2:19"},"nativeSrc":"21883:18:19","nodeType":"YulFunctionCall","src":"21883:18:19"},"nativeSrc":"21880:49:19","nodeType":"YulIf","src":"21880:49:19"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"21971:11:19","nodeType":"YulIdentifier","src":"21971:11:19"},{"arguments":[{"name":"dataArea","nativeSrc":"21988:8:19","nodeType":"YulIdentifier","src":"21988:8:19"},{"arguments":[{"name":"len","nativeSrc":"22016:3:19","nodeType":"YulIdentifier","src":"22016:3:19"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"21998:17:19","nodeType":"YulIdentifier","src":"21998:17:19"},"nativeSrc":"21998:22:19","nodeType":"YulFunctionCall","src":"21998:22:19"}],"functionName":{"name":"add","nativeSrc":"21984:3:19","nodeType":"YulIdentifier","src":"21984:3:19"},"nativeSrc":"21984:37:19","nodeType":"YulFunctionCall","src":"21984:37:19"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"21942:28:19","nodeType":"YulIdentifier","src":"21942:28:19"},"nativeSrc":"21942:80:19","nodeType":"YulFunctionCall","src":"21942:80:19"},"nativeSrc":"21942:80:19","nodeType":"YulExpressionStatement","src":"21942:80:19"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"21592:3:19","nodeType":"YulIdentifier","src":"21592:3:19"},{"kind":"number","nativeSrc":"21597:2:19","nodeType":"YulLiteral","src":"21597:2:19","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"21589:2:19","nodeType":"YulIdentifier","src":"21589:2:19"},"nativeSrc":"21589:11:19","nodeType":"YulFunctionCall","src":"21589:11:19"},"nativeSrc":"21586:446:19","nodeType":"YulIf","src":"21586:446:19"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"21496:543:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"21551:5:19","nodeType":"YulTypedName","src":"21551:5:19","type":""},{"name":"len","nativeSrc":"21558:3:19","nodeType":"YulTypedName","src":"21558:3:19","type":""},{"name":"startIndex","nativeSrc":"21563:10:19","nodeType":"YulTypedName","src":"21563:10:19","type":""}],"src":"21496:543:19"},{"body":{"nativeSrc":"22108:54:19","nodeType":"YulBlock","src":"22108:54:19","statements":[{"nativeSrc":"22118:37:19","nodeType":"YulAssignment","src":"22118:37:19","value":{"arguments":[{"name":"bits","nativeSrc":"22143:4:19","nodeType":"YulIdentifier","src":"22143:4:19"},{"name":"value","nativeSrc":"22149:5:19","nodeType":"YulIdentifier","src":"22149:5:19"}],"functionName":{"name":"shr","nativeSrc":"22139:3:19","nodeType":"YulIdentifier","src":"22139:3:19"},"nativeSrc":"22139:16:19","nodeType":"YulFunctionCall","src":"22139:16:19"},"variableNames":[{"name":"newValue","nativeSrc":"22118:8:19","nodeType":"YulIdentifier","src":"22118:8:19"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"22045:117:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"22083:4:19","nodeType":"YulTypedName","src":"22083:4:19","type":""},{"name":"value","nativeSrc":"22089:5:19","nodeType":"YulTypedName","src":"22089:5:19","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"22099:8:19","nodeType":"YulTypedName","src":"22099:8:19","type":""}],"src":"22045:117:19"},{"body":{"nativeSrc":"22219:118:19","nodeType":"YulBlock","src":"22219:118:19","statements":[{"nativeSrc":"22229:68:19","nodeType":"YulVariableDeclaration","src":"22229:68:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"22278:1:19","nodeType":"YulLiteral","src":"22278:1:19","type":"","value":"8"},{"name":"bytes","nativeSrc":"22281:5:19","nodeType":"YulIdentifier","src":"22281:5:19"}],"functionName":{"name":"mul","nativeSrc":"22274:3:19","nodeType":"YulIdentifier","src":"22274:3:19"},"nativeSrc":"22274:13:19","nodeType":"YulFunctionCall","src":"22274:13:19"},{"arguments":[{"kind":"number","nativeSrc":"22293:1:19","nodeType":"YulLiteral","src":"22293:1:19","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"22289:3:19","nodeType":"YulIdentifier","src":"22289:3:19"},"nativeSrc":"22289:6:19","nodeType":"YulFunctionCall","src":"22289:6:19"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"22245:28:19","nodeType":"YulIdentifier","src":"22245:28:19"},"nativeSrc":"22245:51:19","nodeType":"YulFunctionCall","src":"22245:51:19"}],"functionName":{"name":"not","nativeSrc":"22241:3:19","nodeType":"YulIdentifier","src":"22241:3:19"},"nativeSrc":"22241:56:19","nodeType":"YulFunctionCall","src":"22241:56:19"},"variables":[{"name":"mask","nativeSrc":"22233:4:19","nodeType":"YulTypedName","src":"22233:4:19","type":""}]},{"nativeSrc":"22306:25:19","nodeType":"YulAssignment","src":"22306:25:19","value":{"arguments":[{"name":"data","nativeSrc":"22320:4:19","nodeType":"YulIdentifier","src":"22320:4:19"},{"name":"mask","nativeSrc":"22326:4:19","nodeType":"YulIdentifier","src":"22326:4:19"}],"functionName":{"name":"and","nativeSrc":"22316:3:19","nodeType":"YulIdentifier","src":"22316:3:19"},"nativeSrc":"22316:15:19","nodeType":"YulFunctionCall","src":"22316:15:19"},"variableNames":[{"name":"result","nativeSrc":"22306:6:19","nodeType":"YulIdentifier","src":"22306:6:19"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"22168:169:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"22196:4:19","nodeType":"YulTypedName","src":"22196:4:19","type":""},{"name":"bytes","nativeSrc":"22202:5:19","nodeType":"YulTypedName","src":"22202:5:19","type":""}],"returnVariables":[{"name":"result","nativeSrc":"22212:6:19","nodeType":"YulTypedName","src":"22212:6:19","type":""}],"src":"22168:169:19"},{"body":{"nativeSrc":"22423:214:19","nodeType":"YulBlock","src":"22423:214:19","statements":[{"nativeSrc":"22556:37:19","nodeType":"YulAssignment","src":"22556:37:19","value":{"arguments":[{"name":"data","nativeSrc":"22583:4:19","nodeType":"YulIdentifier","src":"22583:4:19"},{"name":"len","nativeSrc":"22589:3:19","nodeType":"YulIdentifier","src":"22589:3:19"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"22564:18:19","nodeType":"YulIdentifier","src":"22564:18:19"},"nativeSrc":"22564:29:19","nodeType":"YulFunctionCall","src":"22564:29:19"},"variableNames":[{"name":"data","nativeSrc":"22556:4:19","nodeType":"YulIdentifier","src":"22556:4:19"}]},{"nativeSrc":"22602:29:19","nodeType":"YulAssignment","src":"22602:29:19","value":{"arguments":[{"name":"data","nativeSrc":"22613:4:19","nodeType":"YulIdentifier","src":"22613:4:19"},{"arguments":[{"kind":"number","nativeSrc":"22623:1:19","nodeType":"YulLiteral","src":"22623:1:19","type":"","value":"2"},{"name":"len","nativeSrc":"22626:3:19","nodeType":"YulIdentifier","src":"22626:3:19"}],"functionName":{"name":"mul","nativeSrc":"22619:3:19","nodeType":"YulIdentifier","src":"22619:3:19"},"nativeSrc":"22619:11:19","nodeType":"YulFunctionCall","src":"22619:11:19"}],"functionName":{"name":"or","nativeSrc":"22610:2:19","nodeType":"YulIdentifier","src":"22610:2:19"},"nativeSrc":"22610:21:19","nodeType":"YulFunctionCall","src":"22610:21:19"},"variableNames":[{"name":"used","nativeSrc":"22602:4:19","nodeType":"YulIdentifier","src":"22602:4:19"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"22342:295:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"22404:4:19","nodeType":"YulTypedName","src":"22404:4:19","type":""},{"name":"len","nativeSrc":"22410:3:19","nodeType":"YulTypedName","src":"22410:3:19","type":""}],"returnVariables":[{"name":"used","nativeSrc":"22418:4:19","nodeType":"YulTypedName","src":"22418:4:19","type":""}],"src":"22342:295:19"},{"body":{"nativeSrc":"22734:1303:19","nodeType":"YulBlock","src":"22734:1303:19","statements":[{"nativeSrc":"22745:51:19","nodeType":"YulVariableDeclaration","src":"22745:51:19","value":{"arguments":[{"name":"src","nativeSrc":"22792:3:19","nodeType":"YulIdentifier","src":"22792:3:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"22759:32:19","nodeType":"YulIdentifier","src":"22759:32:19"},"nativeSrc":"22759:37:19","nodeType":"YulFunctionCall","src":"22759:37:19"},"variables":[{"name":"newLen","nativeSrc":"22749:6:19","nodeType":"YulTypedName","src":"22749:6:19","type":""}]},{"body":{"nativeSrc":"22881:22:19","nodeType":"YulBlock","src":"22881:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"22883:16:19","nodeType":"YulIdentifier","src":"22883:16:19"},"nativeSrc":"22883:18:19","nodeType":"YulFunctionCall","src":"22883:18:19"},"nativeSrc":"22883:18:19","nodeType":"YulExpressionStatement","src":"22883:18:19"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"22853:6:19","nodeType":"YulIdentifier","src":"22853:6:19"},{"kind":"number","nativeSrc":"22861:18:19","nodeType":"YulLiteral","src":"22861:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"22850:2:19","nodeType":"YulIdentifier","src":"22850:2:19"},"nativeSrc":"22850:30:19","nodeType":"YulFunctionCall","src":"22850:30:19"},"nativeSrc":"22847:56:19","nodeType":"YulIf","src":"22847:56:19"},{"nativeSrc":"22913:52:19","nodeType":"YulVariableDeclaration","src":"22913:52:19","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"22959:4:19","nodeType":"YulIdentifier","src":"22959:4:19"}],"functionName":{"name":"sload","nativeSrc":"22953:5:19","nodeType":"YulIdentifier","src":"22953:5:19"},"nativeSrc":"22953:11:19","nodeType":"YulFunctionCall","src":"22953:11:19"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"22927:25:19","nodeType":"YulIdentifier","src":"22927:25:19"},"nativeSrc":"22927:38:19","nodeType":"YulFunctionCall","src":"22927:38:19"},"variables":[{"name":"oldLen","nativeSrc":"22917:6:19","nodeType":"YulTypedName","src":"22917:6:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"23058:4:19","nodeType":"YulIdentifier","src":"23058:4:19"},{"name":"oldLen","nativeSrc":"23064:6:19","nodeType":"YulIdentifier","src":"23064:6:19"},{"name":"newLen","nativeSrc":"23072:6:19","nodeType":"YulIdentifier","src":"23072:6:19"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"23012:45:19","nodeType":"YulIdentifier","src":"23012:45:19"},"nativeSrc":"23012:67:19","nodeType":"YulFunctionCall","src":"23012:67:19"},"nativeSrc":"23012:67:19","nodeType":"YulExpressionStatement","src":"23012:67:19"},{"nativeSrc":"23089:18:19","nodeType":"YulVariableDeclaration","src":"23089:18:19","value":{"kind":"number","nativeSrc":"23106:1:19","nodeType":"YulLiteral","src":"23106:1:19","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"23093:9:19","nodeType":"YulTypedName","src":"23093:9:19","type":""}]},{"nativeSrc":"23117:17:19","nodeType":"YulAssignment","src":"23117:17:19","value":{"kind":"number","nativeSrc":"23130:4:19","nodeType":"YulLiteral","src":"23130:4:19","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"23117:9:19","nodeType":"YulIdentifier","src":"23117:9:19"}]},{"cases":[{"body":{"nativeSrc":"23181:611:19","nodeType":"YulBlock","src":"23181:611:19","statements":[{"nativeSrc":"23195:37:19","nodeType":"YulVariableDeclaration","src":"23195:37:19","value":{"arguments":[{"name":"newLen","nativeSrc":"23214:6:19","nodeType":"YulIdentifier","src":"23214:6:19"},{"arguments":[{"kind":"number","nativeSrc":"23226:4:19","nodeType":"YulLiteral","src":"23226:4:19","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"23222:3:19","nodeType":"YulIdentifier","src":"23222:3:19"},"nativeSrc":"23222:9:19","nodeType":"YulFunctionCall","src":"23222:9:19"}],"functionName":{"name":"and","nativeSrc":"23210:3:19","nodeType":"YulIdentifier","src":"23210:3:19"},"nativeSrc":"23210:22:19","nodeType":"YulFunctionCall","src":"23210:22:19"},"variables":[{"name":"loopEnd","nativeSrc":"23199:7:19","nodeType":"YulTypedName","src":"23199:7:19","type":""}]},{"nativeSrc":"23246:51:19","nodeType":"YulVariableDeclaration","src":"23246:51:19","value":{"arguments":[{"name":"slot","nativeSrc":"23292:4:19","nodeType":"YulIdentifier","src":"23292:4:19"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"23260:31:19","nodeType":"YulIdentifier","src":"23260:31:19"},"nativeSrc":"23260:37:19","nodeType":"YulFunctionCall","src":"23260:37:19"},"variables":[{"name":"dstPtr","nativeSrc":"23250:6:19","nodeType":"YulTypedName","src":"23250:6:19","type":""}]},{"nativeSrc":"23310:10:19","nodeType":"YulVariableDeclaration","src":"23310:10:19","value":{"kind":"number","nativeSrc":"23319:1:19","nodeType":"YulLiteral","src":"23319:1:19","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"23314:1:19","nodeType":"YulTypedName","src":"23314:1:19","type":""}]},{"body":{"nativeSrc":"23378:163:19","nodeType":"YulBlock","src":"23378:163:19","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"23403:6:19","nodeType":"YulIdentifier","src":"23403:6:19"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"23421:3:19","nodeType":"YulIdentifier","src":"23421:3:19"},{"name":"srcOffset","nativeSrc":"23426:9:19","nodeType":"YulIdentifier","src":"23426:9:19"}],"functionName":{"name":"add","nativeSrc":"23417:3:19","nodeType":"YulIdentifier","src":"23417:3:19"},"nativeSrc":"23417:19:19","nodeType":"YulFunctionCall","src":"23417:19:19"}],"functionName":{"name":"mload","nativeSrc":"23411:5:19","nodeType":"YulIdentifier","src":"23411:5:19"},"nativeSrc":"23411:26:19","nodeType":"YulFunctionCall","src":"23411:26:19"}],"functionName":{"name":"sstore","nativeSrc":"23396:6:19","nodeType":"YulIdentifier","src":"23396:6:19"},"nativeSrc":"23396:42:19","nodeType":"YulFunctionCall","src":"23396:42:19"},"nativeSrc":"23396:42:19","nodeType":"YulExpressionStatement","src":"23396:42:19"},{"nativeSrc":"23455:24:19","nodeType":"YulAssignment","src":"23455:24:19","value":{"arguments":[{"name":"dstPtr","nativeSrc":"23469:6:19","nodeType":"YulIdentifier","src":"23469:6:19"},{"kind":"number","nativeSrc":"23477:1:19","nodeType":"YulLiteral","src":"23477:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"23465:3:19","nodeType":"YulIdentifier","src":"23465:3:19"},"nativeSrc":"23465:14:19","nodeType":"YulFunctionCall","src":"23465:14:19"},"variableNames":[{"name":"dstPtr","nativeSrc":"23455:6:19","nodeType":"YulIdentifier","src":"23455:6:19"}]},{"nativeSrc":"23496:31:19","nodeType":"YulAssignment","src":"23496:31:19","value":{"arguments":[{"name":"srcOffset","nativeSrc":"23513:9:19","nodeType":"YulIdentifier","src":"23513:9:19"},{"kind":"number","nativeSrc":"23524:2:19","nodeType":"YulLiteral","src":"23524:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"23509:3:19","nodeType":"YulIdentifier","src":"23509:3:19"},"nativeSrc":"23509:18:19","nodeType":"YulFunctionCall","src":"23509:18:19"},"variableNames":[{"name":"srcOffset","nativeSrc":"23496:9:19","nodeType":"YulIdentifier","src":"23496:9:19"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"23344:1:19","nodeType":"YulIdentifier","src":"23344:1:19"},{"name":"loopEnd","nativeSrc":"23347:7:19","nodeType":"YulIdentifier","src":"23347:7:19"}],"functionName":{"name":"lt","nativeSrc":"23341:2:19","nodeType":"YulIdentifier","src":"23341:2:19"},"nativeSrc":"23341:14:19","nodeType":"YulFunctionCall","src":"23341:14:19"},"nativeSrc":"23333:208:19","nodeType":"YulForLoop","post":{"nativeSrc":"23356:21:19","nodeType":"YulBlock","src":"23356:21:19","statements":[{"nativeSrc":"23358:17:19","nodeType":"YulAssignment","src":"23358:17:19","value":{"arguments":[{"name":"i","nativeSrc":"23367:1:19","nodeType":"YulIdentifier","src":"23367:1:19"},{"kind":"number","nativeSrc":"23370:4:19","nodeType":"YulLiteral","src":"23370:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"23363:3:19","nodeType":"YulIdentifier","src":"23363:3:19"},"nativeSrc":"23363:12:19","nodeType":"YulFunctionCall","src":"23363:12:19"},"variableNames":[{"name":"i","nativeSrc":"23358:1:19","nodeType":"YulIdentifier","src":"23358:1:19"}]}]},"pre":{"nativeSrc":"23337:3:19","nodeType":"YulBlock","src":"23337:3:19","statements":[]},"src":"23333:208:19"},{"body":{"nativeSrc":"23577:156:19","nodeType":"YulBlock","src":"23577:156:19","statements":[{"nativeSrc":"23595:43:19","nodeType":"YulVariableDeclaration","src":"23595:43:19","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"23622:3:19","nodeType":"YulIdentifier","src":"23622:3:19"},{"name":"srcOffset","nativeSrc":"23627:9:19","nodeType":"YulIdentifier","src":"23627:9:19"}],"functionName":{"name":"add","nativeSrc":"23618:3:19","nodeType":"YulIdentifier","src":"23618:3:19"},"nativeSrc":"23618:19:19","nodeType":"YulFunctionCall","src":"23618:19:19"}],"functionName":{"name":"mload","nativeSrc":"23612:5:19","nodeType":"YulIdentifier","src":"23612:5:19"},"nativeSrc":"23612:26:19","nodeType":"YulFunctionCall","src":"23612:26:19"},"variables":[{"name":"lastValue","nativeSrc":"23599:9:19","nodeType":"YulTypedName","src":"23599:9:19","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"23662:6:19","nodeType":"YulIdentifier","src":"23662:6:19"},{"arguments":[{"name":"lastValue","nativeSrc":"23689:9:19","nodeType":"YulIdentifier","src":"23689:9:19"},{"arguments":[{"name":"newLen","nativeSrc":"23704:6:19","nodeType":"YulIdentifier","src":"23704:6:19"},{"kind":"number","nativeSrc":"23712:4:19","nodeType":"YulLiteral","src":"23712:4:19","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"23700:3:19","nodeType":"YulIdentifier","src":"23700:3:19"},"nativeSrc":"23700:17:19","nodeType":"YulFunctionCall","src":"23700:17:19"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"23670:18:19","nodeType":"YulIdentifier","src":"23670:18:19"},"nativeSrc":"23670:48:19","nodeType":"YulFunctionCall","src":"23670:48:19"}],"functionName":{"name":"sstore","nativeSrc":"23655:6:19","nodeType":"YulIdentifier","src":"23655:6:19"},"nativeSrc":"23655:64:19","nodeType":"YulFunctionCall","src":"23655:64:19"},"nativeSrc":"23655:64:19","nodeType":"YulExpressionStatement","src":"23655:64:19"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"23560:7:19","nodeType":"YulIdentifier","src":"23560:7:19"},{"name":"newLen","nativeSrc":"23569:6:19","nodeType":"YulIdentifier","src":"23569:6:19"}],"functionName":{"name":"lt","nativeSrc":"23557:2:19","nodeType":"YulIdentifier","src":"23557:2:19"},"nativeSrc":"23557:19:19","nodeType":"YulFunctionCall","src":"23557:19:19"},"nativeSrc":"23554:179:19","nodeType":"YulIf","src":"23554:179:19"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"23753:4:19","nodeType":"YulIdentifier","src":"23753:4:19"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"23767:6:19","nodeType":"YulIdentifier","src":"23767:6:19"},{"kind":"number","nativeSrc":"23775:1:19","nodeType":"YulLiteral","src":"23775:1:19","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"23763:3:19","nodeType":"YulIdentifier","src":"23763:3:19"},"nativeSrc":"23763:14:19","nodeType":"YulFunctionCall","src":"23763:14:19"},{"kind":"number","nativeSrc":"23779:1:19","nodeType":"YulLiteral","src":"23779:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"23759:3:19","nodeType":"YulIdentifier","src":"23759:3:19"},"nativeSrc":"23759:22:19","nodeType":"YulFunctionCall","src":"23759:22:19"}],"functionName":{"name":"sstore","nativeSrc":"23746:6:19","nodeType":"YulIdentifier","src":"23746:6:19"},"nativeSrc":"23746:36:19","nodeType":"YulFunctionCall","src":"23746:36:19"},"nativeSrc":"23746:36:19","nodeType":"YulExpressionStatement","src":"23746:36:19"}]},"nativeSrc":"23174:618:19","nodeType":"YulCase","src":"23174:618:19","value":{"kind":"number","nativeSrc":"23179:1:19","nodeType":"YulLiteral","src":"23179:1:19","type":"","value":"1"}},{"body":{"nativeSrc":"23809:222:19","nodeType":"YulBlock","src":"23809:222:19","statements":[{"nativeSrc":"23823:14:19","nodeType":"YulVariableDeclaration","src":"23823:14:19","value":{"kind":"number","nativeSrc":"23836:1:19","nodeType":"YulLiteral","src":"23836:1:19","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"23827:5:19","nodeType":"YulTypedName","src":"23827:5:19","type":""}]},{"body":{"nativeSrc":"23860:67:19","nodeType":"YulBlock","src":"23860:67:19","statements":[{"nativeSrc":"23878:35:19","nodeType":"YulAssignment","src":"23878:35:19","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"23897:3:19","nodeType":"YulIdentifier","src":"23897:3:19"},{"name":"srcOffset","nativeSrc":"23902:9:19","nodeType":"YulIdentifier","src":"23902:9:19"}],"functionName":{"name":"add","nativeSrc":"23893:3:19","nodeType":"YulIdentifier","src":"23893:3:19"},"nativeSrc":"23893:19:19","nodeType":"YulFunctionCall","src":"23893:19:19"}],"functionName":{"name":"mload","nativeSrc":"23887:5:19","nodeType":"YulIdentifier","src":"23887:5:19"},"nativeSrc":"23887:26:19","nodeType":"YulFunctionCall","src":"23887:26:19"},"variableNames":[{"name":"value","nativeSrc":"23878:5:19","nodeType":"YulIdentifier","src":"23878:5:19"}]}]},"condition":{"name":"newLen","nativeSrc":"23853:6:19","nodeType":"YulIdentifier","src":"23853:6:19"},"nativeSrc":"23850:77:19","nodeType":"YulIf","src":"23850:77:19"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"23947:4:19","nodeType":"YulIdentifier","src":"23947:4:19"},{"arguments":[{"name":"value","nativeSrc":"24006:5:19","nodeType":"YulIdentifier","src":"24006:5:19"},{"name":"newLen","nativeSrc":"24013:6:19","nodeType":"YulIdentifier","src":"24013:6:19"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"23953:52:19","nodeType":"YulIdentifier","src":"23953:52:19"},"nativeSrc":"23953:67:19","nodeType":"YulFunctionCall","src":"23953:67:19"}],"functionName":{"name":"sstore","nativeSrc":"23940:6:19","nodeType":"YulIdentifier","src":"23940:6:19"},"nativeSrc":"23940:81:19","nodeType":"YulFunctionCall","src":"23940:81:19"},"nativeSrc":"23940:81:19","nodeType":"YulExpressionStatement","src":"23940:81:19"}]},"nativeSrc":"23801:230:19","nodeType":"YulCase","src":"23801:230:19","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"23154:6:19","nodeType":"YulIdentifier","src":"23154:6:19"},{"kind":"number","nativeSrc":"23162:2:19","nodeType":"YulLiteral","src":"23162:2:19","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"23151:2:19","nodeType":"YulIdentifier","src":"23151:2:19"},"nativeSrc":"23151:14:19","nodeType":"YulFunctionCall","src":"23151:14:19"},"nativeSrc":"23144:887:19","nodeType":"YulSwitch","src":"23144:887:19"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"22642:1395:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"22723:4:19","nodeType":"YulTypedName","src":"22723:4:19","type":""},{"name":"src","nativeSrc":"22729:3:19","nodeType":"YulTypedName","src":"22729:3:19","type":""}],"src":"22642:1395:19"},{"body":{"nativeSrc":"24149:114:19","nodeType":"YulBlock","src":"24149:114:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"24171:6:19","nodeType":"YulIdentifier","src":"24171:6:19"},{"kind":"number","nativeSrc":"24179:1:19","nodeType":"YulLiteral","src":"24179:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24167:3:19","nodeType":"YulIdentifier","src":"24167:3:19"},"nativeSrc":"24167:14:19","nodeType":"YulFunctionCall","src":"24167:14:19"},{"hexValue":"594f552043414e5420564f5445204f4e20455850495245442050524f504f5341","kind":"string","nativeSrc":"24183:34:19","nodeType":"YulLiteral","src":"24183:34:19","type":"","value":"YOU CANT VOTE ON EXPIRED PROPOSA"}],"functionName":{"name":"mstore","nativeSrc":"24160:6:19","nodeType":"YulIdentifier","src":"24160:6:19"},"nativeSrc":"24160:58:19","nodeType":"YulFunctionCall","src":"24160:58:19"},"nativeSrc":"24160:58:19","nodeType":"YulExpressionStatement","src":"24160:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"24239:6:19","nodeType":"YulIdentifier","src":"24239:6:19"},{"kind":"number","nativeSrc":"24247:2:19","nodeType":"YulLiteral","src":"24247:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24235:3:19","nodeType":"YulIdentifier","src":"24235:3:19"},"nativeSrc":"24235:15:19","nodeType":"YulFunctionCall","src":"24235:15:19"},{"hexValue":"4c","kind":"string","nativeSrc":"24252:3:19","nodeType":"YulLiteral","src":"24252:3:19","type":"","value":"L"}],"functionName":{"name":"mstore","nativeSrc":"24228:6:19","nodeType":"YulIdentifier","src":"24228:6:19"},"nativeSrc":"24228:28:19","nodeType":"YulFunctionCall","src":"24228:28:19"},"nativeSrc":"24228:28:19","nodeType":"YulExpressionStatement","src":"24228:28:19"}]},"name":"store_literal_in_memory_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b","nativeSrc":"24043:220:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"24141:6:19","nodeType":"YulTypedName","src":"24141:6:19","type":""}],"src":"24043:220:19"},{"body":{"nativeSrc":"24415:220:19","nodeType":"YulBlock","src":"24415:220:19","statements":[{"nativeSrc":"24425:74:19","nodeType":"YulAssignment","src":"24425:74:19","value":{"arguments":[{"name":"pos","nativeSrc":"24491:3:19","nodeType":"YulIdentifier","src":"24491:3:19"},{"kind":"number","nativeSrc":"24496:2:19","nodeType":"YulLiteral","src":"24496:2:19","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"24432:58:19","nodeType":"YulIdentifier","src":"24432:58:19"},"nativeSrc":"24432:67:19","nodeType":"YulFunctionCall","src":"24432:67:19"},"variableNames":[{"name":"pos","nativeSrc":"24425:3:19","nodeType":"YulIdentifier","src":"24425:3:19"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"24597:3:19","nodeType":"YulIdentifier","src":"24597:3:19"}],"functionName":{"name":"store_literal_in_memory_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b","nativeSrc":"24508:88:19","nodeType":"YulIdentifier","src":"24508:88:19"},"nativeSrc":"24508:93:19","nodeType":"YulFunctionCall","src":"24508:93:19"},"nativeSrc":"24508:93:19","nodeType":"YulExpressionStatement","src":"24508:93:19"},{"nativeSrc":"24610:19:19","nodeType":"YulAssignment","src":"24610:19:19","value":{"arguments":[{"name":"pos","nativeSrc":"24621:3:19","nodeType":"YulIdentifier","src":"24621:3:19"},{"kind":"number","nativeSrc":"24626:2:19","nodeType":"YulLiteral","src":"24626:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"24617:3:19","nodeType":"YulIdentifier","src":"24617:3:19"},"nativeSrc":"24617:12:19","nodeType":"YulFunctionCall","src":"24617:12:19"},"variableNames":[{"name":"end","nativeSrc":"24610:3:19","nodeType":"YulIdentifier","src":"24610:3:19"}]}]},"name":"abi_encode_t_stringliteral_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b_to_t_string_memory_ptr_fromStack","nativeSrc":"24269:366:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"24403:3:19","nodeType":"YulTypedName","src":"24403:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"24411:3:19","nodeType":"YulTypedName","src":"24411:3:19","type":""}],"src":"24269:366:19"},{"body":{"nativeSrc":"24812:248:19","nodeType":"YulBlock","src":"24812:248:19","statements":[{"nativeSrc":"24822:26:19","nodeType":"YulAssignment","src":"24822:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"24834:9:19","nodeType":"YulIdentifier","src":"24834:9:19"},{"kind":"number","nativeSrc":"24845:2:19","nodeType":"YulLiteral","src":"24845:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"24830:3:19","nodeType":"YulIdentifier","src":"24830:3:19"},"nativeSrc":"24830:18:19","nodeType":"YulFunctionCall","src":"24830:18:19"},"variableNames":[{"name":"tail","nativeSrc":"24822:4:19","nodeType":"YulIdentifier","src":"24822:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"24869:9:19","nodeType":"YulIdentifier","src":"24869:9:19"},{"kind":"number","nativeSrc":"24880:1:19","nodeType":"YulLiteral","src":"24880:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"24865:3:19","nodeType":"YulIdentifier","src":"24865:3:19"},"nativeSrc":"24865:17:19","nodeType":"YulFunctionCall","src":"24865:17:19"},{"arguments":[{"name":"tail","nativeSrc":"24888:4:19","nodeType":"YulIdentifier","src":"24888:4:19"},{"name":"headStart","nativeSrc":"24894:9:19","nodeType":"YulIdentifier","src":"24894:9:19"}],"functionName":{"name":"sub","nativeSrc":"24884:3:19","nodeType":"YulIdentifier","src":"24884:3:19"},"nativeSrc":"24884:20:19","nodeType":"YulFunctionCall","src":"24884:20:19"}],"functionName":{"name":"mstore","nativeSrc":"24858:6:19","nodeType":"YulIdentifier","src":"24858:6:19"},"nativeSrc":"24858:47:19","nodeType":"YulFunctionCall","src":"24858:47:19"},"nativeSrc":"24858:47:19","nodeType":"YulExpressionStatement","src":"24858:47:19"},{"nativeSrc":"24914:139:19","nodeType":"YulAssignment","src":"24914:139:19","value":{"arguments":[{"name":"tail","nativeSrc":"25048:4:19","nodeType":"YulIdentifier","src":"25048:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b_to_t_string_memory_ptr_fromStack","nativeSrc":"24922:124:19","nodeType":"YulIdentifier","src":"24922:124:19"},"nativeSrc":"24922:131:19","nodeType":"YulFunctionCall","src":"24922:131:19"},"variableNames":[{"name":"tail","nativeSrc":"24914:4:19","nodeType":"YulIdentifier","src":"24914:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"24641:419:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"24792:9:19","nodeType":"YulTypedName","src":"24792:9:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"24807:4:19","nodeType":"YulTypedName","src":"24807:4:19","type":""}],"src":"24641:419:19"},{"body":{"nativeSrc":"25172:65:19","nodeType":"YulBlock","src":"25172:65:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"25194:6:19","nodeType":"YulIdentifier","src":"25194:6:19"},{"kind":"number","nativeSrc":"25202:1:19","nodeType":"YulLiteral","src":"25202:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25190:3:19","nodeType":"YulIdentifier","src":"25190:3:19"},"nativeSrc":"25190:14:19","nodeType":"YulFunctionCall","src":"25190:14:19"},{"hexValue":"594f55204e45454420524f4c4520544f20564f5445","kind":"string","nativeSrc":"25206:23:19","nodeType":"YulLiteral","src":"25206:23:19","type":"","value":"YOU NEED ROLE TO VOTE"}],"functionName":{"name":"mstore","nativeSrc":"25183:6:19","nodeType":"YulIdentifier","src":"25183:6:19"},"nativeSrc":"25183:47:19","nodeType":"YulFunctionCall","src":"25183:47:19"},"nativeSrc":"25183:47:19","nodeType":"YulExpressionStatement","src":"25183:47:19"}]},"name":"store_literal_in_memory_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660","nativeSrc":"25066:171:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"25164:6:19","nodeType":"YulTypedName","src":"25164:6:19","type":""}],"src":"25066:171:19"},{"body":{"nativeSrc":"25389:220:19","nodeType":"YulBlock","src":"25389:220:19","statements":[{"nativeSrc":"25399:74:19","nodeType":"YulAssignment","src":"25399:74:19","value":{"arguments":[{"name":"pos","nativeSrc":"25465:3:19","nodeType":"YulIdentifier","src":"25465:3:19"},{"kind":"number","nativeSrc":"25470:2:19","nodeType":"YulLiteral","src":"25470:2:19","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"25406:58:19","nodeType":"YulIdentifier","src":"25406:58:19"},"nativeSrc":"25406:67:19","nodeType":"YulFunctionCall","src":"25406:67:19"},"variableNames":[{"name":"pos","nativeSrc":"25399:3:19","nodeType":"YulIdentifier","src":"25399:3:19"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"25571:3:19","nodeType":"YulIdentifier","src":"25571:3:19"}],"functionName":{"name":"store_literal_in_memory_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660","nativeSrc":"25482:88:19","nodeType":"YulIdentifier","src":"25482:88:19"},"nativeSrc":"25482:93:19","nodeType":"YulFunctionCall","src":"25482:93:19"},"nativeSrc":"25482:93:19","nodeType":"YulExpressionStatement","src":"25482:93:19"},{"nativeSrc":"25584:19:19","nodeType":"YulAssignment","src":"25584:19:19","value":{"arguments":[{"name":"pos","nativeSrc":"25595:3:19","nodeType":"YulIdentifier","src":"25595:3:19"},{"kind":"number","nativeSrc":"25600:2:19","nodeType":"YulLiteral","src":"25600:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25591:3:19","nodeType":"YulIdentifier","src":"25591:3:19"},"nativeSrc":"25591:12:19","nodeType":"YulFunctionCall","src":"25591:12:19"},"variableNames":[{"name":"end","nativeSrc":"25584:3:19","nodeType":"YulIdentifier","src":"25584:3:19"}]}]},"name":"abi_encode_t_stringliteral_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660_to_t_string_memory_ptr_fromStack","nativeSrc":"25243:366:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"25377:3:19","nodeType":"YulTypedName","src":"25377:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"25385:3:19","nodeType":"YulTypedName","src":"25385:3:19","type":""}],"src":"25243:366:19"},{"body":{"nativeSrc":"25786:248:19","nodeType":"YulBlock","src":"25786:248:19","statements":[{"nativeSrc":"25796:26:19","nodeType":"YulAssignment","src":"25796:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"25808:9:19","nodeType":"YulIdentifier","src":"25808:9:19"},{"kind":"number","nativeSrc":"25819:2:19","nodeType":"YulLiteral","src":"25819:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"25804:3:19","nodeType":"YulIdentifier","src":"25804:3:19"},"nativeSrc":"25804:18:19","nodeType":"YulFunctionCall","src":"25804:18:19"},"variableNames":[{"name":"tail","nativeSrc":"25796:4:19","nodeType":"YulIdentifier","src":"25796:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"25843:9:19","nodeType":"YulIdentifier","src":"25843:9:19"},{"kind":"number","nativeSrc":"25854:1:19","nodeType":"YulLiteral","src":"25854:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"25839:3:19","nodeType":"YulIdentifier","src":"25839:3:19"},"nativeSrc":"25839:17:19","nodeType":"YulFunctionCall","src":"25839:17:19"},{"arguments":[{"name":"tail","nativeSrc":"25862:4:19","nodeType":"YulIdentifier","src":"25862:4:19"},{"name":"headStart","nativeSrc":"25868:9:19","nodeType":"YulIdentifier","src":"25868:9:19"}],"functionName":{"name":"sub","nativeSrc":"25858:3:19","nodeType":"YulIdentifier","src":"25858:3:19"},"nativeSrc":"25858:20:19","nodeType":"YulFunctionCall","src":"25858:20:19"}],"functionName":{"name":"mstore","nativeSrc":"25832:6:19","nodeType":"YulIdentifier","src":"25832:6:19"},"nativeSrc":"25832:47:19","nodeType":"YulFunctionCall","src":"25832:47:19"},"nativeSrc":"25832:47:19","nodeType":"YulExpressionStatement","src":"25832:47:19"},{"nativeSrc":"25888:139:19","nodeType":"YulAssignment","src":"25888:139:19","value":{"arguments":[{"name":"tail","nativeSrc":"26022:4:19","nodeType":"YulIdentifier","src":"26022:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660_to_t_string_memory_ptr_fromStack","nativeSrc":"25896:124:19","nodeType":"YulIdentifier","src":"25896:124:19"},"nativeSrc":"25896:131:19","nodeType":"YulFunctionCall","src":"25896:131:19"},"variableNames":[{"name":"tail","nativeSrc":"25888:4:19","nodeType":"YulIdentifier","src":"25888:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"25615:419:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"25766:9:19","nodeType":"YulTypedName","src":"25766:9:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"25781:4:19","nodeType":"YulTypedName","src":"25781:4:19","type":""}],"src":"25615:419:19"},{"body":{"nativeSrc":"26146:117:19","nodeType":"YulBlock","src":"26146:117:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"26168:6:19","nodeType":"YulIdentifier","src":"26168:6:19"},{"kind":"number","nativeSrc":"26176:1:19","nodeType":"YulLiteral","src":"26176:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26164:3:19","nodeType":"YulIdentifier","src":"26164:3:19"},"nativeSrc":"26164:14:19","nodeType":"YulFunctionCall","src":"26164:14:19"},{"hexValue":"594f552043414e204f4e4c5920564f5445204f4e204143544956452050524f50","kind":"string","nativeSrc":"26180:34:19","nodeType":"YulLiteral","src":"26180:34:19","type":"","value":"YOU CAN ONLY VOTE ON ACTIVE PROP"}],"functionName":{"name":"mstore","nativeSrc":"26157:6:19","nodeType":"YulIdentifier","src":"26157:6:19"},"nativeSrc":"26157:58:19","nodeType":"YulFunctionCall","src":"26157:58:19"},"nativeSrc":"26157:58:19","nodeType":"YulExpressionStatement","src":"26157:58:19"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"26236:6:19","nodeType":"YulIdentifier","src":"26236:6:19"},{"kind":"number","nativeSrc":"26244:2:19","nodeType":"YulLiteral","src":"26244:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26232:3:19","nodeType":"YulIdentifier","src":"26232:3:19"},"nativeSrc":"26232:15:19","nodeType":"YulFunctionCall","src":"26232:15:19"},{"hexValue":"4f53414c","kind":"string","nativeSrc":"26249:6:19","nodeType":"YulLiteral","src":"26249:6:19","type":"","value":"OSAL"}],"functionName":{"name":"mstore","nativeSrc":"26225:6:19","nodeType":"YulIdentifier","src":"26225:6:19"},"nativeSrc":"26225:31:19","nodeType":"YulFunctionCall","src":"26225:31:19"},"nativeSrc":"26225:31:19","nodeType":"YulExpressionStatement","src":"26225:31:19"}]},"name":"store_literal_in_memory_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f","nativeSrc":"26040:223:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"26138:6:19","nodeType":"YulTypedName","src":"26138:6:19","type":""}],"src":"26040:223:19"},{"body":{"nativeSrc":"26415:220:19","nodeType":"YulBlock","src":"26415:220:19","statements":[{"nativeSrc":"26425:74:19","nodeType":"YulAssignment","src":"26425:74:19","value":{"arguments":[{"name":"pos","nativeSrc":"26491:3:19","nodeType":"YulIdentifier","src":"26491:3:19"},{"kind":"number","nativeSrc":"26496:2:19","nodeType":"YulLiteral","src":"26496:2:19","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"26432:58:19","nodeType":"YulIdentifier","src":"26432:58:19"},"nativeSrc":"26432:67:19","nodeType":"YulFunctionCall","src":"26432:67:19"},"variableNames":[{"name":"pos","nativeSrc":"26425:3:19","nodeType":"YulIdentifier","src":"26425:3:19"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"26597:3:19","nodeType":"YulIdentifier","src":"26597:3:19"}],"functionName":{"name":"store_literal_in_memory_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f","nativeSrc":"26508:88:19","nodeType":"YulIdentifier","src":"26508:88:19"},"nativeSrc":"26508:93:19","nodeType":"YulFunctionCall","src":"26508:93:19"},"nativeSrc":"26508:93:19","nodeType":"YulExpressionStatement","src":"26508:93:19"},{"nativeSrc":"26610:19:19","nodeType":"YulAssignment","src":"26610:19:19","value":{"arguments":[{"name":"pos","nativeSrc":"26621:3:19","nodeType":"YulIdentifier","src":"26621:3:19"},{"kind":"number","nativeSrc":"26626:2:19","nodeType":"YulLiteral","src":"26626:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"26617:3:19","nodeType":"YulIdentifier","src":"26617:3:19"},"nativeSrc":"26617:12:19","nodeType":"YulFunctionCall","src":"26617:12:19"},"variableNames":[{"name":"end","nativeSrc":"26610:3:19","nodeType":"YulIdentifier","src":"26610:3:19"}]}]},"name":"abi_encode_t_stringliteral_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f_to_t_string_memory_ptr_fromStack","nativeSrc":"26269:366:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"26403:3:19","nodeType":"YulTypedName","src":"26403:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"26411:3:19","nodeType":"YulTypedName","src":"26411:3:19","type":""}],"src":"26269:366:19"},{"body":{"nativeSrc":"26812:248:19","nodeType":"YulBlock","src":"26812:248:19","statements":[{"nativeSrc":"26822:26:19","nodeType":"YulAssignment","src":"26822:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"26834:9:19","nodeType":"YulIdentifier","src":"26834:9:19"},{"kind":"number","nativeSrc":"26845:2:19","nodeType":"YulLiteral","src":"26845:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"26830:3:19","nodeType":"YulIdentifier","src":"26830:3:19"},"nativeSrc":"26830:18:19","nodeType":"YulFunctionCall","src":"26830:18:19"},"variableNames":[{"name":"tail","nativeSrc":"26822:4:19","nodeType":"YulIdentifier","src":"26822:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"26869:9:19","nodeType":"YulIdentifier","src":"26869:9:19"},{"kind":"number","nativeSrc":"26880:1:19","nodeType":"YulLiteral","src":"26880:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"26865:3:19","nodeType":"YulIdentifier","src":"26865:3:19"},"nativeSrc":"26865:17:19","nodeType":"YulFunctionCall","src":"26865:17:19"},{"arguments":[{"name":"tail","nativeSrc":"26888:4:19","nodeType":"YulIdentifier","src":"26888:4:19"},{"name":"headStart","nativeSrc":"26894:9:19","nodeType":"YulIdentifier","src":"26894:9:19"}],"functionName":{"name":"sub","nativeSrc":"26884:3:19","nodeType":"YulIdentifier","src":"26884:3:19"},"nativeSrc":"26884:20:19","nodeType":"YulFunctionCall","src":"26884:20:19"}],"functionName":{"name":"mstore","nativeSrc":"26858:6:19","nodeType":"YulIdentifier","src":"26858:6:19"},"nativeSrc":"26858:47:19","nodeType":"YulFunctionCall","src":"26858:47:19"},"nativeSrc":"26858:47:19","nodeType":"YulExpressionStatement","src":"26858:47:19"},{"nativeSrc":"26914:139:19","nodeType":"YulAssignment","src":"26914:139:19","value":{"arguments":[{"name":"tail","nativeSrc":"27048:4:19","nodeType":"YulIdentifier","src":"27048:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f_to_t_string_memory_ptr_fromStack","nativeSrc":"26922:124:19","nodeType":"YulIdentifier","src":"26922:124:19"},"nativeSrc":"26922:131:19","nodeType":"YulFunctionCall","src":"26922:131:19"},"variableNames":[{"name":"tail","nativeSrc":"26914:4:19","nodeType":"YulIdentifier","src":"26914:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"26641:419:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"26792:9:19","nodeType":"YulTypedName","src":"26792:9:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"26807:4:19","nodeType":"YulTypedName","src":"26807:4:19","type":""}],"src":"26641:419:19"},{"body":{"nativeSrc":"27172:57:19","nodeType":"YulBlock","src":"27172:57:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nativeSrc":"27194:6:19","nodeType":"YulIdentifier","src":"27194:6:19"},{"kind":"number","nativeSrc":"27202:1:19","nodeType":"YulLiteral","src":"27202:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27190:3:19","nodeType":"YulIdentifier","src":"27190:3:19"},"nativeSrc":"27190:14:19","nodeType":"YulFunctionCall","src":"27190:14:19"},{"hexValue":"414c524541445920564f544544","kind":"string","nativeSrc":"27206:15:19","nodeType":"YulLiteral","src":"27206:15:19","type":"","value":"ALREADY VOTED"}],"functionName":{"name":"mstore","nativeSrc":"27183:6:19","nodeType":"YulIdentifier","src":"27183:6:19"},"nativeSrc":"27183:39:19","nodeType":"YulFunctionCall","src":"27183:39:19"},"nativeSrc":"27183:39:19","nodeType":"YulExpressionStatement","src":"27183:39:19"}]},"name":"store_literal_in_memory_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130","nativeSrc":"27066:163:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"27164:6:19","nodeType":"YulTypedName","src":"27164:6:19","type":""}],"src":"27066:163:19"},{"body":{"nativeSrc":"27381:220:19","nodeType":"YulBlock","src":"27381:220:19","statements":[{"nativeSrc":"27391:74:19","nodeType":"YulAssignment","src":"27391:74:19","value":{"arguments":[{"name":"pos","nativeSrc":"27457:3:19","nodeType":"YulIdentifier","src":"27457:3:19"},{"kind":"number","nativeSrc":"27462:2:19","nodeType":"YulLiteral","src":"27462:2:19","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"27398:58:19","nodeType":"YulIdentifier","src":"27398:58:19"},"nativeSrc":"27398:67:19","nodeType":"YulFunctionCall","src":"27398:67:19"},"variableNames":[{"name":"pos","nativeSrc":"27391:3:19","nodeType":"YulIdentifier","src":"27391:3:19"}]},{"expression":{"arguments":[{"name":"pos","nativeSrc":"27563:3:19","nodeType":"YulIdentifier","src":"27563:3:19"}],"functionName":{"name":"store_literal_in_memory_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130","nativeSrc":"27474:88:19","nodeType":"YulIdentifier","src":"27474:88:19"},"nativeSrc":"27474:93:19","nodeType":"YulFunctionCall","src":"27474:93:19"},"nativeSrc":"27474:93:19","nodeType":"YulExpressionStatement","src":"27474:93:19"},{"nativeSrc":"27576:19:19","nodeType":"YulAssignment","src":"27576:19:19","value":{"arguments":[{"name":"pos","nativeSrc":"27587:3:19","nodeType":"YulIdentifier","src":"27587:3:19"},{"kind":"number","nativeSrc":"27592:2:19","nodeType":"YulLiteral","src":"27592:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27583:3:19","nodeType":"YulIdentifier","src":"27583:3:19"},"nativeSrc":"27583:12:19","nodeType":"YulFunctionCall","src":"27583:12:19"},"variableNames":[{"name":"end","nativeSrc":"27576:3:19","nodeType":"YulIdentifier","src":"27576:3:19"}]}]},"name":"abi_encode_t_stringliteral_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130_to_t_string_memory_ptr_fromStack","nativeSrc":"27235:366:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"27369:3:19","nodeType":"YulTypedName","src":"27369:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"27377:3:19","nodeType":"YulTypedName","src":"27377:3:19","type":""}],"src":"27235:366:19"},{"body":{"nativeSrc":"27778:248:19","nodeType":"YulBlock","src":"27778:248:19","statements":[{"nativeSrc":"27788:26:19","nodeType":"YulAssignment","src":"27788:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"27800:9:19","nodeType":"YulIdentifier","src":"27800:9:19"},{"kind":"number","nativeSrc":"27811:2:19","nodeType":"YulLiteral","src":"27811:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"27796:3:19","nodeType":"YulIdentifier","src":"27796:3:19"},"nativeSrc":"27796:18:19","nodeType":"YulFunctionCall","src":"27796:18:19"},"variableNames":[{"name":"tail","nativeSrc":"27788:4:19","nodeType":"YulIdentifier","src":"27788:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"27835:9:19","nodeType":"YulIdentifier","src":"27835:9:19"},{"kind":"number","nativeSrc":"27846:1:19","nodeType":"YulLiteral","src":"27846:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"27831:3:19","nodeType":"YulIdentifier","src":"27831:3:19"},"nativeSrc":"27831:17:19","nodeType":"YulFunctionCall","src":"27831:17:19"},{"arguments":[{"name":"tail","nativeSrc":"27854:4:19","nodeType":"YulIdentifier","src":"27854:4:19"},{"name":"headStart","nativeSrc":"27860:9:19","nodeType":"YulIdentifier","src":"27860:9:19"}],"functionName":{"name":"sub","nativeSrc":"27850:3:19","nodeType":"YulIdentifier","src":"27850:3:19"},"nativeSrc":"27850:20:19","nodeType":"YulFunctionCall","src":"27850:20:19"}],"functionName":{"name":"mstore","nativeSrc":"27824:6:19","nodeType":"YulIdentifier","src":"27824:6:19"},"nativeSrc":"27824:47:19","nodeType":"YulFunctionCall","src":"27824:47:19"},"nativeSrc":"27824:47:19","nodeType":"YulExpressionStatement","src":"27824:47:19"},{"nativeSrc":"27880:139:19","nodeType":"YulAssignment","src":"27880:139:19","value":{"arguments":[{"name":"tail","nativeSrc":"28014:4:19","nodeType":"YulIdentifier","src":"28014:4:19"}],"functionName":{"name":"abi_encode_t_stringliteral_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130_to_t_string_memory_ptr_fromStack","nativeSrc":"27888:124:19","nodeType":"YulIdentifier","src":"27888:124:19"},"nativeSrc":"27888:131:19","nodeType":"YulFunctionCall","src":"27888:131:19"},"variableNames":[{"name":"tail","nativeSrc":"27880:4:19","nodeType":"YulIdentifier","src":"27880:4:19"}]}]},"name":"abi_encode_tuple_t_stringliteral_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"27607:419:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"27758:9:19","nodeType":"YulTypedName","src":"27758:9:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"27773:4:19","nodeType":"YulTypedName","src":"27773:4:19","type":""}],"src":"27607:419:19"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Status_$6813(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Status_$6813(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$6813(value)\n    }\n\n    function convert_t_enum$_Status_$6813_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$6813(value)\n    }\n\n    function abi_encode_t_enum$_Status_$6813_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$6813_to_t_uint8(value))\n    }\n\n    // struct DAO.Proposal -> struct DAO.Proposal\n    function abi_encode_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // title\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // description\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // numOfVote\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // startTime\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // dealine\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // status\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_enum$_Status_$6813_to_t_uint8(memberValue0, add(pos, 0xa0))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Proposal_$6791_memory_ptr__to_t_struct$_Proposal_$6791_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct DAO.Proposal -> struct DAO.Proposal\n    function abi_encode_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // title\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // description\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // numOfVote\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // startTime\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // dealine\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // status\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_enum$_Status_$6813_to_t_uint8(memberValue0, add(pos, 0xa0))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct DAO.Proposal[] -> struct DAO.Proposal[]\n    function abi_encode_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_Proposal_$6791_memory_ptr_to_t_struct$_Proposal_$6791_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Proposal_$6791_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36(memPtr) {\n\n        mstore(add(memPtr, 0), \"YOU_CAN_ONLY_REVOKE_A_MEMBER_PER\")\n\n        mstore(add(memPtr, 32), \"MISSION\")\n\n    }\n\n    function abi_encode_t_stringliteral_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 39)\n        store_literal_in_memory_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24a29fd3a1b52f956ae725f57f75b05c529a4e86247e0ebe74dbd723b1957c36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only Admin can create Proposals\")\n\n    }\n\n    function abi_encode_t_stringliteral_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bb1aea68eb3d2ce7c78c4c097485d2193c3074a6f5c497ab80419b2a7886e792_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b(memPtr) {\n\n        mstore(add(memPtr, 0), \"YOU CANT VOTE ON EXPIRED PROPOSA\")\n\n        mstore(add(memPtr, 32), \"L\")\n\n    }\n\n    function abi_encode_t_stringliteral_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2e903aed6d2f7b15177d4b3e04429d7528418c759a06cbbc34a17ece002d6c8b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660(memPtr) {\n\n        mstore(add(memPtr, 0), \"YOU NEED ROLE TO VOTE\")\n\n    }\n\n    function abi_encode_t_stringliteral_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_99203ac632b2749431e14190dbf105704f11bc116377623348ebcd63201ae660_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f(memPtr) {\n\n        mstore(add(memPtr, 0), \"YOU CAN ONLY VOTE ON ACTIVE PROP\")\n\n        mstore(add(memPtr, 32), \"OSAL\")\n\n    }\n\n    function abi_encode_t_stringliteral_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2349695b80f2774a0842e9820a5cba9c35fafb451e1c80dfdb5c61901e39e73f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130(memPtr) {\n\n        mstore(add(memPtr, 0), \"ALREADY VOTED\")\n\n    }\n\n    function abi_encode_t_stringliteral_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_026a5ddf5202184c8b9615acd0a9b5b0f7c97ddfd33a3ecca209051f51265130_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100935760003560e01c80637d5aea4f116100665780637d5aea4f14610130578063bd611fe614610160578063c2ca95ec1461017c578063c706775214610198578063d5792041146101b657610093565b80630912ed771461009857806316e744bd146100b45780631f29d2dc146100d05780633eda520014610100575b600080fd5b6100b260048036038101906100ad919061146f565b6101d2565b005b6100ce60048036038101906100c991906114af565b61042a565b005b6100ea60048036038101906100e5919061146f565b61078e565b6040516100f79190611511565b60405180910390f35b61011a6004803603810190610115919061152c565b6108ab565b60405161012791906116ff565b60405180910390f35b61014a6004803603810190610145919061146f565b610a64565b6040516101579190611511565b60405180910390f35b61017a60048036038101906101759190611856565b610bd8565b005b6101966004803603810190610191919061152c565b610d8c565b005b6101a0611138565b6040516101ad9190611a33565b60405180910390f35b6101d060048036038101906101cb9190611a55565b611314565b005b60005b6000805490508110156103ea5760008082815481106101f7576101f6611ae0565b5b906000526020600020906004020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690507f829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d4636600083815481106102605761025f611ae0565b5b9060005260206000209060040201600001541480156102ef57508373ffffffffffffffffffffffffffffffffffffffff16600083815481106102a5576102a4611ae0565b5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b801561031f5750826000838154811061030b5761030a611ae0565b5b906000526020600020906004020160020154145b156103dc577f789719e83535ffb09d643a0bf25dd5104145ff4f4daf57b09a6a0db0bfdb82446000838154811061035957610358611ae0565b5b9060005260206000209060040201600001819055507f789719e83535ffb09d643a0bf25dd5104145ff4f4daf57b09a6a0db0bfdb8244600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055505050610426565b5080806001019150506101d5565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041d90611b92565b60405180910390fd5b5050565b60007f829b824e2329e205435d941c9f13baf578548505283d29261236d8e6596d463690506005600081548092919061046290611be1565b91905055925060405180608001604052808281526020018573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018373ffffffffffffffffffffffffffffffffffffffff16815250600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a144819483856040518363ffffffff1660e01b81526004016105f6929190611c38565b6020604051808303816000875af1158015610615573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106399190611c76565b506000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015481600001556001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600282015481600201556003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050565b6000805b6000805490508110156108a3578373ffffffffffffffffffffffffffffffffffffffff16600082815481106107ca576107c9611ae0565b5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156108435750826000828154811061082f5761082e611ae0565b5b906000526020600020906004020160020154145b15610896576000818154811061085c5761085b611ae0565b5b906000526020600020906004020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169150506108a5565b8080600101915050610792565b505b92915050565b6108b361137f565b600382815481106108c7576108c6611ae0565b5b90600052602060002090600602016040518060c00160405290816000820180546108f090611cd2565b80601f016020809104026020016040519081016040528092919081815260200182805461091c90611cd2565b80156109695780601f1061093e57610100808354040283529160200191610969565b820191906000526020600020905b81548152906001019060200180831161094c57829003601f168201915b5050505050815260200160018201805461098290611cd2565b80601f01602080910402602001604051908101604052809291908181526020018280546109ae90611cd2565b80156109fb5780601f106109d0576101008083540402835291602001916109fb565b820191906000526020600020905b8154815290600101906020018083116109de57829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff166003811115610a4757610a466115f8565b5b6003811115610a5957610a586115f8565b5b815250509050919050565b6000807fffa60083152bd11704a80cc8c7a409dad8aa74288b454a3ba0e94c0abc7cf168905060005b600080549050811015610bcf578473ffffffffffffffffffffffffffffffffffffffff1660008281548110610ac557610ac4611ae0565b5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015610b3e57508360008281548110610b2a57610b29611ae0565b5b906000526020600020906004020160020154145b8015610b6e57508160008281548110610b5a57610b59611ae0565b5b906000526020600020906004020160000154145b15610bc25760008181548110610b8757610b86611ae0565b5b906000526020600020906004020160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692505050610bd2565b8080600101915050610a8d565b50505b92915050565b6000603c82610be79190611d03565b42610bf29190611d45565b90507fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610c98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8f90611dc5565b60405180910390fd5b60006040518060c001604052808681526020018581526020016000815260200142815260200183815260200160006003811115610cd857610cd76115f8565b5b815250905060038190806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000019081610d1e9190611f91565b506020820151816001019081610d349190611f91565b5060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690836003811115610d7e57610d7d6115f8565b5b021790555050505050505050565b4260038281548110610da157610da0611ae0565b5b9060005260206000209060060201600401541115610e4257600160038281548110610dcf57610dce611ae0565b5b906000526020600020906006020160050160006101000a81548160ff02191690836003811115610e0257610e016115f8565b5b02179055506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e39906120d5565b60405180910390fd5b7fffa60083152bd11704a80cc8c7a409dad8aa74288b454a3ba0e94c0abc7cf168600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541480610f1357507fdf8b4c520ffe197c5343c6f5aec59570151ef9a492f2c624fd45ddde6135ec42600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154145b610f52576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4990612141565b60405180910390fd5b60006003811115610f6657610f656115f8565b5b60038281548110610f7a57610f79611ae0565b5b906000526020600020906006020160050160009054906101000a900460ff166003811115610fab57610faa6115f8565b5b14610feb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fe2906121d3565b60405180910390fd5b60011515600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060009054906101000a900460ff1615150361108f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110869061223f565b60405180910390fd5b6001600382815481106110a5576110a4611ae0565b5b906000526020600020906006020160020160008282546110c59190611d45565b925050819055506001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b60606003805480602002602001604051908101604052809291908181526020016000905b8282101561130b57838290600052602060002090600602016040518060c001604052908160008201805461118f90611cd2565b80601f01602080910402602001604051908101604052809291908181526020018280546111bb90611cd2565b80156112085780601f106111dd57610100808354040283529160200191611208565b820191906000526020600020905b8154815290600101906020018083116111eb57829003601f168201915b5050505050815260200160018201805461122190611cd2565b80601f016020809104026020016040519081016040528092919081815260200182805461124d90611cd2565b801561129a5780601f1061126f5761010080835404028352916020019161129a565b820191906000526020600020905b81548152906001019060200180831161127d57829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1660038111156112e6576112e56115f8565b5b60038111156112f8576112f76115f8565b5b815250508152602001906001019061115c565b50505050905090565b816003848154811061132957611328611ae0565b5b906000526020600020906006020160000190816113469190611f91565b50806003848154811061135c5761135b611ae0565b5b906000526020600020906006020160010190816113799190611f91565b50505050565b6040518060c001604052806060815260200160608152602001600081526020016000815260200160008152602001600060038111156113c1576113c06115f8565b5b81525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611406826113db565b9050919050565b611416816113fb565b811461142157600080fd5b50565b6000813590506114338161140d565b92915050565b6000819050919050565b61144c81611439565b811461145757600080fd5b50565b60008135905061146981611443565b92915050565b60008060408385031215611486576114856113d1565b5b600061149485828601611424565b92505060206114a58582860161145a565b9150509250929050565b6000806000606084860312156114c8576114c76113d1565b5b60006114d686828701611424565b93505060206114e78682870161145a565b92505060406114f886828701611424565b9150509250925092565b61150b816113fb565b82525050565b60006020820190506115266000830184611502565b92915050565b600060208284031215611542576115416113d1565b5b60006115508482850161145a565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611593578082015181840152602081019050611578565b60008484015250505050565b6000601f19601f8301169050919050565b60006115bb82611559565b6115c58185611564565b93506115d5818560208601611575565b6115de8161159f565b840191505092915050565b6115f281611439565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611638576116376115f8565b5b50565b600081905061164982611627565b919050565b60006116598261163b565b9050919050565b6116698161164e565b82525050565b600060c083016000830151848203600086015261168c82826115b0565b915050602083015184820360208601526116a682826115b0565b91505060408301516116bb60408601826115e9565b5060608301516116ce60608601826115e9565b5060808301516116e160808601826115e9565b5060a08301516116f460a0860182611660565b508091505092915050565b60006020820190508181036000830152611719818461166f565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6117638261159f565b810181811067ffffffffffffffff821117156117825761178161172b565b5b80604052505050565b60006117956113c7565b90506117a1828261175a565b919050565b600067ffffffffffffffff8211156117c1576117c061172b565b5b6117ca8261159f565b9050602081019050919050565b82818337600083830152505050565b60006117f96117f4846117a6565b61178b565b90508281526020810184848401111561181557611814611726565b5b6118208482856117d7565b509392505050565b600082601f83011261183d5761183c611721565b5b813561184d8482602086016117e6565b91505092915050565b60008060006060848603121561186f5761186e6113d1565b5b600084013567ffffffffffffffff81111561188d5761188c6113d6565b5b61189986828701611828565b935050602084013567ffffffffffffffff8111156118ba576118b96113d6565b5b6118c686828701611828565b92505060406118d78682870161145a565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060c083016000830151848203600086015261192a82826115b0565b9150506020830151848203602086015261194482826115b0565b915050604083015161195960408601826115e9565b50606083015161196c60608601826115e9565b50608083015161197f60808601826115e9565b5060a083015161199260a0860182611660565b508091505092915050565b60006119a9838361190d565b905092915050565b6000602082019050919050565b60006119c9826118e1565b6119d381856118ec565b9350836020820285016119e5856118fd565b8060005b85811015611a215784840389528151611a02858261199d565b9450611a0d836119b1565b925060208a019950506001810190506119e9565b50829750879550505050505092915050565b60006020820190508181036000830152611a4d81846119be565b905092915050565b600080600060608486031215611a6e57611a6d6113d1565b5b6000611a7c8682870161145a565b935050602084013567ffffffffffffffff811115611a9d57611a9c6113d6565b5b611aa986828701611828565b925050604084013567ffffffffffffffff811115611aca57611ac96113d6565b5b611ad686828701611828565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f594f555f43414e5f4f4e4c595f5245564f4b455f415f4d454d4245525f50455260008201527f4d495353494f4e00000000000000000000000000000000000000000000000000602082015250565b6000611b7c602783611b0f565b9150611b8782611b20565b604082019050919050565b60006020820190508181036000830152611bab81611b6f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611bec82611439565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611c1e57611c1d611bb2565b5b600182019050919050565b611c3281611439565b82525050565b6000604082019050611c4d6000830185611502565b611c5a6020830184611c29565b9392505050565b600081519050611c7081611443565b92915050565b600060208284031215611c8c57611c8b6113d1565b5b6000611c9a84828501611c61565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cea57607f821691505b602082108103611cfd57611cfc611ca3565b5b50919050565b6000611d0e82611439565b9150611d1983611439565b9250828202611d2781611439565b91508282048414831517611d3e57611d3d611bb2565b5b5092915050565b6000611d5082611439565b9150611d5b83611439565b9250828201905080821115611d7357611d72611bb2565b5b92915050565b7f4f6e6c792041646d696e2063616e206372656174652050726f706f73616c7300600082015250565b6000611daf601f83611b0f565b9150611dba82611d79565b602082019050919050565b60006020820190508181036000830152611dde81611da2565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611e477fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611e0a565b611e518683611e0a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611e8e611e89611e8484611439565b611e69565b611439565b9050919050565b6000819050919050565b611ea883611e73565b611ebc611eb482611e95565b848454611e17565b825550505050565b600090565b611ed1611ec4565b611edc818484611e9f565b505050565b5b81811015611f0057611ef5600082611ec9565b600181019050611ee2565b5050565b601f821115611f4557611f1681611de5565b611f1f84611dfa565b81016020851015611f2e578190505b611f42611f3a85611dfa565b830182611ee1565b50505b505050565b600082821c905092915050565b6000611f6860001984600802611f4a565b1980831691505092915050565b6000611f818383611f57565b9150826002028217905092915050565b611f9a82611559565b67ffffffffffffffff811115611fb357611fb261172b565b5b611fbd8254611cd2565b611fc8828285611f04565b600060209050601f831160018114611ffb5760008415611fe9578287015190505b611ff38582611f75565b86555061205b565b601f19841661200986611de5565b60005b828110156120315784890151825560018201915060208501945060208101905061200c565b8683101561204e578489015161204a601f891682611f57565b8355505b6001600288020188555050505b505050505050565b7f594f552043414e5420564f5445204f4e20455850495245442050524f504f534160008201527f4c00000000000000000000000000000000000000000000000000000000000000602082015250565b60006120bf602183611b0f565b91506120ca82612063565b604082019050919050565b600060208201905081810360008301526120ee816120b2565b9050919050565b7f594f55204e45454420524f4c4520544f20564f54450000000000000000000000600082015250565b600061212b601583611b0f565b9150612136826120f5565b602082019050919050565b6000602082019050818103600083015261215a8161211e565b9050919050565b7f594f552043414e204f4e4c5920564f5445204f4e204143544956452050524f5060008201527f4f53414c00000000000000000000000000000000000000000000000000000000602082015250565b60006121bd602483611b0f565b91506121c882612161565b604082019050919050565b600060208201905081810360008301526121ec816121b0565b9050919050565b7f414c524541445920564f54454400000000000000000000000000000000000000600082015250565b6000612229600d83611b0f565b9150612234826121f3565b602082019050919050565b600060208201905081810360008301526122588161221c565b905091905056fea26469706673582212203d30bd45406dcf1dd9663c5a8606a199a09688877205e39ac7772b187047036564736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D5AEA4F GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x7D5AEA4F EQ PUSH2 0x130 JUMPI DUP1 PUSH4 0xBD611FE6 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0xC2CA95EC EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xC7067752 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0xD5792041 EQ PUSH2 0x1B6 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0x912ED77 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x16E744BD EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x1F29D2DC EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x3EDA5200 EQ PUSH2 0x100 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH2 0x1D2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0x14AF JUMP JUMPDEST PUSH2 0x42A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH2 0x78E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x115 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x16FF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x145 SWAP2 SWAP1 PUSH2 0x146F JUMP JUMPDEST PUSH2 0xA64 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x157 SWAP2 SWAP1 PUSH2 0x1511 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0x1856 JUMP JUMPDEST PUSH2 0xBD8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x196 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x152C JUMP JUMPDEST PUSH2 0xD8C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A0 PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x1A33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x1A55 JUMP JUMPDEST PUSH2 0x1314 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x3EA JUMPI PUSH1 0x0 DUP1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F7 JUMPI PUSH2 0x1F6 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH32 0x829B824E2329E205435D941C9F13BAF578548505283D29261236D8E6596D4636 PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x260 JUMPI PUSH2 0x25F PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD SLOAD EQ DUP1 ISZERO PUSH2 0x2EF JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2A5 JUMPI PUSH2 0x2A4 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 ISZERO PUSH2 0x31F JUMPI POP DUP3 PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x30B JUMPI PUSH2 0x30A PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x3DC JUMPI PUSH32 0x789719E83535FFB09D643A0BF25DD5104145FF4F4DAF57B09A6A0DB0BFDB8244 PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x359 JUMPI PUSH2 0x358 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x789719E83535FFB09D643A0BF25DD5104145FF4F4DAF57B09A6A0DB0BFDB8244 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x426 JUMP JUMPDEST POP DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1D5 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x41D SWAP1 PUSH2 0x1B92 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x829B824E2329E205435D941C9F13BAF578548505283D29261236D8E6596D4636 SWAP1 POP PUSH1 0x5 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x462 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE SWAP3 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA1448194 DUP4 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5F6 SWAP3 SWAP2 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x615 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x639 SWAP2 SWAP1 PUSH2 0x1C76 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP3 ADD SLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x8A3 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x7CA JUMPI PUSH2 0x7C9 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x843 JUMPI POP DUP3 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x82F JUMPI PUSH2 0x82E PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x896 JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x85C JUMPI PUSH2 0x85B PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP PUSH2 0x8A5 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x792 JUMP JUMPDEST POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8B3 PUSH2 0x137F JUMP JUMPDEST PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8C7 JUMPI PUSH2 0x8C6 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x8F0 SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x91C SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x969 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x93E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x969 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x94C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x982 SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9AE SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA47 JUMPI PUSH2 0xA46 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA59 JUMPI PUSH2 0xA58 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0xFFA60083152BD11704A80CC8C7A409DAD8AA74288B454A3BA0E94C0ABC7CF168 SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0xBCF JUMPI DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xAC5 JUMPI PUSH2 0xAC4 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0xB3E JUMPI POP DUP4 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB2A JUMPI PUSH2 0xB29 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD EQ JUMPDEST DUP1 ISZERO PUSH2 0xB6E JUMPI POP DUP2 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB5A JUMPI PUSH2 0xB59 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0xBC2 JUMPI PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB87 JUMPI PUSH2 0xB86 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP POP PUSH2 0xBD2 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA8D JUMP JUMPDEST POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3C DUP3 PUSH2 0xBE7 SWAP2 SWAP1 PUSH2 0x1D03 JUMP JUMPDEST TIMESTAMP PUSH2 0xBF2 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST SWAP1 POP PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ PUSH2 0xC98 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC8F SWAP1 PUSH2 0x1DC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCD8 JUMPI PUSH2 0xCD7 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 POP PUSH1 0x3 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0xD1E SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0xD34 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD7E JUMPI PUSH2 0xD7D PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP JUMP JUMPDEST TIMESTAMP PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDA1 JUMPI PUSH2 0xDA0 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x4 ADD SLOAD GT ISZERO PUSH2 0xE42 JUMPI PUSH1 0x1 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xDCF JUMPI PUSH2 0xDCE PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE02 JUMPI PUSH2 0xE01 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE39 SWAP1 PUSH2 0x20D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xFFA60083152BD11704A80CC8C7A409DAD8AA74288B454A3BA0E94C0ABC7CF168 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ DUP1 PUSH2 0xF13 JUMPI POP PUSH32 0xDF8B4C520FFE197C5343C6F5AEC59570151EF9A492F2C624FD45DDDE6135EC42 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD EQ JUMPDEST PUSH2 0xF52 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF49 SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xF66 JUMPI PUSH2 0xF65 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF7A JUMPI PUSH2 0xF79 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xFAB JUMPI PUSH2 0xFAA PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xFEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFE2 SWAP1 PUSH2 0x21D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO SUB PUSH2 0x108F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1086 SWAP1 PUSH2 0x223F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10A5 JUMPI PUSH2 0x10A4 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x10C5 SWAP2 SWAP1 PUSH2 0x1D45 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x130B JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD PUSH2 0x118F SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11BB SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1208 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1208 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0x1221 SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x124D SWAP1 PUSH2 0x1CD2 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x129A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x126F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x129A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x127D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12E6 JUMPI PUSH2 0x12E5 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x12F8 JUMPI PUSH2 0x12F7 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x115C JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1329 JUMPI PUSH2 0x1328 PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x0 ADD SWAP1 DUP2 PUSH2 0x1346 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST POP DUP1 PUSH1 0x3 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x135C JUMPI PUSH2 0x135B PUSH2 0x1AE0 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x6 MUL ADD PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x1379 SWAP2 SWAP1 PUSH2 0x1F91 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13C1 JUMPI PUSH2 0x13C0 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1406 DUP3 PUSH2 0x13DB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1416 DUP2 PUSH2 0x13FB JUMP JUMPDEST DUP2 EQ PUSH2 0x1421 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1433 DUP2 PUSH2 0x140D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x144C DUP2 PUSH2 0x1439 JUMP JUMPDEST DUP2 EQ PUSH2 0x1457 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1469 DUP2 PUSH2 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1486 JUMPI PUSH2 0x1485 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1494 DUP6 DUP3 DUP7 ADD PUSH2 0x1424 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x14A5 DUP6 DUP3 DUP7 ADD PUSH2 0x145A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x14C8 JUMPI PUSH2 0x14C7 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D6 DUP7 DUP3 DUP8 ADD PUSH2 0x1424 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x14E7 DUP7 DUP3 DUP8 ADD PUSH2 0x145A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x14F8 DUP7 DUP3 DUP8 ADD PUSH2 0x1424 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x150B DUP2 PUSH2 0x13FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1526 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1502 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1542 JUMPI PUSH2 0x1541 PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1550 DUP5 DUP3 DUP6 ADD PUSH2 0x145A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1593 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1578 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15BB DUP3 PUSH2 0x1559 JUMP JUMPDEST PUSH2 0x15C5 DUP2 DUP6 PUSH2 0x1564 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D5 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1575 JUMP JUMPDEST PUSH2 0x15DE DUP2 PUSH2 0x159F JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15F2 DUP2 PUSH2 0x1439 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x1638 JUMPI PUSH2 0x1637 PUSH2 0x15F8 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x1649 DUP3 PUSH2 0x1627 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1659 DUP3 PUSH2 0x163B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1669 DUP2 PUSH2 0x164E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x168C DUP3 DUP3 PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x16A6 DUP3 DUP3 PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x16BB PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x15E9 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x16CE PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x15E9 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x16E1 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x15E9 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x16F4 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1719 DUP2 DUP5 PUSH2 0x166F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1763 DUP3 PUSH2 0x159F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1782 JUMPI PUSH2 0x1781 PUSH2 0x172B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1795 PUSH2 0x13C7 JUMP JUMPDEST SWAP1 POP PUSH2 0x17A1 DUP3 DUP3 PUSH2 0x175A JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x17C1 JUMPI PUSH2 0x17C0 PUSH2 0x172B JUMP JUMPDEST JUMPDEST PUSH2 0x17CA DUP3 PUSH2 0x159F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F9 PUSH2 0x17F4 DUP5 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0x178B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1815 JUMPI PUSH2 0x1814 PUSH2 0x1726 JUMP JUMPDEST JUMPDEST PUSH2 0x1820 DUP5 DUP3 DUP6 PUSH2 0x17D7 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x183D JUMPI PUSH2 0x183C PUSH2 0x1721 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x184D DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x17E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x186F JUMPI PUSH2 0x186E PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x188D JUMPI PUSH2 0x188C PUSH2 0x13D6 JUMP JUMPDEST JUMPDEST PUSH2 0x1899 DUP7 DUP3 DUP8 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18BA JUMPI PUSH2 0x18B9 PUSH2 0x13D6 JUMP JUMPDEST JUMPDEST PUSH2 0x18C6 DUP7 DUP3 DUP8 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x18D7 DUP7 DUP3 DUP8 ADD PUSH2 0x145A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x0 DUP7 ADD MSTORE PUSH2 0x192A DUP3 DUP3 PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x1944 DUP3 DUP3 PUSH2 0x15B0 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1959 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x15E9 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x196C PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x15E9 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x197F PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x15E9 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x1992 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x1660 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A9 DUP4 DUP4 PUSH2 0x190D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19C9 DUP3 PUSH2 0x18E1 JUMP JUMPDEST PUSH2 0x19D3 DUP2 DUP6 PUSH2 0x18EC JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x19E5 DUP6 PUSH2 0x18FD JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1A21 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x1A02 DUP6 DUP3 PUSH2 0x199D JUMP JUMPDEST SWAP5 POP PUSH2 0x1A0D DUP4 PUSH2 0x19B1 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x19E9 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4D DUP2 DUP5 PUSH2 0x19BE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A6E JUMPI PUSH2 0x1A6D PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A7C DUP7 DUP3 DUP8 ADD PUSH2 0x145A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A9D JUMPI PUSH2 0x1A9C PUSH2 0x13D6 JUMP JUMPDEST JUMPDEST PUSH2 0x1AA9 DUP7 DUP3 DUP8 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ACA JUMPI PUSH2 0x1AC9 PUSH2 0x13D6 JUMP JUMPDEST JUMPDEST PUSH2 0x1AD6 DUP7 DUP3 DUP8 ADD PUSH2 0x1828 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x594F555F43414E5F4F4E4C595F5245564F4B455F415F4D454D4245525F504552 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4D495353494F4E00000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B7C PUSH1 0x27 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x1B87 DUP3 PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BAB DUP2 PUSH2 0x1B6F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BEC DUP3 PUSH2 0x1439 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1C1E JUMPI PUSH2 0x1C1D PUSH2 0x1BB2 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C32 DUP2 PUSH2 0x1439 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1C4D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1502 JUMP JUMPDEST PUSH2 0x1C5A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C29 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1C70 DUP2 PUSH2 0x1443 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C8C JUMPI PUSH2 0x1C8B PUSH2 0x13D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C9A DUP5 DUP3 DUP6 ADD PUSH2 0x1C61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1CEA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CFD JUMPI PUSH2 0x1CFC PUSH2 0x1CA3 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D0E DUP3 PUSH2 0x1439 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D19 DUP4 PUSH2 0x1439 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D27 DUP2 PUSH2 0x1439 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D3E JUMPI PUSH2 0x1D3D PUSH2 0x1BB2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D50 DUP3 PUSH2 0x1439 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D5B DUP4 PUSH2 0x1439 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D73 JUMPI PUSH2 0x1D72 PUSH2 0x1BB2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C792041646D696E2063616E206372656174652050726F706F73616C7300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DAF PUSH1 0x1F DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x1DBA DUP3 PUSH2 0x1D79 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1DDE DUP2 PUSH2 0x1DA2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1E47 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x1E0A JUMP JUMPDEST PUSH2 0x1E51 DUP7 DUP4 PUSH2 0x1E0A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E8E PUSH2 0x1E89 PUSH2 0x1E84 DUP5 PUSH2 0x1439 JUMP JUMPDEST PUSH2 0x1E69 JUMP JUMPDEST PUSH2 0x1439 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EA8 DUP4 PUSH2 0x1E73 JUMP JUMPDEST PUSH2 0x1EBC PUSH2 0x1EB4 DUP3 PUSH2 0x1E95 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1E17 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1ED1 PUSH2 0x1EC4 JUMP JUMPDEST PUSH2 0x1EDC DUP2 DUP5 DUP5 PUSH2 0x1E9F JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F00 JUMPI PUSH2 0x1EF5 PUSH1 0x0 DUP3 PUSH2 0x1EC9 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1EE2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1F45 JUMPI PUSH2 0x1F16 DUP2 PUSH2 0x1DE5 JUMP JUMPDEST PUSH2 0x1F1F DUP5 PUSH2 0x1DFA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1F2E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1F42 PUSH2 0x1F3A DUP6 PUSH2 0x1DFA JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1EE1 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F68 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x1F4A JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F81 DUP4 DUP4 PUSH2 0x1F57 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F9A DUP3 PUSH2 0x1559 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FB3 JUMPI PUSH2 0x1FB2 PUSH2 0x172B JUMP JUMPDEST JUMPDEST PUSH2 0x1FBD DUP3 SLOAD PUSH2 0x1CD2 JUMP JUMPDEST PUSH2 0x1FC8 DUP3 DUP3 DUP6 PUSH2 0x1F04 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1FFB JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1FE9 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x1FF3 DUP6 DUP3 PUSH2 0x1F75 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x205B JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2009 DUP7 PUSH2 0x1DE5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2031 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x200C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x204E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x204A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1F57 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x594F552043414E5420564F5445204F4E20455850495245442050524F504F5341 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4C00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20BF PUSH1 0x21 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x20CA DUP3 PUSH2 0x2063 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x20EE DUP2 PUSH2 0x20B2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x594F55204E45454420524F4C4520544F20564F54450000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x212B PUSH1 0x15 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x2136 DUP3 PUSH2 0x20F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x215A DUP2 PUSH2 0x211E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x594F552043414E204F4E4C5920564F5445204F4E204143544956452050524F50 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x4F53414C00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x21BD PUSH1 0x24 DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x21C8 DUP3 PUSH2 0x2161 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21EC DUP2 PUSH2 0x21B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414C524541445920564F54454400000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2229 PUSH1 0xD DUP4 PUSH2 0x1B0F JUMP JUMPDEST SWAP2 POP PUSH2 0x2234 DUP3 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2258 DUP2 PUSH2 0x221C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE ADDRESS 0xBD GASLIMIT BLOCKHASH PUSH14 0xCF1DD9663C5A8606A199A0968887 PUSH19 0x5E39AC7772B187047036564736F6C63430008 NOT STOP CALLER ","sourceMap":"131:3739:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2691:495;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2329:358;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3191:285;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1153:112;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3481:380;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1269:423;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1696:630;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1055:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;857:194;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2691:495;2776:9;2772:354;2791:5;:12;;;;2787:1;:16;2772:354;;;2818:12;2833:5;2839:1;2833:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:18;;;;;;;;;;;;2818:33;;2881:24;2862:5;2868:1;2862:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:15;;;:43;:85;;;;;2934:13;2909:38;;:5;2915:1;2909:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;;;;;;;;;;:38;;;2862:85;:117;;;;;2971:8;2951:5;2957:1;2951:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;:28;2862:117;2859:261;;;3009:25;2991:5;2997:1;2991:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:15;;:43;;;;3069:25;3045:8;:14;3054:4;3045:14;;;;;;;;;;;;;;;:21;;:49;;;;3105:7;;;;2859:261;2810:316;2805:3;;;;;;;2772:354;;;;3132:49;;;;;;;;;;:::i;:::-;;;;;;;;2691:495;;;:::o;2329:358::-;2439:15;2457:24;2439:42;;2500:12;;:14;;;;;;;;;:::i;:::-;;;;;2489:25;;2546:50;;;;;;;;2551:7;2546:50;;;;2560:13;2546:50;;;;;;2575:8;2546:50;;;;2585:10;2546:50;;;;;2520:8;:23;2529:13;2520:23;;;;;;;;;;;;;;;:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2602:6;;;;;;;;;;;:15;;;2618:10;2630:8;2602:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2645:5;2656:8;:20;2665:10;2656:20;;;;;;;;;;;;;;;2645:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2433:254;2329:358;;;:::o;3191:285::-;3272:14;3303:9;3299:172;3318:5;:12;;;;3314:1;:16;3299:172;;;3373:13;3348:38;;:5;3354:1;3348:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;;;;;;;;;;:38;;;:70;;;;;3410:8;3390:5;3396:1;3390:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;:28;3348:70;3345:120;;;3438:5;3444:1;3438:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:18;;;;;;;;;;;;3431:25;;;;;3345:120;3332:3;;;;;;;3299:172;;;;3191:285;;;;;:::o;1153:112::-;1213:15;;:::i;:::-;1243:9;1253:6;1243:17;;;;;;;;:::i;:::-;;;;;;;;;;;;1236:24;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1153:112;;;:::o;3481:380::-;3579:18;3605:15;3623:19;3605:37;;3654:9;3650:207;3669:5;:12;;;;3665:1;:16;3650:207;;;3729:13;3704:38;;:5;3710:1;3704:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:21;;;;;;;;;;;;:38;;;:70;;;;;3766:8;3746:5;3752:1;3746:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:16;;;:28;3704:70;:100;;;;;3797:7;3778:5;3784:1;3778:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:15;;;:26;3704:100;3701:150;;;3824:5;3830:1;3824:8;;;;;;;;:::i;:::-;;;;;;;;;;;;:18;;;;;;;;;;;;3817:25;;;;;;3701:150;3683:3;;;;;;;3650:207;;;;3599:262;3481:380;;;;;:::o;1269:423::-;1379:17;1430:9;1418;:21;;;;:::i;:::-;1399:15;:41;;;;:::i;:::-;1379:61;;1485:18;1454:8;:20;1463:10;1454:20;;;;;;;;;;;;;;;:27;;;:49;1446:93;;;;;;;;;;;;:::i;:::-;;;;;;;;;1550:25;1578:76;;;;;;;;1587:6;1578:76;;;;1595:12;1578:76;;;;1609:1;1578:76;;;;1612:15;1578:76;;;;1629:9;1578:76;;;;1640:13;1578:76;;;;;;;;:::i;:::-;;;;;1550:104;;1661:9;1676;1661:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;1372:320;;1269:423;;;:::o;1696:630::-;1784:15;1756:9;1766:6;1756:17;;;;;;;;:::i;:::-;;;;;;;;;;;;:25;;;:43;1753:156;;;1836:14;1809:9;1819:6;1809:17;;;;;;;;:::i;:::-;;;;;;;;;;;;:24;;;:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1859:43;;;;;;;;;;:::i;:::-;;;;;;;;1753:156;1954:19;1923:8;:20;1932:10;1923:20;;;;;;;;;;;;;;;:27;;;:50;:103;;;;2008:18;1977:8;:20;1986:10;1977:20;;;;;;;;;;;;;;;:27;;;:49;1923:103;1915:137;;;;;;;;;;;;:::i;:::-;;;;;;;;;2098:13;2070:41;;;;;;;;:::i;:::-;;:9;2080:6;2070:17;;;;;;;;:::i;:::-;;;;;;;;;;;;:24;;;;;;;;;;;;:41;;;;;;;;:::i;:::-;;;2062:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;2198:4;2166:36;;:8;:20;2175:10;2166:20;;;;;;;;;;;;;;;:28;2187:6;2166:28;;;;;;;;;;;;;;;;;;;;;:36;;;2163:79;;2212:23;;;;;;;;;;:::i;:::-;;;;;;;;2163:79;2279:1;2248:9;2258:6;2248:17;;;;;;;;:::i;:::-;;;;;;;;;;;;:27;;;:32;;;;;;;:::i;:::-;;;;;;;;2317:4;2286:8;:20;2295:10;2286:20;;;;;;;;;;;;;;;:28;2307:6;2286:28;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;1696:630;:::o;1055:94::-;1103:17;1135:9;1128:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1055:94;:::o;857:194::-;990:6;964:9;974:6;964:17;;;;;;;;:::i;:::-;;;;;;;;;;;;:23;;:32;;;;;;:::i;:::-;;1034:12;1002:9;1012:6;1002:17;;;;;;;;:::i;:::-;;;;;;;;;;;;:29;;:44;;;;;;:::i;:::-;;857:194;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:619::-;1754:6;1762;1770;1819:2;1807:9;1798:7;1794:23;1790:32;1787:119;;;1825:79;;:::i;:::-;1787:119;1945:1;1970:53;2015:7;2006:6;1995:9;1991:22;1970:53;:::i;:::-;1960:63;;1916:117;2072:2;2098:53;2143:7;2134:6;2123:9;2119:22;2098:53;:::i;:::-;2088:63;;2043:118;2200:2;2226:53;2271:7;2262:6;2251:9;2247:22;2226:53;:::i;:::-;2216:63;;2171:118;1677:619;;;;;:::o;2302:118::-;2389:24;2407:5;2389:24;:::i;:::-;2384:3;2377:37;2302:118;;:::o;2426:222::-;2519:4;2557:2;2546:9;2542:18;2534:26;;2570:71;2638:1;2627:9;2623:17;2614:6;2570:71;:::i;:::-;2426:222;;;;:::o;2654:329::-;2713:6;2762:2;2750:9;2741:7;2737:23;2733:32;2730:119;;;2768:79;;:::i;:::-;2730:119;2888:1;2913:53;2958:7;2949:6;2938:9;2934:22;2913:53;:::i;:::-;2903:63;;2859:117;2654:329;;;;:::o;2989:99::-;3041:6;3075:5;3069:12;3059:22;;2989:99;;;:::o;3094:159::-;3168:11;3202:6;3197:3;3190:19;3242:4;3237:3;3233:14;3218:29;;3094:159;;;;:::o;3259:248::-;3341:1;3351:113;3365:6;3362:1;3359:13;3351:113;;;3450:1;3445:3;3441:11;3435:18;3431:1;3426:3;3422:11;3415:39;3387:2;3384:1;3380:10;3375:15;;3351:113;;;3498:1;3489:6;3484:3;3480:16;3473:27;3321:186;3259:248;;;:::o;3513:102::-;3554:6;3605:2;3601:7;3596:2;3589:5;3585:14;3581:28;3571:38;;3513:102;;;:::o;3621:357::-;3699:3;3727:39;3760:5;3727:39;:::i;:::-;3782:61;3836:6;3831:3;3782:61;:::i;:::-;3775:68;;3852:65;3910:6;3905:3;3898:4;3891:5;3887:16;3852:65;:::i;:::-;3942:29;3964:6;3942:29;:::i;:::-;3937:3;3933:39;3926:46;;3703:275;3621:357;;;;:::o;3984:108::-;4061:24;4079:5;4061:24;:::i;:::-;4056:3;4049:37;3984:108;;:::o;4098:180::-;4146:77;4143:1;4136:88;4243:4;4240:1;4233:15;4267:4;4264:1;4257:15;4284:116;4368:1;4361:5;4358:12;4348:46;;4374:18;;:::i;:::-;4348:46;4284:116;:::o;4406:133::-;4454:7;4483:5;4472:16;;4489:44;4527:5;4489:44;:::i;:::-;4406:133;;;:::o;4545:::-;4604:9;4637:35;4666:5;4637:35;:::i;:::-;4624:48;;4545:133;;;:::o;4684:139::-;4770:46;4810:5;4770:46;:::i;:::-;4765:3;4758:59;4684:139;;:::o;4879:1407::-;5000:3;5036:4;5031:3;5027:14;5124:4;5117:5;5113:16;5107:23;5177:3;5171:4;5167:14;5160:4;5155:3;5151:14;5144:38;5203:73;5271:4;5257:12;5203:73;:::i;:::-;5195:81;;5051:236;5376:4;5369:5;5365:16;5359:23;5429:3;5423:4;5419:14;5412:4;5407:3;5403:14;5396:38;5455:73;5523:4;5509:12;5455:73;:::i;:::-;5447:81;;5297:242;5626:4;5619:5;5615:16;5609:23;5645:63;5702:4;5697:3;5693:14;5679:12;5645:63;:::i;:::-;5549:169;5805:4;5798:5;5794:16;5788:23;5824:63;5881:4;5876:3;5872:14;5858:12;5824:63;:::i;:::-;5728:169;5982:4;5975:5;5971:16;5965:23;6001:63;6058:4;6053:3;6049:14;6035:12;6001:63;:::i;:::-;5907:167;6158:4;6151:5;6147:16;6141:23;6177:72;6243:4;6238:3;6234:14;6220:12;6177:72;:::i;:::-;6084:175;6276:4;6269:11;;5005:1281;4879:1407;;;;:::o;6292:377::-;6437:4;6475:2;6464:9;6460:18;6452:26;;6524:9;6518:4;6514:20;6510:1;6499:9;6495:17;6488:47;6552:110;6657:4;6648:6;6552:110;:::i;:::-;6544:118;;6292:377;;;;:::o;6675:117::-;6784:1;6781;6774:12;6798:117;6907:1;6904;6897:12;6921:180;6969:77;6966:1;6959:88;7066:4;7063:1;7056:15;7090:4;7087:1;7080:15;7107:281;7190:27;7212:4;7190:27;:::i;:::-;7182:6;7178:40;7320:6;7308:10;7305:22;7284:18;7272:10;7269:34;7266:62;7263:88;;;7331:18;;:::i;:::-;7263:88;7371:10;7367:2;7360:22;7150:238;7107:281;;:::o;7394:129::-;7428:6;7455:20;;:::i;:::-;7445:30;;7484:33;7512:4;7504:6;7484:33;:::i;:::-;7394:129;;;:::o;7529:308::-;7591:4;7681:18;7673:6;7670:30;7667:56;;;7703:18;;:::i;:::-;7667:56;7741:29;7763:6;7741:29;:::i;:::-;7733:37;;7825:4;7819;7815:15;7807:23;;7529:308;;;:::o;7843:148::-;7941:6;7936:3;7931;7918:30;7982:1;7973:6;7968:3;7964:16;7957:27;7843:148;;;:::o;7997:425::-;8075:5;8100:66;8116:49;8158:6;8116:49;:::i;:::-;8100:66;:::i;:::-;8091:75;;8189:6;8182:5;8175:21;8227:4;8220:5;8216:16;8265:3;8256:6;8251:3;8247:16;8244:25;8241:112;;;8272:79;;:::i;:::-;8241:112;8362:54;8409:6;8404:3;8399;8362:54;:::i;:::-;8081:341;7997:425;;;;;:::o;8442:340::-;8498:5;8547:3;8540:4;8532:6;8528:17;8524:27;8514:122;;8555:79;;:::i;:::-;8514:122;8672:6;8659:20;8697:79;8772:3;8764:6;8757:4;8749:6;8745:17;8697:79;:::i;:::-;8688:88;;8504:278;8442:340;;;;:::o;8788:979::-;8885:6;8893;8901;8950:2;8938:9;8929:7;8925:23;8921:32;8918:119;;;8956:79;;:::i;:::-;8918:119;9104:1;9093:9;9089:17;9076:31;9134:18;9126:6;9123:30;9120:117;;;9156:79;;:::i;:::-;9120:117;9261:63;9316:7;9307:6;9296:9;9292:22;9261:63;:::i;:::-;9251:73;;9047:287;9401:2;9390:9;9386:18;9373:32;9432:18;9424:6;9421:30;9418:117;;;9454:79;;:::i;:::-;9418:117;9559:63;9614:7;9605:6;9594:9;9590:22;9559:63;:::i;:::-;9549:73;;9344:288;9671:2;9697:53;9742:7;9733:6;9722:9;9718:22;9697:53;:::i;:::-;9687:63;;9642:118;8788:979;;;;;:::o;9773:140::-;9866:6;9900:5;9894:12;9884:22;;9773:140;;;:::o;9919:210::-;10044:11;10078:6;10073:3;10066:19;10118:4;10113:3;10109:14;10094:29;;9919:210;;;;:::o;10135:158::-;10228:4;10251:3;10243:11;;10281:4;10276:3;10272:14;10264:22;;10135:158;;;:::o;10349:1397::-;10460:3;10496:4;10491:3;10487:14;10584:4;10577:5;10573:16;10567:23;10637:3;10631:4;10627:14;10620:4;10615:3;10611:14;10604:38;10663:73;10731:4;10717:12;10663:73;:::i;:::-;10655:81;;10511:236;10836:4;10829:5;10825:16;10819:23;10889:3;10883:4;10879:14;10872:4;10867:3;10863:14;10856:38;10915:73;10983:4;10969:12;10915:73;:::i;:::-;10907:81;;10757:242;11086:4;11079:5;11075:16;11069:23;11105:63;11162:4;11157:3;11153:14;11139:12;11105:63;:::i;:::-;11009:169;11265:4;11258:5;11254:16;11248:23;11284:63;11341:4;11336:3;11332:14;11318:12;11284:63;:::i;:::-;11188:169;11442:4;11435:5;11431:16;11425:23;11461:63;11518:4;11513:3;11509:14;11495:12;11461:63;:::i;:::-;11367:167;11618:4;11611:5;11607:16;11601:23;11637:72;11703:4;11698:3;11694:14;11680:12;11637:72;:::i;:::-;11544:175;11736:4;11729:11;;10465:1281;10349:1397;;;;:::o;11752:260::-;11873:10;11908:98;12002:3;11994:6;11908:98;:::i;:::-;11894:112;;11752:260;;;;:::o;12018:139::-;12114:4;12146;12141:3;12137:14;12129:22;;12018:139;;;:::o;12217:1119::-;12388:3;12417:80;12491:5;12417:80;:::i;:::-;12513:112;12618:6;12613:3;12513:112;:::i;:::-;12506:119;;12651:3;12696:4;12688:6;12684:17;12679:3;12675:27;12726:82;12802:5;12726:82;:::i;:::-;12831:7;12862:1;12847:444;12872:6;12869:1;12866:13;12847:444;;;12943:9;12937:4;12933:20;12928:3;12921:33;12994:6;12988:13;13022:116;13133:4;13118:13;13022:116;:::i;:::-;13014:124;;13161:86;13240:6;13161:86;:::i;:::-;13151:96;;13276:4;13271:3;13267:14;13260:21;;12907:384;12894:1;12891;12887:9;12882:14;;12847:444;;;12851:14;13307:4;13300:11;;13327:3;13320:10;;12393:943;;;;;12217:1119;;;;:::o;13342:477::-;13537:4;13575:2;13564:9;13560:18;13552:26;;13624:9;13618:4;13614:20;13610:1;13599:9;13595:17;13588:47;13652:160;13807:4;13798:6;13652:160;:::i;:::-;13644:168;;13342:477;;;;:::o;13825:979::-;13922:6;13930;13938;13987:2;13975:9;13966:7;13962:23;13958:32;13955:119;;;13993:79;;:::i;:::-;13955:119;14113:1;14138:53;14183:7;14174:6;14163:9;14159:22;14138:53;:::i;:::-;14128:63;;14084:117;14268:2;14257:9;14253:18;14240:32;14299:18;14291:6;14288:30;14285:117;;;14321:79;;:::i;:::-;14285:117;14426:63;14481:7;14472:6;14461:9;14457:22;14426:63;:::i;:::-;14416:73;;14211:288;14566:2;14555:9;14551:18;14538:32;14597:18;14589:6;14586:30;14583:117;;;14619:79;;:::i;:::-;14583:117;14724:63;14779:7;14770:6;14759:9;14755:22;14724:63;:::i;:::-;14714:73;;14509:288;13825:979;;;;;:::o;14810:180::-;14858:77;14855:1;14848:88;14955:4;14952:1;14945:15;14979:4;14976:1;14969:15;14996:169;15080:11;15114:6;15109:3;15102:19;15154:4;15149:3;15145:14;15130:29;;14996:169;;;;:::o;15171:226::-;15311:34;15307:1;15299:6;15295:14;15288:58;15380:9;15375:2;15367:6;15363:15;15356:34;15171:226;:::o;15403:366::-;15545:3;15566:67;15630:2;15625:3;15566:67;:::i;:::-;15559:74;;15642:93;15731:3;15642:93;:::i;:::-;15760:2;15755:3;15751:12;15744:19;;15403:366;;;:::o;15775:419::-;15941:4;15979:2;15968:9;15964:18;15956:26;;16028:9;16022:4;16018:20;16014:1;16003:9;15999:17;15992:47;16056:131;16182:4;16056:131;:::i;:::-;16048:139;;15775:419;;;:::o;16200:180::-;16248:77;16245:1;16238:88;16345:4;16342:1;16335:15;16369:4;16366:1;16359:15;16386:233;16425:3;16448:24;16466:5;16448:24;:::i;:::-;16439:33;;16494:66;16487:5;16484:77;16481:103;;16564:18;;:::i;:::-;16481:103;16611:1;16604:5;16600:13;16593:20;;16386:233;;;:::o;16625:118::-;16712:24;16730:5;16712:24;:::i;:::-;16707:3;16700:37;16625:118;;:::o;16749:332::-;16870:4;16908:2;16897:9;16893:18;16885:26;;16921:71;16989:1;16978:9;16974:17;16965:6;16921:71;:::i;:::-;17002:72;17070:2;17059:9;17055:18;17046:6;17002:72;:::i;:::-;16749:332;;;;;:::o;17087:143::-;17144:5;17175:6;17169:13;17160:22;;17191:33;17218:5;17191:33;:::i;:::-;17087:143;;;;:::o;17236:351::-;17306:6;17355:2;17343:9;17334:7;17330:23;17326:32;17323:119;;;17361:79;;:::i;:::-;17323:119;17481:1;17506:64;17562:7;17553:6;17542:9;17538:22;17506:64;:::i;:::-;17496:74;;17452:128;17236:351;;;;:::o;17593:180::-;17641:77;17638:1;17631:88;17738:4;17735:1;17728:15;17762:4;17759:1;17752:15;17779:320;17823:6;17860:1;17854:4;17850:12;17840:22;;17907:1;17901:4;17897:12;17928:18;17918:81;;17984:4;17976:6;17972:17;17962:27;;17918:81;18046:2;18038:6;18035:14;18015:18;18012:38;18009:84;;18065:18;;:::i;:::-;18009:84;17830:269;17779:320;;;:::o;18105:410::-;18145:7;18168:20;18186:1;18168:20;:::i;:::-;18163:25;;18202:20;18220:1;18202:20;:::i;:::-;18197:25;;18257:1;18254;18250:9;18279:30;18297:11;18279:30;:::i;:::-;18268:41;;18458:1;18449:7;18445:15;18442:1;18439:22;18419:1;18412:9;18392:83;18369:139;;18488:18;;:::i;:::-;18369:139;18153:362;18105:410;;;;:::o;18521:191::-;18561:3;18580:20;18598:1;18580:20;:::i;:::-;18575:25;;18614:20;18632:1;18614:20;:::i;:::-;18609:25;;18657:1;18654;18650:9;18643:16;;18678:3;18675:1;18672:10;18669:36;;;18685:18;;:::i;:::-;18669:36;18521:191;;;;:::o;18718:181::-;18858:33;18854:1;18846:6;18842:14;18835:57;18718:181;:::o;18905:366::-;19047:3;19068:67;19132:2;19127:3;19068:67;:::i;:::-;19061:74;;19144:93;19233:3;19144:93;:::i;:::-;19262:2;19257:3;19253:12;19246:19;;18905:366;;;:::o;19277:419::-;19443:4;19481:2;19470:9;19466:18;19458:26;;19530:9;19524:4;19520:20;19516:1;19505:9;19501:17;19494:47;19558:131;19684:4;19558:131;:::i;:::-;19550:139;;19277:419;;;:::o;19702:141::-;19751:4;19774:3;19766:11;;19797:3;19794:1;19787:14;19831:4;19828:1;19818:18;19810:26;;19702:141;;;:::o;19849:93::-;19886:6;19933:2;19928;19921:5;19917:14;19913:23;19903:33;;19849:93;;;:::o;19948:107::-;19992:8;20042:5;20036:4;20032:16;20011:37;;19948:107;;;;:::o;20061:393::-;20130:6;20180:1;20168:10;20164:18;20203:97;20233:66;20222:9;20203:97;:::i;:::-;20321:39;20351:8;20340:9;20321:39;:::i;:::-;20309:51;;20393:4;20389:9;20382:5;20378:21;20369:30;;20442:4;20432:8;20428:19;20421:5;20418:30;20408:40;;20137:317;;20061:393;;;;;:::o;20460:60::-;20488:3;20509:5;20502:12;;20460:60;;;:::o;20526:142::-;20576:9;20609:53;20627:34;20636:24;20654:5;20636:24;:::i;:::-;20627:34;:::i;:::-;20609:53;:::i;:::-;20596:66;;20526:142;;;:::o;20674:75::-;20717:3;20738:5;20731:12;;20674:75;;;:::o;20755:269::-;20865:39;20896:7;20865:39;:::i;:::-;20926:91;20975:41;20999:16;20975:41;:::i;:::-;20967:6;20960:4;20954:11;20926:91;:::i;:::-;20920:4;20913:105;20831:193;20755:269;;;:::o;21030:73::-;21075:3;21030:73;:::o;21109:189::-;21186:32;;:::i;:::-;21227:65;21285:6;21277;21271:4;21227:65;:::i;:::-;21162:136;21109:189;;:::o;21304:186::-;21364:120;21381:3;21374:5;21371:14;21364:120;;;21435:39;21472:1;21465:5;21435:39;:::i;:::-;21408:1;21401:5;21397:13;21388:22;;21364:120;;;21304:186;;:::o;21496:543::-;21597:2;21592:3;21589:11;21586:446;;;21631:38;21663:5;21631:38;:::i;:::-;21715:29;21733:10;21715:29;:::i;:::-;21705:8;21701:44;21898:2;21886:10;21883:18;21880:49;;;21919:8;21904:23;;21880:49;21942:80;21998:22;22016:3;21998:22;:::i;:::-;21988:8;21984:37;21971:11;21942:80;:::i;:::-;21601:431;;21586:446;21496:543;;;:::o;22045:117::-;22099:8;22149:5;22143:4;22139:16;22118:37;;22045:117;;;;:::o;22168:169::-;22212:6;22245:51;22293:1;22289:6;22281:5;22278:1;22274:13;22245:51;:::i;:::-;22241:56;22326:4;22320;22316:15;22306:25;;22219:118;22168:169;;;;:::o;22342:295::-;22418:4;22564:29;22589:3;22583:4;22564:29;:::i;:::-;22556:37;;22626:3;22623:1;22619:11;22613:4;22610:21;22602:29;;22342:295;;;;:::o;22642:1395::-;22759:37;22792:3;22759:37;:::i;:::-;22861:18;22853:6;22850:30;22847:56;;;22883:18;;:::i;:::-;22847:56;22927:38;22959:4;22953:11;22927:38;:::i;:::-;23012:67;23072:6;23064;23058:4;23012:67;:::i;:::-;23106:1;23130:4;23117:17;;23162:2;23154:6;23151:14;23179:1;23174:618;;;;23836:1;23853:6;23850:77;;;23902:9;23897:3;23893:19;23887:26;23878:35;;23850:77;23953:67;24013:6;24006:5;23953:67;:::i;:::-;23947:4;23940:81;23809:222;23144:887;;23174:618;23226:4;23222:9;23214:6;23210:22;23260:37;23292:4;23260:37;:::i;:::-;23319:1;23333:208;23347:7;23344:1;23341:14;23333:208;;;23426:9;23421:3;23417:19;23411:26;23403:6;23396:42;23477:1;23469:6;23465:14;23455:24;;23524:2;23513:9;23509:18;23496:31;;23370:4;23367:1;23363:12;23358:17;;23333:208;;;23569:6;23560:7;23557:19;23554:179;;;23627:9;23622:3;23618:19;23612:26;23670:48;23712:4;23704:6;23700:17;23689:9;23670:48;:::i;:::-;23662:6;23655:64;23577:156;23554:179;23779:1;23775;23767:6;23763:14;23759:22;23753:4;23746:36;23181:611;;;23144:887;;22734:1303;;;22642:1395;;:::o;24043:220::-;24183:34;24179:1;24171:6;24167:14;24160:58;24252:3;24247:2;24239:6;24235:15;24228:28;24043:220;:::o;24269:366::-;24411:3;24432:67;24496:2;24491:3;24432:67;:::i;:::-;24425:74;;24508:93;24597:3;24508:93;:::i;:::-;24626:2;24621:3;24617:12;24610:19;;24269:366;;;:::o;24641:419::-;24807:4;24845:2;24834:9;24830:18;24822:26;;24894:9;24888:4;24884:20;24880:1;24869:9;24865:17;24858:47;24922:131;25048:4;24922:131;:::i;:::-;24914:139;;24641:419;;;:::o;25066:171::-;25206:23;25202:1;25194:6;25190:14;25183:47;25066:171;:::o;25243:366::-;25385:3;25406:67;25470:2;25465:3;25406:67;:::i;:::-;25399:74;;25482:93;25571:3;25482:93;:::i;:::-;25600:2;25595:3;25591:12;25584:19;;25243:366;;;:::o;25615:419::-;25781:4;25819:2;25808:9;25804:18;25796:26;;25868:9;25862:4;25858:20;25854:1;25843:9;25839:17;25832:47;25896:131;26022:4;25896:131;:::i;:::-;25888:139;;25615:419;;;:::o;26040:223::-;26180:34;26176:1;26168:6;26164:14;26157:58;26249:6;26244:2;26236:6;26232:15;26225:31;26040:223;:::o;26269:366::-;26411:3;26432:67;26496:2;26491:3;26432:67;:::i;:::-;26425:74;;26508:93;26597:3;26508:93;:::i;:::-;26626:2;26621:3;26617:12;26610:19;;26269:366;;;:::o;26641:419::-;26807:4;26845:2;26834:9;26830:18;26822:26;;26894:9;26888:4;26884:20;26880:1;26869:9;26865:17;26858:47;26922:131;27048:4;26922:131;:::i;:::-;26914:139;;26641:419;;;:::o;27066:163::-;27206:15;27202:1;27194:6;27190:14;27183:39;27066:163;:::o;27235:366::-;27377:3;27398:67;27462:2;27457:3;27398:67;:::i;:::-;27391:74;;27474:93;27563:3;27474:93;:::i;:::-;27592:2;27587:3;27583:12;27576:19;;27235:366;;;:::o;27607:419::-;27773:4;27811:2;27800:9;27796:18;27788:26;;27860:9;27854:4;27850:20;27846:1;27835:9;27831:17;27824:47;27888:131;28014:4;27888:131;:::i;:::-;27880:139;;27607:419;;;:::o"},"methodIdentifiers":{"create_proposal(string,string,uint256)":"bd611fe6","get_proposal(uint256)":"3eda5200","get_proposals()":"c7067752","grantRole(address,uint256,address)":"16e744bd","ownerOf(address,uint256)":"1f29d2dc","recipientOf(address,uint256)":"7d5aea4f","revokeRole(address,uint256)":"0912ed77","update_proposal(uint256,string,string)":"d5792041","vote_on_proposal(uint256)":"c2ca95ec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_deadline\",\"type\":\"uint256\"}],\"name\":\"create_proposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"get_proposal\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"numOfVote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dealine\",\"type\":\"uint256\"},{\"internalType\":\"enum DAO.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct DAO.Proposal\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"get_proposals\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"numOfVote\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dealine\",\"type\":\"uint256\"},{\"internalType\":\"enum DAO.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct DAO.Proposal[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"recipientOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"}],\"name\":\"update_proposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"vote_on_proposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"ownerOf(address,uint256)\":{\"params\":{\"_tokenAddress\":\"The token address.\",\"_tokenId\":\"The token identifier.\"},\"returns\":{\"owner_\":\"The owner of the token.\"}},\"recipientOf(address,uint256)\":{\"params\":{\"_tokenAddress\":\"The token address.\",\"_tokenId\":\"The token identifier.\"},\"returns\":{\"recipient_\":\"The user that received the role.\"}},\"revokeRole(address,uint256)\":{\"details\":\"Reverts if sender is not approved or the original owner.\",\"params\":{\"_tokenAddress\":\"The token address.\",\"_tokenId\":\"The token identifier.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ownerOf(address,uint256)\":{\"notice\":\"Retrieves the original owner of the NFT.\"},\"recipientOf(address,uint256)\":{\"notice\":\"Retrieves the recipient of an NFT role.\"},\"revokeRole(address,uint256)\":{\"notice\":\"Revokes a role from a user.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DAO.sol\":\"DAO\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/DAO.sol\":{\"keccak256\":\"0x54704ff040453895a26f1da32751b3e9b00f1ea39f5381f5598523ded00cf77f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4afc24156675de265b0a752ec32376b6094338009fe0667d28320ac25f295c4a\",\"dweb:/ipfs/QmRXHqeskEgR6tatxR9VKtqEBS1Drmx7rw7muVtZ4foiBP\"]},\"contracts/DAONFT.sol\":{\"keccak256\":\"0x779716f2095764918345304a599dc2d1f0c5d93723aa01702aa1670ae6ab180d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cad7b4b3d5e61c4c416da174dd643dad2e4366792e10888008d40f4fdf331a9\",\"dweb:/ipfs/QmP4isNRJoaE5Q9NeeZE549XfhZnSEGbpcBiMvQNvZeoV8\"]},\"interface/IERC7432.sol\":{\"keccak256\":\"0xd081f4e5afbb8f6472c1030fd74e5ec4ba059020e394b6175053fa6673c5ea35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9776b98c239dcb9ea4fd70d42e49bc15d67d5004cb2db21aa71b47a38d870ff8\",\"dweb:/ipfs/QmZW4RYZEdS3YGViHeARX72kyKDfUB3mTxU7aFwiZvaVm6\"]}},\"version\":1}"}},"contracts/DAONFT.sol":{"DAONFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AccessControlBadConfirmation","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"bytes32","name":"neededRole","type":"bytes32"}],"name":"AccessControlUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"callerConfirmation","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"safeMint","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_586":{"entryPoint":null,"id":586,"parameterSlots":2,"returnSlots":0},"@_7291":{"entryPoint":null,"id":7291,"parameterSlots":0,"returnSlots":0},"array_dataslot_t_string_storage":{"entryPoint":318,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":164,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":615,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":450,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":580,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":470,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":756,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":339,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":269,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":728,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":460,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":698,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":222,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":175,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":504,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":355,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":685,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":556,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":368,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":514,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":551,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nativeSrc":"0:5231:19","nodeType":"YulBlock","src":"0:5231:19","statements":[{"body":{"nativeSrc":"66:40:19","nodeType":"YulBlock","src":"66:40:19","statements":[{"nativeSrc":"77:22:19","nodeType":"YulAssignment","src":"77:22:19","value":{"arguments":[{"name":"value","nativeSrc":"93:5:19","nodeType":"YulIdentifier","src":"93:5:19"}],"functionName":{"name":"mload","nativeSrc":"87:5:19","nodeType":"YulIdentifier","src":"87:5:19"},"nativeSrc":"87:12:19","nodeType":"YulFunctionCall","src":"87:12:19"},"variableNames":[{"name":"length","nativeSrc":"77:6:19","nodeType":"YulIdentifier","src":"77:6:19"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"7:99:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"49:5:19","nodeType":"YulTypedName","src":"49:5:19","type":""}],"returnVariables":[{"name":"length","nativeSrc":"59:6:19","nodeType":"YulTypedName","src":"59:6:19","type":""}],"src":"7:99:19"},{"body":{"nativeSrc":"140:152:19","nodeType":"YulBlock","src":"140:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"157:1:19","nodeType":"YulLiteral","src":"157:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"160:77:19","nodeType":"YulLiteral","src":"160:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"150:6:19","nodeType":"YulIdentifier","src":"150:6:19"},"nativeSrc":"150:88:19","nodeType":"YulFunctionCall","src":"150:88:19"},"nativeSrc":"150:88:19","nodeType":"YulExpressionStatement","src":"150:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"254:1:19","nodeType":"YulLiteral","src":"254:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"257:4:19","nodeType":"YulLiteral","src":"257:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"247:6:19","nodeType":"YulIdentifier","src":"247:6:19"},"nativeSrc":"247:15:19","nodeType":"YulFunctionCall","src":"247:15:19"},"nativeSrc":"247:15:19","nodeType":"YulExpressionStatement","src":"247:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"278:1:19","nodeType":"YulLiteral","src":"278:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"281:4:19","nodeType":"YulLiteral","src":"281:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"271:6:19","nodeType":"YulIdentifier","src":"271:6:19"},"nativeSrc":"271:15:19","nodeType":"YulFunctionCall","src":"271:15:19"},"nativeSrc":"271:15:19","nodeType":"YulExpressionStatement","src":"271:15:19"}]},"name":"panic_error_0x41","nativeSrc":"112:180:19","nodeType":"YulFunctionDefinition","src":"112:180:19"},{"body":{"nativeSrc":"326:152:19","nodeType":"YulBlock","src":"326:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"343:1:19","nodeType":"YulLiteral","src":"343:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"346:77:19","nodeType":"YulLiteral","src":"346:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"336:6:19","nodeType":"YulIdentifier","src":"336:6:19"},"nativeSrc":"336:88:19","nodeType":"YulFunctionCall","src":"336:88:19"},"nativeSrc":"336:88:19","nodeType":"YulExpressionStatement","src":"336:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"440:1:19","nodeType":"YulLiteral","src":"440:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"443:4:19","nodeType":"YulLiteral","src":"443:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"433:6:19","nodeType":"YulIdentifier","src":"433:6:19"},"nativeSrc":"433:15:19","nodeType":"YulFunctionCall","src":"433:15:19"},"nativeSrc":"433:15:19","nodeType":"YulExpressionStatement","src":"433:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"464:1:19","nodeType":"YulLiteral","src":"464:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"467:4:19","nodeType":"YulLiteral","src":"467:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"457:6:19","nodeType":"YulIdentifier","src":"457:6:19"},"nativeSrc":"457:15:19","nodeType":"YulFunctionCall","src":"457:15:19"},"nativeSrc":"457:15:19","nodeType":"YulExpressionStatement","src":"457:15:19"}]},"name":"panic_error_0x22","nativeSrc":"298:180:19","nodeType":"YulFunctionDefinition","src":"298:180:19"},{"body":{"nativeSrc":"535:269:19","nodeType":"YulBlock","src":"535:269:19","statements":[{"nativeSrc":"545:22:19","nodeType":"YulAssignment","src":"545:22:19","value":{"arguments":[{"name":"data","nativeSrc":"559:4:19","nodeType":"YulIdentifier","src":"559:4:19"},{"kind":"number","nativeSrc":"565:1:19","nodeType":"YulLiteral","src":"565:1:19","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"555:3:19","nodeType":"YulIdentifier","src":"555:3:19"},"nativeSrc":"555:12:19","nodeType":"YulFunctionCall","src":"555:12:19"},"variableNames":[{"name":"length","nativeSrc":"545:6:19","nodeType":"YulIdentifier","src":"545:6:19"}]},{"nativeSrc":"576:38:19","nodeType":"YulVariableDeclaration","src":"576:38:19","value":{"arguments":[{"name":"data","nativeSrc":"606:4:19","nodeType":"YulIdentifier","src":"606:4:19"},{"kind":"number","nativeSrc":"612:1:19","nodeType":"YulLiteral","src":"612:1:19","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"602:3:19","nodeType":"YulIdentifier","src":"602:3:19"},"nativeSrc":"602:12:19","nodeType":"YulFunctionCall","src":"602:12:19"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"580:18:19","nodeType":"YulTypedName","src":"580:18:19","type":""}]},{"body":{"nativeSrc":"653:51:19","nodeType":"YulBlock","src":"653:51:19","statements":[{"nativeSrc":"667:27:19","nodeType":"YulAssignment","src":"667:27:19","value":{"arguments":[{"name":"length","nativeSrc":"681:6:19","nodeType":"YulIdentifier","src":"681:6:19"},{"kind":"number","nativeSrc":"689:4:19","nodeType":"YulLiteral","src":"689:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"677:3:19","nodeType":"YulIdentifier","src":"677:3:19"},"nativeSrc":"677:17:19","nodeType":"YulFunctionCall","src":"677:17:19"},"variableNames":[{"name":"length","nativeSrc":"667:6:19","nodeType":"YulIdentifier","src":"667:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"633:18:19","nodeType":"YulIdentifier","src":"633:18:19"}],"functionName":{"name":"iszero","nativeSrc":"626:6:19","nodeType":"YulIdentifier","src":"626:6:19"},"nativeSrc":"626:26:19","nodeType":"YulFunctionCall","src":"626:26:19"},"nativeSrc":"623:81:19","nodeType":"YulIf","src":"623:81:19"},{"body":{"nativeSrc":"756:42:19","nodeType":"YulBlock","src":"756:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"770:16:19","nodeType":"YulIdentifier","src":"770:16:19"},"nativeSrc":"770:18:19","nodeType":"YulFunctionCall","src":"770:18:19"},"nativeSrc":"770:18:19","nodeType":"YulExpressionStatement","src":"770:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"720:18:19","nodeType":"YulIdentifier","src":"720:18:19"},{"arguments":[{"name":"length","nativeSrc":"743:6:19","nodeType":"YulIdentifier","src":"743:6:19"},{"kind":"number","nativeSrc":"751:2:19","nodeType":"YulLiteral","src":"751:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"740:2:19","nodeType":"YulIdentifier","src":"740:2:19"},"nativeSrc":"740:14:19","nodeType":"YulFunctionCall","src":"740:14:19"}],"functionName":{"name":"eq","nativeSrc":"717:2:19","nodeType":"YulIdentifier","src":"717:2:19"},"nativeSrc":"717:38:19","nodeType":"YulFunctionCall","src":"717:38:19"},"nativeSrc":"714:84:19","nodeType":"YulIf","src":"714:84:19"}]},"name":"extract_byte_array_length","nativeSrc":"484:320:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"519:4:19","nodeType":"YulTypedName","src":"519:4:19","type":""}],"returnVariables":[{"name":"length","nativeSrc":"528:6:19","nodeType":"YulTypedName","src":"528:6:19","type":""}],"src":"484:320:19"},{"body":{"nativeSrc":"864:87:19","nodeType":"YulBlock","src":"864:87:19","statements":[{"nativeSrc":"874:11:19","nodeType":"YulAssignment","src":"874:11:19","value":{"name":"ptr","nativeSrc":"882:3:19","nodeType":"YulIdentifier","src":"882:3:19"},"variableNames":[{"name":"data","nativeSrc":"874:4:19","nodeType":"YulIdentifier","src":"874:4:19"}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"902:1:19","nodeType":"YulLiteral","src":"902:1:19","type":"","value":"0"},{"name":"ptr","nativeSrc":"905:3:19","nodeType":"YulIdentifier","src":"905:3:19"}],"functionName":{"name":"mstore","nativeSrc":"895:6:19","nodeType":"YulIdentifier","src":"895:6:19"},"nativeSrc":"895:14:19","nodeType":"YulFunctionCall","src":"895:14:19"},"nativeSrc":"895:14:19","nodeType":"YulExpressionStatement","src":"895:14:19"},{"nativeSrc":"918:26:19","nodeType":"YulAssignment","src":"918:26:19","value":{"arguments":[{"kind":"number","nativeSrc":"936:1:19","nodeType":"YulLiteral","src":"936:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"939:4:19","nodeType":"YulLiteral","src":"939:4:19","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nativeSrc":"926:9:19","nodeType":"YulIdentifier","src":"926:9:19"},"nativeSrc":"926:18:19","nodeType":"YulFunctionCall","src":"926:18:19"},"variableNames":[{"name":"data","nativeSrc":"918:4:19","nodeType":"YulIdentifier","src":"918:4:19"}]}]},"name":"array_dataslot_t_string_storage","nativeSrc":"810:141:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nativeSrc":"851:3:19","nodeType":"YulTypedName","src":"851:3:19","type":""}],"returnVariables":[{"name":"data","nativeSrc":"859:4:19","nodeType":"YulTypedName","src":"859:4:19","type":""}],"src":"810:141:19"},{"body":{"nativeSrc":"1001:49:19","nodeType":"YulBlock","src":"1001:49:19","statements":[{"nativeSrc":"1011:33:19","nodeType":"YulAssignment","src":"1011:33:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1029:5:19","nodeType":"YulIdentifier","src":"1029:5:19"},{"kind":"number","nativeSrc":"1036:2:19","nodeType":"YulLiteral","src":"1036:2:19","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"1025:3:19","nodeType":"YulIdentifier","src":"1025:3:19"},"nativeSrc":"1025:14:19","nodeType":"YulFunctionCall","src":"1025:14:19"},{"kind":"number","nativeSrc":"1041:2:19","nodeType":"YulLiteral","src":"1041:2:19","type":"","value":"32"}],"functionName":{"name":"div","nativeSrc":"1021:3:19","nodeType":"YulIdentifier","src":"1021:3:19"},"nativeSrc":"1021:23:19","nodeType":"YulFunctionCall","src":"1021:23:19"},"variableNames":[{"name":"result","nativeSrc":"1011:6:19","nodeType":"YulIdentifier","src":"1011:6:19"}]}]},"name":"divide_by_32_ceil","nativeSrc":"957:93:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"984:5:19","nodeType":"YulTypedName","src":"984:5:19","type":""}],"returnVariables":[{"name":"result","nativeSrc":"994:6:19","nodeType":"YulTypedName","src":"994:6:19","type":""}],"src":"957:93:19"},{"body":{"nativeSrc":"1109:54:19","nodeType":"YulBlock","src":"1109:54:19","statements":[{"nativeSrc":"1119:37:19","nodeType":"YulAssignment","src":"1119:37:19","value":{"arguments":[{"name":"bits","nativeSrc":"1144:4:19","nodeType":"YulIdentifier","src":"1144:4:19"},{"name":"value","nativeSrc":"1150:5:19","nodeType":"YulIdentifier","src":"1150:5:19"}],"functionName":{"name":"shl","nativeSrc":"1140:3:19","nodeType":"YulIdentifier","src":"1140:3:19"},"nativeSrc":"1140:16:19","nodeType":"YulFunctionCall","src":"1140:16:19"},"variableNames":[{"name":"newValue","nativeSrc":"1119:8:19","nodeType":"YulIdentifier","src":"1119:8:19"}]}]},"name":"shift_left_dynamic","nativeSrc":"1056:107:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"1084:4:19","nodeType":"YulTypedName","src":"1084:4:19","type":""},{"name":"value","nativeSrc":"1090:5:19","nodeType":"YulTypedName","src":"1090:5:19","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"1100:8:19","nodeType":"YulTypedName","src":"1100:8:19","type":""}],"src":"1056:107:19"},{"body":{"nativeSrc":"1245:317:19","nodeType":"YulBlock","src":"1245:317:19","statements":[{"nativeSrc":"1255:35:19","nodeType":"YulVariableDeclaration","src":"1255:35:19","value":{"arguments":[{"name":"shiftBytes","nativeSrc":"1276:10:19","nodeType":"YulIdentifier","src":"1276:10:19"},{"kind":"number","nativeSrc":"1288:1:19","nodeType":"YulLiteral","src":"1288:1:19","type":"","value":"8"}],"functionName":{"name":"mul","nativeSrc":"1272:3:19","nodeType":"YulIdentifier","src":"1272:3:19"},"nativeSrc":"1272:18:19","nodeType":"YulFunctionCall","src":"1272:18:19"},"variables":[{"name":"shiftBits","nativeSrc":"1259:9:19","nodeType":"YulTypedName","src":"1259:9:19","type":""}]},{"nativeSrc":"1299:109:19","nodeType":"YulVariableDeclaration","src":"1299:109:19","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1330:9:19","nodeType":"YulIdentifier","src":"1330:9:19"},{"kind":"number","nativeSrc":"1341:66:19","nodeType":"YulLiteral","src":"1341:66:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1311:18:19","nodeType":"YulIdentifier","src":"1311:18:19"},"nativeSrc":"1311:97:19","nodeType":"YulFunctionCall","src":"1311:97:19"},"variables":[{"name":"mask","nativeSrc":"1303:4:19","nodeType":"YulTypedName","src":"1303:4:19","type":""}]},{"nativeSrc":"1417:51:19","nodeType":"YulAssignment","src":"1417:51:19","value":{"arguments":[{"name":"shiftBits","nativeSrc":"1448:9:19","nodeType":"YulIdentifier","src":"1448:9:19"},{"name":"toInsert","nativeSrc":"1459:8:19","nodeType":"YulIdentifier","src":"1459:8:19"}],"functionName":{"name":"shift_left_dynamic","nativeSrc":"1429:18:19","nodeType":"YulIdentifier","src":"1429:18:19"},"nativeSrc":"1429:39:19","nodeType":"YulFunctionCall","src":"1429:39:19"},"variableNames":[{"name":"toInsert","nativeSrc":"1417:8:19","nodeType":"YulIdentifier","src":"1417:8:19"}]},{"nativeSrc":"1477:30:19","nodeType":"YulAssignment","src":"1477:30:19","value":{"arguments":[{"name":"value","nativeSrc":"1490:5:19","nodeType":"YulIdentifier","src":"1490:5:19"},{"arguments":[{"name":"mask","nativeSrc":"1501:4:19","nodeType":"YulIdentifier","src":"1501:4:19"}],"functionName":{"name":"not","nativeSrc":"1497:3:19","nodeType":"YulIdentifier","src":"1497:3:19"},"nativeSrc":"1497:9:19","nodeType":"YulFunctionCall","src":"1497:9:19"}],"functionName":{"name":"and","nativeSrc":"1486:3:19","nodeType":"YulIdentifier","src":"1486:3:19"},"nativeSrc":"1486:21:19","nodeType":"YulFunctionCall","src":"1486:21:19"},"variableNames":[{"name":"value","nativeSrc":"1477:5:19","nodeType":"YulIdentifier","src":"1477:5:19"}]},{"nativeSrc":"1516:40:19","nodeType":"YulAssignment","src":"1516:40:19","value":{"arguments":[{"name":"value","nativeSrc":"1529:5:19","nodeType":"YulIdentifier","src":"1529:5:19"},{"arguments":[{"name":"toInsert","nativeSrc":"1540:8:19","nodeType":"YulIdentifier","src":"1540:8:19"},{"name":"mask","nativeSrc":"1550:4:19","nodeType":"YulIdentifier","src":"1550:4:19"}],"functionName":{"name":"and","nativeSrc":"1536:3:19","nodeType":"YulIdentifier","src":"1536:3:19"},"nativeSrc":"1536:19:19","nodeType":"YulFunctionCall","src":"1536:19:19"}],"functionName":{"name":"or","nativeSrc":"1526:2:19","nodeType":"YulIdentifier","src":"1526:2:19"},"nativeSrc":"1526:30:19","nodeType":"YulFunctionCall","src":"1526:30:19"},"variableNames":[{"name":"result","nativeSrc":"1516:6:19","nodeType":"YulIdentifier","src":"1516:6:19"}]}]},"name":"update_byte_slice_dynamic32","nativeSrc":"1169:393:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1206:5:19","nodeType":"YulTypedName","src":"1206:5:19","type":""},{"name":"shiftBytes","nativeSrc":"1213:10:19","nodeType":"YulTypedName","src":"1213:10:19","type":""},{"name":"toInsert","nativeSrc":"1225:8:19","nodeType":"YulTypedName","src":"1225:8:19","type":""}],"returnVariables":[{"name":"result","nativeSrc":"1238:6:19","nodeType":"YulTypedName","src":"1238:6:19","type":""}],"src":"1169:393:19"},{"body":{"nativeSrc":"1613:32:19","nodeType":"YulBlock","src":"1613:32:19","statements":[{"nativeSrc":"1623:16:19","nodeType":"YulAssignment","src":"1623:16:19","value":{"name":"value","nativeSrc":"1634:5:19","nodeType":"YulIdentifier","src":"1634:5:19"},"variableNames":[{"name":"cleaned","nativeSrc":"1623:7:19","nodeType":"YulIdentifier","src":"1623:7:19"}]}]},"name":"cleanup_t_uint256","nativeSrc":"1568:77:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1595:5:19","nodeType":"YulTypedName","src":"1595:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1605:7:19","nodeType":"YulTypedName","src":"1605:7:19","type":""}],"src":"1568:77:19"},{"body":{"nativeSrc":"1683:28:19","nodeType":"YulBlock","src":"1683:28:19","statements":[{"nativeSrc":"1693:12:19","nodeType":"YulAssignment","src":"1693:12:19","value":{"name":"value","nativeSrc":"1700:5:19","nodeType":"YulIdentifier","src":"1700:5:19"},"variableNames":[{"name":"ret","nativeSrc":"1693:3:19","nodeType":"YulIdentifier","src":"1693:3:19"}]}]},"name":"identity","nativeSrc":"1651:60:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1669:5:19","nodeType":"YulTypedName","src":"1669:5:19","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1679:3:19","nodeType":"YulTypedName","src":"1679:3:19","type":""}],"src":"1651:60:19"},{"body":{"nativeSrc":"1777:82:19","nodeType":"YulBlock","src":"1777:82:19","statements":[{"nativeSrc":"1787:66:19","nodeType":"YulAssignment","src":"1787:66:19","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1845:5:19","nodeType":"YulIdentifier","src":"1845:5:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1827:17:19","nodeType":"YulIdentifier","src":"1827:17:19"},"nativeSrc":"1827:24:19","nodeType":"YulFunctionCall","src":"1827:24:19"}],"functionName":{"name":"identity","nativeSrc":"1818:8:19","nodeType":"YulIdentifier","src":"1818:8:19"},"nativeSrc":"1818:34:19","nodeType":"YulFunctionCall","src":"1818:34:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"1800:17:19","nodeType":"YulIdentifier","src":"1800:17:19"},"nativeSrc":"1800:53:19","nodeType":"YulFunctionCall","src":"1800:53:19"},"variableNames":[{"name":"converted","nativeSrc":"1787:9:19","nodeType":"YulIdentifier","src":"1787:9:19"}]}]},"name":"convert_t_uint256_to_t_uint256","nativeSrc":"1717:142:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1757:5:19","nodeType":"YulTypedName","src":"1757:5:19","type":""}],"returnVariables":[{"name":"converted","nativeSrc":"1767:9:19","nodeType":"YulTypedName","src":"1767:9:19","type":""}],"src":"1717:142:19"},{"body":{"nativeSrc":"1912:28:19","nodeType":"YulBlock","src":"1912:28:19","statements":[{"nativeSrc":"1922:12:19","nodeType":"YulAssignment","src":"1922:12:19","value":{"name":"value","nativeSrc":"1929:5:19","nodeType":"YulIdentifier","src":"1929:5:19"},"variableNames":[{"name":"ret","nativeSrc":"1922:3:19","nodeType":"YulIdentifier","src":"1922:3:19"}]}]},"name":"prepare_store_t_uint256","nativeSrc":"1865:75:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1898:5:19","nodeType":"YulTypedName","src":"1898:5:19","type":""}],"returnVariables":[{"name":"ret","nativeSrc":"1908:3:19","nodeType":"YulTypedName","src":"1908:3:19","type":""}],"src":"1865:75:19"},{"body":{"nativeSrc":"2022:193:19","nodeType":"YulBlock","src":"2022:193:19","statements":[{"nativeSrc":"2032:63:19","nodeType":"YulVariableDeclaration","src":"2032:63:19","value":{"arguments":[{"name":"value_0","nativeSrc":"2087:7:19","nodeType":"YulIdentifier","src":"2087:7:19"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nativeSrc":"2056:30:19","nodeType":"YulIdentifier","src":"2056:30:19"},"nativeSrc":"2056:39:19","nodeType":"YulFunctionCall","src":"2056:39:19"},"variables":[{"name":"convertedValue_0","nativeSrc":"2036:16:19","nodeType":"YulTypedName","src":"2036:16:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2111:4:19","nodeType":"YulIdentifier","src":"2111:4:19"},{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"2151:4:19","nodeType":"YulIdentifier","src":"2151:4:19"}],"functionName":{"name":"sload","nativeSrc":"2145:5:19","nodeType":"YulIdentifier","src":"2145:5:19"},"nativeSrc":"2145:11:19","nodeType":"YulFunctionCall","src":"2145:11:19"},{"name":"offset","nativeSrc":"2158:6:19","nodeType":"YulIdentifier","src":"2158:6:19"},{"arguments":[{"name":"convertedValue_0","nativeSrc":"2190:16:19","nodeType":"YulIdentifier","src":"2190:16:19"}],"functionName":{"name":"prepare_store_t_uint256","nativeSrc":"2166:23:19","nodeType":"YulIdentifier","src":"2166:23:19"},"nativeSrc":"2166:41:19","nodeType":"YulFunctionCall","src":"2166:41:19"}],"functionName":{"name":"update_byte_slice_dynamic32","nativeSrc":"2117:27:19","nodeType":"YulIdentifier","src":"2117:27:19"},"nativeSrc":"2117:91:19","nodeType":"YulFunctionCall","src":"2117:91:19"}],"functionName":{"name":"sstore","nativeSrc":"2104:6:19","nodeType":"YulIdentifier","src":"2104:6:19"},"nativeSrc":"2104:105:19","nodeType":"YulFunctionCall","src":"2104:105:19"},"nativeSrc":"2104:105:19","nodeType":"YulExpressionStatement","src":"2104:105:19"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"1946:269:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"1999:4:19","nodeType":"YulTypedName","src":"1999:4:19","type":""},{"name":"offset","nativeSrc":"2005:6:19","nodeType":"YulTypedName","src":"2005:6:19","type":""},{"name":"value_0","nativeSrc":"2013:7:19","nodeType":"YulTypedName","src":"2013:7:19","type":""}],"src":"1946:269:19"},{"body":{"nativeSrc":"2270:24:19","nodeType":"YulBlock","src":"2270:24:19","statements":[{"nativeSrc":"2280:8:19","nodeType":"YulAssignment","src":"2280:8:19","value":{"kind":"number","nativeSrc":"2287:1:19","nodeType":"YulLiteral","src":"2287:1:19","type":"","value":"0"},"variableNames":[{"name":"ret","nativeSrc":"2280:3:19","nodeType":"YulIdentifier","src":"2280:3:19"}]}]},"name":"zero_value_for_split_t_uint256","nativeSrc":"2221:73:19","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nativeSrc":"2266:3:19","nodeType":"YulTypedName","src":"2266:3:19","type":""}],"src":"2221:73:19"},{"body":{"nativeSrc":"2353:136:19","nodeType":"YulBlock","src":"2353:136:19","statements":[{"nativeSrc":"2363:46:19","nodeType":"YulVariableDeclaration","src":"2363:46:19","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nativeSrc":"2377:30:19","nodeType":"YulIdentifier","src":"2377:30:19"},"nativeSrc":"2377:32:19","nodeType":"YulFunctionCall","src":"2377:32:19"},"variables":[{"name":"zero_0","nativeSrc":"2367:6:19","nodeType":"YulTypedName","src":"2367:6:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"2462:4:19","nodeType":"YulIdentifier","src":"2462:4:19"},{"name":"offset","nativeSrc":"2468:6:19","nodeType":"YulIdentifier","src":"2468:6:19"},{"name":"zero_0","nativeSrc":"2476:6:19","nodeType":"YulIdentifier","src":"2476:6:19"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nativeSrc":"2418:43:19","nodeType":"YulIdentifier","src":"2418:43:19"},"nativeSrc":"2418:65:19","nodeType":"YulFunctionCall","src":"2418:65:19"},"nativeSrc":"2418:65:19","nodeType":"YulExpressionStatement","src":"2418:65:19"}]},"name":"storage_set_to_zero_t_uint256","nativeSrc":"2300:189:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"2339:4:19","nodeType":"YulTypedName","src":"2339:4:19","type":""},{"name":"offset","nativeSrc":"2345:6:19","nodeType":"YulTypedName","src":"2345:6:19","type":""}],"src":"2300:189:19"},{"body":{"nativeSrc":"2545:136:19","nodeType":"YulBlock","src":"2545:136:19","statements":[{"body":{"nativeSrc":"2612:63:19","nodeType":"YulBlock","src":"2612:63:19","statements":[{"expression":{"arguments":[{"name":"start","nativeSrc":"2656:5:19","nodeType":"YulIdentifier","src":"2656:5:19"},{"kind":"number","nativeSrc":"2663:1:19","nodeType":"YulLiteral","src":"2663:1:19","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nativeSrc":"2626:29:19","nodeType":"YulIdentifier","src":"2626:29:19"},"nativeSrc":"2626:39:19","nodeType":"YulFunctionCall","src":"2626:39:19"},"nativeSrc":"2626:39:19","nodeType":"YulExpressionStatement","src":"2626:39:19"}]},"condition":{"arguments":[{"name":"start","nativeSrc":"2565:5:19","nodeType":"YulIdentifier","src":"2565:5:19"},{"name":"end","nativeSrc":"2572:3:19","nodeType":"YulIdentifier","src":"2572:3:19"}],"functionName":{"name":"lt","nativeSrc":"2562:2:19","nodeType":"YulIdentifier","src":"2562:2:19"},"nativeSrc":"2562:14:19","nodeType":"YulFunctionCall","src":"2562:14:19"},"nativeSrc":"2555:120:19","nodeType":"YulForLoop","post":{"nativeSrc":"2577:26:19","nodeType":"YulBlock","src":"2577:26:19","statements":[{"nativeSrc":"2579:22:19","nodeType":"YulAssignment","src":"2579:22:19","value":{"arguments":[{"name":"start","nativeSrc":"2592:5:19","nodeType":"YulIdentifier","src":"2592:5:19"},{"kind":"number","nativeSrc":"2599:1:19","nodeType":"YulLiteral","src":"2599:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"2588:3:19","nodeType":"YulIdentifier","src":"2588:3:19"},"nativeSrc":"2588:13:19","nodeType":"YulFunctionCall","src":"2588:13:19"},"variableNames":[{"name":"start","nativeSrc":"2579:5:19","nodeType":"YulIdentifier","src":"2579:5:19"}]}]},"pre":{"nativeSrc":"2559:2:19","nodeType":"YulBlock","src":"2559:2:19","statements":[]},"src":"2555:120:19"}]},"name":"clear_storage_range_t_bytes1","nativeSrc":"2495:186:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nativeSrc":"2533:5:19","nodeType":"YulTypedName","src":"2533:5:19","type":""},{"name":"end","nativeSrc":"2540:3:19","nodeType":"YulTypedName","src":"2540:3:19","type":""}],"src":"2495:186:19"},{"body":{"nativeSrc":"2766:464:19","nodeType":"YulBlock","src":"2766:464:19","statements":[{"body":{"nativeSrc":"2792:431:19","nodeType":"YulBlock","src":"2792:431:19","statements":[{"nativeSrc":"2806:54:19","nodeType":"YulVariableDeclaration","src":"2806:54:19","value":{"arguments":[{"name":"array","nativeSrc":"2854:5:19","nodeType":"YulIdentifier","src":"2854:5:19"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"2822:31:19","nodeType":"YulIdentifier","src":"2822:31:19"},"nativeSrc":"2822:38:19","nodeType":"YulFunctionCall","src":"2822:38:19"},"variables":[{"name":"dataArea","nativeSrc":"2810:8:19","nodeType":"YulTypedName","src":"2810:8:19","type":""}]},{"nativeSrc":"2873:63:19","nodeType":"YulVariableDeclaration","src":"2873:63:19","value":{"arguments":[{"name":"dataArea","nativeSrc":"2896:8:19","nodeType":"YulIdentifier","src":"2896:8:19"},{"arguments":[{"name":"startIndex","nativeSrc":"2924:10:19","nodeType":"YulIdentifier","src":"2924:10:19"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"2906:17:19","nodeType":"YulIdentifier","src":"2906:17:19"},"nativeSrc":"2906:29:19","nodeType":"YulFunctionCall","src":"2906:29:19"}],"functionName":{"name":"add","nativeSrc":"2892:3:19","nodeType":"YulIdentifier","src":"2892:3:19"},"nativeSrc":"2892:44:19","nodeType":"YulFunctionCall","src":"2892:44:19"},"variables":[{"name":"deleteStart","nativeSrc":"2877:11:19","nodeType":"YulTypedName","src":"2877:11:19","type":""}]},{"body":{"nativeSrc":"3093:27:19","nodeType":"YulBlock","src":"3093:27:19","statements":[{"nativeSrc":"3095:23:19","nodeType":"YulAssignment","src":"3095:23:19","value":{"name":"dataArea","nativeSrc":"3110:8:19","nodeType":"YulIdentifier","src":"3110:8:19"},"variableNames":[{"name":"deleteStart","nativeSrc":"3095:11:19","nodeType":"YulIdentifier","src":"3095:11:19"}]}]},"condition":{"arguments":[{"name":"startIndex","nativeSrc":"3077:10:19","nodeType":"YulIdentifier","src":"3077:10:19"},{"kind":"number","nativeSrc":"3089:2:19","nodeType":"YulLiteral","src":"3089:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"3074:2:19","nodeType":"YulIdentifier","src":"3074:2:19"},"nativeSrc":"3074:18:19","nodeType":"YulFunctionCall","src":"3074:18:19"},"nativeSrc":"3071:49:19","nodeType":"YulIf","src":"3071:49:19"},{"expression":{"arguments":[{"name":"deleteStart","nativeSrc":"3162:11:19","nodeType":"YulIdentifier","src":"3162:11:19"},{"arguments":[{"name":"dataArea","nativeSrc":"3179:8:19","nodeType":"YulIdentifier","src":"3179:8:19"},{"arguments":[{"name":"len","nativeSrc":"3207:3:19","nodeType":"YulIdentifier","src":"3207:3:19"}],"functionName":{"name":"divide_by_32_ceil","nativeSrc":"3189:17:19","nodeType":"YulIdentifier","src":"3189:17:19"},"nativeSrc":"3189:22:19","nodeType":"YulFunctionCall","src":"3189:22:19"}],"functionName":{"name":"add","nativeSrc":"3175:3:19","nodeType":"YulIdentifier","src":"3175:3:19"},"nativeSrc":"3175:37:19","nodeType":"YulFunctionCall","src":"3175:37:19"}],"functionName":{"name":"clear_storage_range_t_bytes1","nativeSrc":"3133:28:19","nodeType":"YulIdentifier","src":"3133:28:19"},"nativeSrc":"3133:80:19","nodeType":"YulFunctionCall","src":"3133:80:19"},"nativeSrc":"3133:80:19","nodeType":"YulExpressionStatement","src":"3133:80:19"}]},"condition":{"arguments":[{"name":"len","nativeSrc":"2783:3:19","nodeType":"YulIdentifier","src":"2783:3:19"},{"kind":"number","nativeSrc":"2788:2:19","nodeType":"YulLiteral","src":"2788:2:19","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"2780:2:19","nodeType":"YulIdentifier","src":"2780:2:19"},"nativeSrc":"2780:11:19","nodeType":"YulFunctionCall","src":"2780:11:19"},"nativeSrc":"2777:446:19","nodeType":"YulIf","src":"2777:446:19"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"2687:543:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nativeSrc":"2742:5:19","nodeType":"YulTypedName","src":"2742:5:19","type":""},{"name":"len","nativeSrc":"2749:3:19","nodeType":"YulTypedName","src":"2749:3:19","type":""},{"name":"startIndex","nativeSrc":"2754:10:19","nodeType":"YulTypedName","src":"2754:10:19","type":""}],"src":"2687:543:19"},{"body":{"nativeSrc":"3299:54:19","nodeType":"YulBlock","src":"3299:54:19","statements":[{"nativeSrc":"3309:37:19","nodeType":"YulAssignment","src":"3309:37:19","value":{"arguments":[{"name":"bits","nativeSrc":"3334:4:19","nodeType":"YulIdentifier","src":"3334:4:19"},{"name":"value","nativeSrc":"3340:5:19","nodeType":"YulIdentifier","src":"3340:5:19"}],"functionName":{"name":"shr","nativeSrc":"3330:3:19","nodeType":"YulIdentifier","src":"3330:3:19"},"nativeSrc":"3330:16:19","nodeType":"YulFunctionCall","src":"3330:16:19"},"variableNames":[{"name":"newValue","nativeSrc":"3309:8:19","nodeType":"YulIdentifier","src":"3309:8:19"}]}]},"name":"shift_right_unsigned_dynamic","nativeSrc":"3236:117:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nativeSrc":"3274:4:19","nodeType":"YulTypedName","src":"3274:4:19","type":""},{"name":"value","nativeSrc":"3280:5:19","nodeType":"YulTypedName","src":"3280:5:19","type":""}],"returnVariables":[{"name":"newValue","nativeSrc":"3290:8:19","nodeType":"YulTypedName","src":"3290:8:19","type":""}],"src":"3236:117:19"},{"body":{"nativeSrc":"3410:118:19","nodeType":"YulBlock","src":"3410:118:19","statements":[{"nativeSrc":"3420:68:19","nodeType":"YulVariableDeclaration","src":"3420:68:19","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"3469:1:19","nodeType":"YulLiteral","src":"3469:1:19","type":"","value":"8"},{"name":"bytes","nativeSrc":"3472:5:19","nodeType":"YulIdentifier","src":"3472:5:19"}],"functionName":{"name":"mul","nativeSrc":"3465:3:19","nodeType":"YulIdentifier","src":"3465:3:19"},"nativeSrc":"3465:13:19","nodeType":"YulFunctionCall","src":"3465:13:19"},{"arguments":[{"kind":"number","nativeSrc":"3484:1:19","nodeType":"YulLiteral","src":"3484:1:19","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"3480:3:19","nodeType":"YulIdentifier","src":"3480:3:19"},"nativeSrc":"3480:6:19","nodeType":"YulFunctionCall","src":"3480:6:19"}],"functionName":{"name":"shift_right_unsigned_dynamic","nativeSrc":"3436:28:19","nodeType":"YulIdentifier","src":"3436:28:19"},"nativeSrc":"3436:51:19","nodeType":"YulFunctionCall","src":"3436:51:19"}],"functionName":{"name":"not","nativeSrc":"3432:3:19","nodeType":"YulIdentifier","src":"3432:3:19"},"nativeSrc":"3432:56:19","nodeType":"YulFunctionCall","src":"3432:56:19"},"variables":[{"name":"mask","nativeSrc":"3424:4:19","nodeType":"YulTypedName","src":"3424:4:19","type":""}]},{"nativeSrc":"3497:25:19","nodeType":"YulAssignment","src":"3497:25:19","value":{"arguments":[{"name":"data","nativeSrc":"3511:4:19","nodeType":"YulIdentifier","src":"3511:4:19"},{"name":"mask","nativeSrc":"3517:4:19","nodeType":"YulIdentifier","src":"3517:4:19"}],"functionName":{"name":"and","nativeSrc":"3507:3:19","nodeType":"YulIdentifier","src":"3507:3:19"},"nativeSrc":"3507:15:19","nodeType":"YulFunctionCall","src":"3507:15:19"},"variableNames":[{"name":"result","nativeSrc":"3497:6:19","nodeType":"YulIdentifier","src":"3497:6:19"}]}]},"name":"mask_bytes_dynamic","nativeSrc":"3359:169:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3387:4:19","nodeType":"YulTypedName","src":"3387:4:19","type":""},{"name":"bytes","nativeSrc":"3393:5:19","nodeType":"YulTypedName","src":"3393:5:19","type":""}],"returnVariables":[{"name":"result","nativeSrc":"3403:6:19","nodeType":"YulTypedName","src":"3403:6:19","type":""}],"src":"3359:169:19"},{"body":{"nativeSrc":"3614:214:19","nodeType":"YulBlock","src":"3614:214:19","statements":[{"nativeSrc":"3747:37:19","nodeType":"YulAssignment","src":"3747:37:19","value":{"arguments":[{"name":"data","nativeSrc":"3774:4:19","nodeType":"YulIdentifier","src":"3774:4:19"},{"name":"len","nativeSrc":"3780:3:19","nodeType":"YulIdentifier","src":"3780:3:19"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"3755:18:19","nodeType":"YulIdentifier","src":"3755:18:19"},"nativeSrc":"3755:29:19","nodeType":"YulFunctionCall","src":"3755:29:19"},"variableNames":[{"name":"data","nativeSrc":"3747:4:19","nodeType":"YulIdentifier","src":"3747:4:19"}]},{"nativeSrc":"3793:29:19","nodeType":"YulAssignment","src":"3793:29:19","value":{"arguments":[{"name":"data","nativeSrc":"3804:4:19","nodeType":"YulIdentifier","src":"3804:4:19"},{"arguments":[{"kind":"number","nativeSrc":"3814:1:19","nodeType":"YulLiteral","src":"3814:1:19","type":"","value":"2"},{"name":"len","nativeSrc":"3817:3:19","nodeType":"YulIdentifier","src":"3817:3:19"}],"functionName":{"name":"mul","nativeSrc":"3810:3:19","nodeType":"YulIdentifier","src":"3810:3:19"},"nativeSrc":"3810:11:19","nodeType":"YulFunctionCall","src":"3810:11:19"}],"functionName":{"name":"or","nativeSrc":"3801:2:19","nodeType":"YulIdentifier","src":"3801:2:19"},"nativeSrc":"3801:21:19","nodeType":"YulFunctionCall","src":"3801:21:19"},"variableNames":[{"name":"used","nativeSrc":"3793:4:19","nodeType":"YulIdentifier","src":"3793:4:19"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"3533:295:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"3595:4:19","nodeType":"YulTypedName","src":"3595:4:19","type":""},{"name":"len","nativeSrc":"3601:3:19","nodeType":"YulTypedName","src":"3601:3:19","type":""}],"returnVariables":[{"name":"used","nativeSrc":"3609:4:19","nodeType":"YulTypedName","src":"3609:4:19","type":""}],"src":"3533:295:19"},{"body":{"nativeSrc":"3925:1303:19","nodeType":"YulBlock","src":"3925:1303:19","statements":[{"nativeSrc":"3936:51:19","nodeType":"YulVariableDeclaration","src":"3936:51:19","value":{"arguments":[{"name":"src","nativeSrc":"3983:3:19","nodeType":"YulIdentifier","src":"3983:3:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"3950:32:19","nodeType":"YulIdentifier","src":"3950:32:19"},"nativeSrc":"3950:37:19","nodeType":"YulFunctionCall","src":"3950:37:19"},"variables":[{"name":"newLen","nativeSrc":"3940:6:19","nodeType":"YulTypedName","src":"3940:6:19","type":""}]},{"body":{"nativeSrc":"4072:22:19","nodeType":"YulBlock","src":"4072:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"4074:16:19","nodeType":"YulIdentifier","src":"4074:16:19"},"nativeSrc":"4074:18:19","nodeType":"YulFunctionCall","src":"4074:18:19"},"nativeSrc":"4074:18:19","nodeType":"YulExpressionStatement","src":"4074:18:19"}]},"condition":{"arguments":[{"name":"newLen","nativeSrc":"4044:6:19","nodeType":"YulIdentifier","src":"4044:6:19"},{"kind":"number","nativeSrc":"4052:18:19","nodeType":"YulLiteral","src":"4052:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"4041:2:19","nodeType":"YulIdentifier","src":"4041:2:19"},"nativeSrc":"4041:30:19","nodeType":"YulFunctionCall","src":"4041:30:19"},"nativeSrc":"4038:56:19","nodeType":"YulIf","src":"4038:56:19"},{"nativeSrc":"4104:52:19","nodeType":"YulVariableDeclaration","src":"4104:52:19","value":{"arguments":[{"arguments":[{"name":"slot","nativeSrc":"4150:4:19","nodeType":"YulIdentifier","src":"4150:4:19"}],"functionName":{"name":"sload","nativeSrc":"4144:5:19","nodeType":"YulIdentifier","src":"4144:5:19"},"nativeSrc":"4144:11:19","nodeType":"YulFunctionCall","src":"4144:11:19"}],"functionName":{"name":"extract_byte_array_length","nativeSrc":"4118:25:19","nodeType":"YulIdentifier","src":"4118:25:19"},"nativeSrc":"4118:38:19","nodeType":"YulFunctionCall","src":"4118:38:19"},"variables":[{"name":"oldLen","nativeSrc":"4108:6:19","nodeType":"YulTypedName","src":"4108:6:19","type":""}]},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4249:4:19","nodeType":"YulIdentifier","src":"4249:4:19"},{"name":"oldLen","nativeSrc":"4255:6:19","nodeType":"YulIdentifier","src":"4255:6:19"},{"name":"newLen","nativeSrc":"4263:6:19","nodeType":"YulIdentifier","src":"4263:6:19"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nativeSrc":"4203:45:19","nodeType":"YulIdentifier","src":"4203:45:19"},"nativeSrc":"4203:67:19","nodeType":"YulFunctionCall","src":"4203:67:19"},"nativeSrc":"4203:67:19","nodeType":"YulExpressionStatement","src":"4203:67:19"},{"nativeSrc":"4280:18:19","nodeType":"YulVariableDeclaration","src":"4280:18:19","value":{"kind":"number","nativeSrc":"4297:1:19","nodeType":"YulLiteral","src":"4297:1:19","type":"","value":"0"},"variables":[{"name":"srcOffset","nativeSrc":"4284:9:19","nodeType":"YulTypedName","src":"4284:9:19","type":""}]},{"nativeSrc":"4308:17:19","nodeType":"YulAssignment","src":"4308:17:19","value":{"kind":"number","nativeSrc":"4321:4:19","nodeType":"YulLiteral","src":"4321:4:19","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nativeSrc":"4308:9:19","nodeType":"YulIdentifier","src":"4308:9:19"}]},{"cases":[{"body":{"nativeSrc":"4372:611:19","nodeType":"YulBlock","src":"4372:611:19","statements":[{"nativeSrc":"4386:37:19","nodeType":"YulVariableDeclaration","src":"4386:37:19","value":{"arguments":[{"name":"newLen","nativeSrc":"4405:6:19","nodeType":"YulIdentifier","src":"4405:6:19"},{"arguments":[{"kind":"number","nativeSrc":"4417:4:19","nodeType":"YulLiteral","src":"4417:4:19","type":"","value":"0x1f"}],"functionName":{"name":"not","nativeSrc":"4413:3:19","nodeType":"YulIdentifier","src":"4413:3:19"},"nativeSrc":"4413:9:19","nodeType":"YulFunctionCall","src":"4413:9:19"}],"functionName":{"name":"and","nativeSrc":"4401:3:19","nodeType":"YulIdentifier","src":"4401:3:19"},"nativeSrc":"4401:22:19","nodeType":"YulFunctionCall","src":"4401:22:19"},"variables":[{"name":"loopEnd","nativeSrc":"4390:7:19","nodeType":"YulTypedName","src":"4390:7:19","type":""}]},{"nativeSrc":"4437:51:19","nodeType":"YulVariableDeclaration","src":"4437:51:19","value":{"arguments":[{"name":"slot","nativeSrc":"4483:4:19","nodeType":"YulIdentifier","src":"4483:4:19"}],"functionName":{"name":"array_dataslot_t_string_storage","nativeSrc":"4451:31:19","nodeType":"YulIdentifier","src":"4451:31:19"},"nativeSrc":"4451:37:19","nodeType":"YulFunctionCall","src":"4451:37:19"},"variables":[{"name":"dstPtr","nativeSrc":"4441:6:19","nodeType":"YulTypedName","src":"4441:6:19","type":""}]},{"nativeSrc":"4501:10:19","nodeType":"YulVariableDeclaration","src":"4501:10:19","value":{"kind":"number","nativeSrc":"4510:1:19","nodeType":"YulLiteral","src":"4510:1:19","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"4505:1:19","nodeType":"YulTypedName","src":"4505:1:19","type":""}]},{"body":{"nativeSrc":"4569:163:19","nodeType":"YulBlock","src":"4569:163:19","statements":[{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4594:6:19","nodeType":"YulIdentifier","src":"4594:6:19"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4612:3:19","nodeType":"YulIdentifier","src":"4612:3:19"},{"name":"srcOffset","nativeSrc":"4617:9:19","nodeType":"YulIdentifier","src":"4617:9:19"}],"functionName":{"name":"add","nativeSrc":"4608:3:19","nodeType":"YulIdentifier","src":"4608:3:19"},"nativeSrc":"4608:19:19","nodeType":"YulFunctionCall","src":"4608:19:19"}],"functionName":{"name":"mload","nativeSrc":"4602:5:19","nodeType":"YulIdentifier","src":"4602:5:19"},"nativeSrc":"4602:26:19","nodeType":"YulFunctionCall","src":"4602:26:19"}],"functionName":{"name":"sstore","nativeSrc":"4587:6:19","nodeType":"YulIdentifier","src":"4587:6:19"},"nativeSrc":"4587:42:19","nodeType":"YulFunctionCall","src":"4587:42:19"},"nativeSrc":"4587:42:19","nodeType":"YulExpressionStatement","src":"4587:42:19"},{"nativeSrc":"4646:24:19","nodeType":"YulAssignment","src":"4646:24:19","value":{"arguments":[{"name":"dstPtr","nativeSrc":"4660:6:19","nodeType":"YulIdentifier","src":"4660:6:19"},{"kind":"number","nativeSrc":"4668:1:19","nodeType":"YulLiteral","src":"4668:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4656:3:19","nodeType":"YulIdentifier","src":"4656:3:19"},"nativeSrc":"4656:14:19","nodeType":"YulFunctionCall","src":"4656:14:19"},"variableNames":[{"name":"dstPtr","nativeSrc":"4646:6:19","nodeType":"YulIdentifier","src":"4646:6:19"}]},{"nativeSrc":"4687:31:19","nodeType":"YulAssignment","src":"4687:31:19","value":{"arguments":[{"name":"srcOffset","nativeSrc":"4704:9:19","nodeType":"YulIdentifier","src":"4704:9:19"},{"kind":"number","nativeSrc":"4715:2:19","nodeType":"YulLiteral","src":"4715:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4700:3:19","nodeType":"YulIdentifier","src":"4700:3:19"},"nativeSrc":"4700:18:19","nodeType":"YulFunctionCall","src":"4700:18:19"},"variableNames":[{"name":"srcOffset","nativeSrc":"4687:9:19","nodeType":"YulIdentifier","src":"4687:9:19"}]}]},"condition":{"arguments":[{"name":"i","nativeSrc":"4535:1:19","nodeType":"YulIdentifier","src":"4535:1:19"},{"name":"loopEnd","nativeSrc":"4538:7:19","nodeType":"YulIdentifier","src":"4538:7:19"}],"functionName":{"name":"lt","nativeSrc":"4532:2:19","nodeType":"YulIdentifier","src":"4532:2:19"},"nativeSrc":"4532:14:19","nodeType":"YulFunctionCall","src":"4532:14:19"},"nativeSrc":"4524:208:19","nodeType":"YulForLoop","post":{"nativeSrc":"4547:21:19","nodeType":"YulBlock","src":"4547:21:19","statements":[{"nativeSrc":"4549:17:19","nodeType":"YulAssignment","src":"4549:17:19","value":{"arguments":[{"name":"i","nativeSrc":"4558:1:19","nodeType":"YulIdentifier","src":"4558:1:19"},{"kind":"number","nativeSrc":"4561:4:19","nodeType":"YulLiteral","src":"4561:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"4554:3:19","nodeType":"YulIdentifier","src":"4554:3:19"},"nativeSrc":"4554:12:19","nodeType":"YulFunctionCall","src":"4554:12:19"},"variableNames":[{"name":"i","nativeSrc":"4549:1:19","nodeType":"YulIdentifier","src":"4549:1:19"}]}]},"pre":{"nativeSrc":"4528:3:19","nodeType":"YulBlock","src":"4528:3:19","statements":[]},"src":"4524:208:19"},{"body":{"nativeSrc":"4768:156:19","nodeType":"YulBlock","src":"4768:156:19","statements":[{"nativeSrc":"4786:43:19","nodeType":"YulVariableDeclaration","src":"4786:43:19","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"4813:3:19","nodeType":"YulIdentifier","src":"4813:3:19"},{"name":"srcOffset","nativeSrc":"4818:9:19","nodeType":"YulIdentifier","src":"4818:9:19"}],"functionName":{"name":"add","nativeSrc":"4809:3:19","nodeType":"YulIdentifier","src":"4809:3:19"},"nativeSrc":"4809:19:19","nodeType":"YulFunctionCall","src":"4809:19:19"}],"functionName":{"name":"mload","nativeSrc":"4803:5:19","nodeType":"YulIdentifier","src":"4803:5:19"},"nativeSrc":"4803:26:19","nodeType":"YulFunctionCall","src":"4803:26:19"},"variables":[{"name":"lastValue","nativeSrc":"4790:9:19","nodeType":"YulTypedName","src":"4790:9:19","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nativeSrc":"4853:6:19","nodeType":"YulIdentifier","src":"4853:6:19"},{"arguments":[{"name":"lastValue","nativeSrc":"4880:9:19","nodeType":"YulIdentifier","src":"4880:9:19"},{"arguments":[{"name":"newLen","nativeSrc":"4895:6:19","nodeType":"YulIdentifier","src":"4895:6:19"},{"kind":"number","nativeSrc":"4903:4:19","nodeType":"YulLiteral","src":"4903:4:19","type":"","value":"0x1f"}],"functionName":{"name":"and","nativeSrc":"4891:3:19","nodeType":"YulIdentifier","src":"4891:3:19"},"nativeSrc":"4891:17:19","nodeType":"YulFunctionCall","src":"4891:17:19"}],"functionName":{"name":"mask_bytes_dynamic","nativeSrc":"4861:18:19","nodeType":"YulIdentifier","src":"4861:18:19"},"nativeSrc":"4861:48:19","nodeType":"YulFunctionCall","src":"4861:48:19"}],"functionName":{"name":"sstore","nativeSrc":"4846:6:19","nodeType":"YulIdentifier","src":"4846:6:19"},"nativeSrc":"4846:64:19","nodeType":"YulFunctionCall","src":"4846:64:19"},"nativeSrc":"4846:64:19","nodeType":"YulExpressionStatement","src":"4846:64:19"}]},"condition":{"arguments":[{"name":"loopEnd","nativeSrc":"4751:7:19","nodeType":"YulIdentifier","src":"4751:7:19"},{"name":"newLen","nativeSrc":"4760:6:19","nodeType":"YulIdentifier","src":"4760:6:19"}],"functionName":{"name":"lt","nativeSrc":"4748:2:19","nodeType":"YulIdentifier","src":"4748:2:19"},"nativeSrc":"4748:19:19","nodeType":"YulFunctionCall","src":"4748:19:19"},"nativeSrc":"4745:179:19","nodeType":"YulIf","src":"4745:179:19"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"4944:4:19","nodeType":"YulIdentifier","src":"4944:4:19"},{"arguments":[{"arguments":[{"name":"newLen","nativeSrc":"4958:6:19","nodeType":"YulIdentifier","src":"4958:6:19"},{"kind":"number","nativeSrc":"4966:1:19","nodeType":"YulLiteral","src":"4966:1:19","type":"","value":"2"}],"functionName":{"name":"mul","nativeSrc":"4954:3:19","nodeType":"YulIdentifier","src":"4954:3:19"},"nativeSrc":"4954:14:19","nodeType":"YulFunctionCall","src":"4954:14:19"},{"kind":"number","nativeSrc":"4970:1:19","nodeType":"YulLiteral","src":"4970:1:19","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"4950:3:19","nodeType":"YulIdentifier","src":"4950:3:19"},"nativeSrc":"4950:22:19","nodeType":"YulFunctionCall","src":"4950:22:19"}],"functionName":{"name":"sstore","nativeSrc":"4937:6:19","nodeType":"YulIdentifier","src":"4937:6:19"},"nativeSrc":"4937:36:19","nodeType":"YulFunctionCall","src":"4937:36:19"},"nativeSrc":"4937:36:19","nodeType":"YulExpressionStatement","src":"4937:36:19"}]},"nativeSrc":"4365:618:19","nodeType":"YulCase","src":"4365:618:19","value":{"kind":"number","nativeSrc":"4370:1:19","nodeType":"YulLiteral","src":"4370:1:19","type":"","value":"1"}},{"body":{"nativeSrc":"5000:222:19","nodeType":"YulBlock","src":"5000:222:19","statements":[{"nativeSrc":"5014:14:19","nodeType":"YulVariableDeclaration","src":"5014:14:19","value":{"kind":"number","nativeSrc":"5027:1:19","nodeType":"YulLiteral","src":"5027:1:19","type":"","value":"0"},"variables":[{"name":"value","nativeSrc":"5018:5:19","nodeType":"YulTypedName","src":"5018:5:19","type":""}]},{"body":{"nativeSrc":"5051:67:19","nodeType":"YulBlock","src":"5051:67:19","statements":[{"nativeSrc":"5069:35:19","nodeType":"YulAssignment","src":"5069:35:19","value":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"5088:3:19","nodeType":"YulIdentifier","src":"5088:3:19"},{"name":"srcOffset","nativeSrc":"5093:9:19","nodeType":"YulIdentifier","src":"5093:9:19"}],"functionName":{"name":"add","nativeSrc":"5084:3:19","nodeType":"YulIdentifier","src":"5084:3:19"},"nativeSrc":"5084:19:19","nodeType":"YulFunctionCall","src":"5084:19:19"}],"functionName":{"name":"mload","nativeSrc":"5078:5:19","nodeType":"YulIdentifier","src":"5078:5:19"},"nativeSrc":"5078:26:19","nodeType":"YulFunctionCall","src":"5078:26:19"},"variableNames":[{"name":"value","nativeSrc":"5069:5:19","nodeType":"YulIdentifier","src":"5069:5:19"}]}]},"condition":{"name":"newLen","nativeSrc":"5044:6:19","nodeType":"YulIdentifier","src":"5044:6:19"},"nativeSrc":"5041:77:19","nodeType":"YulIf","src":"5041:77:19"},{"expression":{"arguments":[{"name":"slot","nativeSrc":"5138:4:19","nodeType":"YulIdentifier","src":"5138:4:19"},{"arguments":[{"name":"value","nativeSrc":"5197:5:19","nodeType":"YulIdentifier","src":"5197:5:19"},{"name":"newLen","nativeSrc":"5204:6:19","nodeType":"YulIdentifier","src":"5204:6:19"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nativeSrc":"5144:52:19","nodeType":"YulIdentifier","src":"5144:52:19"},"nativeSrc":"5144:67:19","nodeType":"YulFunctionCall","src":"5144:67:19"}],"functionName":{"name":"sstore","nativeSrc":"5131:6:19","nodeType":"YulIdentifier","src":"5131:6:19"},"nativeSrc":"5131:81:19","nodeType":"YulFunctionCall","src":"5131:81:19"},"nativeSrc":"5131:81:19","nodeType":"YulExpressionStatement","src":"5131:81:19"}]},"nativeSrc":"4992:230:19","nodeType":"YulCase","src":"4992:230:19","value":"default"}],"expression":{"arguments":[{"name":"newLen","nativeSrc":"4345:6:19","nodeType":"YulIdentifier","src":"4345:6:19"},{"kind":"number","nativeSrc":"4353:2:19","nodeType":"YulLiteral","src":"4353:2:19","type":"","value":"31"}],"functionName":{"name":"gt","nativeSrc":"4342:2:19","nodeType":"YulIdentifier","src":"4342:2:19"},"nativeSrc":"4342:14:19","nodeType":"YulFunctionCall","src":"4342:14:19"},"nativeSrc":"4335:887:19","nodeType":"YulSwitch","src":"4335:887:19"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nativeSrc":"3833:1395:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nativeSrc":"3914:4:19","nodeType":"YulTypedName","src":"3914:4:19","type":""},{"name":"src","nativeSrc":"3920:3:19","nodeType":"YulTypedName","src":"3920:3:19","type":""}],"src":"3833:1395:19"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b506040518060400160405280600681526020017f44414f4e465400000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f444e465400000000000000000000000000000000000000000000000000000000815250816000908161008c91906102f4565b50806001908161009c91906102f4565b5050506103c6565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061012557607f821691505b602082108103610138576101376100de565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026101a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610163565b6101aa8683610163565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006101f16101ec6101e7846101c2565b6101cc565b6101c2565b9050919050565b6000819050919050565b61020b836101d6565b61021f610217826101f8565b848454610170565b825550505050565b600090565b610234610227565b61023f818484610202565b505050565b5b818110156102635761025860008261022c565b600181019050610245565b5050565b601f8211156102a8576102798161013e565b61028284610153565b81016020851015610291578190505b6102a561029d85610153565b830182610244565b50505b505050565b600082821c905092915050565b60006102cb600019846008026102ad565b1980831691505092915050565b60006102e483836102ba565b9150826002028217905092915050565b6102fd826100a4565b67ffffffffffffffff811115610316576103156100af565b5b610320825461010d565b61032b828285610267565b600060209050601f83116001811461035e576000841561034c578287015190505b61035685826102d8565b8655506103be565b601f19841661036c8661013e565b60005b828110156103945784890151825560018201915060208501945060208101905061036f565b868310156103b157848901516103ad601f8916826102ba565b8355505b6001600288020188555050505b505050505050565b612497806103d56000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a22cb4651161007c578063a22cb46514610372578063b88d4fde1461038e578063c87b56dd146103aa578063d5391393146103da578063d547741f146103f8578063e985e9c51461041457610137565b806370a08231146102a657806391d14854146102d657806395d89b4114610306578063a144819414610324578063a217fddf1461035457610137565b8063248a9ca3116100ff578063248a9ca3146101f25780632f2ff15d1461022257806336568abe1461023e57806342842e0e1461025a5780636352211e1461027657610137565b806301ffc9a71461013c57806306fdde031461016c578063081812fc1461018a578063095ea7b3146101ba57806323b872dd146101d6575b600080fd5b61015660048036038101906101519190611beb565b610444565b6040516101639190611c33565b60405180910390f35b610174610456565b6040516101819190611cde565b60405180910390f35b6101a4600480360381019061019f9190611d36565b6104e8565b6040516101b19190611da4565b60405180910390f35b6101d460048036038101906101cf9190611deb565b610504565b005b6101f060048036038101906101eb9190611e2b565b61051a565b005b61020c60048036038101906102079190611eb4565b61061c565b6040516102199190611ef0565b60405180910390f35b61023c60048036038101906102379190611f0b565b61063c565b005b61025860048036038101906102539190611f0b565b61065e565b005b610274600480360381019061026f9190611e2b565b6106d9565b005b610290600480360381019061028b9190611d36565b6106f9565b60405161029d9190611da4565b60405180910390f35b6102c060048036038101906102bb9190611f4b565b61070b565b6040516102cd9190611f87565b60405180910390f35b6102f060048036038101906102eb9190611f0b565b6107c5565b6040516102fd9190611c33565b60405180910390f35b61030e610830565b60405161031b9190611cde565b60405180910390f35b61033e60048036038101906103399190611deb565b6108c2565b60405161034b9190611f87565b60405180910390f35b61035c6108d7565b6040516103699190611ef0565b60405180910390f35b61038c60048036038101906103879190611fce565b6108de565b005b6103a860048036038101906103a39190612143565b6108f4565b005b6103c460048036038101906103bf9190611d36565b610919565b6040516103d19190611cde565b60405180910390f35b6103e2610982565b6040516103ef9190611ef0565b60405180910390f35b610412600480360381019061040d9190611f0b565b6109a6565b005b61042e600480360381019061042991906121c6565b6109c8565b60405161043b9190611c33565b60405180910390f35b600061044f82610a5c565b9050919050565b60606000805461046590612235565b80601f016020809104026020016040519081016040528092919081815260200182805461049190612235565b80156104de5780601f106104b3576101008083540402835291602001916104de565b820191906000526020600020905b8154815290600101906020018083116104c157829003601f168201915b5050505050905090565b60006104f382610ad6565b506104fd82610b5e565b9050919050565b6105168282610511610b9b565b610ba3565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361058c5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105839190611da4565b60405180910390fd5b60006105a0838361059b610b9b565b610bb5565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610616578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161060d93929190612266565b60405180910390fd5b50505050565b600060066000838152602001908152602001600020600101549050919050565b6106458261061c565b61064e81610dcf565b6106588383610de3565b50505050565b610666610b9b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106ca576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d48282610ed5565b505050565b6106f4838383604051806020016040528060008152506108f4565b505050565b600061070482610ad6565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361077e5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107759190611da4565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006006600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60606001805461083f90612235565b80601f016020809104026020016040519081016040528092919081815260200182805461086b90612235565b80156108b85780601f1061088d576101008083540402835291602001916108b8565b820191906000526020600020905b81548152906001019060200180831161089b57829003601f168201915b5050505050905090565b60006108ce8383610fc8565b81905092915050565b6000801b81565b6108f06108e9610b9b565b8383610fe6565b5050565b6108ff84848461051a565b61091361090a610b9b565b85858585611155565b50505050565b606061092482610ad6565b50600061092f611306565b9050600081511161094f576040518060200160405280600081525061097a565b806109598461131d565b60405160200161096a9291906122d9565b6040516020818303038152906040525b915050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6109af8261061c565b6109b881610dcf565b6109c28383610ed5565b50505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610acf5750610ace826113eb565b5b9050919050565b600080610ae2836114cd565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b5557826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b4c9190611f87565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610bb0838383600161150a565b505050565b600080610bc1846114cd565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c0357610c028184866116cf565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c9457610c4560008560008061150a565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d17576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610de081610ddb610b9b565b611793565b50565b6000610def83836107c5565b610eca5760016006600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e67610b9b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610ecf565b600090505b92915050565b6000610ee183836107c5565b15610fbd5760006006600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610f5a610b9b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610fc2565b600090505b92915050565b610fe28282604051806020016040528060008152506117e4565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361105757816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161104e9190611da4565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111489190611c33565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156112ff578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b81526004016111b49493929190612352565b6020604051808303816000875af19250505080156111f057506040513d601f19601f820116820180604052508101906111ed91906123b3565b60015b611274573d8060008114611220576040519150601f19603f3d011682016040523d82523d6000602084013e611225565b606091505b50600081510361126c57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112639190611da4565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112fd57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112f49190611da4565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b60606000600161132c84611808565b01905060008167ffffffffffffffff81111561134b5761134a612018565b5b6040519080825280601f01601f19166020018201604052801561137d5781602001600182028036833780820191505090505b509050600082602083010190505b6001156113e0578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816113d4576113d36123e0565b5b0494506000850361138b575b819350505050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806114b657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806114c657506114c58261195b565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806115435750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561167757600061155384610ad6565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115be57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115d157506115cf81846109c8565b155b1561161357826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161160a9190611da4565b60405180910390fd5b811561167557838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116da8383836119c5565b61178e57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361174f57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117469190611f87565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161178592919061240f565b60405180910390fd5b505050565b61179d82826107c5565b6117e05780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016117d7929190612438565b60405180910390fd5b5050565b6117ee8383611a86565b6118036117f9610b9b565b6000858585611155565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611866577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161185c5761185b6123e0565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106118a3576d04ee2d6d415b85acef81000000008381611899576118986123e0565b5b0492506020810190505b662386f26fc1000083106118d257662386f26fc1000083816118c8576118c76123e0565b5b0492506010810190505b6305f5e10083106118fb576305f5e10083816118f1576118f06123e0565b5b0492506008810190505b6127108310611920576127108381611916576119156123e0565b5b0492506004810190505b606483106119435760648381611939576119386123e0565b5b0492506002810190505b600a8310611952576001810190505b80915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611a7d57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a3e5750611a3d84846109c8565b5b80611a7c57508273ffffffffffffffffffffffffffffffffffffffff16611a6483610b5e565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611af85760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611aef9190611da4565b60405180910390fd5b6000611b0683836000610bb5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b7a5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611b719190611da4565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611bc881611b93565b8114611bd357600080fd5b50565b600081359050611be581611bbf565b92915050565b600060208284031215611c0157611c00611b89565b5b6000611c0f84828501611bd6565b91505092915050565b60008115159050919050565b611c2d81611c18565b82525050565b6000602082019050611c486000830184611c24565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c88578082015181840152602081019050611c6d565b60008484015250505050565b6000601f19601f8301169050919050565b6000611cb082611c4e565b611cba8185611c59565b9350611cca818560208601611c6a565b611cd381611c94565b840191505092915050565b60006020820190508181036000830152611cf88184611ca5565b905092915050565b6000819050919050565b611d1381611d00565b8114611d1e57600080fd5b50565b600081359050611d3081611d0a565b92915050565b600060208284031215611d4c57611d4b611b89565b5b6000611d5a84828501611d21565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d8e82611d63565b9050919050565b611d9e81611d83565b82525050565b6000602082019050611db96000830184611d95565b92915050565b611dc881611d83565b8114611dd357600080fd5b50565b600081359050611de581611dbf565b92915050565b60008060408385031215611e0257611e01611b89565b5b6000611e1085828601611dd6565b9250506020611e2185828601611d21565b9150509250929050565b600080600060608486031215611e4457611e43611b89565b5b6000611e5286828701611dd6565b9350506020611e6386828701611dd6565b9250506040611e7486828701611d21565b9150509250925092565b6000819050919050565b611e9181611e7e565b8114611e9c57600080fd5b50565b600081359050611eae81611e88565b92915050565b600060208284031215611eca57611ec9611b89565b5b6000611ed884828501611e9f565b91505092915050565b611eea81611e7e565b82525050565b6000602082019050611f056000830184611ee1565b92915050565b60008060408385031215611f2257611f21611b89565b5b6000611f3085828601611e9f565b9250506020611f4185828601611dd6565b9150509250929050565b600060208284031215611f6157611f60611b89565b5b6000611f6f84828501611dd6565b91505092915050565b611f8181611d00565b82525050565b6000602082019050611f9c6000830184611f78565b92915050565b611fab81611c18565b8114611fb657600080fd5b50565b600081359050611fc881611fa2565b92915050565b60008060408385031215611fe557611fe4611b89565b5b6000611ff385828601611dd6565b925050602061200485828601611fb9565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61205082611c94565b810181811067ffffffffffffffff8211171561206f5761206e612018565b5b80604052505050565b6000612082611b7f565b905061208e8282612047565b919050565b600067ffffffffffffffff8211156120ae576120ad612018565b5b6120b782611c94565b9050602081019050919050565b82818337600083830152505050565b60006120e66120e184612093565b612078565b90508281526020810184848401111561210257612101612013565b5b61210d8482856120c4565b509392505050565b600082601f83011261212a5761212961200e565b5b813561213a8482602086016120d3565b91505092915050565b6000806000806080858703121561215d5761215c611b89565b5b600061216b87828801611dd6565b945050602061217c87828801611dd6565b935050604061218d87828801611d21565b925050606085013567ffffffffffffffff8111156121ae576121ad611b8e565b5b6121ba87828801612115565b91505092959194509250565b600080604083850312156121dd576121dc611b89565b5b60006121eb85828601611dd6565b92505060206121fc85828601611dd6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061224d57607f821691505b6020821081036122605761225f612206565b5b50919050565b600060608201905061227b6000830186611d95565b6122886020830185611f78565b6122956040830184611d95565b949350505050565b600081905092915050565b60006122b382611c4e565b6122bd818561229d565b93506122cd818560208601611c6a565b80840191505092915050565b60006122e582856122a8565b91506122f182846122a8565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000612324826122fd565b61232e8185612308565b935061233e818560208601611c6a565b61234781611c94565b840191505092915050565b60006080820190506123676000830187611d95565b6123746020830186611d95565b6123816040830185611f78565b81810360608301526123938184612319565b905095945050505050565b6000815190506123ad81611bbf565b92915050565b6000602082840312156123c9576123c8611b89565b5b60006123d78482850161239e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506124246000830185611d95565b6124316020830184611f78565b9392505050565b600060408201905061244d6000830185611d95565b61245a6020830184611ee1565b939250505056fea26469706673582212205decdeefa1460b4f3f9c05553572548e8a385180a45c420bb95842462bda795664736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x44414F4E46540000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x444E465400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH2 0x8C SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH2 0x9C SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST POP POP POP PUSH2 0x3C6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x125 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x138 JUMPI PUSH2 0x137 PUSH2 0xDE JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x1A0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x163 JUMP JUMPDEST PUSH2 0x1AA DUP7 DUP4 PUSH2 0x163 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F1 PUSH2 0x1EC PUSH2 0x1E7 DUP5 PUSH2 0x1C2 JUMP JUMPDEST PUSH2 0x1CC JUMP JUMPDEST PUSH2 0x1C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B DUP4 PUSH2 0x1D6 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x217 DUP3 PUSH2 0x1F8 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x170 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x234 PUSH2 0x227 JUMP JUMPDEST PUSH2 0x23F DUP2 DUP5 DUP5 PUSH2 0x202 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x263 JUMPI PUSH2 0x258 PUSH1 0x0 DUP3 PUSH2 0x22C JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x245 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x279 DUP2 PUSH2 0x13E JUMP JUMPDEST PUSH2 0x282 DUP5 PUSH2 0x153 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x291 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2A5 PUSH2 0x29D DUP6 PUSH2 0x153 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x244 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CB PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2AD JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E4 DUP4 DUP4 PUSH2 0x2BA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2FD DUP3 PUSH2 0xA4 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x316 JUMPI PUSH2 0x315 PUSH2 0xAF JUMP JUMPDEST JUMPDEST PUSH2 0x320 DUP3 SLOAD PUSH2 0x10D JUMP JUMPDEST PUSH2 0x32B DUP3 DUP3 DUP6 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x35E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x34C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x356 DUP6 DUP3 PUSH2 0x2D8 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3BE JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x36C DUP7 PUSH2 0x13E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x394 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x36F JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3B1 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3AD PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2BA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2497 DUP1 PUSH2 0x3D5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x414 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xA1448194 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x354 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x276 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1DEB JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x51A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x6D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1DEB JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST PUSH2 0x8DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x2143 JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E2 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP3 PUSH2 0xA5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x465 SWAP1 PUSH2 0x2235 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x491 SWAP1 PUSH2 0x2235 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F3 DUP3 PUSH2 0xAD6 JUMP JUMPDEST POP PUSH2 0x4FD DUP3 PUSH2 0xB5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x516 DUP3 DUP3 PUSH2 0x511 PUSH2 0xB9B JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x583 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5A0 DUP4 DUP4 PUSH2 0x59B PUSH2 0xB9B JUMP JUMPDEST PUSH2 0xBB5 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x616 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x645 DUP3 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x64E DUP2 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x658 DUP4 DUP4 PUSH2 0xDE3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x666 PUSH2 0xB9B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D4 DUP3 DUP3 PUSH2 0xED5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6F4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x704 DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x83F SWAP1 PUSH2 0x2235 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x86B SWAP1 PUSH2 0x2235 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x88D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x89B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CE DUP4 DUP4 PUSH2 0xFC8 JUMP JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x8F0 PUSH2 0x8E9 PUSH2 0xB9B JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8FF DUP5 DUP5 DUP5 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x913 PUSH2 0x90A PUSH2 0xB9B JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1155 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x924 DUP3 PUSH2 0xAD6 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x92F PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x97A JUMP JUMPDEST DUP1 PUSH2 0x959 DUP5 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x96A SWAP3 SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x9AF DUP3 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x9B8 DUP2 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x9C2 DUP4 DUP4 PUSH2 0xED5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xACF JUMPI POP PUSH2 0xACE DUP3 PUSH2 0x13EB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAE2 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB55 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBB0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x150A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBC1 DUP5 PUSH2 0x14CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC03 JUMPI PUSH2 0xC02 DUP2 DUP5 DUP7 PUSH2 0x16CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC94 JUMPI PUSH2 0xC45 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD17 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDE0 DUP2 PUSH2 0xDDB PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x1793 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEF DUP4 DUP4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0xECA JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE67 PUSH2 0xB9B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xECF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE1 DUP4 DUP4 PUSH2 0x7C5 JUMP JUMPDEST ISZERO PUSH2 0xFBD JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF5A PUSH2 0xB9B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFE2 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x17E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1057 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104E SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1148 SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12FF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11F0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1274 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x126C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1263 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12FD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x132C DUP5 PUSH2 0x1808 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0x2018 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x137D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 DUP4 ADD ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13E0 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x13D4 JUMPI PUSH2 0x13D3 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x138B JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x14B6 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x14C6 JUMPI POP PUSH2 0x14C5 DUP3 PUSH2 0x195B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1543 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1677 JUMPI PUSH1 0x0 PUSH2 0x1553 DUP5 PUSH2 0xAD6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15BE JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15D1 JUMPI POP PUSH2 0x15CF DUP2 DUP5 PUSH2 0x9C8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1613 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160A SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1675 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16DA DUP4 DUP4 DUP4 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0x178E JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x174F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1746 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1785 SWAP3 SWAP2 SWAP1 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x179D DUP3 DUP3 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x17E0 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D7 SWAP3 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x17EE DUP4 DUP4 PUSH2 0x1A86 JUMP JUMPDEST PUSH2 0x1803 PUSH2 0x17F9 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x1155 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1866 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x185C JUMPI PUSH2 0x185B PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x18A3 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1899 JUMPI PUSH2 0x1898 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x18D2 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x18FB JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x18F1 JUMPI PUSH2 0x18F0 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1920 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1916 JUMPI PUSH2 0x1915 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1943 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1939 JUMPI PUSH2 0x1938 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1952 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1A7D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1A3E JUMPI POP PUSH2 0x1A3D DUP5 DUP5 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1A7C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A64 DUP4 PUSH2 0xB5E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AF8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AEF SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B06 DUP4 DUP4 PUSH1 0x0 PUSH2 0xBB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B7A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B71 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC8 DUP2 PUSH2 0x1B93 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BE5 DUP2 PUSH2 0x1BBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C01 JUMPI PUSH2 0x1C00 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C0F DUP5 DUP3 DUP6 ADD PUSH2 0x1BD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2D DUP2 PUSH2 0x1C18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C88 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB0 DUP3 PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x1CBA DUP2 DUP6 PUSH2 0x1C59 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CCA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x1CD3 DUP2 PUSH2 0x1C94 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF8 DUP2 DUP5 PUSH2 0x1CA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D13 DUP2 PUSH2 0x1D00 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D30 DUP2 PUSH2 0x1D0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D4C JUMPI PUSH2 0x1D4B PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D5A DUP5 DUP3 DUP6 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8E DUP3 PUSH2 0x1D63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D9E DUP2 PUSH2 0x1D83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DB9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DC8 DUP2 PUSH2 0x1D83 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DE5 DUP2 PUSH2 0x1DBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E02 JUMPI PUSH2 0x1E01 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E10 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E21 DUP6 DUP3 DUP7 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E44 JUMPI PUSH2 0x1E43 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E52 DUP7 DUP3 DUP8 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E63 DUP7 DUP3 DUP8 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E74 DUP7 DUP3 DUP8 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E91 DUP2 PUSH2 0x1E7E JUMP JUMPDEST DUP2 EQ PUSH2 0x1E9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EAE DUP2 PUSH2 0x1E88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ECA JUMPI PUSH2 0x1EC9 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED8 DUP5 DUP3 DUP6 ADD PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EEA DUP2 PUSH2 0x1E7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F22 JUMPI PUSH2 0x1F21 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F30 DUP6 DUP3 DUP7 ADD PUSH2 0x1E9F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F41 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F61 JUMPI PUSH2 0x1F60 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F6F DUP5 DUP3 DUP6 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F81 DUP2 PUSH2 0x1D00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FAB DUP2 PUSH2 0x1C18 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FC8 DUP2 PUSH2 0x1FA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FE5 JUMPI PUSH2 0x1FE4 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FF3 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2004 DUP6 DUP3 DUP7 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2050 DUP3 PUSH2 0x1C94 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x206F JUMPI PUSH2 0x206E PUSH2 0x2018 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2082 PUSH2 0x1B7F JUMP JUMPDEST SWAP1 POP PUSH2 0x208E DUP3 DUP3 PUSH2 0x2047 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20AE JUMPI PUSH2 0x20AD PUSH2 0x2018 JUMP JUMPDEST JUMPDEST PUSH2 0x20B7 DUP3 PUSH2 0x1C94 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E6 PUSH2 0x20E1 DUP5 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x2078 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2102 JUMPI PUSH2 0x2101 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST PUSH2 0x210D DUP5 DUP3 DUP6 PUSH2 0x20C4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x200E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x213A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x215D JUMPI PUSH2 0x215C PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x216B DUP8 DUP3 DUP9 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x217C DUP8 DUP3 DUP9 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x218D DUP8 DUP3 DUP9 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21AE JUMPI PUSH2 0x21AD PUSH2 0x1B8E JUMP JUMPDEST JUMPDEST PUSH2 0x21BA DUP8 DUP3 DUP9 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21DD JUMPI PUSH2 0x21DC PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21EB DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21FC DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x224D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x2206 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x227B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x2288 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x2295 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D95 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B3 DUP3 PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x22BD DUP2 DUP6 PUSH2 0x229D JUMP JUMPDEST SWAP4 POP PUSH2 0x22CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C6A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E5 DUP3 DUP6 PUSH2 0x22A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x22F1 DUP3 DUP5 PUSH2 0x22A8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2324 DUP3 PUSH2 0x22FD JUMP JUMPDEST PUSH2 0x232E DUP2 DUP6 PUSH2 0x2308 JUMP JUMPDEST SWAP4 POP PUSH2 0x233E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x2347 DUP2 PUSH2 0x1C94 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2367 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x2374 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x2381 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F78 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2393 DUP2 DUP5 PUSH2 0x2319 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x23AD DUP2 PUSH2 0x1BBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C9 JUMPI PUSH2 0x23C8 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23D7 DUP5 DUP3 DUP6 ADD PUSH2 0x239E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2424 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x2431 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x244D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x245A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0xEC 0xDE 0xEF LOG1 CHAINID SIGNEXTEND 0x4F EXTCODEHASH SWAP13 SDIV SSTORE CALLDATALOAD PUSH19 0x548E8A385180A45C420BB95842462BDA795664 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"211:545:17:-:0;;;327:41;;;;;;;;;;1380:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;211:545:17;;7:99:19;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;211:545:17:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_30":{"entryPoint":2263,"id":30,"parameterSlots":0,"returnSlots":0},"@MINTER_ROLE_7283":{"entryPoint":2434,"id":7283,"parameterSlots":0,"returnSlots":0},"@_approve_1340":{"entryPoint":2979,"id":1340,"parameterSlots":3,"returnSlots":0},"@_approve_1406":{"entryPoint":5386,"id":1406,"parameterSlots":4,"returnSlots":0},"@_baseURI_721":{"entryPoint":4870,"id":721,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_980":{"entryPoint":5839,"id":980,"parameterSlots":3,"returnSlots":0},"@_checkRole_115":{"entryPoint":6035,"id":115,"parameterSlots":2,"returnSlots":0},"@_checkRole_94":{"entryPoint":3535,"id":94,"parameterSlots":1,"returnSlots":0},"@_getApproved_907":{"entryPoint":2910,"id":907,"parameterSlots":1,"returnSlots":1},"@_grantRole_257":{"entryPoint":3555,"id":257,"parameterSlots":2,"returnSlots":1},"@_isAuthorized_943":{"entryPoint":6597,"id":943,"parameterSlots":3,"returnSlots":1},"@_mint_1136":{"entryPoint":6790,"id":1136,"parameterSlots":2,"returnSlots":0},"@_msgSender_1725":{"entryPoint":2971,"id":1725,"parameterSlots":0,"returnSlots":1},"@_ownerOf_894":{"entryPoint":5325,"id":894,"parameterSlots":1,"returnSlots":1},"@_requireOwned_1472":{"entryPoint":2774,"id":1472,"parameterSlots":1,"returnSlots":1},"@_revokeRole_295":{"entryPoint":3797,"id":295,"parameterSlots":2,"returnSlots":1},"@_safeMint_1151":{"entryPoint":4040,"id":1151,"parameterSlots":2,"returnSlots":0},"@_safeMint_1181":{"entryPoint":6116,"id":1181,"parameterSlots":3,"returnSlots":0},"@_setApprovalForAll_1443":{"entryPoint":4070,"id":1443,"parameterSlots":3,"returnSlots":0},"@_update_1086":{"entryPoint":2997,"id":1086,"parameterSlots":3,"returnSlots":1},"@approve_737":{"entryPoint":1284,"id":737,"parameterSlots":2,"returnSlots":0},"@balanceOf_645":{"entryPoint":1803,"id":645,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_1712":{"entryPoint":4437,"id":1712,"parameterSlots":5,"returnSlots":0},"@getApproved_754":{"entryPoint":1256,"id":754,"parameterSlots":1,"returnSlots":1},"@getRoleAdmin_129":{"entryPoint":1564,"id":129,"parameterSlots":1,"returnSlots":1},"@grantRole_148":{"entryPoint":1596,"id":148,"parameterSlots":2,"returnSlots":0},"@hasRole_81":{"entryPoint":1989,"id":81,"parameterSlots":2,"returnSlots":1},"@isApprovedForAll_787":{"entryPoint":2504,"id":787,"parameterSlots":2,"returnSlots":1},"@log10_4686":{"entryPoint":6152,"id":4686,"parameterSlots":1,"returnSlots":1},"@name_667":{"entryPoint":1110,"id":667,"parameterSlots":0,"returnSlots":1},"@ownerOf_658":{"entryPoint":1785,"id":658,"parameterSlots":1,"returnSlots":1},"@renounceRole_190":{"entryPoint":1630,"id":190,"parameterSlots":2,"returnSlots":0},"@revokeRole_167":{"entryPoint":2470,"id":167,"parameterSlots":2,"returnSlots":0},"@safeMint_7308":{"entryPoint":2242,"id":7308,"parameterSlots":2,"returnSlots":1},"@safeTransferFrom_851":{"entryPoint":1753,"id":851,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_881":{"entryPoint":2292,"id":881,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_770":{"entryPoint":2270,"id":770,"parameterSlots":2,"returnSlots":0},"@supportsInterface_3220":{"entryPoint":6491,"id":3220,"parameterSlots":1,"returnSlots":1},"@supportsInterface_617":{"entryPoint":5099,"id":617,"parameterSlots":1,"returnSlots":1},"@supportsInterface_63":{"entryPoint":2652,"id":63,"parameterSlots":1,"returnSlots":1},"@supportsInterface_7324":{"entryPoint":1092,"id":7324,"parameterSlots":1,"returnSlots":1},"@symbol_676":{"entryPoint":2096,"id":676,"parameterSlots":0,"returnSlots":1},"@toString_1909":{"entryPoint":4893,"id":1909,"parameterSlots":1,"returnSlots":1},"@tokenURI_712":{"entryPoint":2329,"id":712,"parameterSlots":1,"returnSlots":1},"@transferFrom_833":{"entryPoint":1306,"id":833,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":8403,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7638,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":8121,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":7839,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":7126,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":9118,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":8469,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":7457,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":8011,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":8646,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7723,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":8515,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":8142,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7659,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32":{"entryPoint":7860,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":7947,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":7147,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":9139,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":7478,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7573,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":7204,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":7905,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8985,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":7333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8872,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8056,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8921,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":9042,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed":{"entryPoint":9272,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":9231,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":8806,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":7219,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":7920,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7390,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8071,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":8312,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":7039,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":8339,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8957,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":7246,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8968,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":7257,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8861,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7555,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":7192,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":7806,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":7059,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7523,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":7424,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":8388,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":7274,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8757,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":8263,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x12":{"entryPoint":9184,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8710,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":8216,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":8206,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":8211,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":7054,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":7049,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":7316,"id":null,"parameterSlots":1,"returnSlots":1},"validator_revert_t_address":{"entryPoint":7615,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":8098,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":7816,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":7103,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":7434,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nativeSrc":"0:16613:19","nodeType":"YulBlock","src":"0:16613:19","statements":[{"body":{"nativeSrc":"47:35:19","nodeType":"YulBlock","src":"47:35:19","statements":[{"nativeSrc":"57:19:19","nodeType":"YulAssignment","src":"57:19:19","value":{"arguments":[{"kind":"number","nativeSrc":"73:2:19","nodeType":"YulLiteral","src":"73:2:19","type":"","value":"64"}],"functionName":{"name":"mload","nativeSrc":"67:5:19","nodeType":"YulIdentifier","src":"67:5:19"},"nativeSrc":"67:9:19","nodeType":"YulFunctionCall","src":"67:9:19"},"variableNames":[{"name":"memPtr","nativeSrc":"57:6:19","nodeType":"YulIdentifier","src":"57:6:19"}]}]},"name":"allocate_unbounded","nativeSrc":"7:75:19","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nativeSrc":"40:6:19","nodeType":"YulTypedName","src":"40:6:19","type":""}],"src":"7:75:19"},{"body":{"nativeSrc":"177:28:19","nodeType":"YulBlock","src":"177:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"194:1:19","nodeType":"YulLiteral","src":"194:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"197:1:19","nodeType":"YulLiteral","src":"197:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"187:6:19","nodeType":"YulIdentifier","src":"187:6:19"},"nativeSrc":"187:12:19","nodeType":"YulFunctionCall","src":"187:12:19"},"nativeSrc":"187:12:19","nodeType":"YulExpressionStatement","src":"187:12:19"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"88:117:19","nodeType":"YulFunctionDefinition","src":"88:117:19"},{"body":{"nativeSrc":"300:28:19","nodeType":"YulBlock","src":"300:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"317:1:19","nodeType":"YulLiteral","src":"317:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"320:1:19","nodeType":"YulLiteral","src":"320:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"310:6:19","nodeType":"YulIdentifier","src":"310:6:19"},"nativeSrc":"310:12:19","nodeType":"YulFunctionCall","src":"310:12:19"},"nativeSrc":"310:12:19","nodeType":"YulExpressionStatement","src":"310:12:19"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"211:117:19","nodeType":"YulFunctionDefinition","src":"211:117:19"},{"body":{"nativeSrc":"378:105:19","nodeType":"YulBlock","src":"378:105:19","statements":[{"nativeSrc":"388:89:19","nodeType":"YulAssignment","src":"388:89:19","value":{"arguments":[{"name":"value","nativeSrc":"403:5:19","nodeType":"YulIdentifier","src":"403:5:19"},{"kind":"number","nativeSrc":"410:66:19","nodeType":"YulLiteral","src":"410:66:19","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nativeSrc":"399:3:19","nodeType":"YulIdentifier","src":"399:3:19"},"nativeSrc":"399:78:19","nodeType":"YulFunctionCall","src":"399:78:19"},"variableNames":[{"name":"cleaned","nativeSrc":"388:7:19","nodeType":"YulIdentifier","src":"388:7:19"}]}]},"name":"cleanup_t_bytes4","nativeSrc":"334:149:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"360:5:19","nodeType":"YulTypedName","src":"360:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"370:7:19","nodeType":"YulTypedName","src":"370:7:19","type":""}],"src":"334:149:19"},{"body":{"nativeSrc":"531:78:19","nodeType":"YulBlock","src":"531:78:19","statements":[{"body":{"nativeSrc":"587:16:19","nodeType":"YulBlock","src":"587:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"596:1:19","nodeType":"YulLiteral","src":"596:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"599:1:19","nodeType":"YulLiteral","src":"599:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"589:6:19","nodeType":"YulIdentifier","src":"589:6:19"},"nativeSrc":"589:12:19","nodeType":"YulFunctionCall","src":"589:12:19"},"nativeSrc":"589:12:19","nodeType":"YulExpressionStatement","src":"589:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"554:5:19","nodeType":"YulIdentifier","src":"554:5:19"},{"arguments":[{"name":"value","nativeSrc":"578:5:19","nodeType":"YulIdentifier","src":"578:5:19"}],"functionName":{"name":"cleanup_t_bytes4","nativeSrc":"561:16:19","nodeType":"YulIdentifier","src":"561:16:19"},"nativeSrc":"561:23:19","nodeType":"YulFunctionCall","src":"561:23:19"}],"functionName":{"name":"eq","nativeSrc":"551:2:19","nodeType":"YulIdentifier","src":"551:2:19"},"nativeSrc":"551:34:19","nodeType":"YulFunctionCall","src":"551:34:19"}],"functionName":{"name":"iszero","nativeSrc":"544:6:19","nodeType":"YulIdentifier","src":"544:6:19"},"nativeSrc":"544:42:19","nodeType":"YulFunctionCall","src":"544:42:19"},"nativeSrc":"541:62:19","nodeType":"YulIf","src":"541:62:19"}]},"name":"validator_revert_t_bytes4","nativeSrc":"489:120:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"524:5:19","nodeType":"YulTypedName","src":"524:5:19","type":""}],"src":"489:120:19"},{"body":{"nativeSrc":"666:86:19","nodeType":"YulBlock","src":"666:86:19","statements":[{"nativeSrc":"676:29:19","nodeType":"YulAssignment","src":"676:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"698:6:19","nodeType":"YulIdentifier","src":"698:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"685:12:19","nodeType":"YulIdentifier","src":"685:12:19"},"nativeSrc":"685:20:19","nodeType":"YulFunctionCall","src":"685:20:19"},"variableNames":[{"name":"value","nativeSrc":"676:5:19","nodeType":"YulIdentifier","src":"676:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"740:5:19","nodeType":"YulIdentifier","src":"740:5:19"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"714:25:19","nodeType":"YulIdentifier","src":"714:25:19"},"nativeSrc":"714:32:19","nodeType":"YulFunctionCall","src":"714:32:19"},"nativeSrc":"714:32:19","nodeType":"YulExpressionStatement","src":"714:32:19"}]},"name":"abi_decode_t_bytes4","nativeSrc":"615:137:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"644:6:19","nodeType":"YulTypedName","src":"644:6:19","type":""},{"name":"end","nativeSrc":"652:3:19","nodeType":"YulTypedName","src":"652:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"660:5:19","nodeType":"YulTypedName","src":"660:5:19","type":""}],"src":"615:137:19"},{"body":{"nativeSrc":"823:262:19","nodeType":"YulBlock","src":"823:262:19","statements":[{"body":{"nativeSrc":"869:83:19","nodeType":"YulBlock","src":"869:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"871:77:19","nodeType":"YulIdentifier","src":"871:77:19"},"nativeSrc":"871:79:19","nodeType":"YulFunctionCall","src":"871:79:19"},"nativeSrc":"871:79:19","nodeType":"YulExpressionStatement","src":"871:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"844:7:19","nodeType":"YulIdentifier","src":"844:7:19"},{"name":"headStart","nativeSrc":"853:9:19","nodeType":"YulIdentifier","src":"853:9:19"}],"functionName":{"name":"sub","nativeSrc":"840:3:19","nodeType":"YulIdentifier","src":"840:3:19"},"nativeSrc":"840:23:19","nodeType":"YulFunctionCall","src":"840:23:19"},{"kind":"number","nativeSrc":"865:2:19","nodeType":"YulLiteral","src":"865:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"836:3:19","nodeType":"YulIdentifier","src":"836:3:19"},"nativeSrc":"836:32:19","nodeType":"YulFunctionCall","src":"836:32:19"},"nativeSrc":"833:119:19","nodeType":"YulIf","src":"833:119:19"},{"nativeSrc":"962:116:19","nodeType":"YulBlock","src":"962:116:19","statements":[{"nativeSrc":"977:15:19","nodeType":"YulVariableDeclaration","src":"977:15:19","value":{"kind":"number","nativeSrc":"991:1:19","nodeType":"YulLiteral","src":"991:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"981:6:19","nodeType":"YulTypedName","src":"981:6:19","type":""}]},{"nativeSrc":"1006:62:19","nodeType":"YulAssignment","src":"1006:62:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"1040:9:19","nodeType":"YulIdentifier","src":"1040:9:19"},{"name":"offset","nativeSrc":"1051:6:19","nodeType":"YulIdentifier","src":"1051:6:19"}],"functionName":{"name":"add","nativeSrc":"1036:3:19","nodeType":"YulIdentifier","src":"1036:3:19"},"nativeSrc":"1036:22:19","nodeType":"YulFunctionCall","src":"1036:22:19"},{"name":"dataEnd","nativeSrc":"1060:7:19","nodeType":"YulIdentifier","src":"1060:7:19"}],"functionName":{"name":"abi_decode_t_bytes4","nativeSrc":"1016:19:19","nodeType":"YulIdentifier","src":"1016:19:19"},"nativeSrc":"1016:52:19","nodeType":"YulFunctionCall","src":"1016:52:19"},"variableNames":[{"name":"value0","nativeSrc":"1006:6:19","nodeType":"YulIdentifier","src":"1006:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nativeSrc":"758:327:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"793:9:19","nodeType":"YulTypedName","src":"793:9:19","type":""},{"name":"dataEnd","nativeSrc":"804:7:19","nodeType":"YulTypedName","src":"804:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"816:6:19","nodeType":"YulTypedName","src":"816:6:19","type":""}],"src":"758:327:19"},{"body":{"nativeSrc":"1133:48:19","nodeType":"YulBlock","src":"1133:48:19","statements":[{"nativeSrc":"1143:32:19","nodeType":"YulAssignment","src":"1143:32:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1168:5:19","nodeType":"YulIdentifier","src":"1168:5:19"}],"functionName":{"name":"iszero","nativeSrc":"1161:6:19","nodeType":"YulIdentifier","src":"1161:6:19"},"nativeSrc":"1161:13:19","nodeType":"YulFunctionCall","src":"1161:13:19"}],"functionName":{"name":"iszero","nativeSrc":"1154:6:19","nodeType":"YulIdentifier","src":"1154:6:19"},"nativeSrc":"1154:21:19","nodeType":"YulFunctionCall","src":"1154:21:19"},"variableNames":[{"name":"cleaned","nativeSrc":"1143:7:19","nodeType":"YulIdentifier","src":"1143:7:19"}]}]},"name":"cleanup_t_bool","nativeSrc":"1091:90:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1115:5:19","nodeType":"YulTypedName","src":"1115:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"1125:7:19","nodeType":"YulTypedName","src":"1125:7:19","type":""}],"src":"1091:90:19"},{"body":{"nativeSrc":"1246:50:19","nodeType":"YulBlock","src":"1246:50:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1263:3:19","nodeType":"YulIdentifier","src":"1263:3:19"},{"arguments":[{"name":"value","nativeSrc":"1283:5:19","nodeType":"YulIdentifier","src":"1283:5:19"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"1268:14:19","nodeType":"YulIdentifier","src":"1268:14:19"},"nativeSrc":"1268:21:19","nodeType":"YulFunctionCall","src":"1268:21:19"}],"functionName":{"name":"mstore","nativeSrc":"1256:6:19","nodeType":"YulIdentifier","src":"1256:6:19"},"nativeSrc":"1256:34:19","nodeType":"YulFunctionCall","src":"1256:34:19"},"nativeSrc":"1256:34:19","nodeType":"YulExpressionStatement","src":"1256:34:19"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1187:109:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1234:5:19","nodeType":"YulTypedName","src":"1234:5:19","type":""},{"name":"pos","nativeSrc":"1241:3:19","nodeType":"YulTypedName","src":"1241:3:19","type":""}],"src":"1187:109:19"},{"body":{"nativeSrc":"1394:118:19","nodeType":"YulBlock","src":"1394:118:19","statements":[{"nativeSrc":"1404:26:19","nodeType":"YulAssignment","src":"1404:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"1416:9:19","nodeType":"YulIdentifier","src":"1416:9:19"},{"kind":"number","nativeSrc":"1427:2:19","nodeType":"YulLiteral","src":"1427:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1412:3:19","nodeType":"YulIdentifier","src":"1412:3:19"},"nativeSrc":"1412:18:19","nodeType":"YulFunctionCall","src":"1412:18:19"},"variableNames":[{"name":"tail","nativeSrc":"1404:4:19","nodeType":"YulIdentifier","src":"1404:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"1478:6:19","nodeType":"YulIdentifier","src":"1478:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"1491:9:19","nodeType":"YulIdentifier","src":"1491:9:19"},{"kind":"number","nativeSrc":"1502:1:19","nodeType":"YulLiteral","src":"1502:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"1487:3:19","nodeType":"YulIdentifier","src":"1487:3:19"},"nativeSrc":"1487:17:19","nodeType":"YulFunctionCall","src":"1487:17:19"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nativeSrc":"1440:37:19","nodeType":"YulIdentifier","src":"1440:37:19"},"nativeSrc":"1440:65:19","nodeType":"YulFunctionCall","src":"1440:65:19"},"nativeSrc":"1440:65:19","nodeType":"YulExpressionStatement","src":"1440:65:19"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nativeSrc":"1302:210:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"1366:9:19","nodeType":"YulTypedName","src":"1366:9:19","type":""},{"name":"value0","nativeSrc":"1378:6:19","nodeType":"YulTypedName","src":"1378:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"1389:4:19","nodeType":"YulTypedName","src":"1389:4:19","type":""}],"src":"1302:210:19"},{"body":{"nativeSrc":"1577:40:19","nodeType":"YulBlock","src":"1577:40:19","statements":[{"nativeSrc":"1588:22:19","nodeType":"YulAssignment","src":"1588:22:19","value":{"arguments":[{"name":"value","nativeSrc":"1604:5:19","nodeType":"YulIdentifier","src":"1604:5:19"}],"functionName":{"name":"mload","nativeSrc":"1598:5:19","nodeType":"YulIdentifier","src":"1598:5:19"},"nativeSrc":"1598:12:19","nodeType":"YulFunctionCall","src":"1598:12:19"},"variableNames":[{"name":"length","nativeSrc":"1588:6:19","nodeType":"YulIdentifier","src":"1588:6:19"}]}]},"name":"array_length_t_string_memory_ptr","nativeSrc":"1518:99:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"1560:5:19","nodeType":"YulTypedName","src":"1560:5:19","type":""}],"returnVariables":[{"name":"length","nativeSrc":"1570:6:19","nodeType":"YulTypedName","src":"1570:6:19","type":""}],"src":"1518:99:19"},{"body":{"nativeSrc":"1719:73:19","nodeType":"YulBlock","src":"1719:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"1736:3:19","nodeType":"YulIdentifier","src":"1736:3:19"},{"name":"length","nativeSrc":"1741:6:19","nodeType":"YulIdentifier","src":"1741:6:19"}],"functionName":{"name":"mstore","nativeSrc":"1729:6:19","nodeType":"YulIdentifier","src":"1729:6:19"},"nativeSrc":"1729:19:19","nodeType":"YulFunctionCall","src":"1729:19:19"},"nativeSrc":"1729:19:19","nodeType":"YulExpressionStatement","src":"1729:19:19"},{"nativeSrc":"1757:29:19","nodeType":"YulAssignment","src":"1757:29:19","value":{"arguments":[{"name":"pos","nativeSrc":"1776:3:19","nodeType":"YulIdentifier","src":"1776:3:19"},{"kind":"number","nativeSrc":"1781:4:19","nodeType":"YulLiteral","src":"1781:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"1772:3:19","nodeType":"YulIdentifier","src":"1772:3:19"},"nativeSrc":"1772:14:19","nodeType":"YulFunctionCall","src":"1772:14:19"},"variableNames":[{"name":"updated_pos","nativeSrc":"1757:11:19","nodeType":"YulIdentifier","src":"1757:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"1623:169:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"1691:3:19","nodeType":"YulTypedName","src":"1691:3:19","type":""},{"name":"length","nativeSrc":"1696:6:19","nodeType":"YulTypedName","src":"1696:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"1707:11:19","nodeType":"YulTypedName","src":"1707:11:19","type":""}],"src":"1623:169:19"},{"body":{"nativeSrc":"1860:186:19","nodeType":"YulBlock","src":"1860:186:19","statements":[{"nativeSrc":"1871:10:19","nodeType":"YulVariableDeclaration","src":"1871:10:19","value":{"kind":"number","nativeSrc":"1880:1:19","nodeType":"YulLiteral","src":"1880:1:19","type":"","value":"0"},"variables":[{"name":"i","nativeSrc":"1875:1:19","nodeType":"YulTypedName","src":"1875:1:19","type":""}]},{"body":{"nativeSrc":"1940:63:19","nodeType":"YulBlock","src":"1940:63:19","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"1965:3:19","nodeType":"YulIdentifier","src":"1965:3:19"},{"name":"i","nativeSrc":"1970:1:19","nodeType":"YulIdentifier","src":"1970:1:19"}],"functionName":{"name":"add","nativeSrc":"1961:3:19","nodeType":"YulIdentifier","src":"1961:3:19"},"nativeSrc":"1961:11:19","nodeType":"YulFunctionCall","src":"1961:11:19"},{"arguments":[{"arguments":[{"name":"src","nativeSrc":"1984:3:19","nodeType":"YulIdentifier","src":"1984:3:19"},{"name":"i","nativeSrc":"1989:1:19","nodeType":"YulIdentifier","src":"1989:1:19"}],"functionName":{"name":"add","nativeSrc":"1980:3:19","nodeType":"YulIdentifier","src":"1980:3:19"},"nativeSrc":"1980:11:19","nodeType":"YulFunctionCall","src":"1980:11:19"}],"functionName":{"name":"mload","nativeSrc":"1974:5:19","nodeType":"YulIdentifier","src":"1974:5:19"},"nativeSrc":"1974:18:19","nodeType":"YulFunctionCall","src":"1974:18:19"}],"functionName":{"name":"mstore","nativeSrc":"1954:6:19","nodeType":"YulIdentifier","src":"1954:6:19"},"nativeSrc":"1954:39:19","nodeType":"YulFunctionCall","src":"1954:39:19"},"nativeSrc":"1954:39:19","nodeType":"YulExpressionStatement","src":"1954:39:19"}]},"condition":{"arguments":[{"name":"i","nativeSrc":"1901:1:19","nodeType":"YulIdentifier","src":"1901:1:19"},{"name":"length","nativeSrc":"1904:6:19","nodeType":"YulIdentifier","src":"1904:6:19"}],"functionName":{"name":"lt","nativeSrc":"1898:2:19","nodeType":"YulIdentifier","src":"1898:2:19"},"nativeSrc":"1898:13:19","nodeType":"YulFunctionCall","src":"1898:13:19"},"nativeSrc":"1890:113:19","nodeType":"YulForLoop","post":{"nativeSrc":"1912:19:19","nodeType":"YulBlock","src":"1912:19:19","statements":[{"nativeSrc":"1914:15:19","nodeType":"YulAssignment","src":"1914:15:19","value":{"arguments":[{"name":"i","nativeSrc":"1923:1:19","nodeType":"YulIdentifier","src":"1923:1:19"},{"kind":"number","nativeSrc":"1926:2:19","nodeType":"YulLiteral","src":"1926:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"1919:3:19","nodeType":"YulIdentifier","src":"1919:3:19"},"nativeSrc":"1919:10:19","nodeType":"YulFunctionCall","src":"1919:10:19"},"variableNames":[{"name":"i","nativeSrc":"1914:1:19","nodeType":"YulIdentifier","src":"1914:1:19"}]}]},"pre":{"nativeSrc":"1894:3:19","nodeType":"YulBlock","src":"1894:3:19","statements":[]},"src":"1890:113:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"2023:3:19","nodeType":"YulIdentifier","src":"2023:3:19"},{"name":"length","nativeSrc":"2028:6:19","nodeType":"YulIdentifier","src":"2028:6:19"}],"functionName":{"name":"add","nativeSrc":"2019:3:19","nodeType":"YulIdentifier","src":"2019:3:19"},"nativeSrc":"2019:16:19","nodeType":"YulFunctionCall","src":"2019:16:19"},{"kind":"number","nativeSrc":"2037:1:19","nodeType":"YulLiteral","src":"2037:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"2012:6:19","nodeType":"YulIdentifier","src":"2012:6:19"},"nativeSrc":"2012:27:19","nodeType":"YulFunctionCall","src":"2012:27:19"},"nativeSrc":"2012:27:19","nodeType":"YulExpressionStatement","src":"2012:27:19"}]},"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"1798:248:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"1842:3:19","nodeType":"YulTypedName","src":"1842:3:19","type":""},{"name":"dst","nativeSrc":"1847:3:19","nodeType":"YulTypedName","src":"1847:3:19","type":""},{"name":"length","nativeSrc":"1852:6:19","nodeType":"YulTypedName","src":"1852:6:19","type":""}],"src":"1798:248:19"},{"body":{"nativeSrc":"2100:54:19","nodeType":"YulBlock","src":"2100:54:19","statements":[{"nativeSrc":"2110:38:19","nodeType":"YulAssignment","src":"2110:38:19","value":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2128:5:19","nodeType":"YulIdentifier","src":"2128:5:19"},{"kind":"number","nativeSrc":"2135:2:19","nodeType":"YulLiteral","src":"2135:2:19","type":"","value":"31"}],"functionName":{"name":"add","nativeSrc":"2124:3:19","nodeType":"YulIdentifier","src":"2124:3:19"},"nativeSrc":"2124:14:19","nodeType":"YulFunctionCall","src":"2124:14:19"},{"arguments":[{"kind":"number","nativeSrc":"2144:2:19","nodeType":"YulLiteral","src":"2144:2:19","type":"","value":"31"}],"functionName":{"name":"not","nativeSrc":"2140:3:19","nodeType":"YulIdentifier","src":"2140:3:19"},"nativeSrc":"2140:7:19","nodeType":"YulFunctionCall","src":"2140:7:19"}],"functionName":{"name":"and","nativeSrc":"2120:3:19","nodeType":"YulIdentifier","src":"2120:3:19"},"nativeSrc":"2120:28:19","nodeType":"YulFunctionCall","src":"2120:28:19"},"variableNames":[{"name":"result","nativeSrc":"2110:6:19","nodeType":"YulIdentifier","src":"2110:6:19"}]}]},"name":"round_up_to_mul_of_32","nativeSrc":"2052:102:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2083:5:19","nodeType":"YulTypedName","src":"2083:5:19","type":""}],"returnVariables":[{"name":"result","nativeSrc":"2093:6:19","nodeType":"YulTypedName","src":"2093:6:19","type":""}],"src":"2052:102:19"},{"body":{"nativeSrc":"2252:285:19","nodeType":"YulBlock","src":"2252:285:19","statements":[{"nativeSrc":"2262:53:19","nodeType":"YulVariableDeclaration","src":"2262:53:19","value":{"arguments":[{"name":"value","nativeSrc":"2309:5:19","nodeType":"YulIdentifier","src":"2309:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"2276:32:19","nodeType":"YulIdentifier","src":"2276:32:19"},"nativeSrc":"2276:39:19","nodeType":"YulFunctionCall","src":"2276:39:19"},"variables":[{"name":"length","nativeSrc":"2266:6:19","nodeType":"YulTypedName","src":"2266:6:19","type":""}]},{"nativeSrc":"2324:78:19","nodeType":"YulAssignment","src":"2324:78:19","value":{"arguments":[{"name":"pos","nativeSrc":"2390:3:19","nodeType":"YulIdentifier","src":"2390:3:19"},{"name":"length","nativeSrc":"2395:6:19","nodeType":"YulIdentifier","src":"2395:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nativeSrc":"2331:58:19","nodeType":"YulIdentifier","src":"2331:58:19"},"nativeSrc":"2331:71:19","nodeType":"YulFunctionCall","src":"2331:71:19"},"variableNames":[{"name":"pos","nativeSrc":"2324:3:19","nodeType":"YulIdentifier","src":"2324:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"2450:5:19","nodeType":"YulIdentifier","src":"2450:5:19"},{"kind":"number","nativeSrc":"2457:4:19","nodeType":"YulLiteral","src":"2457:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2446:3:19","nodeType":"YulIdentifier","src":"2446:3:19"},"nativeSrc":"2446:16:19","nodeType":"YulFunctionCall","src":"2446:16:19"},{"name":"pos","nativeSrc":"2464:3:19","nodeType":"YulIdentifier","src":"2464:3:19"},{"name":"length","nativeSrc":"2469:6:19","nodeType":"YulIdentifier","src":"2469:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"2411:34:19","nodeType":"YulIdentifier","src":"2411:34:19"},"nativeSrc":"2411:65:19","nodeType":"YulFunctionCall","src":"2411:65:19"},"nativeSrc":"2411:65:19","nodeType":"YulExpressionStatement","src":"2411:65:19"},{"nativeSrc":"2485:46:19","nodeType":"YulAssignment","src":"2485:46:19","value":{"arguments":[{"name":"pos","nativeSrc":"2496:3:19","nodeType":"YulIdentifier","src":"2496:3:19"},{"arguments":[{"name":"length","nativeSrc":"2523:6:19","nodeType":"YulIdentifier","src":"2523:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"2501:21:19","nodeType":"YulIdentifier","src":"2501:21:19"},"nativeSrc":"2501:29:19","nodeType":"YulFunctionCall","src":"2501:29:19"}],"functionName":{"name":"add","nativeSrc":"2492:3:19","nodeType":"YulIdentifier","src":"2492:3:19"},"nativeSrc":"2492:39:19","nodeType":"YulFunctionCall","src":"2492:39:19"},"variableNames":[{"name":"end","nativeSrc":"2485:3:19","nodeType":"YulIdentifier","src":"2485:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2160:377:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2233:5:19","nodeType":"YulTypedName","src":"2233:5:19","type":""},{"name":"pos","nativeSrc":"2240:3:19","nodeType":"YulTypedName","src":"2240:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"2248:3:19","nodeType":"YulTypedName","src":"2248:3:19","type":""}],"src":"2160:377:19"},{"body":{"nativeSrc":"2661:195:19","nodeType":"YulBlock","src":"2661:195:19","statements":[{"nativeSrc":"2671:26:19","nodeType":"YulAssignment","src":"2671:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"2683:9:19","nodeType":"YulIdentifier","src":"2683:9:19"},{"kind":"number","nativeSrc":"2694:2:19","nodeType":"YulLiteral","src":"2694:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"2679:3:19","nodeType":"YulIdentifier","src":"2679:3:19"},"nativeSrc":"2679:18:19","nodeType":"YulFunctionCall","src":"2679:18:19"},"variableNames":[{"name":"tail","nativeSrc":"2671:4:19","nodeType":"YulIdentifier","src":"2671:4:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"2718:9:19","nodeType":"YulIdentifier","src":"2718:9:19"},{"kind":"number","nativeSrc":"2729:1:19","nodeType":"YulLiteral","src":"2729:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"2714:3:19","nodeType":"YulIdentifier","src":"2714:3:19"},"nativeSrc":"2714:17:19","nodeType":"YulFunctionCall","src":"2714:17:19"},{"arguments":[{"name":"tail","nativeSrc":"2737:4:19","nodeType":"YulIdentifier","src":"2737:4:19"},{"name":"headStart","nativeSrc":"2743:9:19","nodeType":"YulIdentifier","src":"2743:9:19"}],"functionName":{"name":"sub","nativeSrc":"2733:3:19","nodeType":"YulIdentifier","src":"2733:3:19"},"nativeSrc":"2733:20:19","nodeType":"YulFunctionCall","src":"2733:20:19"}],"functionName":{"name":"mstore","nativeSrc":"2707:6:19","nodeType":"YulIdentifier","src":"2707:6:19"},"nativeSrc":"2707:47:19","nodeType":"YulFunctionCall","src":"2707:47:19"},"nativeSrc":"2707:47:19","nodeType":"YulExpressionStatement","src":"2707:47:19"},{"nativeSrc":"2763:86:19","nodeType":"YulAssignment","src":"2763:86:19","value":{"arguments":[{"name":"value0","nativeSrc":"2835:6:19","nodeType":"YulIdentifier","src":"2835:6:19"},{"name":"tail","nativeSrc":"2844:4:19","nodeType":"YulIdentifier","src":"2844:4:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nativeSrc":"2771:63:19","nodeType":"YulIdentifier","src":"2771:63:19"},"nativeSrc":"2771:78:19","nodeType":"YulFunctionCall","src":"2771:78:19"},"variableNames":[{"name":"tail","nativeSrc":"2763:4:19","nodeType":"YulIdentifier","src":"2763:4:19"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nativeSrc":"2543:313:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"2633:9:19","nodeType":"YulTypedName","src":"2633:9:19","type":""},{"name":"value0","nativeSrc":"2645:6:19","nodeType":"YulTypedName","src":"2645:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"2656:4:19","nodeType":"YulTypedName","src":"2656:4:19","type":""}],"src":"2543:313:19"},{"body":{"nativeSrc":"2907:32:19","nodeType":"YulBlock","src":"2907:32:19","statements":[{"nativeSrc":"2917:16:19","nodeType":"YulAssignment","src":"2917:16:19","value":{"name":"value","nativeSrc":"2928:5:19","nodeType":"YulIdentifier","src":"2928:5:19"},"variableNames":[{"name":"cleaned","nativeSrc":"2917:7:19","nodeType":"YulIdentifier","src":"2917:7:19"}]}]},"name":"cleanup_t_uint256","nativeSrc":"2862:77:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2889:5:19","nodeType":"YulTypedName","src":"2889:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"2899:7:19","nodeType":"YulTypedName","src":"2899:7:19","type":""}],"src":"2862:77:19"},{"body":{"nativeSrc":"2988:79:19","nodeType":"YulBlock","src":"2988:79:19","statements":[{"body":{"nativeSrc":"3045:16:19","nodeType":"YulBlock","src":"3045:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"3054:1:19","nodeType":"YulLiteral","src":"3054:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"3057:1:19","nodeType":"YulLiteral","src":"3057:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"3047:6:19","nodeType":"YulIdentifier","src":"3047:6:19"},"nativeSrc":"3047:12:19","nodeType":"YulFunctionCall","src":"3047:12:19"},"nativeSrc":"3047:12:19","nodeType":"YulExpressionStatement","src":"3047:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"3011:5:19","nodeType":"YulIdentifier","src":"3011:5:19"},{"arguments":[{"name":"value","nativeSrc":"3036:5:19","nodeType":"YulIdentifier","src":"3036:5:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"3018:17:19","nodeType":"YulIdentifier","src":"3018:17:19"},"nativeSrc":"3018:24:19","nodeType":"YulFunctionCall","src":"3018:24:19"}],"functionName":{"name":"eq","nativeSrc":"3008:2:19","nodeType":"YulIdentifier","src":"3008:2:19"},"nativeSrc":"3008:35:19","nodeType":"YulFunctionCall","src":"3008:35:19"}],"functionName":{"name":"iszero","nativeSrc":"3001:6:19","nodeType":"YulIdentifier","src":"3001:6:19"},"nativeSrc":"3001:43:19","nodeType":"YulFunctionCall","src":"3001:43:19"},"nativeSrc":"2998:63:19","nodeType":"YulIf","src":"2998:63:19"}]},"name":"validator_revert_t_uint256","nativeSrc":"2945:122:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"2981:5:19","nodeType":"YulTypedName","src":"2981:5:19","type":""}],"src":"2945:122:19"},{"body":{"nativeSrc":"3125:87:19","nodeType":"YulBlock","src":"3125:87:19","statements":[{"nativeSrc":"3135:29:19","nodeType":"YulAssignment","src":"3135:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"3157:6:19","nodeType":"YulIdentifier","src":"3157:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"3144:12:19","nodeType":"YulIdentifier","src":"3144:12:19"},"nativeSrc":"3144:20:19","nodeType":"YulFunctionCall","src":"3144:20:19"},"variableNames":[{"name":"value","nativeSrc":"3135:5:19","nodeType":"YulIdentifier","src":"3135:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"3200:5:19","nodeType":"YulIdentifier","src":"3200:5:19"}],"functionName":{"name":"validator_revert_t_uint256","nativeSrc":"3173:26:19","nodeType":"YulIdentifier","src":"3173:26:19"},"nativeSrc":"3173:33:19","nodeType":"YulFunctionCall","src":"3173:33:19"},"nativeSrc":"3173:33:19","nodeType":"YulExpressionStatement","src":"3173:33:19"}]},"name":"abi_decode_t_uint256","nativeSrc":"3073:139:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"3103:6:19","nodeType":"YulTypedName","src":"3103:6:19","type":""},{"name":"end","nativeSrc":"3111:3:19","nodeType":"YulTypedName","src":"3111:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"3119:5:19","nodeType":"YulTypedName","src":"3119:5:19","type":""}],"src":"3073:139:19"},{"body":{"nativeSrc":"3284:263:19","nodeType":"YulBlock","src":"3284:263:19","statements":[{"body":{"nativeSrc":"3330:83:19","nodeType":"YulBlock","src":"3330:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"3332:77:19","nodeType":"YulIdentifier","src":"3332:77:19"},"nativeSrc":"3332:79:19","nodeType":"YulFunctionCall","src":"3332:79:19"},"nativeSrc":"3332:79:19","nodeType":"YulExpressionStatement","src":"3332:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"3305:7:19","nodeType":"YulIdentifier","src":"3305:7:19"},{"name":"headStart","nativeSrc":"3314:9:19","nodeType":"YulIdentifier","src":"3314:9:19"}],"functionName":{"name":"sub","nativeSrc":"3301:3:19","nodeType":"YulIdentifier","src":"3301:3:19"},"nativeSrc":"3301:23:19","nodeType":"YulFunctionCall","src":"3301:23:19"},{"kind":"number","nativeSrc":"3326:2:19","nodeType":"YulLiteral","src":"3326:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"3297:3:19","nodeType":"YulIdentifier","src":"3297:3:19"},"nativeSrc":"3297:32:19","nodeType":"YulFunctionCall","src":"3297:32:19"},"nativeSrc":"3294:119:19","nodeType":"YulIf","src":"3294:119:19"},{"nativeSrc":"3423:117:19","nodeType":"YulBlock","src":"3423:117:19","statements":[{"nativeSrc":"3438:15:19","nodeType":"YulVariableDeclaration","src":"3438:15:19","value":{"kind":"number","nativeSrc":"3452:1:19","nodeType":"YulLiteral","src":"3452:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"3442:6:19","nodeType":"YulTypedName","src":"3442:6:19","type":""}]},{"nativeSrc":"3467:63:19","nodeType":"YulAssignment","src":"3467:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"3502:9:19","nodeType":"YulIdentifier","src":"3502:9:19"},{"name":"offset","nativeSrc":"3513:6:19","nodeType":"YulIdentifier","src":"3513:6:19"}],"functionName":{"name":"add","nativeSrc":"3498:3:19","nodeType":"YulIdentifier","src":"3498:3:19"},"nativeSrc":"3498:22:19","nodeType":"YulFunctionCall","src":"3498:22:19"},{"name":"dataEnd","nativeSrc":"3522:7:19","nodeType":"YulIdentifier","src":"3522:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"3477:20:19","nodeType":"YulIdentifier","src":"3477:20:19"},"nativeSrc":"3477:53:19","nodeType":"YulFunctionCall","src":"3477:53:19"},"variableNames":[{"name":"value0","nativeSrc":"3467:6:19","nodeType":"YulIdentifier","src":"3467:6:19"}]}]}]},"name":"abi_decode_tuple_t_uint256","nativeSrc":"3218:329:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3254:9:19","nodeType":"YulTypedName","src":"3254:9:19","type":""},{"name":"dataEnd","nativeSrc":"3265:7:19","nodeType":"YulTypedName","src":"3265:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"3277:6:19","nodeType":"YulTypedName","src":"3277:6:19","type":""}],"src":"3218:329:19"},{"body":{"nativeSrc":"3598:81:19","nodeType":"YulBlock","src":"3598:81:19","statements":[{"nativeSrc":"3608:65:19","nodeType":"YulAssignment","src":"3608:65:19","value":{"arguments":[{"name":"value","nativeSrc":"3623:5:19","nodeType":"YulIdentifier","src":"3623:5:19"},{"kind":"number","nativeSrc":"3630:42:19","nodeType":"YulLiteral","src":"3630:42:19","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nativeSrc":"3619:3:19","nodeType":"YulIdentifier","src":"3619:3:19"},"nativeSrc":"3619:54:19","nodeType":"YulFunctionCall","src":"3619:54:19"},"variableNames":[{"name":"cleaned","nativeSrc":"3608:7:19","nodeType":"YulIdentifier","src":"3608:7:19"}]}]},"name":"cleanup_t_uint160","nativeSrc":"3553:126:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3580:5:19","nodeType":"YulTypedName","src":"3580:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3590:7:19","nodeType":"YulTypedName","src":"3590:7:19","type":""}],"src":"3553:126:19"},{"body":{"nativeSrc":"3730:51:19","nodeType":"YulBlock","src":"3730:51:19","statements":[{"nativeSrc":"3740:35:19","nodeType":"YulAssignment","src":"3740:35:19","value":{"arguments":[{"name":"value","nativeSrc":"3769:5:19","nodeType":"YulIdentifier","src":"3769:5:19"}],"functionName":{"name":"cleanup_t_uint160","nativeSrc":"3751:17:19","nodeType":"YulIdentifier","src":"3751:17:19"},"nativeSrc":"3751:24:19","nodeType":"YulFunctionCall","src":"3751:24:19"},"variableNames":[{"name":"cleaned","nativeSrc":"3740:7:19","nodeType":"YulIdentifier","src":"3740:7:19"}]}]},"name":"cleanup_t_address","nativeSrc":"3685:96:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3712:5:19","nodeType":"YulTypedName","src":"3712:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"3722:7:19","nodeType":"YulTypedName","src":"3722:7:19","type":""}],"src":"3685:96:19"},{"body":{"nativeSrc":"3852:53:19","nodeType":"YulBlock","src":"3852:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"3869:3:19","nodeType":"YulIdentifier","src":"3869:3:19"},{"arguments":[{"name":"value","nativeSrc":"3892:5:19","nodeType":"YulIdentifier","src":"3892:5:19"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"3874:17:19","nodeType":"YulIdentifier","src":"3874:17:19"},"nativeSrc":"3874:24:19","nodeType":"YulFunctionCall","src":"3874:24:19"}],"functionName":{"name":"mstore","nativeSrc":"3862:6:19","nodeType":"YulIdentifier","src":"3862:6:19"},"nativeSrc":"3862:37:19","nodeType":"YulFunctionCall","src":"3862:37:19"},"nativeSrc":"3862:37:19","nodeType":"YulExpressionStatement","src":"3862:37:19"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"3787:118:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"3840:5:19","nodeType":"YulTypedName","src":"3840:5:19","type":""},{"name":"pos","nativeSrc":"3847:3:19","nodeType":"YulTypedName","src":"3847:3:19","type":""}],"src":"3787:118:19"},{"body":{"nativeSrc":"4009:124:19","nodeType":"YulBlock","src":"4009:124:19","statements":[{"nativeSrc":"4019:26:19","nodeType":"YulAssignment","src":"4019:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"4031:9:19","nodeType":"YulIdentifier","src":"4031:9:19"},{"kind":"number","nativeSrc":"4042:2:19","nodeType":"YulLiteral","src":"4042:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"4027:3:19","nodeType":"YulIdentifier","src":"4027:3:19"},"nativeSrc":"4027:18:19","nodeType":"YulFunctionCall","src":"4027:18:19"},"variableNames":[{"name":"tail","nativeSrc":"4019:4:19","nodeType":"YulIdentifier","src":"4019:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"4099:6:19","nodeType":"YulIdentifier","src":"4099:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"4112:9:19","nodeType":"YulIdentifier","src":"4112:9:19"},{"kind":"number","nativeSrc":"4123:1:19","nodeType":"YulLiteral","src":"4123:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"4108:3:19","nodeType":"YulIdentifier","src":"4108:3:19"},"nativeSrc":"4108:17:19","nodeType":"YulFunctionCall","src":"4108:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"4055:43:19","nodeType":"YulIdentifier","src":"4055:43:19"},"nativeSrc":"4055:71:19","nodeType":"YulFunctionCall","src":"4055:71:19"},"nativeSrc":"4055:71:19","nodeType":"YulExpressionStatement","src":"4055:71:19"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nativeSrc":"3911:222:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"3981:9:19","nodeType":"YulTypedName","src":"3981:9:19","type":""},{"name":"value0","nativeSrc":"3993:6:19","nodeType":"YulTypedName","src":"3993:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"4004:4:19","nodeType":"YulTypedName","src":"4004:4:19","type":""}],"src":"3911:222:19"},{"body":{"nativeSrc":"4182:79:19","nodeType":"YulBlock","src":"4182:79:19","statements":[{"body":{"nativeSrc":"4239:16:19","nodeType":"YulBlock","src":"4239:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"4248:1:19","nodeType":"YulLiteral","src":"4248:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"4251:1:19","nodeType":"YulLiteral","src":"4251:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"4241:6:19","nodeType":"YulIdentifier","src":"4241:6:19"},"nativeSrc":"4241:12:19","nodeType":"YulFunctionCall","src":"4241:12:19"},"nativeSrc":"4241:12:19","nodeType":"YulExpressionStatement","src":"4241:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"4205:5:19","nodeType":"YulIdentifier","src":"4205:5:19"},{"arguments":[{"name":"value","nativeSrc":"4230:5:19","nodeType":"YulIdentifier","src":"4230:5:19"}],"functionName":{"name":"cleanup_t_address","nativeSrc":"4212:17:19","nodeType":"YulIdentifier","src":"4212:17:19"},"nativeSrc":"4212:24:19","nodeType":"YulFunctionCall","src":"4212:24:19"}],"functionName":{"name":"eq","nativeSrc":"4202:2:19","nodeType":"YulIdentifier","src":"4202:2:19"},"nativeSrc":"4202:35:19","nodeType":"YulFunctionCall","src":"4202:35:19"}],"functionName":{"name":"iszero","nativeSrc":"4195:6:19","nodeType":"YulIdentifier","src":"4195:6:19"},"nativeSrc":"4195:43:19","nodeType":"YulFunctionCall","src":"4195:43:19"},"nativeSrc":"4192:63:19","nodeType":"YulIf","src":"4192:63:19"}]},"name":"validator_revert_t_address","nativeSrc":"4139:122:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"4175:5:19","nodeType":"YulTypedName","src":"4175:5:19","type":""}],"src":"4139:122:19"},{"body":{"nativeSrc":"4319:87:19","nodeType":"YulBlock","src":"4319:87:19","statements":[{"nativeSrc":"4329:29:19","nodeType":"YulAssignment","src":"4329:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"4351:6:19","nodeType":"YulIdentifier","src":"4351:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"4338:12:19","nodeType":"YulIdentifier","src":"4338:12:19"},"nativeSrc":"4338:20:19","nodeType":"YulFunctionCall","src":"4338:20:19"},"variableNames":[{"name":"value","nativeSrc":"4329:5:19","nodeType":"YulIdentifier","src":"4329:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"4394:5:19","nodeType":"YulIdentifier","src":"4394:5:19"}],"functionName":{"name":"validator_revert_t_address","nativeSrc":"4367:26:19","nodeType":"YulIdentifier","src":"4367:26:19"},"nativeSrc":"4367:33:19","nodeType":"YulFunctionCall","src":"4367:33:19"},"nativeSrc":"4367:33:19","nodeType":"YulExpressionStatement","src":"4367:33:19"}]},"name":"abi_decode_t_address","nativeSrc":"4267:139:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"4297:6:19","nodeType":"YulTypedName","src":"4297:6:19","type":""},{"name":"end","nativeSrc":"4305:3:19","nodeType":"YulTypedName","src":"4305:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"4313:5:19","nodeType":"YulTypedName","src":"4313:5:19","type":""}],"src":"4267:139:19"},{"body":{"nativeSrc":"4495:391:19","nodeType":"YulBlock","src":"4495:391:19","statements":[{"body":{"nativeSrc":"4541:83:19","nodeType":"YulBlock","src":"4541:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"4543:77:19","nodeType":"YulIdentifier","src":"4543:77:19"},"nativeSrc":"4543:79:19","nodeType":"YulFunctionCall","src":"4543:79:19"},"nativeSrc":"4543:79:19","nodeType":"YulExpressionStatement","src":"4543:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"4516:7:19","nodeType":"YulIdentifier","src":"4516:7:19"},{"name":"headStart","nativeSrc":"4525:9:19","nodeType":"YulIdentifier","src":"4525:9:19"}],"functionName":{"name":"sub","nativeSrc":"4512:3:19","nodeType":"YulIdentifier","src":"4512:3:19"},"nativeSrc":"4512:23:19","nodeType":"YulFunctionCall","src":"4512:23:19"},{"kind":"number","nativeSrc":"4537:2:19","nodeType":"YulLiteral","src":"4537:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"4508:3:19","nodeType":"YulIdentifier","src":"4508:3:19"},"nativeSrc":"4508:32:19","nodeType":"YulFunctionCall","src":"4508:32:19"},"nativeSrc":"4505:119:19","nodeType":"YulIf","src":"4505:119:19"},{"nativeSrc":"4634:117:19","nodeType":"YulBlock","src":"4634:117:19","statements":[{"nativeSrc":"4649:15:19","nodeType":"YulVariableDeclaration","src":"4649:15:19","value":{"kind":"number","nativeSrc":"4663:1:19","nodeType":"YulLiteral","src":"4663:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"4653:6:19","nodeType":"YulTypedName","src":"4653:6:19","type":""}]},{"nativeSrc":"4678:63:19","nodeType":"YulAssignment","src":"4678:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4713:9:19","nodeType":"YulIdentifier","src":"4713:9:19"},{"name":"offset","nativeSrc":"4724:6:19","nodeType":"YulIdentifier","src":"4724:6:19"}],"functionName":{"name":"add","nativeSrc":"4709:3:19","nodeType":"YulIdentifier","src":"4709:3:19"},"nativeSrc":"4709:22:19","nodeType":"YulFunctionCall","src":"4709:22:19"},{"name":"dataEnd","nativeSrc":"4733:7:19","nodeType":"YulIdentifier","src":"4733:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"4688:20:19","nodeType":"YulIdentifier","src":"4688:20:19"},"nativeSrc":"4688:53:19","nodeType":"YulFunctionCall","src":"4688:53:19"},"variableNames":[{"name":"value0","nativeSrc":"4678:6:19","nodeType":"YulIdentifier","src":"4678:6:19"}]}]},{"nativeSrc":"4761:118:19","nodeType":"YulBlock","src":"4761:118:19","statements":[{"nativeSrc":"4776:16:19","nodeType":"YulVariableDeclaration","src":"4776:16:19","value":{"kind":"number","nativeSrc":"4790:2:19","nodeType":"YulLiteral","src":"4790:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"4780:6:19","nodeType":"YulTypedName","src":"4780:6:19","type":""}]},{"nativeSrc":"4806:63:19","nodeType":"YulAssignment","src":"4806:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"4841:9:19","nodeType":"YulIdentifier","src":"4841:9:19"},{"name":"offset","nativeSrc":"4852:6:19","nodeType":"YulIdentifier","src":"4852:6:19"}],"functionName":{"name":"add","nativeSrc":"4837:3:19","nodeType":"YulIdentifier","src":"4837:3:19"},"nativeSrc":"4837:22:19","nodeType":"YulFunctionCall","src":"4837:22:19"},{"name":"dataEnd","nativeSrc":"4861:7:19","nodeType":"YulIdentifier","src":"4861:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"4816:20:19","nodeType":"YulIdentifier","src":"4816:20:19"},"nativeSrc":"4816:53:19","nodeType":"YulFunctionCall","src":"4816:53:19"},"variableNames":[{"name":"value1","nativeSrc":"4806:6:19","nodeType":"YulIdentifier","src":"4806:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nativeSrc":"4412:474:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4457:9:19","nodeType":"YulTypedName","src":"4457:9:19","type":""},{"name":"dataEnd","nativeSrc":"4468:7:19","nodeType":"YulTypedName","src":"4468:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4480:6:19","nodeType":"YulTypedName","src":"4480:6:19","type":""},{"name":"value1","nativeSrc":"4488:6:19","nodeType":"YulTypedName","src":"4488:6:19","type":""}],"src":"4412:474:19"},{"body":{"nativeSrc":"4992:519:19","nodeType":"YulBlock","src":"4992:519:19","statements":[{"body":{"nativeSrc":"5038:83:19","nodeType":"YulBlock","src":"5038:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5040:77:19","nodeType":"YulIdentifier","src":"5040:77:19"},"nativeSrc":"5040:79:19","nodeType":"YulFunctionCall","src":"5040:79:19"},"nativeSrc":"5040:79:19","nodeType":"YulExpressionStatement","src":"5040:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5013:7:19","nodeType":"YulIdentifier","src":"5013:7:19"},{"name":"headStart","nativeSrc":"5022:9:19","nodeType":"YulIdentifier","src":"5022:9:19"}],"functionName":{"name":"sub","nativeSrc":"5009:3:19","nodeType":"YulIdentifier","src":"5009:3:19"},"nativeSrc":"5009:23:19","nodeType":"YulFunctionCall","src":"5009:23:19"},{"kind":"number","nativeSrc":"5034:2:19","nodeType":"YulLiteral","src":"5034:2:19","type":"","value":"96"}],"functionName":{"name":"slt","nativeSrc":"5005:3:19","nodeType":"YulIdentifier","src":"5005:3:19"},"nativeSrc":"5005:32:19","nodeType":"YulFunctionCall","src":"5005:32:19"},"nativeSrc":"5002:119:19","nodeType":"YulIf","src":"5002:119:19"},{"nativeSrc":"5131:117:19","nodeType":"YulBlock","src":"5131:117:19","statements":[{"nativeSrc":"5146:15:19","nodeType":"YulVariableDeclaration","src":"5146:15:19","value":{"kind":"number","nativeSrc":"5160:1:19","nodeType":"YulLiteral","src":"5160:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"5150:6:19","nodeType":"YulTypedName","src":"5150:6:19","type":""}]},{"nativeSrc":"5175:63:19","nodeType":"YulAssignment","src":"5175:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5210:9:19","nodeType":"YulIdentifier","src":"5210:9:19"},{"name":"offset","nativeSrc":"5221:6:19","nodeType":"YulIdentifier","src":"5221:6:19"}],"functionName":{"name":"add","nativeSrc":"5206:3:19","nodeType":"YulIdentifier","src":"5206:3:19"},"nativeSrc":"5206:22:19","nodeType":"YulFunctionCall","src":"5206:22:19"},{"name":"dataEnd","nativeSrc":"5230:7:19","nodeType":"YulIdentifier","src":"5230:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5185:20:19","nodeType":"YulIdentifier","src":"5185:20:19"},"nativeSrc":"5185:53:19","nodeType":"YulFunctionCall","src":"5185:53:19"},"variableNames":[{"name":"value0","nativeSrc":"5175:6:19","nodeType":"YulIdentifier","src":"5175:6:19"}]}]},{"nativeSrc":"5258:118:19","nodeType":"YulBlock","src":"5258:118:19","statements":[{"nativeSrc":"5273:16:19","nodeType":"YulVariableDeclaration","src":"5273:16:19","value":{"kind":"number","nativeSrc":"5287:2:19","nodeType":"YulLiteral","src":"5287:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"5277:6:19","nodeType":"YulTypedName","src":"5277:6:19","type":""}]},{"nativeSrc":"5303:63:19","nodeType":"YulAssignment","src":"5303:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5338:9:19","nodeType":"YulIdentifier","src":"5338:9:19"},{"name":"offset","nativeSrc":"5349:6:19","nodeType":"YulIdentifier","src":"5349:6:19"}],"functionName":{"name":"add","nativeSrc":"5334:3:19","nodeType":"YulIdentifier","src":"5334:3:19"},"nativeSrc":"5334:22:19","nodeType":"YulFunctionCall","src":"5334:22:19"},{"name":"dataEnd","nativeSrc":"5358:7:19","nodeType":"YulIdentifier","src":"5358:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"5313:20:19","nodeType":"YulIdentifier","src":"5313:20:19"},"nativeSrc":"5313:53:19","nodeType":"YulFunctionCall","src":"5313:53:19"},"variableNames":[{"name":"value1","nativeSrc":"5303:6:19","nodeType":"YulIdentifier","src":"5303:6:19"}]}]},{"nativeSrc":"5386:118:19","nodeType":"YulBlock","src":"5386:118:19","statements":[{"nativeSrc":"5401:16:19","nodeType":"YulVariableDeclaration","src":"5401:16:19","value":{"kind":"number","nativeSrc":"5415:2:19","nodeType":"YulLiteral","src":"5415:2:19","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"5405:6:19","nodeType":"YulTypedName","src":"5405:6:19","type":""}]},{"nativeSrc":"5431:63:19","nodeType":"YulAssignment","src":"5431:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"5466:9:19","nodeType":"YulIdentifier","src":"5466:9:19"},{"name":"offset","nativeSrc":"5477:6:19","nodeType":"YulIdentifier","src":"5477:6:19"}],"functionName":{"name":"add","nativeSrc":"5462:3:19","nodeType":"YulIdentifier","src":"5462:3:19"},"nativeSrc":"5462:22:19","nodeType":"YulFunctionCall","src":"5462:22:19"},{"name":"dataEnd","nativeSrc":"5486:7:19","nodeType":"YulIdentifier","src":"5486:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"5441:20:19","nodeType":"YulIdentifier","src":"5441:20:19"},"nativeSrc":"5441:53:19","nodeType":"YulFunctionCall","src":"5441:53:19"},"variableNames":[{"name":"value2","nativeSrc":"5431:6:19","nodeType":"YulIdentifier","src":"5431:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nativeSrc":"4892:619:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"4946:9:19","nodeType":"YulTypedName","src":"4946:9:19","type":""},{"name":"dataEnd","nativeSrc":"4957:7:19","nodeType":"YulTypedName","src":"4957:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"4969:6:19","nodeType":"YulTypedName","src":"4969:6:19","type":""},{"name":"value1","nativeSrc":"4977:6:19","nodeType":"YulTypedName","src":"4977:6:19","type":""},{"name":"value2","nativeSrc":"4985:6:19","nodeType":"YulTypedName","src":"4985:6:19","type":""}],"src":"4892:619:19"},{"body":{"nativeSrc":"5562:32:19","nodeType":"YulBlock","src":"5562:32:19","statements":[{"nativeSrc":"5572:16:19","nodeType":"YulAssignment","src":"5572:16:19","value":{"name":"value","nativeSrc":"5583:5:19","nodeType":"YulIdentifier","src":"5583:5:19"},"variableNames":[{"name":"cleaned","nativeSrc":"5572:7:19","nodeType":"YulIdentifier","src":"5572:7:19"}]}]},"name":"cleanup_t_bytes32","nativeSrc":"5517:77:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5544:5:19","nodeType":"YulTypedName","src":"5544:5:19","type":""}],"returnVariables":[{"name":"cleaned","nativeSrc":"5554:7:19","nodeType":"YulTypedName","src":"5554:7:19","type":""}],"src":"5517:77:19"},{"body":{"nativeSrc":"5643:79:19","nodeType":"YulBlock","src":"5643:79:19","statements":[{"body":{"nativeSrc":"5700:16:19","nodeType":"YulBlock","src":"5700:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"5709:1:19","nodeType":"YulLiteral","src":"5709:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"5712:1:19","nodeType":"YulLiteral","src":"5712:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"5702:6:19","nodeType":"YulIdentifier","src":"5702:6:19"},"nativeSrc":"5702:12:19","nodeType":"YulFunctionCall","src":"5702:12:19"},"nativeSrc":"5702:12:19","nodeType":"YulExpressionStatement","src":"5702:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"5666:5:19","nodeType":"YulIdentifier","src":"5666:5:19"},{"arguments":[{"name":"value","nativeSrc":"5691:5:19","nodeType":"YulIdentifier","src":"5691:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"5673:17:19","nodeType":"YulIdentifier","src":"5673:17:19"},"nativeSrc":"5673:24:19","nodeType":"YulFunctionCall","src":"5673:24:19"}],"functionName":{"name":"eq","nativeSrc":"5663:2:19","nodeType":"YulIdentifier","src":"5663:2:19"},"nativeSrc":"5663:35:19","nodeType":"YulFunctionCall","src":"5663:35:19"}],"functionName":{"name":"iszero","nativeSrc":"5656:6:19","nodeType":"YulIdentifier","src":"5656:6:19"},"nativeSrc":"5656:43:19","nodeType":"YulFunctionCall","src":"5656:43:19"},"nativeSrc":"5653:63:19","nodeType":"YulIf","src":"5653:63:19"}]},"name":"validator_revert_t_bytes32","nativeSrc":"5600:122:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"5636:5:19","nodeType":"YulTypedName","src":"5636:5:19","type":""}],"src":"5600:122:19"},{"body":{"nativeSrc":"5780:87:19","nodeType":"YulBlock","src":"5780:87:19","statements":[{"nativeSrc":"5790:29:19","nodeType":"YulAssignment","src":"5790:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"5812:6:19","nodeType":"YulIdentifier","src":"5812:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"5799:12:19","nodeType":"YulIdentifier","src":"5799:12:19"},"nativeSrc":"5799:20:19","nodeType":"YulFunctionCall","src":"5799:20:19"},"variableNames":[{"name":"value","nativeSrc":"5790:5:19","nodeType":"YulIdentifier","src":"5790:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"5855:5:19","nodeType":"YulIdentifier","src":"5855:5:19"}],"functionName":{"name":"validator_revert_t_bytes32","nativeSrc":"5828:26:19","nodeType":"YulIdentifier","src":"5828:26:19"},"nativeSrc":"5828:33:19","nodeType":"YulFunctionCall","src":"5828:33:19"},"nativeSrc":"5828:33:19","nodeType":"YulExpressionStatement","src":"5828:33:19"}]},"name":"abi_decode_t_bytes32","nativeSrc":"5728:139:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"5758:6:19","nodeType":"YulTypedName","src":"5758:6:19","type":""},{"name":"end","nativeSrc":"5766:3:19","nodeType":"YulTypedName","src":"5766:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"5774:5:19","nodeType":"YulTypedName","src":"5774:5:19","type":""}],"src":"5728:139:19"},{"body":{"nativeSrc":"5939:263:19","nodeType":"YulBlock","src":"5939:263:19","statements":[{"body":{"nativeSrc":"5985:83:19","nodeType":"YulBlock","src":"5985:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"5987:77:19","nodeType":"YulIdentifier","src":"5987:77:19"},"nativeSrc":"5987:79:19","nodeType":"YulFunctionCall","src":"5987:79:19"},"nativeSrc":"5987:79:19","nodeType":"YulExpressionStatement","src":"5987:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"5960:7:19","nodeType":"YulIdentifier","src":"5960:7:19"},{"name":"headStart","nativeSrc":"5969:9:19","nodeType":"YulIdentifier","src":"5969:9:19"}],"functionName":{"name":"sub","nativeSrc":"5956:3:19","nodeType":"YulIdentifier","src":"5956:3:19"},"nativeSrc":"5956:23:19","nodeType":"YulFunctionCall","src":"5956:23:19"},{"kind":"number","nativeSrc":"5981:2:19","nodeType":"YulLiteral","src":"5981:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"5952:3:19","nodeType":"YulIdentifier","src":"5952:3:19"},"nativeSrc":"5952:32:19","nodeType":"YulFunctionCall","src":"5952:32:19"},"nativeSrc":"5949:119:19","nodeType":"YulIf","src":"5949:119:19"},{"nativeSrc":"6078:117:19","nodeType":"YulBlock","src":"6078:117:19","statements":[{"nativeSrc":"6093:15:19","nodeType":"YulVariableDeclaration","src":"6093:15:19","value":{"kind":"number","nativeSrc":"6107:1:19","nodeType":"YulLiteral","src":"6107:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6097:6:19","nodeType":"YulTypedName","src":"6097:6:19","type":""}]},{"nativeSrc":"6122:63:19","nodeType":"YulAssignment","src":"6122:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6157:9:19","nodeType":"YulIdentifier","src":"6157:9:19"},{"name":"offset","nativeSrc":"6168:6:19","nodeType":"YulIdentifier","src":"6168:6:19"}],"functionName":{"name":"add","nativeSrc":"6153:3:19","nodeType":"YulIdentifier","src":"6153:3:19"},"nativeSrc":"6153:22:19","nodeType":"YulFunctionCall","src":"6153:22:19"},{"name":"dataEnd","nativeSrc":"6177:7:19","nodeType":"YulIdentifier","src":"6177:7:19"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"6132:20:19","nodeType":"YulIdentifier","src":"6132:20:19"},"nativeSrc":"6132:53:19","nodeType":"YulFunctionCall","src":"6132:53:19"},"variableNames":[{"name":"value0","nativeSrc":"6122:6:19","nodeType":"YulIdentifier","src":"6122:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nativeSrc":"5873:329:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"5909:9:19","nodeType":"YulTypedName","src":"5909:9:19","type":""},{"name":"dataEnd","nativeSrc":"5920:7:19","nodeType":"YulTypedName","src":"5920:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"5932:6:19","nodeType":"YulTypedName","src":"5932:6:19","type":""}],"src":"5873:329:19"},{"body":{"nativeSrc":"6273:53:19","nodeType":"YulBlock","src":"6273:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"6290:3:19","nodeType":"YulIdentifier","src":"6290:3:19"},{"arguments":[{"name":"value","nativeSrc":"6313:5:19","nodeType":"YulIdentifier","src":"6313:5:19"}],"functionName":{"name":"cleanup_t_bytes32","nativeSrc":"6295:17:19","nodeType":"YulIdentifier","src":"6295:17:19"},"nativeSrc":"6295:24:19","nodeType":"YulFunctionCall","src":"6295:24:19"}],"functionName":{"name":"mstore","nativeSrc":"6283:6:19","nodeType":"YulIdentifier","src":"6283:6:19"},"nativeSrc":"6283:37:19","nodeType":"YulFunctionCall","src":"6283:37:19"},"nativeSrc":"6283:37:19","nodeType":"YulExpressionStatement","src":"6283:37:19"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6208:118:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"6261:5:19","nodeType":"YulTypedName","src":"6261:5:19","type":""},{"name":"pos","nativeSrc":"6268:3:19","nodeType":"YulTypedName","src":"6268:3:19","type":""}],"src":"6208:118:19"},{"body":{"nativeSrc":"6430:124:19","nodeType":"YulBlock","src":"6430:124:19","statements":[{"nativeSrc":"6440:26:19","nodeType":"YulAssignment","src":"6440:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"6452:9:19","nodeType":"YulIdentifier","src":"6452:9:19"},{"kind":"number","nativeSrc":"6463:2:19","nodeType":"YulLiteral","src":"6463:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"6448:3:19","nodeType":"YulIdentifier","src":"6448:3:19"},"nativeSrc":"6448:18:19","nodeType":"YulFunctionCall","src":"6448:18:19"},"variableNames":[{"name":"tail","nativeSrc":"6440:4:19","nodeType":"YulIdentifier","src":"6440:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"6520:6:19","nodeType":"YulIdentifier","src":"6520:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"6533:9:19","nodeType":"YulIdentifier","src":"6533:9:19"},{"kind":"number","nativeSrc":"6544:1:19","nodeType":"YulLiteral","src":"6544:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"6529:3:19","nodeType":"YulIdentifier","src":"6529:3:19"},"nativeSrc":"6529:17:19","nodeType":"YulFunctionCall","src":"6529:17:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"6476:43:19","nodeType":"YulIdentifier","src":"6476:43:19"},"nativeSrc":"6476:71:19","nodeType":"YulFunctionCall","src":"6476:71:19"},"nativeSrc":"6476:71:19","nodeType":"YulExpressionStatement","src":"6476:71:19"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nativeSrc":"6332:222:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6402:9:19","nodeType":"YulTypedName","src":"6402:9:19","type":""},{"name":"value0","nativeSrc":"6414:6:19","nodeType":"YulTypedName","src":"6414:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"6425:4:19","nodeType":"YulTypedName","src":"6425:4:19","type":""}],"src":"6332:222:19"},{"body":{"nativeSrc":"6643:391:19","nodeType":"YulBlock","src":"6643:391:19","statements":[{"body":{"nativeSrc":"6689:83:19","nodeType":"YulBlock","src":"6689:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"6691:77:19","nodeType":"YulIdentifier","src":"6691:77:19"},"nativeSrc":"6691:79:19","nodeType":"YulFunctionCall","src":"6691:79:19"},"nativeSrc":"6691:79:19","nodeType":"YulExpressionStatement","src":"6691:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"6664:7:19","nodeType":"YulIdentifier","src":"6664:7:19"},{"name":"headStart","nativeSrc":"6673:9:19","nodeType":"YulIdentifier","src":"6673:9:19"}],"functionName":{"name":"sub","nativeSrc":"6660:3:19","nodeType":"YulIdentifier","src":"6660:3:19"},"nativeSrc":"6660:23:19","nodeType":"YulFunctionCall","src":"6660:23:19"},{"kind":"number","nativeSrc":"6685:2:19","nodeType":"YulLiteral","src":"6685:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"6656:3:19","nodeType":"YulIdentifier","src":"6656:3:19"},"nativeSrc":"6656:32:19","nodeType":"YulFunctionCall","src":"6656:32:19"},"nativeSrc":"6653:119:19","nodeType":"YulIf","src":"6653:119:19"},{"nativeSrc":"6782:117:19","nodeType":"YulBlock","src":"6782:117:19","statements":[{"nativeSrc":"6797:15:19","nodeType":"YulVariableDeclaration","src":"6797:15:19","value":{"kind":"number","nativeSrc":"6811:1:19","nodeType":"YulLiteral","src":"6811:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"6801:6:19","nodeType":"YulTypedName","src":"6801:6:19","type":""}]},{"nativeSrc":"6826:63:19","nodeType":"YulAssignment","src":"6826:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6861:9:19","nodeType":"YulIdentifier","src":"6861:9:19"},{"name":"offset","nativeSrc":"6872:6:19","nodeType":"YulIdentifier","src":"6872:6:19"}],"functionName":{"name":"add","nativeSrc":"6857:3:19","nodeType":"YulIdentifier","src":"6857:3:19"},"nativeSrc":"6857:22:19","nodeType":"YulFunctionCall","src":"6857:22:19"},{"name":"dataEnd","nativeSrc":"6881:7:19","nodeType":"YulIdentifier","src":"6881:7:19"}],"functionName":{"name":"abi_decode_t_bytes32","nativeSrc":"6836:20:19","nodeType":"YulIdentifier","src":"6836:20:19"},"nativeSrc":"6836:53:19","nodeType":"YulFunctionCall","src":"6836:53:19"},"variableNames":[{"name":"value0","nativeSrc":"6826:6:19","nodeType":"YulIdentifier","src":"6826:6:19"}]}]},{"nativeSrc":"6909:118:19","nodeType":"YulBlock","src":"6909:118:19","statements":[{"nativeSrc":"6924:16:19","nodeType":"YulVariableDeclaration","src":"6924:16:19","value":{"kind":"number","nativeSrc":"6938:2:19","nodeType":"YulLiteral","src":"6938:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"6928:6:19","nodeType":"YulTypedName","src":"6928:6:19","type":""}]},{"nativeSrc":"6954:63:19","nodeType":"YulAssignment","src":"6954:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"6989:9:19","nodeType":"YulIdentifier","src":"6989:9:19"},{"name":"offset","nativeSrc":"7000:6:19","nodeType":"YulIdentifier","src":"7000:6:19"}],"functionName":{"name":"add","nativeSrc":"6985:3:19","nodeType":"YulIdentifier","src":"6985:3:19"},"nativeSrc":"6985:22:19","nodeType":"YulFunctionCall","src":"6985:22:19"},{"name":"dataEnd","nativeSrc":"7009:7:19","nodeType":"YulIdentifier","src":"7009:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"6964:20:19","nodeType":"YulIdentifier","src":"6964:20:19"},"nativeSrc":"6964:53:19","nodeType":"YulFunctionCall","src":"6964:53:19"},"variableNames":[{"name":"value1","nativeSrc":"6954:6:19","nodeType":"YulIdentifier","src":"6954:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nativeSrc":"6560:474:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"6605:9:19","nodeType":"YulTypedName","src":"6605:9:19","type":""},{"name":"dataEnd","nativeSrc":"6616:7:19","nodeType":"YulTypedName","src":"6616:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"6628:6:19","nodeType":"YulTypedName","src":"6628:6:19","type":""},{"name":"value1","nativeSrc":"6636:6:19","nodeType":"YulTypedName","src":"6636:6:19","type":""}],"src":"6560:474:19"},{"body":{"nativeSrc":"7106:263:19","nodeType":"YulBlock","src":"7106:263:19","statements":[{"body":{"nativeSrc":"7152:83:19","nodeType":"YulBlock","src":"7152:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"7154:77:19","nodeType":"YulIdentifier","src":"7154:77:19"},"nativeSrc":"7154:79:19","nodeType":"YulFunctionCall","src":"7154:79:19"},"nativeSrc":"7154:79:19","nodeType":"YulExpressionStatement","src":"7154:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"7127:7:19","nodeType":"YulIdentifier","src":"7127:7:19"},{"name":"headStart","nativeSrc":"7136:9:19","nodeType":"YulIdentifier","src":"7136:9:19"}],"functionName":{"name":"sub","nativeSrc":"7123:3:19","nodeType":"YulIdentifier","src":"7123:3:19"},"nativeSrc":"7123:23:19","nodeType":"YulFunctionCall","src":"7123:23:19"},{"kind":"number","nativeSrc":"7148:2:19","nodeType":"YulLiteral","src":"7148:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"7119:3:19","nodeType":"YulIdentifier","src":"7119:3:19"},"nativeSrc":"7119:32:19","nodeType":"YulFunctionCall","src":"7119:32:19"},"nativeSrc":"7116:119:19","nodeType":"YulIf","src":"7116:119:19"},{"nativeSrc":"7245:117:19","nodeType":"YulBlock","src":"7245:117:19","statements":[{"nativeSrc":"7260:15:19","nodeType":"YulVariableDeclaration","src":"7260:15:19","value":{"kind":"number","nativeSrc":"7274:1:19","nodeType":"YulLiteral","src":"7274:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"7264:6:19","nodeType":"YulTypedName","src":"7264:6:19","type":""}]},{"nativeSrc":"7289:63:19","nodeType":"YulAssignment","src":"7289:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"7324:9:19","nodeType":"YulIdentifier","src":"7324:9:19"},{"name":"offset","nativeSrc":"7335:6:19","nodeType":"YulIdentifier","src":"7335:6:19"}],"functionName":{"name":"add","nativeSrc":"7320:3:19","nodeType":"YulIdentifier","src":"7320:3:19"},"nativeSrc":"7320:22:19","nodeType":"YulFunctionCall","src":"7320:22:19"},{"name":"dataEnd","nativeSrc":"7344:7:19","nodeType":"YulIdentifier","src":"7344:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"7299:20:19","nodeType":"YulIdentifier","src":"7299:20:19"},"nativeSrc":"7299:53:19","nodeType":"YulFunctionCall","src":"7299:53:19"},"variableNames":[{"name":"value0","nativeSrc":"7289:6:19","nodeType":"YulIdentifier","src":"7289:6:19"}]}]}]},"name":"abi_decode_tuple_t_address","nativeSrc":"7040:329:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7076:9:19","nodeType":"YulTypedName","src":"7076:9:19","type":""},{"name":"dataEnd","nativeSrc":"7087:7:19","nodeType":"YulTypedName","src":"7087:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"7099:6:19","nodeType":"YulTypedName","src":"7099:6:19","type":""}],"src":"7040:329:19"},{"body":{"nativeSrc":"7440:53:19","nodeType":"YulBlock","src":"7440:53:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"7457:3:19","nodeType":"YulIdentifier","src":"7457:3:19"},{"arguments":[{"name":"value","nativeSrc":"7480:5:19","nodeType":"YulIdentifier","src":"7480:5:19"}],"functionName":{"name":"cleanup_t_uint256","nativeSrc":"7462:17:19","nodeType":"YulIdentifier","src":"7462:17:19"},"nativeSrc":"7462:24:19","nodeType":"YulFunctionCall","src":"7462:24:19"}],"functionName":{"name":"mstore","nativeSrc":"7450:6:19","nodeType":"YulIdentifier","src":"7450:6:19"},"nativeSrc":"7450:37:19","nodeType":"YulFunctionCall","src":"7450:37:19"},"nativeSrc":"7450:37:19","nodeType":"YulExpressionStatement","src":"7450:37:19"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7375:118:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7428:5:19","nodeType":"YulTypedName","src":"7428:5:19","type":""},{"name":"pos","nativeSrc":"7435:3:19","nodeType":"YulTypedName","src":"7435:3:19","type":""}],"src":"7375:118:19"},{"body":{"nativeSrc":"7597:124:19","nodeType":"YulBlock","src":"7597:124:19","statements":[{"nativeSrc":"7607:26:19","nodeType":"YulAssignment","src":"7607:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"7619:9:19","nodeType":"YulIdentifier","src":"7619:9:19"},{"kind":"number","nativeSrc":"7630:2:19","nodeType":"YulLiteral","src":"7630:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"7615:3:19","nodeType":"YulIdentifier","src":"7615:3:19"},"nativeSrc":"7615:18:19","nodeType":"YulFunctionCall","src":"7615:18:19"},"variableNames":[{"name":"tail","nativeSrc":"7607:4:19","nodeType":"YulIdentifier","src":"7607:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"7687:6:19","nodeType":"YulIdentifier","src":"7687:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"7700:9:19","nodeType":"YulIdentifier","src":"7700:9:19"},{"kind":"number","nativeSrc":"7711:1:19","nodeType":"YulLiteral","src":"7711:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"7696:3:19","nodeType":"YulIdentifier","src":"7696:3:19"},"nativeSrc":"7696:17:19","nodeType":"YulFunctionCall","src":"7696:17:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"7643:43:19","nodeType":"YulIdentifier","src":"7643:43:19"},"nativeSrc":"7643:71:19","nodeType":"YulFunctionCall","src":"7643:71:19"},"nativeSrc":"7643:71:19","nodeType":"YulExpressionStatement","src":"7643:71:19"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nativeSrc":"7499:222:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"7569:9:19","nodeType":"YulTypedName","src":"7569:9:19","type":""},{"name":"value0","nativeSrc":"7581:6:19","nodeType":"YulTypedName","src":"7581:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"7592:4:19","nodeType":"YulTypedName","src":"7592:4:19","type":""}],"src":"7499:222:19"},{"body":{"nativeSrc":"7767:76:19","nodeType":"YulBlock","src":"7767:76:19","statements":[{"body":{"nativeSrc":"7821:16:19","nodeType":"YulBlock","src":"7821:16:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"7830:1:19","nodeType":"YulLiteral","src":"7830:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"7833:1:19","nodeType":"YulLiteral","src":"7833:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"7823:6:19","nodeType":"YulIdentifier","src":"7823:6:19"},"nativeSrc":"7823:12:19","nodeType":"YulFunctionCall","src":"7823:12:19"},"nativeSrc":"7823:12:19","nodeType":"YulExpressionStatement","src":"7823:12:19"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"7790:5:19","nodeType":"YulIdentifier","src":"7790:5:19"},{"arguments":[{"name":"value","nativeSrc":"7812:5:19","nodeType":"YulIdentifier","src":"7812:5:19"}],"functionName":{"name":"cleanup_t_bool","nativeSrc":"7797:14:19","nodeType":"YulIdentifier","src":"7797:14:19"},"nativeSrc":"7797:21:19","nodeType":"YulFunctionCall","src":"7797:21:19"}],"functionName":{"name":"eq","nativeSrc":"7787:2:19","nodeType":"YulIdentifier","src":"7787:2:19"},"nativeSrc":"7787:32:19","nodeType":"YulFunctionCall","src":"7787:32:19"}],"functionName":{"name":"iszero","nativeSrc":"7780:6:19","nodeType":"YulIdentifier","src":"7780:6:19"},"nativeSrc":"7780:40:19","nodeType":"YulFunctionCall","src":"7780:40:19"},"nativeSrc":"7777:60:19","nodeType":"YulIf","src":"7777:60:19"}]},"name":"validator_revert_t_bool","nativeSrc":"7727:116:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"7760:5:19","nodeType":"YulTypedName","src":"7760:5:19","type":""}],"src":"7727:116:19"},{"body":{"nativeSrc":"7898:84:19","nodeType":"YulBlock","src":"7898:84:19","statements":[{"nativeSrc":"7908:29:19","nodeType":"YulAssignment","src":"7908:29:19","value":{"arguments":[{"name":"offset","nativeSrc":"7930:6:19","nodeType":"YulIdentifier","src":"7930:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"7917:12:19","nodeType":"YulIdentifier","src":"7917:12:19"},"nativeSrc":"7917:20:19","nodeType":"YulFunctionCall","src":"7917:20:19"},"variableNames":[{"name":"value","nativeSrc":"7908:5:19","nodeType":"YulIdentifier","src":"7908:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"7970:5:19","nodeType":"YulIdentifier","src":"7970:5:19"}],"functionName":{"name":"validator_revert_t_bool","nativeSrc":"7946:23:19","nodeType":"YulIdentifier","src":"7946:23:19"},"nativeSrc":"7946:30:19","nodeType":"YulFunctionCall","src":"7946:30:19"},"nativeSrc":"7946:30:19","nodeType":"YulExpressionStatement","src":"7946:30:19"}]},"name":"abi_decode_t_bool","nativeSrc":"7849:133:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"7876:6:19","nodeType":"YulTypedName","src":"7876:6:19","type":""},{"name":"end","nativeSrc":"7884:3:19","nodeType":"YulTypedName","src":"7884:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"7892:5:19","nodeType":"YulTypedName","src":"7892:5:19","type":""}],"src":"7849:133:19"},{"body":{"nativeSrc":"8068:388:19","nodeType":"YulBlock","src":"8068:388:19","statements":[{"body":{"nativeSrc":"8114:83:19","nodeType":"YulBlock","src":"8114:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"8116:77:19","nodeType":"YulIdentifier","src":"8116:77:19"},"nativeSrc":"8116:79:19","nodeType":"YulFunctionCall","src":"8116:79:19"},"nativeSrc":"8116:79:19","nodeType":"YulExpressionStatement","src":"8116:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"8089:7:19","nodeType":"YulIdentifier","src":"8089:7:19"},{"name":"headStart","nativeSrc":"8098:9:19","nodeType":"YulIdentifier","src":"8098:9:19"}],"functionName":{"name":"sub","nativeSrc":"8085:3:19","nodeType":"YulIdentifier","src":"8085:3:19"},"nativeSrc":"8085:23:19","nodeType":"YulFunctionCall","src":"8085:23:19"},{"kind":"number","nativeSrc":"8110:2:19","nodeType":"YulLiteral","src":"8110:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"8081:3:19","nodeType":"YulIdentifier","src":"8081:3:19"},"nativeSrc":"8081:32:19","nodeType":"YulFunctionCall","src":"8081:32:19"},"nativeSrc":"8078:119:19","nodeType":"YulIf","src":"8078:119:19"},{"nativeSrc":"8207:117:19","nodeType":"YulBlock","src":"8207:117:19","statements":[{"nativeSrc":"8222:15:19","nodeType":"YulVariableDeclaration","src":"8222:15:19","value":{"kind":"number","nativeSrc":"8236:1:19","nodeType":"YulLiteral","src":"8236:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"8226:6:19","nodeType":"YulTypedName","src":"8226:6:19","type":""}]},{"nativeSrc":"8251:63:19","nodeType":"YulAssignment","src":"8251:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8286:9:19","nodeType":"YulIdentifier","src":"8286:9:19"},{"name":"offset","nativeSrc":"8297:6:19","nodeType":"YulIdentifier","src":"8297:6:19"}],"functionName":{"name":"add","nativeSrc":"8282:3:19","nodeType":"YulIdentifier","src":"8282:3:19"},"nativeSrc":"8282:22:19","nodeType":"YulFunctionCall","src":"8282:22:19"},{"name":"dataEnd","nativeSrc":"8306:7:19","nodeType":"YulIdentifier","src":"8306:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"8261:20:19","nodeType":"YulIdentifier","src":"8261:20:19"},"nativeSrc":"8261:53:19","nodeType":"YulFunctionCall","src":"8261:53:19"},"variableNames":[{"name":"value0","nativeSrc":"8251:6:19","nodeType":"YulIdentifier","src":"8251:6:19"}]}]},{"nativeSrc":"8334:115:19","nodeType":"YulBlock","src":"8334:115:19","statements":[{"nativeSrc":"8349:16:19","nodeType":"YulVariableDeclaration","src":"8349:16:19","value":{"kind":"number","nativeSrc":"8363:2:19","nodeType":"YulLiteral","src":"8363:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"8353:6:19","nodeType":"YulTypedName","src":"8353:6:19","type":""}]},{"nativeSrc":"8379:60:19","nodeType":"YulAssignment","src":"8379:60:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"8411:9:19","nodeType":"YulIdentifier","src":"8411:9:19"},{"name":"offset","nativeSrc":"8422:6:19","nodeType":"YulIdentifier","src":"8422:6:19"}],"functionName":{"name":"add","nativeSrc":"8407:3:19","nodeType":"YulIdentifier","src":"8407:3:19"},"nativeSrc":"8407:22:19","nodeType":"YulFunctionCall","src":"8407:22:19"},{"name":"dataEnd","nativeSrc":"8431:7:19","nodeType":"YulIdentifier","src":"8431:7:19"}],"functionName":{"name":"abi_decode_t_bool","nativeSrc":"8389:17:19","nodeType":"YulIdentifier","src":"8389:17:19"},"nativeSrc":"8389:50:19","nodeType":"YulFunctionCall","src":"8389:50:19"},"variableNames":[{"name":"value1","nativeSrc":"8379:6:19","nodeType":"YulIdentifier","src":"8379:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nativeSrc":"7988:468:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"8030:9:19","nodeType":"YulTypedName","src":"8030:9:19","type":""},{"name":"dataEnd","nativeSrc":"8041:7:19","nodeType":"YulTypedName","src":"8041:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"8053:6:19","nodeType":"YulTypedName","src":"8053:6:19","type":""},{"name":"value1","nativeSrc":"8061:6:19","nodeType":"YulTypedName","src":"8061:6:19","type":""}],"src":"7988:468:19"},{"body":{"nativeSrc":"8551:28:19","nodeType":"YulBlock","src":"8551:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8568:1:19","nodeType":"YulLiteral","src":"8568:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"8571:1:19","nodeType":"YulLiteral","src":"8571:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8561:6:19","nodeType":"YulIdentifier","src":"8561:6:19"},"nativeSrc":"8561:12:19","nodeType":"YulFunctionCall","src":"8561:12:19"},"nativeSrc":"8561:12:19","nodeType":"YulExpressionStatement","src":"8561:12:19"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"8462:117:19","nodeType":"YulFunctionDefinition","src":"8462:117:19"},{"body":{"nativeSrc":"8674:28:19","nodeType":"YulBlock","src":"8674:28:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8691:1:19","nodeType":"YulLiteral","src":"8691:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"8694:1:19","nodeType":"YulLiteral","src":"8694:1:19","type":"","value":"0"}],"functionName":{"name":"revert","nativeSrc":"8684:6:19","nodeType":"YulIdentifier","src":"8684:6:19"},"nativeSrc":"8684:12:19","nodeType":"YulFunctionCall","src":"8684:12:19"},"nativeSrc":"8684:12:19","nodeType":"YulExpressionStatement","src":"8684:12:19"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"8585:117:19","nodeType":"YulFunctionDefinition","src":"8585:117:19"},{"body":{"nativeSrc":"8736:152:19","nodeType":"YulBlock","src":"8736:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"8753:1:19","nodeType":"YulLiteral","src":"8753:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"8756:77:19","nodeType":"YulLiteral","src":"8756:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"8746:6:19","nodeType":"YulIdentifier","src":"8746:6:19"},"nativeSrc":"8746:88:19","nodeType":"YulFunctionCall","src":"8746:88:19"},"nativeSrc":"8746:88:19","nodeType":"YulExpressionStatement","src":"8746:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8850:1:19","nodeType":"YulLiteral","src":"8850:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"8853:4:19","nodeType":"YulLiteral","src":"8853:4:19","type":"","value":"0x41"}],"functionName":{"name":"mstore","nativeSrc":"8843:6:19","nodeType":"YulIdentifier","src":"8843:6:19"},"nativeSrc":"8843:15:19","nodeType":"YulFunctionCall","src":"8843:15:19"},"nativeSrc":"8843:15:19","nodeType":"YulExpressionStatement","src":"8843:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"8874:1:19","nodeType":"YulLiteral","src":"8874:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"8877:4:19","nodeType":"YulLiteral","src":"8877:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"8867:6:19","nodeType":"YulIdentifier","src":"8867:6:19"},"nativeSrc":"8867:15:19","nodeType":"YulFunctionCall","src":"8867:15:19"},"nativeSrc":"8867:15:19","nodeType":"YulExpressionStatement","src":"8867:15:19"}]},"name":"panic_error_0x41","nativeSrc":"8708:180:19","nodeType":"YulFunctionDefinition","src":"8708:180:19"},{"body":{"nativeSrc":"8937:238:19","nodeType":"YulBlock","src":"8937:238:19","statements":[{"nativeSrc":"8947:58:19","nodeType":"YulVariableDeclaration","src":"8947:58:19","value":{"arguments":[{"name":"memPtr","nativeSrc":"8969:6:19","nodeType":"YulIdentifier","src":"8969:6:19"},{"arguments":[{"name":"size","nativeSrc":"8999:4:19","nodeType":"YulIdentifier","src":"8999:4:19"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"8977:21:19","nodeType":"YulIdentifier","src":"8977:21:19"},"nativeSrc":"8977:27:19","nodeType":"YulFunctionCall","src":"8977:27:19"}],"functionName":{"name":"add","nativeSrc":"8965:3:19","nodeType":"YulIdentifier","src":"8965:3:19"},"nativeSrc":"8965:40:19","nodeType":"YulFunctionCall","src":"8965:40:19"},"variables":[{"name":"newFreePtr","nativeSrc":"8951:10:19","nodeType":"YulTypedName","src":"8951:10:19","type":""}]},{"body":{"nativeSrc":"9116:22:19","nodeType":"YulBlock","src":"9116:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"9118:16:19","nodeType":"YulIdentifier","src":"9118:16:19"},"nativeSrc":"9118:18:19","nodeType":"YulFunctionCall","src":"9118:18:19"},"nativeSrc":"9118:18:19","nodeType":"YulExpressionStatement","src":"9118:18:19"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nativeSrc":"9059:10:19","nodeType":"YulIdentifier","src":"9059:10:19"},{"kind":"number","nativeSrc":"9071:18:19","nodeType":"YulLiteral","src":"9071:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9056:2:19","nodeType":"YulIdentifier","src":"9056:2:19"},"nativeSrc":"9056:34:19","nodeType":"YulFunctionCall","src":"9056:34:19"},{"arguments":[{"name":"newFreePtr","nativeSrc":"9095:10:19","nodeType":"YulIdentifier","src":"9095:10:19"},{"name":"memPtr","nativeSrc":"9107:6:19","nodeType":"YulIdentifier","src":"9107:6:19"}],"functionName":{"name":"lt","nativeSrc":"9092:2:19","nodeType":"YulIdentifier","src":"9092:2:19"},"nativeSrc":"9092:22:19","nodeType":"YulFunctionCall","src":"9092:22:19"}],"functionName":{"name":"or","nativeSrc":"9053:2:19","nodeType":"YulIdentifier","src":"9053:2:19"},"nativeSrc":"9053:62:19","nodeType":"YulFunctionCall","src":"9053:62:19"},"nativeSrc":"9050:88:19","nodeType":"YulIf","src":"9050:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"9154:2:19","nodeType":"YulLiteral","src":"9154:2:19","type":"","value":"64"},{"name":"newFreePtr","nativeSrc":"9158:10:19","nodeType":"YulIdentifier","src":"9158:10:19"}],"functionName":{"name":"mstore","nativeSrc":"9147:6:19","nodeType":"YulIdentifier","src":"9147:6:19"},"nativeSrc":"9147:22:19","nodeType":"YulFunctionCall","src":"9147:22:19"},"nativeSrc":"9147:22:19","nodeType":"YulExpressionStatement","src":"9147:22:19"}]},"name":"finalize_allocation","nativeSrc":"8894:281:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nativeSrc":"8923:6:19","nodeType":"YulTypedName","src":"8923:6:19","type":""},{"name":"size","nativeSrc":"8931:4:19","nodeType":"YulTypedName","src":"8931:4:19","type":""}],"src":"8894:281:19"},{"body":{"nativeSrc":"9222:88:19","nodeType":"YulBlock","src":"9222:88:19","statements":[{"nativeSrc":"9232:30:19","nodeType":"YulAssignment","src":"9232:30:19","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nativeSrc":"9242:18:19","nodeType":"YulIdentifier","src":"9242:18:19"},"nativeSrc":"9242:20:19","nodeType":"YulFunctionCall","src":"9242:20:19"},"variableNames":[{"name":"memPtr","nativeSrc":"9232:6:19","nodeType":"YulIdentifier","src":"9232:6:19"}]},{"expression":{"arguments":[{"name":"memPtr","nativeSrc":"9291:6:19","nodeType":"YulIdentifier","src":"9291:6:19"},{"name":"size","nativeSrc":"9299:4:19","nodeType":"YulIdentifier","src":"9299:4:19"}],"functionName":{"name":"finalize_allocation","nativeSrc":"9271:19:19","nodeType":"YulIdentifier","src":"9271:19:19"},"nativeSrc":"9271:33:19","nodeType":"YulFunctionCall","src":"9271:33:19"},"nativeSrc":"9271:33:19","nodeType":"YulExpressionStatement","src":"9271:33:19"}]},"name":"allocate_memory","nativeSrc":"9181:129:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nativeSrc":"9206:4:19","nodeType":"YulTypedName","src":"9206:4:19","type":""}],"returnVariables":[{"name":"memPtr","nativeSrc":"9215:6:19","nodeType":"YulTypedName","src":"9215:6:19","type":""}],"src":"9181:129:19"},{"body":{"nativeSrc":"9382:241:19","nodeType":"YulBlock","src":"9382:241:19","statements":[{"body":{"nativeSrc":"9487:22:19","nodeType":"YulBlock","src":"9487:22:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nativeSrc":"9489:16:19","nodeType":"YulIdentifier","src":"9489:16:19"},"nativeSrc":"9489:18:19","nodeType":"YulFunctionCall","src":"9489:18:19"},"nativeSrc":"9489:18:19","nodeType":"YulExpressionStatement","src":"9489:18:19"}]},"condition":{"arguments":[{"name":"length","nativeSrc":"9459:6:19","nodeType":"YulIdentifier","src":"9459:6:19"},{"kind":"number","nativeSrc":"9467:18:19","nodeType":"YulLiteral","src":"9467:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"9456:2:19","nodeType":"YulIdentifier","src":"9456:2:19"},"nativeSrc":"9456:30:19","nodeType":"YulFunctionCall","src":"9456:30:19"},"nativeSrc":"9453:56:19","nodeType":"YulIf","src":"9453:56:19"},{"nativeSrc":"9519:37:19","nodeType":"YulAssignment","src":"9519:37:19","value":{"arguments":[{"name":"length","nativeSrc":"9549:6:19","nodeType":"YulIdentifier","src":"9549:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"9527:21:19","nodeType":"YulIdentifier","src":"9527:21:19"},"nativeSrc":"9527:29:19","nodeType":"YulFunctionCall","src":"9527:29:19"},"variableNames":[{"name":"size","nativeSrc":"9519:4:19","nodeType":"YulIdentifier","src":"9519:4:19"}]},{"nativeSrc":"9593:23:19","nodeType":"YulAssignment","src":"9593:23:19","value":{"arguments":[{"name":"size","nativeSrc":"9605:4:19","nodeType":"YulIdentifier","src":"9605:4:19"},{"kind":"number","nativeSrc":"9611:4:19","nodeType":"YulLiteral","src":"9611:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"9601:3:19","nodeType":"YulIdentifier","src":"9601:3:19"},"nativeSrc":"9601:15:19","nodeType":"YulFunctionCall","src":"9601:15:19"},"variableNames":[{"name":"size","nativeSrc":"9593:4:19","nodeType":"YulIdentifier","src":"9593:4:19"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"9316:307:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nativeSrc":"9366:6:19","nodeType":"YulTypedName","src":"9366:6:19","type":""}],"returnVariables":[{"name":"size","nativeSrc":"9377:4:19","nodeType":"YulTypedName","src":"9377:4:19","type":""}],"src":"9316:307:19"},{"body":{"nativeSrc":"9693:84:19","nodeType":"YulBlock","src":"9693:84:19","statements":[{"expression":{"arguments":[{"name":"dst","nativeSrc":"9717:3:19","nodeType":"YulIdentifier","src":"9717:3:19"},{"name":"src","nativeSrc":"9722:3:19","nodeType":"YulIdentifier","src":"9722:3:19"},{"name":"length","nativeSrc":"9727:6:19","nodeType":"YulIdentifier","src":"9727:6:19"}],"functionName":{"name":"calldatacopy","nativeSrc":"9704:12:19","nodeType":"YulIdentifier","src":"9704:12:19"},"nativeSrc":"9704:30:19","nodeType":"YulFunctionCall","src":"9704:30:19"},"nativeSrc":"9704:30:19","nodeType":"YulExpressionStatement","src":"9704:30:19"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nativeSrc":"9754:3:19","nodeType":"YulIdentifier","src":"9754:3:19"},{"name":"length","nativeSrc":"9759:6:19","nodeType":"YulIdentifier","src":"9759:6:19"}],"functionName":{"name":"add","nativeSrc":"9750:3:19","nodeType":"YulIdentifier","src":"9750:3:19"},"nativeSrc":"9750:16:19","nodeType":"YulFunctionCall","src":"9750:16:19"},{"kind":"number","nativeSrc":"9768:1:19","nodeType":"YulLiteral","src":"9768:1:19","type":"","value":"0"}],"functionName":{"name":"mstore","nativeSrc":"9743:6:19","nodeType":"YulIdentifier","src":"9743:6:19"},"nativeSrc":"9743:27:19","nodeType":"YulFunctionCall","src":"9743:27:19"},"nativeSrc":"9743:27:19","nodeType":"YulExpressionStatement","src":"9743:27:19"}]},"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"9629:148:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9675:3:19","nodeType":"YulTypedName","src":"9675:3:19","type":""},{"name":"dst","nativeSrc":"9680:3:19","nodeType":"YulTypedName","src":"9680:3:19","type":""},{"name":"length","nativeSrc":"9685:6:19","nodeType":"YulTypedName","src":"9685:6:19","type":""}],"src":"9629:148:19"},{"body":{"nativeSrc":"9866:340:19","nodeType":"YulBlock","src":"9866:340:19","statements":[{"nativeSrc":"9876:74:19","nodeType":"YulAssignment","src":"9876:74:19","value":{"arguments":[{"arguments":[{"name":"length","nativeSrc":"9942:6:19","nodeType":"YulIdentifier","src":"9942:6:19"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nativeSrc":"9901:40:19","nodeType":"YulIdentifier","src":"9901:40:19"},"nativeSrc":"9901:48:19","nodeType":"YulFunctionCall","src":"9901:48:19"}],"functionName":{"name":"allocate_memory","nativeSrc":"9885:15:19","nodeType":"YulIdentifier","src":"9885:15:19"},"nativeSrc":"9885:65:19","nodeType":"YulFunctionCall","src":"9885:65:19"},"variableNames":[{"name":"array","nativeSrc":"9876:5:19","nodeType":"YulIdentifier","src":"9876:5:19"}]},{"expression":{"arguments":[{"name":"array","nativeSrc":"9966:5:19","nodeType":"YulIdentifier","src":"9966:5:19"},{"name":"length","nativeSrc":"9973:6:19","nodeType":"YulIdentifier","src":"9973:6:19"}],"functionName":{"name":"mstore","nativeSrc":"9959:6:19","nodeType":"YulIdentifier","src":"9959:6:19"},"nativeSrc":"9959:21:19","nodeType":"YulFunctionCall","src":"9959:21:19"},"nativeSrc":"9959:21:19","nodeType":"YulExpressionStatement","src":"9959:21:19"},{"nativeSrc":"9989:27:19","nodeType":"YulVariableDeclaration","src":"9989:27:19","value":{"arguments":[{"name":"array","nativeSrc":"10004:5:19","nodeType":"YulIdentifier","src":"10004:5:19"},{"kind":"number","nativeSrc":"10011:4:19","nodeType":"YulLiteral","src":"10011:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10000:3:19","nodeType":"YulIdentifier","src":"10000:3:19"},"nativeSrc":"10000:16:19","nodeType":"YulFunctionCall","src":"10000:16:19"},"variables":[{"name":"dst","nativeSrc":"9993:3:19","nodeType":"YulTypedName","src":"9993:3:19","type":""}]},{"body":{"nativeSrc":"10054:83:19","nodeType":"YulBlock","src":"10054:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nativeSrc":"10056:77:19","nodeType":"YulIdentifier","src":"10056:77:19"},"nativeSrc":"10056:79:19","nodeType":"YulFunctionCall","src":"10056:79:19"},"nativeSrc":"10056:79:19","nodeType":"YulExpressionStatement","src":"10056:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nativeSrc":"10035:3:19","nodeType":"YulIdentifier","src":"10035:3:19"},{"name":"length","nativeSrc":"10040:6:19","nodeType":"YulIdentifier","src":"10040:6:19"}],"functionName":{"name":"add","nativeSrc":"10031:3:19","nodeType":"YulIdentifier","src":"10031:3:19"},"nativeSrc":"10031:16:19","nodeType":"YulFunctionCall","src":"10031:16:19"},{"name":"end","nativeSrc":"10049:3:19","nodeType":"YulIdentifier","src":"10049:3:19"}],"functionName":{"name":"gt","nativeSrc":"10028:2:19","nodeType":"YulIdentifier","src":"10028:2:19"},"nativeSrc":"10028:25:19","nodeType":"YulFunctionCall","src":"10028:25:19"},"nativeSrc":"10025:112:19","nodeType":"YulIf","src":"10025:112:19"},{"expression":{"arguments":[{"name":"src","nativeSrc":"10183:3:19","nodeType":"YulIdentifier","src":"10183:3:19"},{"name":"dst","nativeSrc":"10188:3:19","nodeType":"YulIdentifier","src":"10188:3:19"},{"name":"length","nativeSrc":"10193:6:19","nodeType":"YulIdentifier","src":"10193:6:19"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nativeSrc":"10146:36:19","nodeType":"YulIdentifier","src":"10146:36:19"},"nativeSrc":"10146:54:19","nodeType":"YulFunctionCall","src":"10146:54:19"},"nativeSrc":"10146:54:19","nodeType":"YulExpressionStatement","src":"10146:54:19"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"9783:423:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nativeSrc":"9839:3:19","nodeType":"YulTypedName","src":"9839:3:19","type":""},{"name":"length","nativeSrc":"9844:6:19","nodeType":"YulTypedName","src":"9844:6:19","type":""},{"name":"end","nativeSrc":"9852:3:19","nodeType":"YulTypedName","src":"9852:3:19","type":""}],"returnVariables":[{"name":"array","nativeSrc":"9860:5:19","nodeType":"YulTypedName","src":"9860:5:19","type":""}],"src":"9783:423:19"},{"body":{"nativeSrc":"10286:277:19","nodeType":"YulBlock","src":"10286:277:19","statements":[{"body":{"nativeSrc":"10335:83:19","nodeType":"YulBlock","src":"10335:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nativeSrc":"10337:77:19","nodeType":"YulIdentifier","src":"10337:77:19"},"nativeSrc":"10337:79:19","nodeType":"YulFunctionCall","src":"10337:79:19"},"nativeSrc":"10337:79:19","nodeType":"YulExpressionStatement","src":"10337:79:19"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"10314:6:19","nodeType":"YulIdentifier","src":"10314:6:19"},{"kind":"number","nativeSrc":"10322:4:19","nodeType":"YulLiteral","src":"10322:4:19","type":"","value":"0x1f"}],"functionName":{"name":"add","nativeSrc":"10310:3:19","nodeType":"YulIdentifier","src":"10310:3:19"},"nativeSrc":"10310:17:19","nodeType":"YulFunctionCall","src":"10310:17:19"},{"name":"end","nativeSrc":"10329:3:19","nodeType":"YulIdentifier","src":"10329:3:19"}],"functionName":{"name":"slt","nativeSrc":"10306:3:19","nodeType":"YulIdentifier","src":"10306:3:19"},"nativeSrc":"10306:27:19","nodeType":"YulFunctionCall","src":"10306:27:19"}],"functionName":{"name":"iszero","nativeSrc":"10299:6:19","nodeType":"YulIdentifier","src":"10299:6:19"},"nativeSrc":"10299:35:19","nodeType":"YulFunctionCall","src":"10299:35:19"},"nativeSrc":"10296:122:19","nodeType":"YulIf","src":"10296:122:19"},{"nativeSrc":"10427:34:19","nodeType":"YulVariableDeclaration","src":"10427:34:19","value":{"arguments":[{"name":"offset","nativeSrc":"10454:6:19","nodeType":"YulIdentifier","src":"10454:6:19"}],"functionName":{"name":"calldataload","nativeSrc":"10441:12:19","nodeType":"YulIdentifier","src":"10441:12:19"},"nativeSrc":"10441:20:19","nodeType":"YulFunctionCall","src":"10441:20:19"},"variables":[{"name":"length","nativeSrc":"10431:6:19","nodeType":"YulTypedName","src":"10431:6:19","type":""}]},{"nativeSrc":"10470:87:19","nodeType":"YulAssignment","src":"10470:87:19","value":{"arguments":[{"arguments":[{"name":"offset","nativeSrc":"10530:6:19","nodeType":"YulIdentifier","src":"10530:6:19"},{"kind":"number","nativeSrc":"10538:4:19","nodeType":"YulLiteral","src":"10538:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"10526:3:19","nodeType":"YulIdentifier","src":"10526:3:19"},"nativeSrc":"10526:17:19","nodeType":"YulFunctionCall","src":"10526:17:19"},{"name":"length","nativeSrc":"10545:6:19","nodeType":"YulIdentifier","src":"10545:6:19"},{"name":"end","nativeSrc":"10553:3:19","nodeType":"YulIdentifier","src":"10553:3:19"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nativeSrc":"10479:46:19","nodeType":"YulIdentifier","src":"10479:46:19"},"nativeSrc":"10479:78:19","nodeType":"YulFunctionCall","src":"10479:78:19"},"variableNames":[{"name":"array","nativeSrc":"10470:5:19","nodeType":"YulIdentifier","src":"10470:5:19"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"10225:338:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"10264:6:19","nodeType":"YulTypedName","src":"10264:6:19","type":""},{"name":"end","nativeSrc":"10272:3:19","nodeType":"YulTypedName","src":"10272:3:19","type":""}],"returnVariables":[{"name":"array","nativeSrc":"10280:5:19","nodeType":"YulTypedName","src":"10280:5:19","type":""}],"src":"10225:338:19"},{"body":{"nativeSrc":"10695:817:19","nodeType":"YulBlock","src":"10695:817:19","statements":[{"body":{"nativeSrc":"10742:83:19","nodeType":"YulBlock","src":"10742:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"10744:77:19","nodeType":"YulIdentifier","src":"10744:77:19"},"nativeSrc":"10744:79:19","nodeType":"YulFunctionCall","src":"10744:79:19"},"nativeSrc":"10744:79:19","nodeType":"YulExpressionStatement","src":"10744:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"10716:7:19","nodeType":"YulIdentifier","src":"10716:7:19"},{"name":"headStart","nativeSrc":"10725:9:19","nodeType":"YulIdentifier","src":"10725:9:19"}],"functionName":{"name":"sub","nativeSrc":"10712:3:19","nodeType":"YulIdentifier","src":"10712:3:19"},"nativeSrc":"10712:23:19","nodeType":"YulFunctionCall","src":"10712:23:19"},{"kind":"number","nativeSrc":"10737:3:19","nodeType":"YulLiteral","src":"10737:3:19","type":"","value":"128"}],"functionName":{"name":"slt","nativeSrc":"10708:3:19","nodeType":"YulIdentifier","src":"10708:3:19"},"nativeSrc":"10708:33:19","nodeType":"YulFunctionCall","src":"10708:33:19"},"nativeSrc":"10705:120:19","nodeType":"YulIf","src":"10705:120:19"},{"nativeSrc":"10835:117:19","nodeType":"YulBlock","src":"10835:117:19","statements":[{"nativeSrc":"10850:15:19","nodeType":"YulVariableDeclaration","src":"10850:15:19","value":{"kind":"number","nativeSrc":"10864:1:19","nodeType":"YulLiteral","src":"10864:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"10854:6:19","nodeType":"YulTypedName","src":"10854:6:19","type":""}]},{"nativeSrc":"10879:63:19","nodeType":"YulAssignment","src":"10879:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"10914:9:19","nodeType":"YulIdentifier","src":"10914:9:19"},{"name":"offset","nativeSrc":"10925:6:19","nodeType":"YulIdentifier","src":"10925:6:19"}],"functionName":{"name":"add","nativeSrc":"10910:3:19","nodeType":"YulIdentifier","src":"10910:3:19"},"nativeSrc":"10910:22:19","nodeType":"YulFunctionCall","src":"10910:22:19"},{"name":"dataEnd","nativeSrc":"10934:7:19","nodeType":"YulIdentifier","src":"10934:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"10889:20:19","nodeType":"YulIdentifier","src":"10889:20:19"},"nativeSrc":"10889:53:19","nodeType":"YulFunctionCall","src":"10889:53:19"},"variableNames":[{"name":"value0","nativeSrc":"10879:6:19","nodeType":"YulIdentifier","src":"10879:6:19"}]}]},{"nativeSrc":"10962:118:19","nodeType":"YulBlock","src":"10962:118:19","statements":[{"nativeSrc":"10977:16:19","nodeType":"YulVariableDeclaration","src":"10977:16:19","value":{"kind":"number","nativeSrc":"10991:2:19","nodeType":"YulLiteral","src":"10991:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"10981:6:19","nodeType":"YulTypedName","src":"10981:6:19","type":""}]},{"nativeSrc":"11007:63:19","nodeType":"YulAssignment","src":"11007:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11042:9:19","nodeType":"YulIdentifier","src":"11042:9:19"},{"name":"offset","nativeSrc":"11053:6:19","nodeType":"YulIdentifier","src":"11053:6:19"}],"functionName":{"name":"add","nativeSrc":"11038:3:19","nodeType":"YulIdentifier","src":"11038:3:19"},"nativeSrc":"11038:22:19","nodeType":"YulFunctionCall","src":"11038:22:19"},{"name":"dataEnd","nativeSrc":"11062:7:19","nodeType":"YulIdentifier","src":"11062:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11017:20:19","nodeType":"YulIdentifier","src":"11017:20:19"},"nativeSrc":"11017:53:19","nodeType":"YulFunctionCall","src":"11017:53:19"},"variableNames":[{"name":"value1","nativeSrc":"11007:6:19","nodeType":"YulIdentifier","src":"11007:6:19"}]}]},{"nativeSrc":"11090:118:19","nodeType":"YulBlock","src":"11090:118:19","statements":[{"nativeSrc":"11105:16:19","nodeType":"YulVariableDeclaration","src":"11105:16:19","value":{"kind":"number","nativeSrc":"11119:2:19","nodeType":"YulLiteral","src":"11119:2:19","type":"","value":"64"},"variables":[{"name":"offset","nativeSrc":"11109:6:19","nodeType":"YulTypedName","src":"11109:6:19","type":""}]},{"nativeSrc":"11135:63:19","nodeType":"YulAssignment","src":"11135:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11170:9:19","nodeType":"YulIdentifier","src":"11170:9:19"},{"name":"offset","nativeSrc":"11181:6:19","nodeType":"YulIdentifier","src":"11181:6:19"}],"functionName":{"name":"add","nativeSrc":"11166:3:19","nodeType":"YulIdentifier","src":"11166:3:19"},"nativeSrc":"11166:22:19","nodeType":"YulFunctionCall","src":"11166:22:19"},{"name":"dataEnd","nativeSrc":"11190:7:19","nodeType":"YulIdentifier","src":"11190:7:19"}],"functionName":{"name":"abi_decode_t_uint256","nativeSrc":"11145:20:19","nodeType":"YulIdentifier","src":"11145:20:19"},"nativeSrc":"11145:53:19","nodeType":"YulFunctionCall","src":"11145:53:19"},"variableNames":[{"name":"value2","nativeSrc":"11135:6:19","nodeType":"YulIdentifier","src":"11135:6:19"}]}]},{"nativeSrc":"11218:287:19","nodeType":"YulBlock","src":"11218:287:19","statements":[{"nativeSrc":"11233:46:19","nodeType":"YulVariableDeclaration","src":"11233:46:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11264:9:19","nodeType":"YulIdentifier","src":"11264:9:19"},{"kind":"number","nativeSrc":"11275:2:19","nodeType":"YulLiteral","src":"11275:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"11260:3:19","nodeType":"YulIdentifier","src":"11260:3:19"},"nativeSrc":"11260:18:19","nodeType":"YulFunctionCall","src":"11260:18:19"}],"functionName":{"name":"calldataload","nativeSrc":"11247:12:19","nodeType":"YulIdentifier","src":"11247:12:19"},"nativeSrc":"11247:32:19","nodeType":"YulFunctionCall","src":"11247:32:19"},"variables":[{"name":"offset","nativeSrc":"11237:6:19","nodeType":"YulTypedName","src":"11237:6:19","type":""}]},{"body":{"nativeSrc":"11326:83:19","nodeType":"YulBlock","src":"11326:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nativeSrc":"11328:77:19","nodeType":"YulIdentifier","src":"11328:77:19"},"nativeSrc":"11328:79:19","nodeType":"YulFunctionCall","src":"11328:79:19"},"nativeSrc":"11328:79:19","nodeType":"YulExpressionStatement","src":"11328:79:19"}]},"condition":{"arguments":[{"name":"offset","nativeSrc":"11298:6:19","nodeType":"YulIdentifier","src":"11298:6:19"},{"kind":"number","nativeSrc":"11306:18:19","nodeType":"YulLiteral","src":"11306:18:19","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nativeSrc":"11295:2:19","nodeType":"YulIdentifier","src":"11295:2:19"},"nativeSrc":"11295:30:19","nodeType":"YulFunctionCall","src":"11295:30:19"},"nativeSrc":"11292:117:19","nodeType":"YulIf","src":"11292:117:19"},{"nativeSrc":"11423:72:19","nodeType":"YulAssignment","src":"11423:72:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11467:9:19","nodeType":"YulIdentifier","src":"11467:9:19"},{"name":"offset","nativeSrc":"11478:6:19","nodeType":"YulIdentifier","src":"11478:6:19"}],"functionName":{"name":"add","nativeSrc":"11463:3:19","nodeType":"YulIdentifier","src":"11463:3:19"},"nativeSrc":"11463:22:19","nodeType":"YulFunctionCall","src":"11463:22:19"},{"name":"dataEnd","nativeSrc":"11487:7:19","nodeType":"YulIdentifier","src":"11487:7:19"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nativeSrc":"11433:29:19","nodeType":"YulIdentifier","src":"11433:29:19"},"nativeSrc":"11433:62:19","nodeType":"YulFunctionCall","src":"11433:62:19"},"variableNames":[{"name":"value3","nativeSrc":"11423:6:19","nodeType":"YulIdentifier","src":"11423:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nativeSrc":"10569:943:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"10641:9:19","nodeType":"YulTypedName","src":"10641:9:19","type":""},{"name":"dataEnd","nativeSrc":"10652:7:19","nodeType":"YulTypedName","src":"10652:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"10664:6:19","nodeType":"YulTypedName","src":"10664:6:19","type":""},{"name":"value1","nativeSrc":"10672:6:19","nodeType":"YulTypedName","src":"10672:6:19","type":""},{"name":"value2","nativeSrc":"10680:6:19","nodeType":"YulTypedName","src":"10680:6:19","type":""},{"name":"value3","nativeSrc":"10688:6:19","nodeType":"YulTypedName","src":"10688:6:19","type":""}],"src":"10569:943:19"},{"body":{"nativeSrc":"11601:391:19","nodeType":"YulBlock","src":"11601:391:19","statements":[{"body":{"nativeSrc":"11647:83:19","nodeType":"YulBlock","src":"11647:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"11649:77:19","nodeType":"YulIdentifier","src":"11649:77:19"},"nativeSrc":"11649:79:19","nodeType":"YulFunctionCall","src":"11649:79:19"},"nativeSrc":"11649:79:19","nodeType":"YulExpressionStatement","src":"11649:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"11622:7:19","nodeType":"YulIdentifier","src":"11622:7:19"},{"name":"headStart","nativeSrc":"11631:9:19","nodeType":"YulIdentifier","src":"11631:9:19"}],"functionName":{"name":"sub","nativeSrc":"11618:3:19","nodeType":"YulIdentifier","src":"11618:3:19"},"nativeSrc":"11618:23:19","nodeType":"YulFunctionCall","src":"11618:23:19"},{"kind":"number","nativeSrc":"11643:2:19","nodeType":"YulLiteral","src":"11643:2:19","type":"","value":"64"}],"functionName":{"name":"slt","nativeSrc":"11614:3:19","nodeType":"YulIdentifier","src":"11614:3:19"},"nativeSrc":"11614:32:19","nodeType":"YulFunctionCall","src":"11614:32:19"},"nativeSrc":"11611:119:19","nodeType":"YulIf","src":"11611:119:19"},{"nativeSrc":"11740:117:19","nodeType":"YulBlock","src":"11740:117:19","statements":[{"nativeSrc":"11755:15:19","nodeType":"YulVariableDeclaration","src":"11755:15:19","value":{"kind":"number","nativeSrc":"11769:1:19","nodeType":"YulLiteral","src":"11769:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"11759:6:19","nodeType":"YulTypedName","src":"11759:6:19","type":""}]},{"nativeSrc":"11784:63:19","nodeType":"YulAssignment","src":"11784:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11819:9:19","nodeType":"YulIdentifier","src":"11819:9:19"},{"name":"offset","nativeSrc":"11830:6:19","nodeType":"YulIdentifier","src":"11830:6:19"}],"functionName":{"name":"add","nativeSrc":"11815:3:19","nodeType":"YulIdentifier","src":"11815:3:19"},"nativeSrc":"11815:22:19","nodeType":"YulFunctionCall","src":"11815:22:19"},{"name":"dataEnd","nativeSrc":"11839:7:19","nodeType":"YulIdentifier","src":"11839:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11794:20:19","nodeType":"YulIdentifier","src":"11794:20:19"},"nativeSrc":"11794:53:19","nodeType":"YulFunctionCall","src":"11794:53:19"},"variableNames":[{"name":"value0","nativeSrc":"11784:6:19","nodeType":"YulIdentifier","src":"11784:6:19"}]}]},{"nativeSrc":"11867:118:19","nodeType":"YulBlock","src":"11867:118:19","statements":[{"nativeSrc":"11882:16:19","nodeType":"YulVariableDeclaration","src":"11882:16:19","value":{"kind":"number","nativeSrc":"11896:2:19","nodeType":"YulLiteral","src":"11896:2:19","type":"","value":"32"},"variables":[{"name":"offset","nativeSrc":"11886:6:19","nodeType":"YulTypedName","src":"11886:6:19","type":""}]},{"nativeSrc":"11912:63:19","nodeType":"YulAssignment","src":"11912:63:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"11947:9:19","nodeType":"YulIdentifier","src":"11947:9:19"},{"name":"offset","nativeSrc":"11958:6:19","nodeType":"YulIdentifier","src":"11958:6:19"}],"functionName":{"name":"add","nativeSrc":"11943:3:19","nodeType":"YulIdentifier","src":"11943:3:19"},"nativeSrc":"11943:22:19","nodeType":"YulFunctionCall","src":"11943:22:19"},{"name":"dataEnd","nativeSrc":"11967:7:19","nodeType":"YulIdentifier","src":"11967:7:19"}],"functionName":{"name":"abi_decode_t_address","nativeSrc":"11922:20:19","nodeType":"YulIdentifier","src":"11922:20:19"},"nativeSrc":"11922:53:19","nodeType":"YulFunctionCall","src":"11922:53:19"},"variableNames":[{"name":"value1","nativeSrc":"11912:6:19","nodeType":"YulIdentifier","src":"11912:6:19"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nativeSrc":"11518:474:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"11563:9:19","nodeType":"YulTypedName","src":"11563:9:19","type":""},{"name":"dataEnd","nativeSrc":"11574:7:19","nodeType":"YulTypedName","src":"11574:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"11586:6:19","nodeType":"YulTypedName","src":"11586:6:19","type":""},{"name":"value1","nativeSrc":"11594:6:19","nodeType":"YulTypedName","src":"11594:6:19","type":""}],"src":"11518:474:19"},{"body":{"nativeSrc":"12026:152:19","nodeType":"YulBlock","src":"12026:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"12043:1:19","nodeType":"YulLiteral","src":"12043:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"12046:77:19","nodeType":"YulLiteral","src":"12046:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"12036:6:19","nodeType":"YulIdentifier","src":"12036:6:19"},"nativeSrc":"12036:88:19","nodeType":"YulFunctionCall","src":"12036:88:19"},"nativeSrc":"12036:88:19","nodeType":"YulExpressionStatement","src":"12036:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12140:1:19","nodeType":"YulLiteral","src":"12140:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"12143:4:19","nodeType":"YulLiteral","src":"12143:4:19","type":"","value":"0x22"}],"functionName":{"name":"mstore","nativeSrc":"12133:6:19","nodeType":"YulIdentifier","src":"12133:6:19"},"nativeSrc":"12133:15:19","nodeType":"YulFunctionCall","src":"12133:15:19"},"nativeSrc":"12133:15:19","nodeType":"YulExpressionStatement","src":"12133:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"12164:1:19","nodeType":"YulLiteral","src":"12164:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"12167:4:19","nodeType":"YulLiteral","src":"12167:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"12157:6:19","nodeType":"YulIdentifier","src":"12157:6:19"},"nativeSrc":"12157:15:19","nodeType":"YulFunctionCall","src":"12157:15:19"},"nativeSrc":"12157:15:19","nodeType":"YulExpressionStatement","src":"12157:15:19"}]},"name":"panic_error_0x22","nativeSrc":"11998:180:19","nodeType":"YulFunctionDefinition","src":"11998:180:19"},{"body":{"nativeSrc":"12235:269:19","nodeType":"YulBlock","src":"12235:269:19","statements":[{"nativeSrc":"12245:22:19","nodeType":"YulAssignment","src":"12245:22:19","value":{"arguments":[{"name":"data","nativeSrc":"12259:4:19","nodeType":"YulIdentifier","src":"12259:4:19"},{"kind":"number","nativeSrc":"12265:1:19","nodeType":"YulLiteral","src":"12265:1:19","type":"","value":"2"}],"functionName":{"name":"div","nativeSrc":"12255:3:19","nodeType":"YulIdentifier","src":"12255:3:19"},"nativeSrc":"12255:12:19","nodeType":"YulFunctionCall","src":"12255:12:19"},"variableNames":[{"name":"length","nativeSrc":"12245:6:19","nodeType":"YulIdentifier","src":"12245:6:19"}]},{"nativeSrc":"12276:38:19","nodeType":"YulVariableDeclaration","src":"12276:38:19","value":{"arguments":[{"name":"data","nativeSrc":"12306:4:19","nodeType":"YulIdentifier","src":"12306:4:19"},{"kind":"number","nativeSrc":"12312:1:19","nodeType":"YulLiteral","src":"12312:1:19","type":"","value":"1"}],"functionName":{"name":"and","nativeSrc":"12302:3:19","nodeType":"YulIdentifier","src":"12302:3:19"},"nativeSrc":"12302:12:19","nodeType":"YulFunctionCall","src":"12302:12:19"},"variables":[{"name":"outOfPlaceEncoding","nativeSrc":"12280:18:19","nodeType":"YulTypedName","src":"12280:18:19","type":""}]},{"body":{"nativeSrc":"12353:51:19","nodeType":"YulBlock","src":"12353:51:19","statements":[{"nativeSrc":"12367:27:19","nodeType":"YulAssignment","src":"12367:27:19","value":{"arguments":[{"name":"length","nativeSrc":"12381:6:19","nodeType":"YulIdentifier","src":"12381:6:19"},{"kind":"number","nativeSrc":"12389:4:19","nodeType":"YulLiteral","src":"12389:4:19","type":"","value":"0x7f"}],"functionName":{"name":"and","nativeSrc":"12377:3:19","nodeType":"YulIdentifier","src":"12377:3:19"},"nativeSrc":"12377:17:19","nodeType":"YulFunctionCall","src":"12377:17:19"},"variableNames":[{"name":"length","nativeSrc":"12367:6:19","nodeType":"YulIdentifier","src":"12367:6:19"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12333:18:19","nodeType":"YulIdentifier","src":"12333:18:19"}],"functionName":{"name":"iszero","nativeSrc":"12326:6:19","nodeType":"YulIdentifier","src":"12326:6:19"},"nativeSrc":"12326:26:19","nodeType":"YulFunctionCall","src":"12326:26:19"},"nativeSrc":"12323:81:19","nodeType":"YulIf","src":"12323:81:19"},{"body":{"nativeSrc":"12456:42:19","nodeType":"YulBlock","src":"12456:42:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nativeSrc":"12470:16:19","nodeType":"YulIdentifier","src":"12470:16:19"},"nativeSrc":"12470:18:19","nodeType":"YulFunctionCall","src":"12470:18:19"},"nativeSrc":"12470:18:19","nodeType":"YulExpressionStatement","src":"12470:18:19"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nativeSrc":"12420:18:19","nodeType":"YulIdentifier","src":"12420:18:19"},{"arguments":[{"name":"length","nativeSrc":"12443:6:19","nodeType":"YulIdentifier","src":"12443:6:19"},{"kind":"number","nativeSrc":"12451:2:19","nodeType":"YulLiteral","src":"12451:2:19","type":"","value":"32"}],"functionName":{"name":"lt","nativeSrc":"12440:2:19","nodeType":"YulIdentifier","src":"12440:2:19"},"nativeSrc":"12440:14:19","nodeType":"YulFunctionCall","src":"12440:14:19"}],"functionName":{"name":"eq","nativeSrc":"12417:2:19","nodeType":"YulIdentifier","src":"12417:2:19"},"nativeSrc":"12417:38:19","nodeType":"YulFunctionCall","src":"12417:38:19"},"nativeSrc":"12414:84:19","nodeType":"YulIf","src":"12414:84:19"}]},"name":"extract_byte_array_length","nativeSrc":"12184:320:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nativeSrc":"12219:4:19","nodeType":"YulTypedName","src":"12219:4:19","type":""}],"returnVariables":[{"name":"length","nativeSrc":"12228:6:19","nodeType":"YulTypedName","src":"12228:6:19","type":""}],"src":"12184:320:19"},{"body":{"nativeSrc":"12664:288:19","nodeType":"YulBlock","src":"12664:288:19","statements":[{"nativeSrc":"12674:26:19","nodeType":"YulAssignment","src":"12674:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"12686:9:19","nodeType":"YulIdentifier","src":"12686:9:19"},{"kind":"number","nativeSrc":"12697:2:19","nodeType":"YulLiteral","src":"12697:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"12682:3:19","nodeType":"YulIdentifier","src":"12682:3:19"},"nativeSrc":"12682:18:19","nodeType":"YulFunctionCall","src":"12682:18:19"},"variableNames":[{"name":"tail","nativeSrc":"12674:4:19","nodeType":"YulIdentifier","src":"12674:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"12754:6:19","nodeType":"YulIdentifier","src":"12754:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"12767:9:19","nodeType":"YulIdentifier","src":"12767:9:19"},{"kind":"number","nativeSrc":"12778:1:19","nodeType":"YulLiteral","src":"12778:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"12763:3:19","nodeType":"YulIdentifier","src":"12763:3:19"},"nativeSrc":"12763:17:19","nodeType":"YulFunctionCall","src":"12763:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12710:43:19","nodeType":"YulIdentifier","src":"12710:43:19"},"nativeSrc":"12710:71:19","nodeType":"YulFunctionCall","src":"12710:71:19"},"nativeSrc":"12710:71:19","nodeType":"YulExpressionStatement","src":"12710:71:19"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"12835:6:19","nodeType":"YulIdentifier","src":"12835:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"12848:9:19","nodeType":"YulIdentifier","src":"12848:9:19"},{"kind":"number","nativeSrc":"12859:2:19","nodeType":"YulLiteral","src":"12859:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"12844:3:19","nodeType":"YulIdentifier","src":"12844:3:19"},"nativeSrc":"12844:18:19","nodeType":"YulFunctionCall","src":"12844:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"12791:43:19","nodeType":"YulIdentifier","src":"12791:43:19"},"nativeSrc":"12791:72:19","nodeType":"YulFunctionCall","src":"12791:72:19"},"nativeSrc":"12791:72:19","nodeType":"YulExpressionStatement","src":"12791:72:19"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"12917:6:19","nodeType":"YulIdentifier","src":"12917:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"12930:9:19","nodeType":"YulIdentifier","src":"12930:9:19"},{"kind":"number","nativeSrc":"12941:2:19","nodeType":"YulLiteral","src":"12941:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"12926:3:19","nodeType":"YulIdentifier","src":"12926:3:19"},"nativeSrc":"12926:18:19","nodeType":"YulFunctionCall","src":"12926:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"12873:43:19","nodeType":"YulIdentifier","src":"12873:43:19"},"nativeSrc":"12873:72:19","nodeType":"YulFunctionCall","src":"12873:72:19"},"nativeSrc":"12873:72:19","nodeType":"YulExpressionStatement","src":"12873:72:19"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nativeSrc":"12510:442:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"12620:9:19","nodeType":"YulTypedName","src":"12620:9:19","type":""},{"name":"value2","nativeSrc":"12632:6:19","nodeType":"YulTypedName","src":"12632:6:19","type":""},{"name":"value1","nativeSrc":"12640:6:19","nodeType":"YulTypedName","src":"12640:6:19","type":""},{"name":"value0","nativeSrc":"12648:6:19","nodeType":"YulTypedName","src":"12648:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"12659:4:19","nodeType":"YulTypedName","src":"12659:4:19","type":""}],"src":"12510:442:19"},{"body":{"nativeSrc":"13072:34:19","nodeType":"YulBlock","src":"13072:34:19","statements":[{"nativeSrc":"13082:18:19","nodeType":"YulAssignment","src":"13082:18:19","value":{"name":"pos","nativeSrc":"13097:3:19","nodeType":"YulIdentifier","src":"13097:3:19"},"variableNames":[{"name":"updated_pos","nativeSrc":"13082:11:19","nodeType":"YulIdentifier","src":"13082:11:19"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"12958:148:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13044:3:19","nodeType":"YulTypedName","src":"13044:3:19","type":""},{"name":"length","nativeSrc":"13049:6:19","nodeType":"YulTypedName","src":"13049:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"13060:11:19","nodeType":"YulTypedName","src":"13060:11:19","type":""}],"src":"12958:148:19"},{"body":{"nativeSrc":"13222:280:19","nodeType":"YulBlock","src":"13222:280:19","statements":[{"nativeSrc":"13232:53:19","nodeType":"YulVariableDeclaration","src":"13232:53:19","value":{"arguments":[{"name":"value","nativeSrc":"13279:5:19","nodeType":"YulIdentifier","src":"13279:5:19"}],"functionName":{"name":"array_length_t_string_memory_ptr","nativeSrc":"13246:32:19","nodeType":"YulIdentifier","src":"13246:32:19"},"nativeSrc":"13246:39:19","nodeType":"YulFunctionCall","src":"13246:39:19"},"variables":[{"name":"length","nativeSrc":"13236:6:19","nodeType":"YulTypedName","src":"13236:6:19","type":""}]},{"nativeSrc":"13294:96:19","nodeType":"YulAssignment","src":"13294:96:19","value":{"arguments":[{"name":"pos","nativeSrc":"13378:3:19","nodeType":"YulIdentifier","src":"13378:3:19"},{"name":"length","nativeSrc":"13383:6:19","nodeType":"YulIdentifier","src":"13383:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"13301:76:19","nodeType":"YulIdentifier","src":"13301:76:19"},"nativeSrc":"13301:89:19","nodeType":"YulFunctionCall","src":"13301:89:19"},"variableNames":[{"name":"pos","nativeSrc":"13294:3:19","nodeType":"YulIdentifier","src":"13294:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"13438:5:19","nodeType":"YulIdentifier","src":"13438:5:19"},{"kind":"number","nativeSrc":"13445:4:19","nodeType":"YulLiteral","src":"13445:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"13434:3:19","nodeType":"YulIdentifier","src":"13434:3:19"},"nativeSrc":"13434:16:19","nodeType":"YulFunctionCall","src":"13434:16:19"},{"name":"pos","nativeSrc":"13452:3:19","nodeType":"YulIdentifier","src":"13452:3:19"},{"name":"length","nativeSrc":"13457:6:19","nodeType":"YulIdentifier","src":"13457:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"13399:34:19","nodeType":"YulIdentifier","src":"13399:34:19"},"nativeSrc":"13399:65:19","nodeType":"YulFunctionCall","src":"13399:65:19"},"nativeSrc":"13399:65:19","nodeType":"YulExpressionStatement","src":"13399:65:19"},{"nativeSrc":"13473:23:19","nodeType":"YulAssignment","src":"13473:23:19","value":{"arguments":[{"name":"pos","nativeSrc":"13484:3:19","nodeType":"YulIdentifier","src":"13484:3:19"},{"name":"length","nativeSrc":"13489:6:19","nodeType":"YulIdentifier","src":"13489:6:19"}],"functionName":{"name":"add","nativeSrc":"13480:3:19","nodeType":"YulIdentifier","src":"13480:3:19"},"nativeSrc":"13480:16:19","nodeType":"YulFunctionCall","src":"13480:16:19"},"variableNames":[{"name":"end","nativeSrc":"13473:3:19","nodeType":"YulIdentifier","src":"13473:3:19"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"13112:390:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13203:5:19","nodeType":"YulTypedName","src":"13203:5:19","type":""},{"name":"pos","nativeSrc":"13210:3:19","nodeType":"YulTypedName","src":"13210:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13218:3:19","nodeType":"YulTypedName","src":"13218:3:19","type":""}],"src":"13112:390:19"},{"body":{"nativeSrc":"13692:251:19","nodeType":"YulBlock","src":"13692:251:19","statements":[{"nativeSrc":"13703:102:19","nodeType":"YulAssignment","src":"13703:102:19","value":{"arguments":[{"name":"value0","nativeSrc":"13792:6:19","nodeType":"YulIdentifier","src":"13792:6:19"},{"name":"pos","nativeSrc":"13801:3:19","nodeType":"YulIdentifier","src":"13801:3:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"13710:81:19","nodeType":"YulIdentifier","src":"13710:81:19"},"nativeSrc":"13710:95:19","nodeType":"YulFunctionCall","src":"13710:95:19"},"variableNames":[{"name":"pos","nativeSrc":"13703:3:19","nodeType":"YulIdentifier","src":"13703:3:19"}]},{"nativeSrc":"13815:102:19","nodeType":"YulAssignment","src":"13815:102:19","value":{"arguments":[{"name":"value1","nativeSrc":"13904:6:19","nodeType":"YulIdentifier","src":"13904:6:19"},{"name":"pos","nativeSrc":"13913:3:19","nodeType":"YulIdentifier","src":"13913:3:19"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nativeSrc":"13822:81:19","nodeType":"YulIdentifier","src":"13822:81:19"},"nativeSrc":"13822:95:19","nodeType":"YulFunctionCall","src":"13822:95:19"},"variableNames":[{"name":"pos","nativeSrc":"13815:3:19","nodeType":"YulIdentifier","src":"13815:3:19"}]},{"nativeSrc":"13927:10:19","nodeType":"YulAssignment","src":"13927:10:19","value":{"name":"pos","nativeSrc":"13934:3:19","nodeType":"YulIdentifier","src":"13934:3:19"},"variableNames":[{"name":"end","nativeSrc":"13927:3:19","nodeType":"YulIdentifier","src":"13927:3:19"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nativeSrc":"13508:435:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"13663:3:19","nodeType":"YulTypedName","src":"13663:3:19","type":""},{"name":"value1","nativeSrc":"13669:6:19","nodeType":"YulTypedName","src":"13669:6:19","type":""},{"name":"value0","nativeSrc":"13677:6:19","nodeType":"YulTypedName","src":"13677:6:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"13688:3:19","nodeType":"YulTypedName","src":"13688:3:19","type":""}],"src":"13508:435:19"},{"body":{"nativeSrc":"14007:40:19","nodeType":"YulBlock","src":"14007:40:19","statements":[{"nativeSrc":"14018:22:19","nodeType":"YulAssignment","src":"14018:22:19","value":{"arguments":[{"name":"value","nativeSrc":"14034:5:19","nodeType":"YulIdentifier","src":"14034:5:19"}],"functionName":{"name":"mload","nativeSrc":"14028:5:19","nodeType":"YulIdentifier","src":"14028:5:19"},"nativeSrc":"14028:12:19","nodeType":"YulFunctionCall","src":"14028:12:19"},"variableNames":[{"name":"length","nativeSrc":"14018:6:19","nodeType":"YulIdentifier","src":"14018:6:19"}]}]},"name":"array_length_t_bytes_memory_ptr","nativeSrc":"13949:98:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"13990:5:19","nodeType":"YulTypedName","src":"13990:5:19","type":""}],"returnVariables":[{"name":"length","nativeSrc":"14000:6:19","nodeType":"YulTypedName","src":"14000:6:19","type":""}],"src":"13949:98:19"},{"body":{"nativeSrc":"14148:73:19","nodeType":"YulBlock","src":"14148:73:19","statements":[{"expression":{"arguments":[{"name":"pos","nativeSrc":"14165:3:19","nodeType":"YulIdentifier","src":"14165:3:19"},{"name":"length","nativeSrc":"14170:6:19","nodeType":"YulIdentifier","src":"14170:6:19"}],"functionName":{"name":"mstore","nativeSrc":"14158:6:19","nodeType":"YulIdentifier","src":"14158:6:19"},"nativeSrc":"14158:19:19","nodeType":"YulFunctionCall","src":"14158:19:19"},"nativeSrc":"14158:19:19","nodeType":"YulExpressionStatement","src":"14158:19:19"},{"nativeSrc":"14186:29:19","nodeType":"YulAssignment","src":"14186:29:19","value":{"arguments":[{"name":"pos","nativeSrc":"14205:3:19","nodeType":"YulIdentifier","src":"14205:3:19"},{"kind":"number","nativeSrc":"14210:4:19","nodeType":"YulLiteral","src":"14210:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14201:3:19","nodeType":"YulIdentifier","src":"14201:3:19"},"nativeSrc":"14201:14:19","nodeType":"YulFunctionCall","src":"14201:14:19"},"variableNames":[{"name":"updated_pos","nativeSrc":"14186:11:19","nodeType":"YulIdentifier","src":"14186:11:19"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"14053:168:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nativeSrc":"14120:3:19","nodeType":"YulTypedName","src":"14120:3:19","type":""},{"name":"length","nativeSrc":"14125:6:19","nodeType":"YulTypedName","src":"14125:6:19","type":""}],"returnVariables":[{"name":"updated_pos","nativeSrc":"14136:11:19","nodeType":"YulTypedName","src":"14136:11:19","type":""}],"src":"14053:168:19"},{"body":{"nativeSrc":"14317:283:19","nodeType":"YulBlock","src":"14317:283:19","statements":[{"nativeSrc":"14327:52:19","nodeType":"YulVariableDeclaration","src":"14327:52:19","value":{"arguments":[{"name":"value","nativeSrc":"14373:5:19","nodeType":"YulIdentifier","src":"14373:5:19"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nativeSrc":"14341:31:19","nodeType":"YulIdentifier","src":"14341:31:19"},"nativeSrc":"14341:38:19","nodeType":"YulFunctionCall","src":"14341:38:19"},"variables":[{"name":"length","nativeSrc":"14331:6:19","nodeType":"YulTypedName","src":"14331:6:19","type":""}]},{"nativeSrc":"14388:77:19","nodeType":"YulAssignment","src":"14388:77:19","value":{"arguments":[{"name":"pos","nativeSrc":"14453:3:19","nodeType":"YulIdentifier","src":"14453:3:19"},{"name":"length","nativeSrc":"14458:6:19","nodeType":"YulIdentifier","src":"14458:6:19"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nativeSrc":"14395:57:19","nodeType":"YulIdentifier","src":"14395:57:19"},"nativeSrc":"14395:70:19","nodeType":"YulFunctionCall","src":"14395:70:19"},"variableNames":[{"name":"pos","nativeSrc":"14388:3:19","nodeType":"YulIdentifier","src":"14388:3:19"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nativeSrc":"14513:5:19","nodeType":"YulIdentifier","src":"14513:5:19"},{"kind":"number","nativeSrc":"14520:4:19","nodeType":"YulLiteral","src":"14520:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"14509:3:19","nodeType":"YulIdentifier","src":"14509:3:19"},"nativeSrc":"14509:16:19","nodeType":"YulFunctionCall","src":"14509:16:19"},{"name":"pos","nativeSrc":"14527:3:19","nodeType":"YulIdentifier","src":"14527:3:19"},{"name":"length","nativeSrc":"14532:6:19","nodeType":"YulIdentifier","src":"14532:6:19"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nativeSrc":"14474:34:19","nodeType":"YulIdentifier","src":"14474:34:19"},"nativeSrc":"14474:65:19","nodeType":"YulFunctionCall","src":"14474:65:19"},"nativeSrc":"14474:65:19","nodeType":"YulExpressionStatement","src":"14474:65:19"},{"nativeSrc":"14548:46:19","nodeType":"YulAssignment","src":"14548:46:19","value":{"arguments":[{"name":"pos","nativeSrc":"14559:3:19","nodeType":"YulIdentifier","src":"14559:3:19"},{"arguments":[{"name":"length","nativeSrc":"14586:6:19","nodeType":"YulIdentifier","src":"14586:6:19"}],"functionName":{"name":"round_up_to_mul_of_32","nativeSrc":"14564:21:19","nodeType":"YulIdentifier","src":"14564:21:19"},"nativeSrc":"14564:29:19","nodeType":"YulFunctionCall","src":"14564:29:19"}],"functionName":{"name":"add","nativeSrc":"14555:3:19","nodeType":"YulIdentifier","src":"14555:3:19"},"nativeSrc":"14555:39:19","nodeType":"YulFunctionCall","src":"14555:39:19"},"variableNames":[{"name":"end","nativeSrc":"14548:3:19","nodeType":"YulIdentifier","src":"14548:3:19"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"14227:373:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nativeSrc":"14298:5:19","nodeType":"YulTypedName","src":"14298:5:19","type":""},{"name":"pos","nativeSrc":"14305:3:19","nodeType":"YulTypedName","src":"14305:3:19","type":""}],"returnVariables":[{"name":"end","nativeSrc":"14313:3:19","nodeType":"YulTypedName","src":"14313:3:19","type":""}],"src":"14227:373:19"},{"body":{"nativeSrc":"14806:440:19","nodeType":"YulBlock","src":"14806:440:19","statements":[{"nativeSrc":"14816:27:19","nodeType":"YulAssignment","src":"14816:27:19","value":{"arguments":[{"name":"headStart","nativeSrc":"14828:9:19","nodeType":"YulIdentifier","src":"14828:9:19"},{"kind":"number","nativeSrc":"14839:3:19","nodeType":"YulLiteral","src":"14839:3:19","type":"","value":"128"}],"functionName":{"name":"add","nativeSrc":"14824:3:19","nodeType":"YulIdentifier","src":"14824:3:19"},"nativeSrc":"14824:19:19","nodeType":"YulFunctionCall","src":"14824:19:19"},"variableNames":[{"name":"tail","nativeSrc":"14816:4:19","nodeType":"YulIdentifier","src":"14816:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"14897:6:19","nodeType":"YulIdentifier","src":"14897:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"14910:9:19","nodeType":"YulIdentifier","src":"14910:9:19"},{"kind":"number","nativeSrc":"14921:1:19","nodeType":"YulLiteral","src":"14921:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"14906:3:19","nodeType":"YulIdentifier","src":"14906:3:19"},"nativeSrc":"14906:17:19","nodeType":"YulFunctionCall","src":"14906:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14853:43:19","nodeType":"YulIdentifier","src":"14853:43:19"},"nativeSrc":"14853:71:19","nodeType":"YulFunctionCall","src":"14853:71:19"},"nativeSrc":"14853:71:19","nodeType":"YulExpressionStatement","src":"14853:71:19"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"14978:6:19","nodeType":"YulIdentifier","src":"14978:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"14991:9:19","nodeType":"YulIdentifier","src":"14991:9:19"},{"kind":"number","nativeSrc":"15002:2:19","nodeType":"YulLiteral","src":"15002:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"14987:3:19","nodeType":"YulIdentifier","src":"14987:3:19"},"nativeSrc":"14987:18:19","nodeType":"YulFunctionCall","src":"14987:18:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"14934:43:19","nodeType":"YulIdentifier","src":"14934:43:19"},"nativeSrc":"14934:72:19","nodeType":"YulFunctionCall","src":"14934:72:19"},"nativeSrc":"14934:72:19","nodeType":"YulExpressionStatement","src":"14934:72:19"},{"expression":{"arguments":[{"name":"value2","nativeSrc":"15060:6:19","nodeType":"YulIdentifier","src":"15060:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"15073:9:19","nodeType":"YulIdentifier","src":"15073:9:19"},{"kind":"number","nativeSrc":"15084:2:19","nodeType":"YulLiteral","src":"15084:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"15069:3:19","nodeType":"YulIdentifier","src":"15069:3:19"},"nativeSrc":"15069:18:19","nodeType":"YulFunctionCall","src":"15069:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"15016:43:19","nodeType":"YulIdentifier","src":"15016:43:19"},"nativeSrc":"15016:72:19","nodeType":"YulFunctionCall","src":"15016:72:19"},"nativeSrc":"15016:72:19","nodeType":"YulExpressionStatement","src":"15016:72:19"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15109:9:19","nodeType":"YulIdentifier","src":"15109:9:19"},{"kind":"number","nativeSrc":"15120:2:19","nodeType":"YulLiteral","src":"15120:2:19","type":"","value":"96"}],"functionName":{"name":"add","nativeSrc":"15105:3:19","nodeType":"YulIdentifier","src":"15105:3:19"},"nativeSrc":"15105:18:19","nodeType":"YulFunctionCall","src":"15105:18:19"},{"arguments":[{"name":"tail","nativeSrc":"15129:4:19","nodeType":"YulIdentifier","src":"15129:4:19"},{"name":"headStart","nativeSrc":"15135:9:19","nodeType":"YulIdentifier","src":"15135:9:19"}],"functionName":{"name":"sub","nativeSrc":"15125:3:19","nodeType":"YulIdentifier","src":"15125:3:19"},"nativeSrc":"15125:20:19","nodeType":"YulFunctionCall","src":"15125:20:19"}],"functionName":{"name":"mstore","nativeSrc":"15098:6:19","nodeType":"YulIdentifier","src":"15098:6:19"},"nativeSrc":"15098:48:19","nodeType":"YulFunctionCall","src":"15098:48:19"},"nativeSrc":"15098:48:19","nodeType":"YulExpressionStatement","src":"15098:48:19"},{"nativeSrc":"15155:84:19","nodeType":"YulAssignment","src":"15155:84:19","value":{"arguments":[{"name":"value3","nativeSrc":"15225:6:19","nodeType":"YulIdentifier","src":"15225:6:19"},{"name":"tail","nativeSrc":"15234:4:19","nodeType":"YulIdentifier","src":"15234:4:19"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nativeSrc":"15163:61:19","nodeType":"YulIdentifier","src":"15163:61:19"},"nativeSrc":"15163:76:19","nodeType":"YulFunctionCall","src":"15163:76:19"},"variableNames":[{"name":"tail","nativeSrc":"15155:4:19","nodeType":"YulIdentifier","src":"15155:4:19"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nativeSrc":"14606:640:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"14754:9:19","nodeType":"YulTypedName","src":"14754:9:19","type":""},{"name":"value3","nativeSrc":"14766:6:19","nodeType":"YulTypedName","src":"14766:6:19","type":""},{"name":"value2","nativeSrc":"14774:6:19","nodeType":"YulTypedName","src":"14774:6:19","type":""},{"name":"value1","nativeSrc":"14782:6:19","nodeType":"YulTypedName","src":"14782:6:19","type":""},{"name":"value0","nativeSrc":"14790:6:19","nodeType":"YulTypedName","src":"14790:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"14801:4:19","nodeType":"YulTypedName","src":"14801:4:19","type":""}],"src":"14606:640:19"},{"body":{"nativeSrc":"15314:79:19","nodeType":"YulBlock","src":"15314:79:19","statements":[{"nativeSrc":"15324:22:19","nodeType":"YulAssignment","src":"15324:22:19","value":{"arguments":[{"name":"offset","nativeSrc":"15339:6:19","nodeType":"YulIdentifier","src":"15339:6:19"}],"functionName":{"name":"mload","nativeSrc":"15333:5:19","nodeType":"YulIdentifier","src":"15333:5:19"},"nativeSrc":"15333:13:19","nodeType":"YulFunctionCall","src":"15333:13:19"},"variableNames":[{"name":"value","nativeSrc":"15324:5:19","nodeType":"YulIdentifier","src":"15324:5:19"}]},{"expression":{"arguments":[{"name":"value","nativeSrc":"15381:5:19","nodeType":"YulIdentifier","src":"15381:5:19"}],"functionName":{"name":"validator_revert_t_bytes4","nativeSrc":"15355:25:19","nodeType":"YulIdentifier","src":"15355:25:19"},"nativeSrc":"15355:32:19","nodeType":"YulFunctionCall","src":"15355:32:19"},"nativeSrc":"15355:32:19","nodeType":"YulExpressionStatement","src":"15355:32:19"}]},"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"15252:141:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nativeSrc":"15292:6:19","nodeType":"YulTypedName","src":"15292:6:19","type":""},{"name":"end","nativeSrc":"15300:3:19","nodeType":"YulTypedName","src":"15300:3:19","type":""}],"returnVariables":[{"name":"value","nativeSrc":"15308:5:19","nodeType":"YulTypedName","src":"15308:5:19","type":""}],"src":"15252:141:19"},{"body":{"nativeSrc":"15475:273:19","nodeType":"YulBlock","src":"15475:273:19","statements":[{"body":{"nativeSrc":"15521:83:19","nodeType":"YulBlock","src":"15521:83:19","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nativeSrc":"15523:77:19","nodeType":"YulIdentifier","src":"15523:77:19"},"nativeSrc":"15523:79:19","nodeType":"YulFunctionCall","src":"15523:79:19"},"nativeSrc":"15523:79:19","nodeType":"YulExpressionStatement","src":"15523:79:19"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nativeSrc":"15496:7:19","nodeType":"YulIdentifier","src":"15496:7:19"},{"name":"headStart","nativeSrc":"15505:9:19","nodeType":"YulIdentifier","src":"15505:9:19"}],"functionName":{"name":"sub","nativeSrc":"15492:3:19","nodeType":"YulIdentifier","src":"15492:3:19"},"nativeSrc":"15492:23:19","nodeType":"YulFunctionCall","src":"15492:23:19"},{"kind":"number","nativeSrc":"15517:2:19","nodeType":"YulLiteral","src":"15517:2:19","type":"","value":"32"}],"functionName":{"name":"slt","nativeSrc":"15488:3:19","nodeType":"YulIdentifier","src":"15488:3:19"},"nativeSrc":"15488:32:19","nodeType":"YulFunctionCall","src":"15488:32:19"},"nativeSrc":"15485:119:19","nodeType":"YulIf","src":"15485:119:19"},{"nativeSrc":"15614:127:19","nodeType":"YulBlock","src":"15614:127:19","statements":[{"nativeSrc":"15629:15:19","nodeType":"YulVariableDeclaration","src":"15629:15:19","value":{"kind":"number","nativeSrc":"15643:1:19","nodeType":"YulLiteral","src":"15643:1:19","type":"","value":"0"},"variables":[{"name":"offset","nativeSrc":"15633:6:19","nodeType":"YulTypedName","src":"15633:6:19","type":""}]},{"nativeSrc":"15658:73:19","nodeType":"YulAssignment","src":"15658:73:19","value":{"arguments":[{"arguments":[{"name":"headStart","nativeSrc":"15703:9:19","nodeType":"YulIdentifier","src":"15703:9:19"},{"name":"offset","nativeSrc":"15714:6:19","nodeType":"YulIdentifier","src":"15714:6:19"}],"functionName":{"name":"add","nativeSrc":"15699:3:19","nodeType":"YulIdentifier","src":"15699:3:19"},"nativeSrc":"15699:22:19","nodeType":"YulFunctionCall","src":"15699:22:19"},{"name":"dataEnd","nativeSrc":"15723:7:19","nodeType":"YulIdentifier","src":"15723:7:19"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nativeSrc":"15668:30:19","nodeType":"YulIdentifier","src":"15668:30:19"},"nativeSrc":"15668:63:19","nodeType":"YulFunctionCall","src":"15668:63:19"},"variableNames":[{"name":"value0","nativeSrc":"15658:6:19","nodeType":"YulIdentifier","src":"15658:6:19"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nativeSrc":"15399:349:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"15445:9:19","nodeType":"YulTypedName","src":"15445:9:19","type":""},{"name":"dataEnd","nativeSrc":"15456:7:19","nodeType":"YulTypedName","src":"15456:7:19","type":""}],"returnVariables":[{"name":"value0","nativeSrc":"15468:6:19","nodeType":"YulTypedName","src":"15468:6:19","type":""}],"src":"15399:349:19"},{"body":{"nativeSrc":"15782:152:19","nodeType":"YulBlock","src":"15782:152:19","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"15799:1:19","nodeType":"YulLiteral","src":"15799:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"15802:77:19","nodeType":"YulLiteral","src":"15802:77:19","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nativeSrc":"15792:6:19","nodeType":"YulIdentifier","src":"15792:6:19"},"nativeSrc":"15792:88:19","nodeType":"YulFunctionCall","src":"15792:88:19"},"nativeSrc":"15792:88:19","nodeType":"YulExpressionStatement","src":"15792:88:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15896:1:19","nodeType":"YulLiteral","src":"15896:1:19","type":"","value":"4"},{"kind":"number","nativeSrc":"15899:4:19","nodeType":"YulLiteral","src":"15899:4:19","type":"","value":"0x12"}],"functionName":{"name":"mstore","nativeSrc":"15889:6:19","nodeType":"YulIdentifier","src":"15889:6:19"},"nativeSrc":"15889:15:19","nodeType":"YulFunctionCall","src":"15889:15:19"},"nativeSrc":"15889:15:19","nodeType":"YulExpressionStatement","src":"15889:15:19"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"15920:1:19","nodeType":"YulLiteral","src":"15920:1:19","type":"","value":"0"},{"kind":"number","nativeSrc":"15923:4:19","nodeType":"YulLiteral","src":"15923:4:19","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"15913:6:19","nodeType":"YulIdentifier","src":"15913:6:19"},"nativeSrc":"15913:15:19","nodeType":"YulFunctionCall","src":"15913:15:19"},"nativeSrc":"15913:15:19","nodeType":"YulExpressionStatement","src":"15913:15:19"}]},"name":"panic_error_0x12","nativeSrc":"15754:180:19","nodeType":"YulFunctionDefinition","src":"15754:180:19"},{"body":{"nativeSrc":"16066:206:19","nodeType":"YulBlock","src":"16066:206:19","statements":[{"nativeSrc":"16076:26:19","nodeType":"YulAssignment","src":"16076:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"16088:9:19","nodeType":"YulIdentifier","src":"16088:9:19"},{"kind":"number","nativeSrc":"16099:2:19","nodeType":"YulLiteral","src":"16099:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16084:3:19","nodeType":"YulIdentifier","src":"16084:3:19"},"nativeSrc":"16084:18:19","nodeType":"YulFunctionCall","src":"16084:18:19"},"variableNames":[{"name":"tail","nativeSrc":"16076:4:19","nodeType":"YulIdentifier","src":"16076:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16156:6:19","nodeType":"YulIdentifier","src":"16156:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"16169:9:19","nodeType":"YulIdentifier","src":"16169:9:19"},{"kind":"number","nativeSrc":"16180:1:19","nodeType":"YulLiteral","src":"16180:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16165:3:19","nodeType":"YulIdentifier","src":"16165:3:19"},"nativeSrc":"16165:17:19","nodeType":"YulFunctionCall","src":"16165:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16112:43:19","nodeType":"YulIdentifier","src":"16112:43:19"},"nativeSrc":"16112:71:19","nodeType":"YulFunctionCall","src":"16112:71:19"},"nativeSrc":"16112:71:19","nodeType":"YulExpressionStatement","src":"16112:71:19"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"16237:6:19","nodeType":"YulIdentifier","src":"16237:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"16250:9:19","nodeType":"YulIdentifier","src":"16250:9:19"},{"kind":"number","nativeSrc":"16261:2:19","nodeType":"YulLiteral","src":"16261:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16246:3:19","nodeType":"YulIdentifier","src":"16246:3:19"},"nativeSrc":"16246:18:19","nodeType":"YulFunctionCall","src":"16246:18:19"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nativeSrc":"16193:43:19","nodeType":"YulIdentifier","src":"16193:43:19"},"nativeSrc":"16193:72:19","nodeType":"YulFunctionCall","src":"16193:72:19"},"nativeSrc":"16193:72:19","nodeType":"YulExpressionStatement","src":"16193:72:19"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nativeSrc":"15940:332:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16030:9:19","nodeType":"YulTypedName","src":"16030:9:19","type":""},{"name":"value1","nativeSrc":"16042:6:19","nodeType":"YulTypedName","src":"16042:6:19","type":""},{"name":"value0","nativeSrc":"16050:6:19","nodeType":"YulTypedName","src":"16050:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16061:4:19","nodeType":"YulTypedName","src":"16061:4:19","type":""}],"src":"15940:332:19"},{"body":{"nativeSrc":"16404:206:19","nodeType":"YulBlock","src":"16404:206:19","statements":[{"nativeSrc":"16414:26:19","nodeType":"YulAssignment","src":"16414:26:19","value":{"arguments":[{"name":"headStart","nativeSrc":"16426:9:19","nodeType":"YulIdentifier","src":"16426:9:19"},{"kind":"number","nativeSrc":"16437:2:19","nodeType":"YulLiteral","src":"16437:2:19","type":"","value":"64"}],"functionName":{"name":"add","nativeSrc":"16422:3:19","nodeType":"YulIdentifier","src":"16422:3:19"},"nativeSrc":"16422:18:19","nodeType":"YulFunctionCall","src":"16422:18:19"},"variableNames":[{"name":"tail","nativeSrc":"16414:4:19","nodeType":"YulIdentifier","src":"16414:4:19"}]},{"expression":{"arguments":[{"name":"value0","nativeSrc":"16494:6:19","nodeType":"YulIdentifier","src":"16494:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"16507:9:19","nodeType":"YulIdentifier","src":"16507:9:19"},{"kind":"number","nativeSrc":"16518:1:19","nodeType":"YulLiteral","src":"16518:1:19","type":"","value":"0"}],"functionName":{"name":"add","nativeSrc":"16503:3:19","nodeType":"YulIdentifier","src":"16503:3:19"},"nativeSrc":"16503:17:19","nodeType":"YulFunctionCall","src":"16503:17:19"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nativeSrc":"16450:43:19","nodeType":"YulIdentifier","src":"16450:43:19"},"nativeSrc":"16450:71:19","nodeType":"YulFunctionCall","src":"16450:71:19"},"nativeSrc":"16450:71:19","nodeType":"YulExpressionStatement","src":"16450:71:19"},{"expression":{"arguments":[{"name":"value1","nativeSrc":"16575:6:19","nodeType":"YulIdentifier","src":"16575:6:19"},{"arguments":[{"name":"headStart","nativeSrc":"16588:9:19","nodeType":"YulIdentifier","src":"16588:9:19"},{"kind":"number","nativeSrc":"16599:2:19","nodeType":"YulLiteral","src":"16599:2:19","type":"","value":"32"}],"functionName":{"name":"add","nativeSrc":"16584:3:19","nodeType":"YulIdentifier","src":"16584:3:19"},"nativeSrc":"16584:18:19","nodeType":"YulFunctionCall","src":"16584:18:19"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nativeSrc":"16531:43:19","nodeType":"YulIdentifier","src":"16531:43:19"},"nativeSrc":"16531:72:19","nodeType":"YulFunctionCall","src":"16531:72:19"},"nativeSrc":"16531:72:19","nodeType":"YulExpressionStatement","src":"16531:72:19"}]},"name":"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed","nativeSrc":"16278:332:19","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nativeSrc":"16368:9:19","nodeType":"YulTypedName","src":"16368:9:19","type":""},{"name":"value1","nativeSrc":"16380:6:19","nodeType":"YulTypedName","src":"16380:6:19","type":""},{"name":"value0","nativeSrc":"16388:6:19","nodeType":"YulTypedName","src":"16388:6:19","type":""}],"returnVariables":[{"name":"tail","nativeSrc":"16399:4:19","nodeType":"YulTypedName","src":"16399:4:19","type":""}],"src":"16278:332:19"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":19,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101375760003560e01c806370a08231116100b8578063a22cb4651161007c578063a22cb46514610372578063b88d4fde1461038e578063c87b56dd146103aa578063d5391393146103da578063d547741f146103f8578063e985e9c51461041457610137565b806370a08231146102a657806391d14854146102d657806395d89b4114610306578063a144819414610324578063a217fddf1461035457610137565b8063248a9ca3116100ff578063248a9ca3146101f25780632f2ff15d1461022257806336568abe1461023e57806342842e0e1461025a5780636352211e1461027657610137565b806301ffc9a71461013c57806306fdde031461016c578063081812fc1461018a578063095ea7b3146101ba57806323b872dd146101d6575b600080fd5b61015660048036038101906101519190611beb565b610444565b6040516101639190611c33565b60405180910390f35b610174610456565b6040516101819190611cde565b60405180910390f35b6101a4600480360381019061019f9190611d36565b6104e8565b6040516101b19190611da4565b60405180910390f35b6101d460048036038101906101cf9190611deb565b610504565b005b6101f060048036038101906101eb9190611e2b565b61051a565b005b61020c60048036038101906102079190611eb4565b61061c565b6040516102199190611ef0565b60405180910390f35b61023c60048036038101906102379190611f0b565b61063c565b005b61025860048036038101906102539190611f0b565b61065e565b005b610274600480360381019061026f9190611e2b565b6106d9565b005b610290600480360381019061028b9190611d36565b6106f9565b60405161029d9190611da4565b60405180910390f35b6102c060048036038101906102bb9190611f4b565b61070b565b6040516102cd9190611f87565b60405180910390f35b6102f060048036038101906102eb9190611f0b565b6107c5565b6040516102fd9190611c33565b60405180910390f35b61030e610830565b60405161031b9190611cde565b60405180910390f35b61033e60048036038101906103399190611deb565b6108c2565b60405161034b9190611f87565b60405180910390f35b61035c6108d7565b6040516103699190611ef0565b60405180910390f35b61038c60048036038101906103879190611fce565b6108de565b005b6103a860048036038101906103a39190612143565b6108f4565b005b6103c460048036038101906103bf9190611d36565b610919565b6040516103d19190611cde565b60405180910390f35b6103e2610982565b6040516103ef9190611ef0565b60405180910390f35b610412600480360381019061040d9190611f0b565b6109a6565b005b61042e600480360381019061042991906121c6565b6109c8565b60405161043b9190611c33565b60405180910390f35b600061044f82610a5c565b9050919050565b60606000805461046590612235565b80601f016020809104026020016040519081016040528092919081815260200182805461049190612235565b80156104de5780601f106104b3576101008083540402835291602001916104de565b820191906000526020600020905b8154815290600101906020018083116104c157829003601f168201915b5050505050905090565b60006104f382610ad6565b506104fd82610b5e565b9050919050565b6105168282610511610b9b565b610ba3565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361058c5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105839190611da4565b60405180910390fd5b60006105a0838361059b610b9b565b610bb5565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610616578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161060d93929190612266565b60405180910390fd5b50505050565b600060066000838152602001908152602001600020600101549050919050565b6106458261061c565b61064e81610dcf565b6106588383610de3565b50505050565b610666610b9b565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146106ca576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106d48282610ed5565b505050565b6106f4838383604051806020016040528060008152506108f4565b505050565b600061070482610ad6565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361077e5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107759190611da4565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006006600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60606001805461083f90612235565b80601f016020809104026020016040519081016040528092919081815260200182805461086b90612235565b80156108b85780601f1061088d576101008083540402835291602001916108b8565b820191906000526020600020905b81548152906001019060200180831161089b57829003601f168201915b5050505050905090565b60006108ce8383610fc8565b81905092915050565b6000801b81565b6108f06108e9610b9b565b8383610fe6565b5050565b6108ff84848461051a565b61091361090a610b9b565b85858585611155565b50505050565b606061092482610ad6565b50600061092f611306565b9050600081511161094f576040518060200160405280600081525061097a565b806109598461131d565b60405160200161096a9291906122d9565b6040516020818303038152906040525b915050919050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6109af8261061c565b6109b881610dcf565b6109c28383610ed5565b50505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610acf5750610ace826113eb565b5b9050919050565b600080610ae2836114cd565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b5557826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610b4c9190611f87565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610bb0838383600161150a565b505050565b600080610bc1846114cd565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c0357610c028184866116cf565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610c9457610c4560008560008061150a565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610d17576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610de081610ddb610b9b565b611793565b50565b6000610def83836107c5565b610eca5760016006600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e67610b9b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050610ecf565b600090505b92915050565b6000610ee183836107c5565b15610fbd5760006006600085815260200190815260200160002060000160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610f5a610b9b565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050610fc2565b600090505b92915050565b610fe28282604051806020016040528060008152506117e4565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361105757816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161104e9190611da4565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111489190611c33565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156112ff578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b81526004016111b49493929190612352565b6020604051808303816000875af19250505080156111f057506040513d601f19601f820116820180604052508101906111ed91906123b3565b60015b611274573d8060008114611220576040519150601f19603f3d011682016040523d82523d6000602084013e611225565b606091505b50600081510361126c57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112639190611da4565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112fd57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112f49190611da4565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b60606000600161132c84611808565b01905060008167ffffffffffffffff81111561134b5761134a612018565b5b6040519080825280601f01601f19166020018201604052801561137d5781602001600182028036833780820191505090505b509050600082602083010190505b6001156113e0578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816113d4576113d36123e0565b5b0494506000850361138b575b819350505050919050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806114b657507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806114c657506114c58261195b565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806115435750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561167757600061155384610ad6565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115be57508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115d157506115cf81846109c8565b155b1561161357826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161160a9190611da4565b60405180910390fd5b811561167557838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116da8383836119c5565b61178e57600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361174f57806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117469190611f87565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161178592919061240f565b60405180910390fd5b505050565b61179d82826107c5565b6117e05780826040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526004016117d7929190612438565b60405180910390fd5b5050565b6117ee8383611a86565b6118036117f9610b9b565b6000858585611155565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611866577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161185c5761185b6123e0565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106118a3576d04ee2d6d415b85acef81000000008381611899576118986123e0565b5b0492506020810190505b662386f26fc1000083106118d257662386f26fc1000083816118c8576118c76123e0565b5b0492506010810190505b6305f5e10083106118fb576305f5e10083816118f1576118f06123e0565b5b0492506008810190505b6127108310611920576127108381611916576119156123e0565b5b0492506004810190505b606483106119435760648381611939576119386123e0565b5b0492506002810190505b600a8310611952576001810190505b80915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611a7d57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611a3e5750611a3d84846109c8565b5b80611a7c57508273ffffffffffffffffffffffffffffffffffffffff16611a6483610b5e565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611af85760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611aef9190611da4565b60405180910390fd5b6000611b0683836000610bb5565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611b7a5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611b719190611da4565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611bc881611b93565b8114611bd357600080fd5b50565b600081359050611be581611bbf565b92915050565b600060208284031215611c0157611c00611b89565b5b6000611c0f84828501611bd6565b91505092915050565b60008115159050919050565b611c2d81611c18565b82525050565b6000602082019050611c486000830184611c24565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611c88578082015181840152602081019050611c6d565b60008484015250505050565b6000601f19601f8301169050919050565b6000611cb082611c4e565b611cba8185611c59565b9350611cca818560208601611c6a565b611cd381611c94565b840191505092915050565b60006020820190508181036000830152611cf88184611ca5565b905092915050565b6000819050919050565b611d1381611d00565b8114611d1e57600080fd5b50565b600081359050611d3081611d0a565b92915050565b600060208284031215611d4c57611d4b611b89565b5b6000611d5a84828501611d21565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d8e82611d63565b9050919050565b611d9e81611d83565b82525050565b6000602082019050611db96000830184611d95565b92915050565b611dc881611d83565b8114611dd357600080fd5b50565b600081359050611de581611dbf565b92915050565b60008060408385031215611e0257611e01611b89565b5b6000611e1085828601611dd6565b9250506020611e2185828601611d21565b9150509250929050565b600080600060608486031215611e4457611e43611b89565b5b6000611e5286828701611dd6565b9350506020611e6386828701611dd6565b9250506040611e7486828701611d21565b9150509250925092565b6000819050919050565b611e9181611e7e565b8114611e9c57600080fd5b50565b600081359050611eae81611e88565b92915050565b600060208284031215611eca57611ec9611b89565b5b6000611ed884828501611e9f565b91505092915050565b611eea81611e7e565b82525050565b6000602082019050611f056000830184611ee1565b92915050565b60008060408385031215611f2257611f21611b89565b5b6000611f3085828601611e9f565b9250506020611f4185828601611dd6565b9150509250929050565b600060208284031215611f6157611f60611b89565b5b6000611f6f84828501611dd6565b91505092915050565b611f8181611d00565b82525050565b6000602082019050611f9c6000830184611f78565b92915050565b611fab81611c18565b8114611fb657600080fd5b50565b600081359050611fc881611fa2565b92915050565b60008060408385031215611fe557611fe4611b89565b5b6000611ff385828601611dd6565b925050602061200485828601611fb9565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61205082611c94565b810181811067ffffffffffffffff8211171561206f5761206e612018565b5b80604052505050565b6000612082611b7f565b905061208e8282612047565b919050565b600067ffffffffffffffff8211156120ae576120ad612018565b5b6120b782611c94565b9050602081019050919050565b82818337600083830152505050565b60006120e66120e184612093565b612078565b90508281526020810184848401111561210257612101612013565b5b61210d8482856120c4565b509392505050565b600082601f83011261212a5761212961200e565b5b813561213a8482602086016120d3565b91505092915050565b6000806000806080858703121561215d5761215c611b89565b5b600061216b87828801611dd6565b945050602061217c87828801611dd6565b935050604061218d87828801611d21565b925050606085013567ffffffffffffffff8111156121ae576121ad611b8e565b5b6121ba87828801612115565b91505092959194509250565b600080604083850312156121dd576121dc611b89565b5b60006121eb85828601611dd6565b92505060206121fc85828601611dd6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061224d57607f821691505b6020821081036122605761225f612206565b5b50919050565b600060608201905061227b6000830186611d95565b6122886020830185611f78565b6122956040830184611d95565b949350505050565b600081905092915050565b60006122b382611c4e565b6122bd818561229d565b93506122cd818560208601611c6a565b80840191505092915050565b60006122e582856122a8565b91506122f182846122a8565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b6000612324826122fd565b61232e8185612308565b935061233e818560208601611c6a565b61234781611c94565b840191505092915050565b60006080820190506123676000830187611d95565b6123746020830186611d95565b6123816040830185611f78565b81810360608301526123938184612319565b905095945050505050565b6000815190506123ad81611bbf565b92915050565b6000602082840312156123c9576123c8611b89565b5b60006123d78482850161239e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506124246000830185611d95565b6124316020830184611f78565b9392505050565b600060408201905061244d6000830185611d95565b61245a6020830184611ee1565b939250505056fea26469706673582212205decdeefa1460b4f3f9c05553572548e8a385180a45c420bb95842462bda795664736f6c63430008190033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x372 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x3AA JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x414 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x306 JUMPI DUP1 PUSH4 0xA1448194 EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x354 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x276 JUMPI PUSH2 0x137 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x16C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BA JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1D6 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x156 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x151 SWAP2 SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x174 PUSH2 0x456 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B1 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x1DEB JUMP JUMPDEST PUSH2 0x504 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x51A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x1EB4 JUMP JUMPDEST PUSH2 0x61C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x63C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x258 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x65E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x274 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x1E2B JUMP JUMPDEST PUSH2 0x6D9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x6F9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0x1F4B JUMP JUMPDEST PUSH2 0x70B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x7C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30E PUSH2 0x830 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1DEB JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x35C PUSH2 0x8D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x369 SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x387 SWAP2 SWAP1 PUSH2 0x1FCE JUMP JUMPDEST PUSH2 0x8DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x2143 JUMP JUMPDEST PUSH2 0x8F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BF SWAP2 SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH2 0x919 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D1 SWAP2 SWAP1 PUSH2 0x1CDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E2 PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1EF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x412 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1F0B JUMP JUMPDEST PUSH2 0x9A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x42E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x429 SWAP2 SWAP1 PUSH2 0x21C6 JUMP JUMPDEST PUSH2 0x9C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43B SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x44F DUP3 PUSH2 0xA5C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x465 SWAP1 PUSH2 0x2235 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x491 SWAP1 PUSH2 0x2235 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4DE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4DE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4C1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F3 DUP3 PUSH2 0xAD6 JUMP JUMPDEST POP PUSH2 0x4FD DUP3 PUSH2 0xB5E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x516 DUP3 DUP3 PUSH2 0x511 PUSH2 0xB9B JUMP JUMPDEST PUSH2 0xBA3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x58C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x583 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x5A0 DUP4 DUP4 PUSH2 0x59B PUSH2 0xB9B JUMP JUMPDEST PUSH2 0xBB5 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x616 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2266 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x645 DUP3 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x64E DUP2 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x658 DUP4 DUP4 PUSH2 0xDE3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x666 PUSH2 0xB9B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6D4 DUP3 DUP3 PUSH2 0xED5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x6F4 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x704 DUP3 PUSH2 0xAD6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x775 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x83F SWAP1 PUSH2 0x2235 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x86B SWAP1 PUSH2 0x2235 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8B8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x88D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8B8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x89B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8CE DUP4 DUP4 PUSH2 0xFC8 JUMP JUMPDEST DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH2 0x8F0 PUSH2 0x8E9 PUSH2 0xB9B JUMP JUMPDEST DUP4 DUP4 PUSH2 0xFE6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x8FF DUP5 DUP5 DUP5 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x913 PUSH2 0x90A PUSH2 0xB9B JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1155 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x924 DUP3 PUSH2 0xAD6 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x92F PUSH2 0x1306 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x94F JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x97A JUMP JUMPDEST DUP1 PUSH2 0x959 DUP5 PUSH2 0x131D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x96A SWAP3 SWAP2 SWAP1 PUSH2 0x22D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x9AF DUP3 PUSH2 0x61C JUMP JUMPDEST PUSH2 0x9B8 DUP2 PUSH2 0xDCF JUMP JUMPDEST PUSH2 0x9C2 DUP4 DUP4 PUSH2 0xED5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xACF JUMPI POP PUSH2 0xACE DUP3 PUSH2 0x13EB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAE2 DUP4 PUSH2 0x14CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB55 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB4C SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xBB0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x150A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xBC1 DUP5 PUSH2 0x14CD JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC03 JUMPI PUSH2 0xC02 DUP2 DUP5 DUP7 PUSH2 0x16CF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC94 JUMPI PUSH2 0xC45 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x150A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xD17 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xDE0 DUP2 PUSH2 0xDDB PUSH2 0xB9B JUMP JUMPDEST PUSH2 0x1793 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEF DUP4 DUP4 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0xECA JUMPI PUSH1 0x1 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE67 PUSH2 0xB9B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xECF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEE1 DUP4 DUP4 PUSH2 0x7C5 JUMP JUMPDEST ISZERO PUSH2 0xFBD JUMPI PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF5A PUSH2 0xB9B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0xFC2 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xFE2 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x17E4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1057 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104E SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1148 SWAP2 SWAP1 PUSH2 0x1C33 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x12FF JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2352 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x11F0 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11ED SWAP2 SWAP1 PUSH2 0x23B3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1274 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1220 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1225 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x126C JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1263 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP3 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x12FD JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F4 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x132C DUP5 PUSH2 0x1808 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x134B JUMPI PUSH2 0x134A PUSH2 0x2018 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x137D JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 DUP4 ADD ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x13E0 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x13D4 JUMPI PUSH2 0x13D3 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x138B JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x14B6 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x14C6 JUMPI POP PUSH2 0x14C5 DUP3 PUSH2 0x195B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1543 JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1677 JUMPI PUSH1 0x0 PUSH2 0x1553 DUP5 PUSH2 0xAD6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15BE JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15D1 JUMPI POP PUSH2 0x15CF DUP2 DUP5 PUSH2 0x9C8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1613 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x160A SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1675 JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16DA DUP4 DUP4 DUP4 PUSH2 0x19C5 JUMP JUMPDEST PUSH2 0x178E JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x174F JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1746 SWAP2 SWAP1 PUSH2 0x1F87 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1785 SWAP3 SWAP2 SWAP1 PUSH2 0x240F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x179D DUP3 DUP3 PUSH2 0x7C5 JUMP JUMPDEST PUSH2 0x17E0 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17D7 SWAP3 SWAP2 SWAP1 PUSH2 0x2438 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x17EE DUP4 DUP4 PUSH2 0x1A86 JUMP JUMPDEST PUSH2 0x1803 PUSH2 0x17F9 PUSH2 0xB9B JUMP JUMPDEST PUSH1 0x0 DUP6 DUP6 DUP6 PUSH2 0x1155 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1866 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x185C JUMPI PUSH2 0x185B PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x18A3 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1899 JUMPI PUSH2 0x1898 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x18D2 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x18C8 JUMPI PUSH2 0x18C7 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x18FB JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x18F1 JUMPI PUSH2 0x18F0 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x1920 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1916 JUMPI PUSH2 0x1915 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x1943 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1939 JUMPI PUSH2 0x1938 PUSH2 0x23E0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x1952 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1A7D JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1A3E JUMPI POP PUSH2 0x1A3D DUP5 DUP5 PUSH2 0x9C8 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1A7C JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A64 DUP4 PUSH2 0xB5E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1AF8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AEF SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B06 DUP4 DUP4 PUSH1 0x0 PUSH2 0xBB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B7A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B71 SWAP2 SWAP1 PUSH2 0x1DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BC8 DUP2 PUSH2 0x1B93 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BE5 DUP2 PUSH2 0x1BBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C01 JUMPI PUSH2 0x1C00 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C0F DUP5 DUP3 DUP6 ADD PUSH2 0x1BD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2D DUP2 PUSH2 0x1C18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C48 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C24 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1C88 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1C6D JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB0 DUP3 PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x1CBA DUP2 DUP6 PUSH2 0x1C59 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CCA DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x1CD3 DUP2 PUSH2 0x1C94 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CF8 DUP2 DUP5 PUSH2 0x1CA5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D13 DUP2 PUSH2 0x1D00 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D1E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D30 DUP2 PUSH2 0x1D0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D4C JUMPI PUSH2 0x1D4B PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D5A DUP5 DUP3 DUP6 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8E DUP3 PUSH2 0x1D63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D9E DUP2 PUSH2 0x1D83 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DB9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D95 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DC8 DUP2 PUSH2 0x1D83 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DE5 DUP2 PUSH2 0x1DBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E02 JUMPI PUSH2 0x1E01 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E10 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E21 DUP6 DUP3 DUP7 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E44 JUMPI PUSH2 0x1E43 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E52 DUP7 DUP3 DUP8 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E63 DUP7 DUP3 DUP8 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E74 DUP7 DUP3 DUP8 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E91 DUP2 PUSH2 0x1E7E JUMP JUMPDEST DUP2 EQ PUSH2 0x1E9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1EAE DUP2 PUSH2 0x1E88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ECA JUMPI PUSH2 0x1EC9 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1ED8 DUP5 DUP3 DUP6 ADD PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EEA DUP2 PUSH2 0x1E7E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F05 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EE1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F22 JUMPI PUSH2 0x1F21 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F30 DUP6 DUP3 DUP7 ADD PUSH2 0x1E9F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F41 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F61 JUMPI PUSH2 0x1F60 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F6F DUP5 DUP3 DUP6 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F81 DUP2 PUSH2 0x1D00 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F9C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FAB DUP2 PUSH2 0x1C18 JUMP JUMPDEST DUP2 EQ PUSH2 0x1FB6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FC8 DUP2 PUSH2 0x1FA2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FE5 JUMPI PUSH2 0x1FE4 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FF3 DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2004 DUP6 DUP3 DUP7 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x2050 DUP3 PUSH2 0x1C94 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x206F JUMPI PUSH2 0x206E PUSH2 0x2018 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2082 PUSH2 0x1B7F JUMP JUMPDEST SWAP1 POP PUSH2 0x208E DUP3 DUP3 PUSH2 0x2047 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x20AE JUMPI PUSH2 0x20AD PUSH2 0x2018 JUMP JUMPDEST JUMPDEST PUSH2 0x20B7 DUP3 PUSH2 0x1C94 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20E6 PUSH2 0x20E1 DUP5 PUSH2 0x2093 JUMP JUMPDEST PUSH2 0x2078 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2102 JUMPI PUSH2 0x2101 PUSH2 0x2013 JUMP JUMPDEST JUMPDEST PUSH2 0x210D DUP5 DUP3 DUP6 PUSH2 0x20C4 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x200E JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x213A DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x20D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x215D JUMPI PUSH2 0x215C PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x216B DUP8 DUP3 DUP9 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x217C DUP8 DUP3 DUP9 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x218D DUP8 DUP3 DUP9 ADD PUSH2 0x1D21 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21AE JUMPI PUSH2 0x21AD PUSH2 0x1B8E JUMP JUMPDEST JUMPDEST PUSH2 0x21BA DUP8 DUP3 DUP9 ADD PUSH2 0x2115 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21DD JUMPI PUSH2 0x21DC PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21EB DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21FC DUP6 DUP3 DUP7 ADD PUSH2 0x1DD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x224D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2260 JUMPI PUSH2 0x225F PUSH2 0x2206 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x227B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x2288 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1F78 JUMP JUMPDEST PUSH2 0x2295 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D95 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B3 DUP3 PUSH2 0x1C4E JUMP JUMPDEST PUSH2 0x22BD DUP2 DUP6 PUSH2 0x229D JUMP JUMPDEST SWAP4 POP PUSH2 0x22CD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C6A JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22E5 DUP3 DUP6 PUSH2 0x22A8 JUMP JUMPDEST SWAP2 POP PUSH2 0x22F1 DUP3 DUP5 PUSH2 0x22A8 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2324 DUP3 PUSH2 0x22FD JUMP JUMPDEST PUSH2 0x232E DUP2 DUP6 PUSH2 0x2308 JUMP JUMPDEST SWAP4 POP PUSH2 0x233E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1C6A JUMP JUMPDEST PUSH2 0x2347 DUP2 PUSH2 0x1C94 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2367 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x2374 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x2381 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1F78 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2393 DUP2 DUP5 PUSH2 0x2319 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x23AD DUP2 PUSH2 0x1BBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C9 JUMPI PUSH2 0x23C8 PUSH2 0x1B89 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x23D7 DUP5 DUP3 DUP6 ADD PUSH2 0x239E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2424 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x2431 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F78 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x244D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D95 JUMP JUMPDEST PUSH2 0x245A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EE1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0xEC 0xDE 0xEF LOG1 CHAINID SIGNEXTEND 0x4F EXTCODEHASH SWAP13 SDIV SSTORE CALLDATALOAD PUSH19 0x548E8A385180A45C420BB95842462BDA795664 PUSH20 0x6F6C634300081900330000000000000000000000 ","sourceMap":"211:545:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;588:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2263:89:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3152:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3852:578;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3786:120:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4202:136;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5304:245;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4464:132:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2103:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1861:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2394:93:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;374:140:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2196:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3487:144:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4630:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2529:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;258:62:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3665:153:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;588:166:17;688:4;711:36;735:11;711:23;:36::i;:::-;704:43;;588:166;;;:::o;2263:89:3:-;2308:13;2340:5;2333:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2263:89;:::o;3299:154::-;3366:7;3385:22;3399:7;3385:13;:22::i;:::-;;3425:21;3438:7;3425:12;:21::i;:::-;3418:28;;3299:154;;;:::o;3152:113::-;3223:35;3232:2;3236:7;3245:12;:10;:12::i;:::-;3223:8;:35::i;:::-;3152:113;;:::o;3852:578::-;3960:1;3946:16;;:2;:16;;;3942:87;;4015:1;3985:33;;;;;;;;;;;:::i;:::-;;;;;;;;3942:87;4247:21;4271:34;4279:2;4283:7;4292:12;:10;:12::i;:::-;4271:7;:34::i;:::-;4247:58;;4336:4;4319:21;;:13;:21;;;4315:109;;4384:4;4390:7;4399:13;4363:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4315:109;3932:498;3852:578;;;:::o;3786:120:0:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;4202:136::-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;5304:245::-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;4464:132:3:-;4550:39;4567:4;4573:2;4577:7;4550:39;;;;;;;;;;;;:16;:39::i;:::-;4464:132;;;:::o;2103:118::-;2166:7;2192:22;2206:7;2192:13;:22::i;:::-;2185:29;;2103:118;;;:::o;1861:208::-;1924:7;1964:1;1947:19;;:5;:19;;;1943:87;;2016:1;1989:30;;;;;;;;;;;:::i;:::-;;;;;;;;1943:87;2046:9;:16;2056:5;2046:16;;;;;;;;;;;;;;;;2039:23;;1861:208;;;:::o;2830:136:0:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;2394:93:3:-;2441:13;2473:7;2466:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2394:93;:::o;374:140:17:-;440:7;459:23;469:2;473:8;459:9;:23::i;:::-;499:8;492:15;;374:140;;;;:::o;2196:49:0:-;2241:4;2196:49;;;:::o;3487:144:3:-;3572:52;3591:12;:10;:12::i;:::-;3605:8;3615;3572:18;:52::i;:::-;3487:144;;:::o;4630:233::-;4743:31;4756:4;4762:2;4766:7;4743:12;:31::i;:::-;4784:72;4818:12;:10;:12::i;:::-;4832:4;4838:2;4842:7;4851:4;4784:33;:72::i;:::-;4630:233;;;;:::o;2529:255::-;2593:13;2618:22;2632:7;2618:13;:22::i;:::-;;2651:21;2675:10;:8;:10::i;:::-;2651:34;;2726:1;2708:7;2702:21;:25;:75;;;;;;;;;;;;;;;;;2744:7;2753:18;:7;:16;:18::i;:::-;2730:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2702:75;2695:82;;;2529:255;;;:::o;258:62:17:-;296:24;258:62;:::o;4618:138:0:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;3665:153:3:-;3753:4;3776:18;:25;3795:5;3776:25;;;;;;;;;;;;;;;:35;3802:8;3776:35;;;;;;;;;;;;;;;;;;;;;;;;;3769:42;;3665:153;;;;:::o;2541:202:0:-;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;15858:241:3:-;15921:7;15940:13;15956:17;15965:7;15956:8;:17::i;:::-;15940:33;;16004:1;15987:19;;:5;:19;;;15983:88;;16052:7;16029:31;;;;;;;;;;;:::i;:::-;;;;;;;;15983:88;16087:5;16080:12;;;15858:241;;;:::o;5609:127::-;5679:7;5705:15;:24;5721:7;5705:24;;;;;;;;;;;;;;;;;;;;;5698:31;;5609:127;;;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;14138:120:3:-;14218:33;14227:2;14231:7;14240:4;14246;14218:8;:33::i;:::-;14138:120;;;:::o;8507:795::-;8593:7;8612:12;8627:17;8636:7;8627:8;:17::i;:::-;8612:32;;8720:1;8704:18;;:4;:18;;;8700:86;;8738:37;8755:4;8761;8767:7;8738:16;:37::i;:::-;8700:86;8846:1;8830:18;;:4;:18;;;8826:256;;8946:48;8963:1;8967:7;8984:1;8988:5;8946:8;:48::i;:::-;9056:1;9037:9;:15;9047:4;9037:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;8826:256;9110:1;9096:16;;:2;:16;;;9092:107;;9173:1;9156:9;:13;9166:2;9156:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9092:107;9228:2;9209:7;:16;9217:7;9209:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9265:7;9261:2;9246:27;;9255:4;9246:27;;;;;;;;;;;;9291:4;9284:11;;;8507:795;;;;;:::o;3175:103:0:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;6708:317::-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;10302:100:3:-;10369:26;10379:2;10383:7;10369:26;;;;;;;;;;;;:9;:26::i;:::-;10302:100;;:::o;15311:312::-;15438:1;15418:22;;:8;:22;;;15414:91;;15485:8;15463:31;;;;;;;;;;;:::i;:::-;;;;;;;;15414:91;15552:8;15514:18;:25;15533:5;15514:25;;;;;;;;;;;;;;;:35;15540:8;15514:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15597:8;15575:41;;15590:5;15575:41;;;15607:8;15575:41;;;;;;:::i;:::-;;;;;;;;15311:312;;;:::o;993:926:7:-;1190:1;1173:2;:14;;;:18;1169:744;;;1227:2;1211:36;;;1248:8;1258:4;1264:7;1273:4;1211:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1207:696;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:1;1568:6;:13;:18;1564:325;;1708:2;1672:39;;;;;;;;;;;:::i;:::-;;;;;;;;1564:325;1841:6;1835:13;1828:4;1820:6;1816:17;1809:40;1207:696;1335:41;;;1325:51;;;:6;:51;;;;1321:182;;1481:2;1445:39;;;;;;;;;;;:::i;:::-;;;;;;;;1321:182;1279:238;1169:744;993:926;;;;;:::o;3026:92:3:-;3077:13;3102:9;;;;;;;;;;;;;;3026:92;:::o;1308:634:10:-;1364:13;1413:14;1450:1;1430:17;1441:5;1430:10;:17::i;:::-;:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1465:41;;1520:11;1618:6;1611:4;1603:6;1599:17;1595:30;1588:37;;1652:247;1659:4;1652:247;;;1683:5;;;;;;;;1787:10;1782:2;1775:5;1771:14;1766:32;1761:3;1753:46;1843:2;1834:11;;;;;;:::i;:::-;;;;;1876:1;1867:5;:10;1652:247;1863:21;1652:247;1919:6;1912:13;;;;;1308:634;;;:::o;1527:300:3:-;1629:4;1679:25;1664:40;;;:11;:40;;;;:104;;;;1735:33;1720:48;;;:11;:48;;;;1664:104;:156;;;;1784:36;1808:11;1784:23;:36::i;:::-;1664:156;1645:175;;1527:300;;;:::o;5378:115::-;5444:7;5470;:16;5478:7;5470:16;;;;;;;;;;;;;;;;;;;;;5463:23;;5378:115;;;:::o;14440:662::-;14600:9;:31;;;;14629:1;14613:18;;:4;:18;;;;14600:31;14596:460;;;14647:13;14663:22;14677:7;14663:13;:22::i;:::-;14647:38;;14829:1;14813:18;;:4;:18;;;;:35;;;;;14844:4;14835:13;;:5;:13;;;;14813:35;:69;;;;;14853:29;14870:5;14877:4;14853:16;:29::i;:::-;14852:30;14813:69;14809:142;;;14931:4;14909:27;;;;;;;;;;;:::i;:::-;;;;;;;;14809:142;14969:9;14965:81;;;15023:7;15019:2;15003:28;;15012:5;15003:28;;;;;;;;;;;;14965:81;14633:423;14596:460;15093:2;15066:15;:24;15082:7;15066:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14440:662;;;;:::o;6751:368::-;6863:38;6877:5;6884:7;6893;6863:13;:38::i;:::-;6858:255;;6938:1;6921:19;;:5;:19;;;6917:186;;6990:7;6967:31;;;;;;;;;;;:::i;:::-;;;;;;;;6917:186;7071:7;7080;7044:44;;;;;;;;;;;;:::i;:::-;;;;;;;;6858:255;6751:368;;;:::o;3408:197:0:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;10623:207:3:-;10717:18;10723:2;10727:7;10717:5;:18::i;:::-;10745:78;10779:12;:10;:12::i;:::-;10801:1;10805:2;10809:7;10818:4;10745:33;:78::i;:::-;10623:207;;;:::o;29154:916:13:-;29207:7;29226:14;29243:1;29226:18;;29291:8;29282:5;:17;29278:103;;29328:8;29319:17;;;;;;:::i;:::-;;;;;29364:2;29354:12;;;;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;;;;:::i;:::-;;;;;29480:2;29470:12;;;;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;;;;:::i;:::-;;;;;29596:2;29586:12;;;;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;;;;:::i;:::-;;;;;29710:1;29700:11;;;;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;;;;:::i;:::-;;;;;29823:1;29813:11;;;;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;;;;:::i;:::-;;;;;29936:1;29926:11;;;;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;;;;29965:66;30057:6;30050:13;;;29154:916;;;:::o;730:146:11:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;6047:272:3:-;6150:4;6204:1;6185:21;;:7;:21;;;;:127;;;;;6232:7;6223:16;;:5;:16;;;:52;;;;6243:32;6260:5;6267:7;6243:16;:32::i;:::-;6223:52;:88;;;;6304:7;6279:32;;:21;6292:7;6279:12;:21::i;:::-;:32;;;6223:88;6185:127;6166:146;;6047:272;;;;;:::o;9624:327::-;9705:1;9691:16;;:2;:16;;;9687:87;;9760:1;9730:33;;;;;;;;;;;:::i;:::-;;;;;;;;9687:87;9783:21;9807:32;9815:2;9819:7;9836:1;9807:7;:32::i;:::-;9783:56;;9878:1;9853:27;;:13;:27;;;9849:96;;9931:1;9903:31;;;;;;;;;;;:::i;:::-;;;;;;;;9849:96;9677:274;9624:327;;:::o;7:75:19:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:248::-;1880:1;1890:113;1904:6;1901:1;1898:13;1890:113;;;1989:1;1984:3;1980:11;1974:18;1970:1;1965:3;1961:11;1954:39;1926:2;1923:1;1919:10;1914:15;;1890:113;;;2037:1;2028:6;2023:3;2019:16;2012:27;1860:186;1798:248;;;:::o;2052:102::-;2093:6;2144:2;2140:7;2135:2;2128:5;2124:14;2120:28;2110:38;;2052:102;;;:::o;2160:377::-;2248:3;2276:39;2309:5;2276:39;:::i;:::-;2331:71;2395:6;2390:3;2331:71;:::i;:::-;2324:78;;2411:65;2469:6;2464:3;2457:4;2450:5;2446:16;2411:65;:::i;:::-;2501:29;2523:6;2501:29;:::i;:::-;2496:3;2492:39;2485:46;;2252:285;2160:377;;;;:::o;2543:313::-;2656:4;2694:2;2683:9;2679:18;2671:26;;2743:9;2737:4;2733:20;2729:1;2718:9;2714:17;2707:47;2771:78;2844:4;2835:6;2771:78;:::i;:::-;2763:86;;2543:313;;;;:::o;2862:77::-;2899:7;2928:5;2917:16;;2862:77;;;:::o;2945:122::-;3018:24;3036:5;3018:24;:::i;:::-;3011:5;3008:35;2998:63;;3057:1;3054;3047:12;2998:63;2945:122;:::o;3073:139::-;3119:5;3157:6;3144:20;3135:29;;3173:33;3200:5;3173:33;:::i;:::-;3073:139;;;;:::o;3218:329::-;3277:6;3326:2;3314:9;3305:7;3301:23;3297:32;3294:119;;;3332:79;;:::i;:::-;3294:119;3452:1;3477:53;3522:7;3513:6;3502:9;3498:22;3477:53;:::i;:::-;3467:63;;3423:117;3218:329;;;;:::o;3553:126::-;3590:7;3630:42;3623:5;3619:54;3608:65;;3553:126;;;:::o;3685:96::-;3722:7;3751:24;3769:5;3751:24;:::i;:::-;3740:35;;3685:96;;;:::o;3787:118::-;3874:24;3892:5;3874:24;:::i;:::-;3869:3;3862:37;3787:118;;:::o;3911:222::-;4004:4;4042:2;4031:9;4027:18;4019:26;;4055:71;4123:1;4112:9;4108:17;4099:6;4055:71;:::i;:::-;3911:222;;;;:::o;4139:122::-;4212:24;4230:5;4212:24;:::i;:::-;4205:5;4202:35;4192:63;;4251:1;4248;4241:12;4192:63;4139:122;:::o;4267:139::-;4313:5;4351:6;4338:20;4329:29;;4367:33;4394:5;4367:33;:::i;:::-;4267:139;;;;:::o;4412:474::-;4480:6;4488;4537:2;4525:9;4516:7;4512:23;4508:32;4505:119;;;4543:79;;:::i;:::-;4505:119;4663:1;4688:53;4733:7;4724:6;4713:9;4709:22;4688:53;:::i;:::-;4678:63;;4634:117;4790:2;4816:53;4861:7;4852:6;4841:9;4837:22;4816:53;:::i;:::-;4806:63;;4761:118;4412:474;;;;;:::o;4892:619::-;4969:6;4977;4985;5034:2;5022:9;5013:7;5009:23;5005:32;5002:119;;;5040:79;;:::i;:::-;5002:119;5160:1;5185:53;5230:7;5221:6;5210:9;5206:22;5185:53;:::i;:::-;5175:63;;5131:117;5287:2;5313:53;5358:7;5349:6;5338:9;5334:22;5313:53;:::i;:::-;5303:63;;5258:118;5415:2;5441:53;5486:7;5477:6;5466:9;5462:22;5441:53;:::i;:::-;5431:63;;5386:118;4892:619;;;;;:::o;5517:77::-;5554:7;5583:5;5572:16;;5517:77;;;:::o;5600:122::-;5673:24;5691:5;5673:24;:::i;:::-;5666:5;5663:35;5653:63;;5712:1;5709;5702:12;5653:63;5600:122;:::o;5728:139::-;5774:5;5812:6;5799:20;5790:29;;5828:33;5855:5;5828:33;:::i;:::-;5728:139;;;;:::o;5873:329::-;5932:6;5981:2;5969:9;5960:7;5956:23;5952:32;5949:119;;;5987:79;;:::i;:::-;5949:119;6107:1;6132:53;6177:7;6168:6;6157:9;6153:22;6132:53;:::i;:::-;6122:63;;6078:117;5873:329;;;;:::o;6208:118::-;6295:24;6313:5;6295:24;:::i;:::-;6290:3;6283:37;6208:118;;:::o;6332:222::-;6425:4;6463:2;6452:9;6448:18;6440:26;;6476:71;6544:1;6533:9;6529:17;6520:6;6476:71;:::i;:::-;6332:222;;;;:::o;6560:474::-;6628:6;6636;6685:2;6673:9;6664:7;6660:23;6656:32;6653:119;;;6691:79;;:::i;:::-;6653:119;6811:1;6836:53;6881:7;6872:6;6861:9;6857:22;6836:53;:::i;:::-;6826:63;;6782:117;6938:2;6964:53;7009:7;7000:6;6989:9;6985:22;6964:53;:::i;:::-;6954:63;;6909:118;6560:474;;;;;:::o;7040:329::-;7099:6;7148:2;7136:9;7127:7;7123:23;7119:32;7116:119;;;7154:79;;:::i;:::-;7116:119;7274:1;7299:53;7344:7;7335:6;7324:9;7320:22;7299:53;:::i;:::-;7289:63;;7245:117;7040:329;;;;:::o;7375:118::-;7462:24;7480:5;7462:24;:::i;:::-;7457:3;7450:37;7375:118;;:::o;7499:222::-;7592:4;7630:2;7619:9;7615:18;7607:26;;7643:71;7711:1;7700:9;7696:17;7687:6;7643:71;:::i;:::-;7499:222;;;;:::o;7727:116::-;7797:21;7812:5;7797:21;:::i;:::-;7790:5;7787:32;7777:60;;7833:1;7830;7823:12;7777:60;7727:116;:::o;7849:133::-;7892:5;7930:6;7917:20;7908:29;;7946:30;7970:5;7946:30;:::i;:::-;7849:133;;;;:::o;7988:468::-;8053:6;8061;8110:2;8098:9;8089:7;8085:23;8081:32;8078:119;;;8116:79;;:::i;:::-;8078:119;8236:1;8261:53;8306:7;8297:6;8286:9;8282:22;8261:53;:::i;:::-;8251:63;;8207:117;8363:2;8389:50;8431:7;8422:6;8411:9;8407:22;8389:50;:::i;:::-;8379:60;;8334:115;7988:468;;;;;:::o;8462:117::-;8571:1;8568;8561:12;8585:117;8694:1;8691;8684:12;8708:180;8756:77;8753:1;8746:88;8853:4;8850:1;8843:15;8877:4;8874:1;8867:15;8894:281;8977:27;8999:4;8977:27;:::i;:::-;8969:6;8965:40;9107:6;9095:10;9092:22;9071:18;9059:10;9056:34;9053:62;9050:88;;;9118:18;;:::i;:::-;9050:88;9158:10;9154:2;9147:22;8937:238;8894:281;;:::o;9181:129::-;9215:6;9242:20;;:::i;:::-;9232:30;;9271:33;9299:4;9291:6;9271:33;:::i;:::-;9181:129;;;:::o;9316:307::-;9377:4;9467:18;9459:6;9456:30;9453:56;;;9489:18;;:::i;:::-;9453:56;9527:29;9549:6;9527:29;:::i;:::-;9519:37;;9611:4;9605;9601:15;9593:23;;9316:307;;;:::o;9629:148::-;9727:6;9722:3;9717;9704:30;9768:1;9759:6;9754:3;9750:16;9743:27;9629:148;;;:::o;9783:423::-;9860:5;9885:65;9901:48;9942:6;9901:48;:::i;:::-;9885:65;:::i;:::-;9876:74;;9973:6;9966:5;9959:21;10011:4;10004:5;10000:16;10049:3;10040:6;10035:3;10031:16;10028:25;10025:112;;;10056:79;;:::i;:::-;10025:112;10146:54;10193:6;10188:3;10183;10146:54;:::i;:::-;9866:340;9783:423;;;;;:::o;10225:338::-;10280:5;10329:3;10322:4;10314:6;10310:17;10306:27;10296:122;;10337:79;;:::i;:::-;10296:122;10454:6;10441:20;10479:78;10553:3;10545:6;10538:4;10530:6;10526:17;10479:78;:::i;:::-;10470:87;;10286:277;10225:338;;;;:::o;10569:943::-;10664:6;10672;10680;10688;10737:3;10725:9;10716:7;10712:23;10708:33;10705:120;;;10744:79;;:::i;:::-;10705:120;10864:1;10889:53;10934:7;10925:6;10914:9;10910:22;10889:53;:::i;:::-;10879:63;;10835:117;10991:2;11017:53;11062:7;11053:6;11042:9;11038:22;11017:53;:::i;:::-;11007:63;;10962:118;11119:2;11145:53;11190:7;11181:6;11170:9;11166:22;11145:53;:::i;:::-;11135:63;;11090:118;11275:2;11264:9;11260:18;11247:32;11306:18;11298:6;11295:30;11292:117;;;11328:79;;:::i;:::-;11292:117;11433:62;11487:7;11478:6;11467:9;11463:22;11433:62;:::i;:::-;11423:72;;11218:287;10569:943;;;;;;;:::o;11518:474::-;11586:6;11594;11643:2;11631:9;11622:7;11618:23;11614:32;11611:119;;;11649:79;;:::i;:::-;11611:119;11769:1;11794:53;11839:7;11830:6;11819:9;11815:22;11794:53;:::i;:::-;11784:63;;11740:117;11896:2;11922:53;11967:7;11958:6;11947:9;11943:22;11922:53;:::i;:::-;11912:63;;11867:118;11518:474;;;;;:::o;11998:180::-;12046:77;12043:1;12036:88;12143:4;12140:1;12133:15;12167:4;12164:1;12157:15;12184:320;12228:6;12265:1;12259:4;12255:12;12245:22;;12312:1;12306:4;12302:12;12333:18;12323:81;;12389:4;12381:6;12377:17;12367:27;;12323:81;12451:2;12443:6;12440:14;12420:18;12417:38;12414:84;;12470:18;;:::i;:::-;12414:84;12235:269;12184:320;;;:::o;12510:442::-;12659:4;12697:2;12686:9;12682:18;12674:26;;12710:71;12778:1;12767:9;12763:17;12754:6;12710:71;:::i;:::-;12791:72;12859:2;12848:9;12844:18;12835:6;12791:72;:::i;:::-;12873;12941:2;12930:9;12926:18;12917:6;12873:72;:::i;:::-;12510:442;;;;;;:::o;12958:148::-;13060:11;13097:3;13082:18;;12958:148;;;;:::o;13112:390::-;13218:3;13246:39;13279:5;13246:39;:::i;:::-;13301:89;13383:6;13378:3;13301:89;:::i;:::-;13294:96;;13399:65;13457:6;13452:3;13445:4;13438:5;13434:16;13399:65;:::i;:::-;13489:6;13484:3;13480:16;13473:23;;13222:280;13112:390;;;;:::o;13508:435::-;13688:3;13710:95;13801:3;13792:6;13710:95;:::i;:::-;13703:102;;13822:95;13913:3;13904:6;13822:95;:::i;:::-;13815:102;;13934:3;13927:10;;13508:435;;;;;:::o;13949:98::-;14000:6;14034:5;14028:12;14018:22;;13949:98;;;:::o;14053:168::-;14136:11;14170:6;14165:3;14158:19;14210:4;14205:3;14201:14;14186:29;;14053:168;;;;:::o;14227:373::-;14313:3;14341:38;14373:5;14341:38;:::i;:::-;14395:70;14458:6;14453:3;14395:70;:::i;:::-;14388:77;;14474:65;14532:6;14527:3;14520:4;14513:5;14509:16;14474:65;:::i;:::-;14564:29;14586:6;14564:29;:::i;:::-;14559:3;14555:39;14548:46;;14317:283;14227:373;;;;:::o;14606:640::-;14801:4;14839:3;14828:9;14824:19;14816:27;;14853:71;14921:1;14910:9;14906:17;14897:6;14853:71;:::i;:::-;14934:72;15002:2;14991:9;14987:18;14978:6;14934:72;:::i;:::-;15016;15084:2;15073:9;15069:18;15060:6;15016:72;:::i;:::-;15135:9;15129:4;15125:20;15120:2;15109:9;15105:18;15098:48;15163:76;15234:4;15225:6;15163:76;:::i;:::-;15155:84;;14606:640;;;;;;;:::o;15252:141::-;15308:5;15339:6;15333:13;15324:22;;15355:32;15381:5;15355:32;:::i;:::-;15252:141;;;;:::o;15399:349::-;15468:6;15517:2;15505:9;15496:7;15492:23;15488:32;15485:119;;;15523:79;;:::i;:::-;15485:119;15643:1;15668:63;15723:7;15714:6;15703:9;15699:22;15668:63;:::i;:::-;15658:73;;15614:127;15399:349;;;;:::o;15754:180::-;15802:77;15799:1;15792:88;15899:4;15896:1;15889:15;15923:4;15920:1;15913:15;15940:332;16061:4;16099:2;16088:9;16084:18;16076:26;;16112:71;16180:1;16169:9;16165:17;16156:6;16112:71;:::i;:::-;16193:72;16261:2;16250:9;16246:18;16237:6;16193:72;:::i;:::-;15940:332;;;;;:::o;16278:::-;16399:4;16437:2;16426:9;16422:18;16414:26;;16450:71;16518:1;16507:9;16503:17;16494:6;16450:71;:::i;:::-;16531:72;16599:2;16588:9;16584:18;16575:6;16531:72;:::i;:::-;16278:332;;;;;:::o"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","safeMint(address,uint256)":"a1448194","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DAONFT.sol\":\"DAONFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x6ead281d4569c26b3dee7313aefff24add906f3600b57d8aef1255a17d6b34e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aec0f9c9f14f829353663e1946bf0ea00a1771ff6ddb4f7cbe14893397b4b55c\",\"dweb:/ipfs/QmVMR3SdijdM2BpL9Yp3u7Riaxqgs1FnZ1Rfg2CMjKGtVS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xf78f05f3b8c9f75570e85300d7b4600d7f6f6a198449273f31d44c1641adb46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e28b872613b45e0e801d4995aa4380be2531147bfe2d85c1d6275f1de514fba3\",\"dweb:/ipfs/QmeeFcfShHYaS3BdgVj78nxR28ZaVUwbvr66ud8bT6kzw9\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x88cd5e3bee2e8c36b8d9058fbcaa81ad5704281b25634122234b55ea853d8055\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc7e7ab5b8ea36c15027ab04221b05d1c970f47a53e9fd47ead8ca665d49c7e\",\"dweb:/ipfs/Qmeeph7fsDyfRr8vb2L8KcDEmKPb224TAayMvgqgGAnqpL\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xf46268c37522320bb2119a5a394bc5c739a95c0c574c8d08e8c643f4d06e5c76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://517e4b295f35b9947c72ad7379a6089439ece7bb6f4a2ea0a159da13046c039e\",\"dweb:/ipfs/QmZXzkSfLUbvujig3zVbpDHykpHhqLpvQtdiN3B5j4TA3u\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xc2dfdc8fbc8fdb142575c90568e237b809a1feaccff23e32d00131887a08dc36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbc1d283ee77da43d61661b5ba1adeb427d6a6224335494a9a857dce41d9f1d6\",\"dweb:/ipfs/QmTnA35z7XzkxFSRUqB6CGVH1nhmvajwnDNfA5PiKmYuCi\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xad148d59f05165f9217d0a9e1ac8f772abb02ea6aaad8a756315c532bf79f9f4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15e3599867c2182f5831e9268b274b2ef2047825837df6b4d81c9e89254b093e\",\"dweb:/ipfs/QmZbL7XAYr5RmaNaooPgZRmcDXaudfsYQfYD9y5iAECvpS\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/DAONFT.sol\":{\"keccak256\":\"0x779716f2095764918345304a599dc2d1f0c5d93723aa01702aa1670ae6ab180d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1cad7b4b3d5e61c4c416da174dd643dad2e4366792e10888008d40f4fdf331a9\",\"dweb:/ipfs/QmP4isNRJoaE5Q9NeeZE549XfhZnSEGbpcBiMvQNvZeoV8\"]}},\"version\":1}"}},"interface/IERC7432.sol":{"IERC7432":{"abi":[{"inputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"recipientOf","outputs":[{"internalType":"address","name":"recipient_","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_tokenAddress","type":"address"},{"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"grantRole(address,uint256,address)":"16e744bd","ownerOf(address,uint256)":"1f29d2dc","recipientOf(address,uint256)":"7d5aea4f","revokeRole(address,uint256)":"0912ed77"}},"metadata":"{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"recipientOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"recipient_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-7432 Note: the ERC-165 identifier for this interface is 0xd00ca5cf.\",\"kind\":\"dev\",\"methods\":{\"grantRole(address,uint256,address)\":{\"details\":\"Reverts if sender is not approved or the NFT owner.\"},\"ownerOf(address,uint256)\":{\"params\":{\"_tokenAddress\":\"The token address.\",\"_tokenId\":\"The token identifier.\"},\"returns\":{\"owner_\":\"The owner of the token.\"}},\"recipientOf(address,uint256)\":{\"params\":{\"_tokenAddress\":\"The token address.\",\"_tokenId\":\"The token identifier.\"},\"returns\":{\"recipient_\":\"The user that received the role.\"}},\"revokeRole(address,uint256)\":{\"details\":\"Reverts if sender is not approved or the original owner.\",\"params\":{\"_tokenAddress\":\"The token address.\",\"_tokenId\":\"The token identifier.\"}}},\"title\":\"ERC-7432 Non-Fungible Token Roles\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"grantRole(address,uint256,address)\":{\"notice\":\"Grants a role to a user.\"},\"ownerOf(address,uint256)\":{\"notice\":\"Retrieves the original owner of the NFT.\"},\"recipientOf(address,uint256)\":{\"notice\":\"Retrieves the recipient of an NFT role.\"},\"revokeRole(address,uint256)\":{\"notice\":\"Revokes a role from a user.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interface/IERC7432.sol\":\"IERC7432\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"interface/IERC7432.sol\":{\"keccak256\":\"0xd081f4e5afbb8f6472c1030fd74e5ec4ba059020e394b6175053fa6673c5ea35\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9776b98c239dcb9ea4fd70d42e49bc15d67d5004cb2db21aa71b47a38d870ff8\",\"dweb:/ipfs/QmZW4RYZEdS3YGViHeARX72kyKDfUB3mTxU7aFwiZvaVm6\"]}},\"version\":1}"}}}}}