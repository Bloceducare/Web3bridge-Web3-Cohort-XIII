{
  "id": "c98c88ee53d21fcab4a8326d1d0981cd",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "contracts/EIP712Helper.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\";\nimport \"../interfaces/ISwapRouter.sol\";\nimport \"./swapPermit.sol\";\n\n\ncontract EIP712Helper {\n        // EIP-712 Domain separator components\n        \n        string public constant EIP712_DOMAIN_NAME = \"Dai Stablecoin\";\n        string public constant EIP712_DOMAIN_VERSION = \"1\";\n        \n        // EIP-712 Type hashes\n        bytes32 public constant DOMAIN_TYPEHASH = keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n        \n        bytes32 public constant PERMIT_TYPEHASH = keccak256(\n            \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\"\n        );\n        \n        function buildDomainSeparator(address tokenAddress, uint256 chainId) \n            public \n            pure \n            returns (bytes32) \n        {\n            return keccak256(abi.encode(\n                DOMAIN_TYPEHASH,\n                keccak256(bytes(EIP712_DOMAIN_NAME)),\n                keccak256(bytes(EIP712_DOMAIN_VERSION)),\n                chainId,\n                tokenAddress\n            ));\n        }\n        \n        \n        function buildPermitHash(\n            address owner,\n            address spender,\n            uint256 value,\n            uint256 nonce,\n            uint256 deadline\n        ) public pure returns (bytes32) {\n            return keccak256(abi.encode(\n                PERMIT_TYPEHASH,\n                owner,\n                spender,\n                value,\n                nonce,\n                deadline\n            ));\n        }\n        \n        \n        function buildEIP712Hash(bytes32 domainSeparator, bytes32 permitHash) \n            public \n            pure \n            returns (bytes32) \n        {\n            return keccak256(abi.encodePacked(\n                \"\\x19\\x01\",\n                domainSeparator,\n                permitHash\n            ));\n        }\n}"
      },
      "contracts/swapPermit.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\";\nimport \"../interfaces/ISwapRouter.sol\";\nimport \"./EIP712Helper.sol\";\n\n\ncontract SwapPermit {\n    EIP712Helper public eip712Helper;\n\n    address public constant UNISWAP_ROUTER = 0xE592427A0AEce92De3Edee1F18E0157C05861564;\n    \n\n    error DeadlineExpired();\n    error InsufficientAmount();\n    error SwapFailed();\n    error InvalidSignature();\n    \n    \n    event SwapExecuted(\n        address indexed user,\n        address indexed tokenIn,\n        address indexed tokenOut,\n        uint256 amountIn,\n        uint256 amountOut\n    );\n    \n    \n    function swapWithPermit(\n        address owner,\n        address tokenIn,\n        uint256 permitAmount,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s,\n        uint256 swapAmountIn,\n        uint256 swapAmountOutMin,\n        address tokenOut,\n        address recipient,\n        uint256 swapDeadline,\n        uint24 fee\n    ) external returns (uint256 amountOut) {\n            \n            if (block.timestamp > deadline) {\n                revert DeadlineExpired();\n            }\n            \n            \n            if (swapAmountIn > permitAmount) {\n                revert InsufficientAmount();\n            }\n            \n            IERC20Permit token = IERC20Permit(tokenIn);\n            \n            \n            try token.permit(owner, address(this), permitAmount, deadline, v, r, s) {\n            } catch {\n                revert InvalidSignature();\n            }\n            \n            \n            IERC20(tokenIn).transferFrom(owner, address(this), swapAmountIn);\n            \n            \n            IERC20(tokenIn).approve(UNISWAP_ROUTER, swapAmountIn);\n            \n            \n            ISwapRouter.ExactInputSingleParams memory params = ISwapRouter.ExactInputSingleParams({\n                tokenIn: tokenIn,\n                tokenOut: tokenOut,\n                fee: fee,\n                recipient: recipient,\n                deadline: swapDeadline,\n                amountIn: swapAmountIn,\n                amountOutMinimum: swapAmountOutMin,\n                sqrtPriceLimitX96: 0 \n            });\n            \n            \n            amountOut = ISwapRouter(UNISWAP_ROUTER).exactInputSingle(params);\n            \n            \n            emit SwapExecuted(owner, tokenIn, tokenOut, swapAmountIn, amountOut);\n            \n            return amountOut;\n    }\n        \n    function swapDAIToUSDC(\n            address owner,\n            uint256 amountIn,\n            uint256 deadline,\n            uint8 v,\n            bytes32 r,\n            bytes32 s,\n            address recipient\n    ) external returns (uint256 amountOut) {\n            address DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;\n            address USDC = 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48;\n            uint24 fee = 3000; \n            \n            return this.swapWithPermit(\n                owner,\n                DAI,\n                amountIn,\n                deadline,\n                v,\n                r,\n                s,\n                amountIn,\n                0, \n                USDC,\n                recipient,\n                deadline,\n                fee\n            );\n    }\n}"
      },
      "contracts/swapPermit2.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\n\nimport \"../interfaces/IERC20Permit.sol\";\nimport \"../interfaces/ISignatureTransfer.sol\";\nimport \"../interfaces/ISwapRouter.sol\";\n\ncontract swapPermit {\n\n    address public constant SWAP_ROUTER = 0xE592427A0AEce92De3Edee1F18E0157C05861564;\n    \n    address public constant PERMIT2 = 0x000000000022D473030F116dDEE9F6B43aC78BA3;\n    \n    uint24 public constant POOL_FEE = 3000;\n\n\n    error FailedSignature();\n    error InsufficientFund();\n    error SwapFailed();\n    error DeadlineExpired();\n\n\n    event SwapDone(\n        address indexed user,\n        address tokenIn,\n        uint256 amountIn,\n        address tokenOut,\n        uint256 amountOut\n    );\n\n    \n    struct SwapWitness {\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 amountOutMinimum;\n    }\n\n    \n    bytes32 public constant SWAP_WITNESS_TYPEHASH =\n        keccak256(\"SwapWitness(address tokenOut,uint24 fee,address recipient,uint256 amountOutMinimum)\");\n\n    \n    string public constant WITNESS_TYPE_STRING =\n        \"SwapWitness witness)SwapWitness(address tokenOut,uint24 fee,address recipient,uint256 amountOutMinimum)TokenPermissions(address token,uint256 amount)\";\n\n    \n    function swapWithPermit(\n        address owner,\n        ISignatureTransfer.PermitTransferFrom memory permit,\n        address recipient,\n        uint256 amountOutMinimum,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external returns (uint256 amountOut) {\n        \n        if (block.timestamp > deadline) {\n            revert DeadlineExpired();\n        }\n\n        \n        if (permit.permitted.amount == 0) {\n            revert InsufficientFund();\n        }\n\n        \n        SwapWitness memory witnessData = SwapWitness({\n            tokenOut: recipient == address(this) ? permit.permitted.token : recipient,\n            fee: POOL_FEE,\n            recipient: recipient,\n            amountOutMinimum: amountOutMinimum\n        });\n        bytes32 witness = keccak256(abi.encode(SWAP_WITNESS_TYPEHASH, witnessData));\n\n    \n        try\n            ISignatureTransfer(PERMIT2).permitWitnessTransferFrom(\n                permit,\n                ISignatureTransfer.SignatureTransferDetails({\n                    to: address(this),\n                    requestedAmount: permit.permitted.amount\n                }),\n                owner,\n                witness,\n                WITNESS_TYPE_STRING,\n                bytes(abi.encodePacked(r, s, v))\n            )\n        {\n        } catch {\n            revert FailedSignature();\n        }\n\n\n        if (!IERC20Permit(permit.permitted.token).approve(SWAP_ROUTER, permit.permitted.amount)) {\n            revert SwapFailed();\n        }\n\n\n        try\n            ISwapRouter(SWAP_ROUTER).exactInputSingle(\n                ISwapRouter.ExactInputSingleParams({\n                    tokenIn: permit.permitted.token,\n                    tokenOut: witnessData.tokenOut,\n                    fee: POOL_FEE,\n                    recipient: recipient,\n                    deadline: deadline,\n                    amountIn: permit.permitted.amount,\n                    amountOutMinimum: amountOutMinimum,\n                    sqrtPriceLimitX96: 0\n                })\n            )\n        returns (uint256 _amountOut) {\n            amountOut = _amountOut;\n            emit SwapDone(\n                owner,\n                permit.permitted.token,\n                permit.permitted.amount,\n                witnessData.tokenOut,\n                amountOut\n            );\n        } catch {\n            revert SwapFailed();\n        }\n\n        return amountOut;\n    }\n}"
      },
      "interfaces/IERC20Permit.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\n\ninterface IERC20Permit {\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    function nonces(address owner) external view returns (uint256);\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n}"
      },
      "interfaces/ISignatureTransfer.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\n\ninterface ISignatureTransfer {\n    struct PermitTransferFrom {\n        TokenPermissions permitted;\n        uint256 nonce;\n        uint256 deadline;\n    }\n\n    struct TokenPermissions {\n        address token;\n        uint256 amount;\n    }\n\n    struct SignatureTransferDetails {\n        address to;\n        uint256 requestedAmount;\n    }\n\n    function permitWitnessTransferFrom(\n        PermitTransferFrom memory permit,\n        SignatureTransferDetails calldata transferDetails,\n        address owner,\n        bytes32 witness,\n        string calldata witnessTypeString,\n        bytes calldata signature\n    ) external;\n}"
      },
      "interfaces/ISwapRouter.sol": {
        "content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.28;\n\ninterface ISwapRouter {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n        \n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n}\n\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "viaIR": true,
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              77
            ]
          },
          "id": 78,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:25:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "133:71:0",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 77,
              "linearizedBaseContracts": [
                77
              ],
              "name": "IERC20",
              "nameLocation": "215:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "228:158:0",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 11,
                  "name": "Transfer",
                  "nameLocation": "397:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 10,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 5,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "422:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "406:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 4,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 7,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "444:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "428:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 6,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 9,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "456:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 11,
                        "src": "448:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 8,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "405:57:0"
                  },
                  "src": "391:72:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 12,
                    "nodeType": "StructuredDocumentation",
                    "src": "469:148:0",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 20,
                  "name": "Approval",
                  "nameLocation": "628:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 19,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "653:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "637:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "637:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 16,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "676:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "660:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 18,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "693:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 20,
                        "src": "685:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 17,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "636:63:0"
                  },
                  "src": "622:78:0"
                },
                {
                  "documentation": {
                    "id": 21,
                    "nodeType": "StructuredDocumentation",
                    "src": "706:65:0",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 26,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "785:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:2:0"
                  },
                  "returnParameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 24,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "822:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:9:0"
                  },
                  "scope": 77,
                  "src": "776:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 27,
                    "nodeType": "StructuredDocumentation",
                    "src": "837:71:0",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 34,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "922:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 30,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "940:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "932:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "931:17:0"
                  },
                  "returnParameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 34,
                        "src": "972:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "971:9:0"
                  },
                  "scope": 77,
                  "src": "913:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 35,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:213:0",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 44,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1214:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 40,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 37,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1231:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "1223:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 36,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1243:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "1235:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1235:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1222:27:0"
                  },
                  "returnParameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 42,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 44,
                        "src": "1268:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 41,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1268:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1267:6:0"
                  },
                  "scope": 77,
                  "src": "1205:69:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 45,
                    "nodeType": "StructuredDocumentation",
                    "src": "1280:264:0",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 54,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1558:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 50,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1576:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "1568:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1568:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1591:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "1583:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1567:32:0"
                  },
                  "returnParameters": {
                    "id": 53,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 52,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 54,
                        "src": "1623:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 51,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1622:9:0"
                  },
                  "scope": 77,
                  "src": "1549:83:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 55,
                    "nodeType": "StructuredDocumentation",
                    "src": "1638:667:0",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 64,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2319:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 57,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2335:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 64,
                        "src": "2327:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 56,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 59,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2352:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 64,
                        "src": "2344:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2344:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2326:32:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 64,
                        "src": "2377:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2377:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2376:6:0"
                  },
                  "scope": 77,
                  "src": "2310:73:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 65,
                    "nodeType": "StructuredDocumentation",
                    "src": "2389:297:0",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 76,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2700:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 72,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2721:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2713:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2713:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 69,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2735:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2727:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 68,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2727:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2747:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2739:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 70,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2712:41:0"
                  },
                  "returnParameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 74,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2772:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2772:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2771:6:0"
                  },
                  "scope": 77,
                  "src": "2691:87:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 78,
              "src": "205:2575:0",
              "usedErrors": [],
              "usedEvents": [
                11,
                20
              ]
            }
          ],
          "src": "106:2675:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
          "exportedSymbols": {
            "IERC20Permit": [
              113
            ]
          },
          "id": 114,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 79,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".16"
              ],
              "nodeType": "PragmaDirective",
              "src": "123:25:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Permit",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 80,
                "nodeType": "StructuredDocumentation",
                "src": "150:1965:1",
                "text": " @dev Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[ERC-2612].\n Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
              },
              "fullyImplemented": false,
              "id": 113,
              "linearizedBaseContracts": [
                113
              ],
              "name": "IERC20Permit",
              "nameLocation": "2126:12:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "2145:850:1",
                    "text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
                  },
                  "functionSelector": "d505accf",
                  "id": 98,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "3009:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 96,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3033:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "3025:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3025:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 85,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3056:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "3048:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 84,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3048:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 87,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3081:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "3073:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 86,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3073:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 89,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "3104:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "3096:16:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 88,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3096:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 91,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "3128:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "3122:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 90,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3122:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 93,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "3147:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "3139:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 92,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3139:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 95,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "3166:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 98,
                        "src": "3158:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 94,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3158:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3015:158:1"
                  },
                  "returnParameters": {
                    "id": 97,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3182:0:1"
                  },
                  "scope": 113,
                  "src": "3000:183:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "3189:294:1",
                    "text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
                  },
                  "functionSelector": "7ecebe00",
                  "id": 106,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonces",
                  "nameLocation": "3497:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3512:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "3504:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3504:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3503:15:1"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 104,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 106,
                        "src": "3542:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 103,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3542:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3541:9:1"
                  },
                  "scope": 113,
                  "src": "3488:63:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 107,
                    "nodeType": "StructuredDocumentation",
                    "src": "3557:128:1",
                    "text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
                  },
                  "functionSelector": "3644e515",
                  "id": 112,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nameLocation": "3752:16:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 108,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3768:2:1"
                  },
                  "returnParameters": {
                    "id": 111,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 110,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "3794:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 109,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3794:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3793:9:1"
                  },
                  "scope": 113,
                  "src": "3743:60:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 114,
              "src": "2116:1689:1",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "123:3683:1"
        },
        "id": 1
      },
      "contracts/EIP712Helper.sol": {
        "ast": {
          "absolutePath": "contracts/EIP712Helper.sol",
          "exportedSymbols": {
            "EIP712Helper": [
              214
            ],
            "IERC20": [
              77
            ],
            "IERC20Permit": [
              113
            ],
            "ISwapRouter": [
              820
            ],
            "SwapPermit": [
              429
            ]
          },
          "id": 215,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 115,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:2"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 116,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 215,
              "sourceUnit": 78,
              "src": "65:56:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
              "id": 117,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 215,
              "sourceUnit": 114,
              "src": "122:73:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "interfaces/ISwapRouter.sol",
              "file": "../interfaces/ISwapRouter.sol",
              "id": 118,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 215,
              "sourceUnit": 821,
              "src": "196:39:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/swapPermit.sol",
              "file": "./swapPermit.sol",
              "id": 119,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 215,
              "sourceUnit": 430,
              "src": "236:26:2",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "EIP712Helper",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 214,
              "linearizedBaseContracts": [
                214
              ],
              "name": "EIP712Helper",
              "nameLocation": "274:12:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "fd070296",
                  "id": 122,
                  "mutability": "constant",
                  "name": "EIP712_DOMAIN_NAME",
                  "nameLocation": "376:18:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "353:60:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "44616920537461626c65636f696e",
                    "id": 121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "397:16:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_0b1461ddc0c1d5ded79a1db0f74dae949050a7c0b28728c724b24958c27a328b",
                      "typeString": "literal_string \"Dai Stablecoin\""
                    },
                    "value": "Dai Stablecoin"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "5cc33321",
                  "id": 125,
                  "mutability": "constant",
                  "name": "EIP712_DOMAIN_VERSION",
                  "nameLocation": "446:21:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "423:50:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "470:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                      "typeString": "literal_string \"1\""
                    },
                    "value": "1"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "20606b70",
                  "id": 130,
                  "mutability": "constant",
                  "name": "DOMAIN_TYPEHASH",
                  "nameLocation": "547:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "523:159:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "523:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "588:84:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                          "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                        },
                        "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                          "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                        }
                      ],
                      "id": 127,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "565:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "565:117:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "30adf81f",
                  "id": 135,
                  "mutability": "constant",
                  "name": "PERMIT_TYPEHASH",
                  "nameLocation": "725:15:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 214,
                  "src": "701:159:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529",
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "766:84:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                          "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                        },
                        "value": "Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9",
                          "typeString": "literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""
                        }
                      ],
                      "id": 132,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "743:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "743:117:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "1026:266:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 147,
                                  "name": "DOMAIN_TYPEHASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 130,
                                  "src": "1085:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 151,
                                          "name": "EIP712_DOMAIN_NAME",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 122,
                                          "src": "1134:18:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 150,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1128:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 149,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1128:5:2",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 152,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1128:25:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 148,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "1118:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 153,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1118:36:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 157,
                                          "name": "EIP712_DOMAIN_VERSION",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 125,
                                          "src": "1188:21:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        ],
                                        "id": 156,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1182:5:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 155,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1182:5:2",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 158,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1182:28:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 154,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "1172:9:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 159,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1172:39:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 160,
                                  "name": "chainId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 139,
                                  "src": "1229:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 161,
                                  "name": "tokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 137,
                                  "src": "1254:12:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 145,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1057:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1061:6:2",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "1057:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1057:223:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 144,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1047:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1047:234:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 143,
                        "id": 164,
                        "nodeType": "Return",
                        "src": "1040:241:2"
                      }
                    ]
                  },
                  "functionSelector": "a3a406d2",
                  "id": 166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "buildDomainSeparator",
                  "nameLocation": "888:20:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 137,
                        "mutability": "mutable",
                        "name": "tokenAddress",
                        "nameLocation": "917:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "909:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 136,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "909:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 139,
                        "mutability": "mutable",
                        "name": "chainId",
                        "nameLocation": "939:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "931:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 138,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "908:39:2"
                  },
                  "returnParameters": {
                    "id": 143,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 142,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "1008:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 141,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1008:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1007:9:2"
                  },
                  "scope": 214,
                  "src": "879:413:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 193,
                    "nodeType": "Block",
                    "src": "1524:220:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 184,
                                  "name": "PERMIT_TYPEHASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 135,
                                  "src": "1583:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 185,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 168,
                                  "src": "1616:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 186,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 170,
                                  "src": "1639:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 187,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 172,
                                  "src": "1664:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 188,
                                  "name": "nonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 174,
                                  "src": "1687:5:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 189,
                                  "name": "deadline",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 176,
                                  "src": "1710:8:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 182,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1555:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1559:6:2",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "1555:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 190,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1555:177:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 181,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1545:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1545:188:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 180,
                        "id": 192,
                        "nodeType": "Return",
                        "src": "1538:195:2"
                      }
                    ]
                  },
                  "functionSelector": "10cde363",
                  "id": 194,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "buildPermitHash",
                  "nameLocation": "1328:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 168,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1365:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 194,
                        "src": "1357:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 167,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1357:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 170,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1392:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 194,
                        "src": "1384:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 169,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1384:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1421:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 194,
                        "src": "1413:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1413:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 174,
                        "mutability": "mutable",
                        "name": "nonce",
                        "nameLocation": "1448:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 194,
                        "src": "1440:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 173,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1440:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 176,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1475:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 194,
                        "src": "1467:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 175,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1467:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1343:150:2"
                  },
                  "returnParameters": {
                    "id": 180,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 179,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 194,
                        "src": "1515:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 178,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1515:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1514:9:2"
                  },
                  "scope": 214,
                  "src": "1319:425:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 212,
                    "nodeType": "Block",
                    "src": "1919:162:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "1901",
                                  "id": 206,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1984:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string hex\"1901\""
                                  },
                                  "value": "\u0019\u0001"
                                },
                                {
                                  "id": 207,
                                  "name": "domainSeparator",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 196,
                                  "src": "2012:15:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 208,
                                  "name": "permitHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 198,
                                  "src": "2045:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                    "typeString": "literal_string hex\"1901\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 204,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "1950:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "1954:12:2",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "1950:16:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 209,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1950:119:2",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 203,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "1940:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 210,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1940:130:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 202,
                        "id": 211,
                        "nodeType": "Return",
                        "src": "1933:137:2"
                      }
                    ]
                  },
                  "functionSelector": "3b98dff9",
                  "id": 213,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "buildEIP712Hash",
                  "nameLocation": "1780:15:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 199,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 196,
                        "mutability": "mutable",
                        "name": "domainSeparator",
                        "nameLocation": "1804:15:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "1796:23:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 195,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1796:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 198,
                        "mutability": "mutable",
                        "name": "permitHash",
                        "nameLocation": "1829:10:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "1821:18:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 197,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1821:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1795:45:2"
                  },
                  "returnParameters": {
                    "id": 202,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 201,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 213,
                        "src": "1901:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 200,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1901:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1900:9:2"
                  },
                  "scope": 214,
                  "src": "1771:310:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 215,
              "src": "265:1818:2",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "39:2044:2"
        },
        "id": 2
      },
      "contracts/swapPermit.sol": {
        "ast": {
          "absolutePath": "contracts/swapPermit.sol",
          "exportedSymbols": {
            "EIP712Helper": [
              214
            ],
            "IERC20": [
              77
            ],
            "IERC20Permit": [
              113
            ],
            "ISwapRouter": [
              820
            ],
            "SwapPermit": [
              429
            ]
          },
          "id": 430,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 216,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 217,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 430,
              "sourceUnit": 78,
              "src": "65:56:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
              "id": 218,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 430,
              "sourceUnit": 114,
              "src": "122:73:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "interfaces/ISwapRouter.sol",
              "file": "../interfaces/ISwapRouter.sol",
              "id": 219,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 430,
              "sourceUnit": 821,
              "src": "196:39:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/EIP712Helper.sol",
              "file": "./EIP712Helper.sol",
              "id": 220,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 430,
              "sourceUnit": 215,
              "src": "236:28:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SwapPermit",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 429,
              "linearizedBaseContracts": [
                429
              ],
              "name": "SwapPermit",
              "nameLocation": "276:10:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "c69060da",
                  "id": 223,
                  "mutability": "mutable",
                  "name": "eip712Helper",
                  "nameLocation": "313:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "293:32:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_EIP712Helper_$214",
                    "typeString": "contract EIP712Helper"
                  },
                  "typeName": {
                    "id": 222,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 221,
                      "name": "EIP712Helper",
                      "nameLocations": [
                        "293:12:3"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 214,
                      "src": "293:12:3"
                    },
                    "referencedDeclaration": 214,
                    "src": "293:12:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_EIP712Helper_$214",
                      "typeString": "contract EIP712Helper"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d8264920",
                  "id": 226,
                  "mutability": "constant",
                  "name": "UNISWAP_ROUTER",
                  "nameLocation": "356:14:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 429,
                  "src": "332:83:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
                    "id": 225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "373:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
                  },
                  "visibility": "public"
                },
                {
                  "errorSelector": "1ab7da6b",
                  "id": 228,
                  "name": "DeadlineExpired",
                  "nameLocation": "433:15:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 227,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "448:2:3"
                  },
                  "src": "427:24:3"
                },
                {
                  "errorSelector": "5945ea56",
                  "id": 230,
                  "name": "InsufficientAmount",
                  "nameLocation": "462:18:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 229,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "480:2:3"
                  },
                  "src": "456:27:3"
                },
                {
                  "errorSelector": "81ceff30",
                  "id": 232,
                  "name": "SwapFailed",
                  "nameLocation": "494:10:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 231,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "504:2:3"
                  },
                  "src": "488:19:3"
                },
                {
                  "errorSelector": "8baa579f",
                  "id": 234,
                  "name": "InvalidSignature",
                  "nameLocation": "518:16:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 233,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "534:2:3"
                  },
                  "src": "512:25:3"
                },
                {
                  "anonymous": false,
                  "eventSelector": "764f0dc063c06f32d89a3f3af80c0db4be8a090901f589a478b447e0a51f09f1",
                  "id": 246,
                  "name": "SwapExecuted",
                  "nameLocation": "558:12:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 236,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "596:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "580:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 235,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "580:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 238,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "626:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "610:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 237,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "610:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 240,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "659:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "643:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "643:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 242,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "685:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "677:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 241,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "677:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 244,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "711:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "703:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 243,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "703:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "570:156:3"
                  },
                  "src": "552:175:3"
                },
                {
                  "body": {
                    "id": 378,
                    "nodeType": "Block",
                    "src": "1135:1412:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 277,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "1166:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 278,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1172:9:3",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1166:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 279,
                            "name": "deadline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 254,
                            "src": "1184:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1166:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 285,
                        "nodeType": "IfStatement",
                        "src": "1162:89:3",
                        "trueBody": {
                          "id": 284,
                          "nodeType": "Block",
                          "src": "1194:57:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 281,
                                  "name": "DeadlineExpired",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 228,
                                  "src": "1219:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1219:17:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 283,
                              "nodeType": "RevertStatement",
                              "src": "1212:24:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 288,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 286,
                            "name": "swapAmountIn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 262,
                            "src": "1294:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 287,
                            "name": "permitAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 252,
                            "src": "1309:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1294:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 293,
                        "nodeType": "IfStatement",
                        "src": "1290:93:3",
                        "trueBody": {
                          "id": 292,
                          "nodeType": "Block",
                          "src": "1323:60:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 289,
                                  "name": "InsufficientAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 230,
                                  "src": "1348:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 290,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1348:20:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 291,
                              "nodeType": "RevertStatement",
                              "src": "1341:27:3"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          296
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 296,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "1422:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 378,
                            "src": "1409:18:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Permit_$113",
                              "typeString": "contract IERC20Permit"
                            },
                            "typeName": {
                              "id": 295,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 294,
                                "name": "IERC20Permit",
                                "nameLocations": [
                                  "1409:12:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 113,
                                "src": "1409:12:3"
                              },
                              "referencedDeclaration": 113,
                              "src": "1409:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Permit_$113",
                                "typeString": "contract IERC20Permit"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 300,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 298,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 250,
                              "src": "1443:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 297,
                            "name": "IERC20Permit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 113,
                            "src": "1430:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$113_$",
                              "typeString": "type(contract IERC20Permit)"
                            }
                          },
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1430:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Permit_$113",
                            "typeString": "contract IERC20Permit"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1409:42:3"
                      },
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 314,
                              "nodeType": "Block",
                              "src": "1563:15:3",
                              "statements": []
                            },
                            "errorName": "",
                            "id": 315,
                            "nodeType": "TryCatchClause",
                            "src": "1563:15:3"
                          },
                          {
                            "block": {
                              "id": 319,
                              "nodeType": "Block",
                              "src": "1585:58:3",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 316,
                                      "name": "InvalidSignature",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 234,
                                      "src": "1610:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                        "typeString": "function () pure returns (error)"
                                      }
                                    },
                                    "id": 317,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1610:18:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 318,
                                  "nodeType": "RevertStatement",
                                  "src": "1603:25:3"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 320,
                            "nodeType": "TryCatchClause",
                            "src": "1579:64:3"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 303,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "1508:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 306,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1523:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SwapPermit_$429",
                                    "typeString": "contract SwapPermit"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SwapPermit_$429",
                                    "typeString": "contract SwapPermit"
                                  }
                                ],
                                "id": 305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1515:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 304,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1515:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1515:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 308,
                              "name": "permitAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 252,
                              "src": "1530:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 309,
                              "name": "deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 254,
                              "src": "1544:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 310,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 256,
                              "src": "1554:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 311,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 258,
                              "src": "1557:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 312,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 260,
                              "src": "1560:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 301,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 296,
                              "src": "1495:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20Permit_$113",
                                "typeString": "contract IERC20Permit"
                              }
                            },
                            "id": 302,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1501:6:3",
                            "memberName": "permit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 98,
                            "src": "1495:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                            }
                          },
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1495:67:3",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 321,
                        "nodeType": "TryStatement",
                        "src": "1491:152:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 326,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "1711:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 329,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1726:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SwapPermit_$429",
                                    "typeString": "contract SwapPermit"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SwapPermit_$429",
                                    "typeString": "contract SwapPermit"
                                  }
                                ],
                                "id": 328,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1718:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 327,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1718:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1718:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 331,
                              "name": "swapAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 262,
                              "src": "1733:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 323,
                                  "name": "tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 250,
                                  "src": "1689:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 322,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77,
                                "src": "1682:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1682:15:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 325,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1698:12:3",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76,
                            "src": "1682:28:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1682:64:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 333,
                        "nodeType": "ExpressionStatement",
                        "src": "1682:64:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 338,
                              "name": "UNISWAP_ROUTER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 226,
                              "src": "1810:14:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 339,
                              "name": "swapAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 262,
                              "src": "1826:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 335,
                                  "name": "tokenIn",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 250,
                                  "src": "1793:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 334,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77,
                                "src": "1786:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1786:15:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1802:7:3",
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64,
                            "src": "1786:23:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1786:53:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 341,
                        "nodeType": "ExpressionStatement",
                        "src": "1786:53:3"
                      },
                      {
                        "assignments": [
                          346
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 346,
                            "mutability": "mutable",
                            "name": "params",
                            "nameLocation": "1921:6:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 378,
                            "src": "1879:48:3",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExactInputSingleParams_$811_memory_ptr",
                              "typeString": "struct ISwapRouter.ExactInputSingleParams"
                            },
                            "typeName": {
                              "id": 345,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 344,
                                "name": "ISwapRouter.ExactInputSingleParams",
                                "nameLocations": [
                                  "1879:11:3",
                                  "1891:22:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 811,
                                "src": "1879:34:3"
                              },
                              "referencedDeclaration": 811,
                              "src": "1879:34:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactInputSingleParams_$811_storage_ptr",
                                "typeString": "struct ISwapRouter.ExactInputSingleParams"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 358,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 349,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 250,
                              "src": "1992:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 350,
                              "name": "tokenOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "2027:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 351,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 272,
                              "src": "2058:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            },
                            {
                              "id": 352,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 268,
                              "src": "2090:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 353,
                              "name": "swapDeadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 270,
                              "src": "2127:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 354,
                              "name": "swapAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 262,
                              "src": "2167:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 355,
                              "name": "swapAmountOutMin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 264,
                              "src": "2215:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2268:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 347,
                              "name": "ISwapRouter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 820,
                              "src": "1930:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$820_$",
                                "typeString": "type(contract ISwapRouter)"
                              }
                            },
                            "id": 348,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1942:22:3",
                            "memberName": "ExactInputSingleParams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 811,
                            "src": "1930:34:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$811_storage_ptr_$",
                              "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                            }
                          },
                          "id": 357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "1983:7:3",
                            "2017:8:3",
                            "2053:3:3",
                            "2079:9:3",
                            "2117:8:3",
                            "2157:8:3",
                            "2197:16:3",
                            "2249:17:3"
                          ],
                          "names": [
                            "tokenIn",
                            "tokenOut",
                            "fee",
                            "recipient",
                            "deadline",
                            "amountIn",
                            "amountOutMinimum",
                            "sqrtPriceLimitX96"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "1930:355:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$811_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1879:406:3"
                      },
                      {
                        "expression": {
                          "id": 366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 359,
                            "name": "amountOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 275,
                            "src": "2325:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 364,
                                "name": "params",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 346,
                                "src": "2382:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExactInputSingleParams_$811_memory_ptr",
                                  "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_ExactInputSingleParams_$811_memory_ptr",
                                  "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 361,
                                    "name": "UNISWAP_ROUTER",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 226,
                                    "src": "2349:14:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 360,
                                  "name": "ISwapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "2337:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$820_$",
                                    "typeString": "type(contract ISwapRouter)"
                                  }
                                },
                                "id": 362,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2337:27:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ISwapRouter_$820",
                                  "typeString": "contract ISwapRouter"
                                }
                              },
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2365:16:3",
                              "memberName": "exactInputSingle",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 819,
                              "src": "2337:44:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$811_memory_ptr_$returns$_t_uint256_$",
                                "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                              }
                            },
                            "id": 365,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2337:52:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2325:64:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 367,
                        "nodeType": "ExpressionStatement",
                        "src": "2325:64:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 369,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 248,
                              "src": "2447:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 370,
                              "name": "tokenIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 250,
                              "src": "2454:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 371,
                              "name": "tokenOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "2463:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 372,
                              "name": "swapAmountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 262,
                              "src": "2473:12:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 373,
                              "name": "amountOut",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 275,
                              "src": "2487:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 368,
                            "name": "SwapExecuted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 246,
                            "src": "2434:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,address,uint256,uint256)"
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2434:63:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 375,
                        "nodeType": "EmitStatement",
                        "src": "2429:68:3"
                      },
                      {
                        "expression": {
                          "id": 376,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "2531:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 276,
                        "id": 377,
                        "nodeType": "Return",
                        "src": "2524:16:3"
                      }
                    ]
                  },
                  "functionSelector": "04afe81f",
                  "id": 379,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapWithPermit",
                  "nameLocation": "751:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 273,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 248,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "783:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "775:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 247,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "775:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 250,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "806:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "798:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 249,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "798:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 252,
                        "mutability": "mutable",
                        "name": "permitAmount",
                        "nameLocation": "831:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "823:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 251,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "823:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 254,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "861:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "853:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 253,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "853:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "885:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "879:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "879:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 258,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "904:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "896:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "896:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 260,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "923:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "915:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 259,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "915:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 262,
                        "mutability": "mutable",
                        "name": "swapAmountIn",
                        "nameLocation": "942:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "934:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 261,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "934:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "swapAmountOutMin",
                        "nameLocation": "972:16:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "964:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "964:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 266,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "1006:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "998:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "998:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 268,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "1032:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "1024:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 267,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1024:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 270,
                        "mutability": "mutable",
                        "name": "swapDeadline",
                        "nameLocation": "1059:12:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "1051:20:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 269,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1051:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 272,
                        "mutability": "mutable",
                        "name": "fee",
                        "nameLocation": "1088:3:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "1081:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        "typeName": {
                          "id": 271,
                          "name": "uint24",
                          "nodeType": "ElementaryTypeName",
                          "src": "1081:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint24",
                            "typeString": "uint24"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "765:332:3"
                  },
                  "returnParameters": {
                    "id": 276,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 275,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "1124:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 379,
                        "src": "1116:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 274,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1116:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1115:19:3"
                  },
                  "scope": 429,
                  "src": "742:1805:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 427,
                    "nodeType": "Block",
                    "src": "2812:542:3",
                    "statements": [
                      {
                        "assignments": [
                          399
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 399,
                            "mutability": "mutable",
                            "name": "DAI",
                            "nameLocation": "2834:3:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 427,
                            "src": "2826:11:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 398,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2826:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 401,
                        "initialValue": {
                          "hexValue": "307836423137353437344538393039344334344461393862393534456564654143343935323731643046",
                          "id": 400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2840:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x6B175474E89094C44Da98b954EedeAC495271d0F"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2826:56:3"
                      },
                      {
                        "assignments": [
                          403
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 403,
                            "mutability": "mutable",
                            "name": "USDC",
                            "nameLocation": "2904:4:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 427,
                            "src": "2896:12:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 402,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2896:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 405,
                        "initialValue": {
                          "hexValue": "307841306238363939316336323138623336633164313944346132653945623063453336303665423438",
                          "id": 404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2911:42:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2896:57:3"
                      },
                      {
                        "assignments": [
                          407
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 407,
                            "mutability": "mutable",
                            "name": "fee",
                            "nameLocation": "2974:3:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 427,
                            "src": "2967:10:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint24",
                              "typeString": "uint24"
                            },
                            "typeName": {
                              "id": 406,
                              "name": "uint24",
                              "nodeType": "ElementaryTypeName",
                              "src": "2967:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 409,
                        "initialValue": {
                          "hexValue": "33303030",
                          "id": 408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2980:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3000_by_1",
                            "typeString": "int_const 3000"
                          },
                          "value": "3000"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2967:17:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 412,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 381,
                              "src": "3056:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 413,
                              "name": "DAI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 399,
                              "src": "3079:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 414,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 383,
                              "src": "3100:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 415,
                              "name": "deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 385,
                              "src": "3126:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 416,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 387,
                              "src": "3152:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 417,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 389,
                              "src": "3171:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 418,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 391,
                              "src": "3190:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 419,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 383,
                              "src": "3209:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 420,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3235:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "id": 421,
                              "name": "USDC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 403,
                              "src": "3255:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 422,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 393,
                              "src": "3277:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 423,
                              "name": "deadline",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 385,
                              "src": "3304:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 424,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 407,
                              "src": "3330:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            ],
                            "expression": {
                              "id": 410,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3019:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_SwapPermit_$429",
                                "typeString": "contract SwapPermit"
                              }
                            },
                            "id": 411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3024:14:3",
                            "memberName": "swapWithPermit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 379,
                            "src": "3019:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint24_$returns$_t_uint256_$",
                              "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32,uint256,uint256,address,address,uint256,uint24) external returns (uint256)"
                            }
                          },
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3019:328:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 397,
                        "id": 426,
                        "nodeType": "Return",
                        "src": "3012:335:3"
                      }
                    ]
                  },
                  "functionSelector": "04e82dda",
                  "id": 428,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapDAIToUSDC",
                  "nameLocation": "2570:13:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 381,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2605:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 428,
                        "src": "2597:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 380,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2597:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 383,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "2632:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 428,
                        "src": "2624:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 382,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2624:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 385,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "2662:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 428,
                        "src": "2654:16:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 384,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2654:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 387,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "2690:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 428,
                        "src": "2684:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 386,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2684:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 389,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "2713:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 428,
                        "src": "2705:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 388,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2705:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 391,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "2736:1:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 428,
                        "src": "2728:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 390,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2728:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2759:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 428,
                        "src": "2751:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2751:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2583:191:3"
                  },
                  "returnParameters": {
                    "id": 397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "2801:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 428,
                        "src": "2793:17:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2793:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2792:19:3"
                  },
                  "scope": 429,
                  "src": "2561:793:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 430,
              "src": "267:3089:3",
              "usedErrors": [
                228,
                230,
                232,
                234
              ],
              "usedEvents": [
                246
              ]
            }
          ],
          "src": "39:3317:3"
        },
        "id": 3
      },
      "contracts/swapPermit2.sol": {
        "ast": {
          "absolutePath": "contracts/swapPermit2.sol",
          "exportedSymbols": {
            "IERC20Permit": [
              754
            ],
            "ISignatureTransfer": [
              792
            ],
            "ISwapRouter": [
              820
            ],
            "swapPermit": [
              657
            ]
          },
          "id": 658,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 431,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:4"
            },
            {
              "absolutePath": "interfaces/IERC20Permit.sol",
              "file": "../interfaces/IERC20Permit.sol",
              "id": 432,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 658,
              "sourceUnit": 755,
              "src": "65:40:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "interfaces/ISignatureTransfer.sol",
              "file": "../interfaces/ISignatureTransfer.sol",
              "id": 433,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 658,
              "sourceUnit": 793,
              "src": "106:46:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "interfaces/ISwapRouter.sol",
              "file": "../interfaces/ISwapRouter.sol",
              "id": 434,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 658,
              "sourceUnit": 821,
              "src": "153:39:4",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "swapPermit",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 657,
              "linearizedBaseContracts": [
                657
              ],
              "name": "swapPermit",
              "nameLocation": "203:10:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "c6005893",
                  "id": 437,
                  "mutability": "constant",
                  "name": "SWAP_ROUTER",
                  "nameLocation": "245:11:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "221:80:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "221:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
                    "id": 436,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "259:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "6afdd850",
                  "id": 440,
                  "mutability": "constant",
                  "name": "PERMIT2",
                  "nameLocation": "336:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "312:76:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "312:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "hexValue": "307830303030303030303030323244343733303330463131366444454539463642343361433738424133",
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "346:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "value": "0x000000000022D473030F116dDEE9F6B43aC78BA3"
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "dd1b9c4a",
                  "id": 443,
                  "mutability": "constant",
                  "name": "POOL_FEE",
                  "nameLocation": "422:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "399:38:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint24",
                    "typeString": "uint24"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "uint24",
                    "nodeType": "ElementaryTypeName",
                    "src": "399:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint24",
                      "typeString": "uint24"
                    }
                  },
                  "value": {
                    "hexValue": "33303030",
                    "id": 442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "433:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3000_by_1",
                      "typeString": "int_const 3000"
                    },
                    "value": "3000"
                  },
                  "visibility": "public"
                },
                {
                  "errorSelector": "b1ceb2e8",
                  "id": 445,
                  "name": "FailedSignature",
                  "nameLocation": "451:15:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "466:2:4"
                  },
                  "src": "445:24:4"
                },
                {
                  "errorSelector": "d44b3c62",
                  "id": 447,
                  "name": "InsufficientFund",
                  "nameLocation": "480:16:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 446,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "496:2:4"
                  },
                  "src": "474:25:4"
                },
                {
                  "errorSelector": "81ceff30",
                  "id": 449,
                  "name": "SwapFailed",
                  "nameLocation": "510:10:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 448,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "520:2:4"
                  },
                  "src": "504:19:4"
                },
                {
                  "errorSelector": "1ab7da6b",
                  "id": 451,
                  "name": "DeadlineExpired",
                  "nameLocation": "534:15:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 450,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "549:2:4"
                  },
                  "src": "528:24:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "83246e14d7c48054cd6e296526137915acc65174820cf05490d19f8090c0089a",
                  "id": 463,
                  "name": "SwapDone",
                  "nameLocation": "565:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 462,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "599:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 463,
                        "src": "583:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "583:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokenIn",
                        "nameLocation": "621:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 463,
                        "src": "613:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "613:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 457,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountIn",
                        "nameLocation": "646:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 463,
                        "src": "638:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 456,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "638:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 459,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "tokenOut",
                        "nameLocation": "672:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 463,
                        "src": "664:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 458,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "664:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 461,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "698:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 463,
                        "src": "690:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 460,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "690:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "573:140:4"
                  },
                  "src": "559:155:4"
                },
                {
                  "canonicalName": "swapPermit.SwapWitness",
                  "id": 472,
                  "members": [
                    {
                      "constant": false,
                      "id": 465,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "762:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 472,
                      "src": "754:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 464,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "754:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 467,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "787:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 472,
                      "src": "780:10:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 466,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "780:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 469,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "808:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 472,
                      "src": "800:17:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 468,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "800:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 471,
                      "mutability": "mutable",
                      "name": "amountOutMinimum",
                      "nameLocation": "835:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 472,
                      "src": "827:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 470,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "827:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "SwapWitness",
                  "nameLocation": "732:11:4",
                  "nodeType": "StructDefinition",
                  "scope": 657,
                  "src": "725:133:4",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "07a45b06",
                  "id": 477,
                  "mutability": "constant",
                  "name": "SWAP_WITNESS_TYPEHASH",
                  "nameLocation": "893:21:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "869:152:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "869:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "537761705769746e657373286164647265737320746f6b656e4f75742c75696e743234206665652c6164647265737320726563697069656e742c75696e7432353620616d6f756e744f75744d696e696d756d29",
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "935:85:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_336f2af0a798b15b2079358586beb4bba15d1d2cde480c696dafc27f30e1b577",
                          "typeString": "literal_string \"SwapWitness(address tokenOut,uint24 fee,address recipient,uint256 amountOutMinimum)\""
                        },
                        "value": "SwapWitness(address tokenOut,uint24 fee,address recipient,uint256 amountOutMinimum)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_336f2af0a798b15b2079358586beb4bba15d1d2cde480c696dafc27f30e1b577",
                          "typeString": "literal_string \"SwapWitness(address tokenOut,uint24 fee,address recipient,uint256 amountOutMinimum)\""
                        }
                      ],
                      "id": 474,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "925:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:96:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "156e2152",
                  "id": 480,
                  "mutability": "constant",
                  "name": "WITNESS_TYPE_STRING",
                  "nameLocation": "1056:19:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 657,
                  "src": "1033:204:4",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": {
                    "hexValue": "537761705769746e657373207769746e65737329537761705769746e657373286164647265737320746f6b656e4f75742c75696e743234206665652c6164647265737320726563697069656e742c75696e7432353620616d6f756e744f75744d696e696d756d29546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e7429",
                    "id": 479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1086:151:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_7079ddfdc59d22b558648e60fd7f4cd636aa78db38d1e54fb679027acfc894bd",
                      "typeString": "literal_string \"SwapWitness witness)SwapWitness(address tokenOut,uint24 fee,address recipient,uint256 amountOutMinimum)TokenPermissions(address token,uint256 amount)\""
                    },
                    "value": "SwapWitness witness)SwapWitness(address tokenOut,uint24 fee,address recipient,uint256 amountOutMinimum)TokenPermissions(address token,uint256 amount)"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 655,
                    "nodeType": "Block",
                    "src": "1542:2127:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 502,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "1565:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1571:9:4",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "1565:15:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 504,
                            "name": "deadline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 491,
                            "src": "1583:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1565:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 510,
                        "nodeType": "IfStatement",
                        "src": "1561:81:4",
                        "trueBody": {
                          "id": 509,
                          "nodeType": "Block",
                          "src": "1593:49:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 506,
                                  "name": "DeadlineExpired",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 451,
                                  "src": "1614:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 507,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1614:17:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 508,
                              "nodeType": "RevertStatement",
                              "src": "1607:24:4"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 511,
                                "name": "permit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 485,
                                "src": "1665:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PermitTransferFrom_$764_memory_ptr",
                                  "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                                }
                              },
                              "id": 512,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1672:9:4",
                              "memberName": "permitted",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 759,
                              "src": "1665:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TokenPermissions_$769_memory_ptr",
                                "typeString": "struct ISignatureTransfer.TokenPermissions memory"
                              }
                            },
                            "id": 513,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1682:6:4",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 768,
                            "src": "1665:23:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 514,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1692:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1665:28:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 520,
                        "nodeType": "IfStatement",
                        "src": "1661:84:4",
                        "trueBody": {
                          "id": 519,
                          "nodeType": "Block",
                          "src": "1695:50:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 516,
                                  "name": "InsufficientFund",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 447,
                                  "src": "1716:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1716:18:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 518,
                              "nodeType": "RevertStatement",
                              "src": "1709:25:4"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [
                          523
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 523,
                            "mutability": "mutable",
                            "name": "witnessData",
                            "nameLocation": "1783:11:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 655,
                            "src": "1764:30:4",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SwapWitness_$472_memory_ptr",
                              "typeString": "struct swapPermit.SwapWitness"
                            },
                            "typeName": {
                              "id": 522,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 521,
                                "name": "SwapWitness",
                                "nameLocations": [
                                  "1764:11:4"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 472,
                                "src": "1764:11:4"
                              },
                              "referencedDeclaration": 472,
                              "src": "1764:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SwapWitness_$472_storage_ptr",
                                "typeString": "struct swapPermit.SwapWitness"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 540,
                        "initialValue": {
                          "arguments": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 530,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 525,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 487,
                                  "src": "1833:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "id": 528,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "1854:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_swapPermit_$657",
                                        "typeString": "contract swapPermit"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_swapPermit_$657",
                                        "typeString": "contract swapPermit"
                                      }
                                    ],
                                    "id": 527,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1846:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 526,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1846:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 529,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1846:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "1833:26:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseExpression": {
                                "id": 534,
                                "name": "recipient",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 487,
                                "src": "1887:9:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "Conditional",
                              "src": "1833:63:4",
                              "trueExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 531,
                                    "name": "permit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 485,
                                    "src": "1862:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PermitTransferFrom_$764_memory_ptr",
                                      "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                                    }
                                  },
                                  "id": 532,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "1869:9:4",
                                  "memberName": "permitted",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 759,
                                  "src": "1862:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenPermissions_$769_memory_ptr",
                                    "typeString": "struct ISignatureTransfer.TokenPermissions memory"
                                  }
                                },
                                "id": 533,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "1879:5:4",
                                "memberName": "token",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 766,
                                "src": "1862:22:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 536,
                              "name": "POOL_FEE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 443,
                              "src": "1915:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              }
                            },
                            {
                              "id": 537,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 487,
                              "src": "1948:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 538,
                              "name": "amountOutMinimum",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 489,
                              "src": "1989:16:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint24",
                                "typeString": "uint24"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 524,
                            "name": "SwapWitness",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 472,
                            "src": "1797:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_SwapWitness_$472_storage_ptr_$",
                              "typeString": "type(struct swapPermit.SwapWitness storage pointer)"
                            }
                          },
                          "id": 539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "1823:8:4",
                            "1910:3:4",
                            "1937:9:4",
                            "1971:16:4"
                          ],
                          "names": [
                            "tokenOut",
                            "fee",
                            "recipient",
                            "amountOutMinimum"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "1797:219:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SwapWitness_$472_memory_ptr",
                            "typeString": "struct swapPermit.SwapWitness memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1764:252:4"
                      },
                      {
                        "assignments": [
                          542
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 542,
                            "mutability": "mutable",
                            "name": "witness",
                            "nameLocation": "2034:7:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 655,
                            "src": "2026:15:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 541,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2026:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 550,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 546,
                                  "name": "SWAP_WITNESS_TYPEHASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 477,
                                  "src": "2065:21:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 547,
                                  "name": "witnessData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 523,
                                  "src": "2088:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SwapWitness_$472_memory_ptr",
                                    "typeString": "struct swapPermit.SwapWitness memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_struct$_SwapWitness_$472_memory_ptr",
                                    "typeString": "struct swapPermit.SwapWitness memory"
                                  }
                                ],
                                "expression": {
                                  "id": 544,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2054:3:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 545,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2058:6:4",
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "2054:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 548,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2054:46:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 543,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2044:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2044:57:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2026:75:4"
                      },
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 579,
                              "nodeType": "Block",
                              "src": "2550:11:4",
                              "statements": []
                            },
                            "errorName": "",
                            "id": 580,
                            "nodeType": "TryCatchClause",
                            "src": "2550:11:4"
                          },
                          {
                            "block": {
                              "id": 584,
                              "nodeType": "Block",
                              "src": "2568:49:4",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 581,
                                      "name": "FailedSignature",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 445,
                                      "src": "2589:15:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                        "typeString": "function () pure returns (error)"
                                      }
                                    },
                                    "id": 582,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2589:17:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 583,
                                  "nodeType": "RevertStatement",
                                  "src": "2582:24:4"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 585,
                            "nodeType": "TryCatchClause",
                            "src": "2562:55:4"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 555,
                              "name": "permit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 485,
                              "src": "2204:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PermitTransferFrom_$764_memory_ptr",
                                "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 560,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "2306:4:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_swapPermit_$657",
                                        "typeString": "contract swapPermit"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_swapPermit_$657",
                                        "typeString": "contract swapPermit"
                                      }
                                    ],
                                    "id": 559,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "2298:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 558,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "2298:7:4",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 561,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2298:13:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 562,
                                      "name": "permit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 485,
                                      "src": "2350:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PermitTransferFrom_$764_memory_ptr",
                                        "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                                      }
                                    },
                                    "id": 563,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2357:9:4",
                                    "memberName": "permitted",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 759,
                                    "src": "2350:16:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenPermissions_$769_memory_ptr",
                                      "typeString": "struct ISignatureTransfer.TokenPermissions memory"
                                    }
                                  },
                                  "id": 564,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2367:6:4",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 768,
                                  "src": "2350:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 556,
                                  "name": "ISignatureTransfer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 792,
                                  "src": "2228:18:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISignatureTransfer_$792_$",
                                    "typeString": "type(contract ISignatureTransfer)"
                                  }
                                },
                                "id": 557,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2247:24:4",
                                "memberName": "SignatureTransferDetails",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 774,
                                "src": "2228:43:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_SignatureTransferDetails_$774_storage_ptr_$",
                                  "typeString": "type(struct ISignatureTransfer.SignatureTransferDetails storage pointer)"
                                }
                              },
                              "id": 565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "2294:2:4",
                                "2333:15:4"
                              ],
                              "names": [
                                "to",
                                "requestedAmount"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "2228:164:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SignatureTransferDetails_$774_memory_ptr",
                                "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                              }
                            },
                            {
                              "id": 566,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 482,
                              "src": "2410:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 567,
                              "name": "witness",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 542,
                              "src": "2433:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 568,
                              "name": "WITNESS_TYPE_STRING",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "2458:19:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 573,
                                      "name": "r",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 495,
                                      "src": "2518:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "id": 574,
                                      "name": "s",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 497,
                                      "src": "2521:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "id": 575,
                                      "name": "v",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 493,
                                      "src": "2524:1:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    ],
                                    "expression": {
                                      "id": 571,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "2501:3:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 572,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "2505:12:4",
                                    "memberName": "encodePacked",
                                    "nodeType": "MemberAccess",
                                    "src": "2501:16:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 576,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2501:25:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2495:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 569,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2495:5:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 577,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2495:32:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_PermitTransferFrom_$764_memory_ptr",
                                "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                              },
                              {
                                "typeIdentifier": "t_struct$_SignatureTransferDetails_$774_memory_ptr",
                                "typeString": "struct ISignatureTransfer.SignatureTransferDetails memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 552,
                                  "name": "PERMIT2",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 440,
                                  "src": "2152:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 551,
                                "name": "ISignatureTransfer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 792,
                                "src": "2133:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISignatureTransfer_$792_$",
                                  "typeString": "type(contract ISignatureTransfer)"
                                }
                              },
                              "id": 553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2133:27:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISignatureTransfer_$792",
                                "typeString": "contract ISignatureTransfer"
                              }
                            },
                            "id": 554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2161:25:4",
                            "memberName": "permitWitnessTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 791,
                            "src": "2133:53:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_struct$_PermitTransferFrom_$764_memory_ptr_$_t_struct$_SignatureTransferDetails_$774_memory_ptr_$_t_address_$_t_bytes32_$_t_string_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (struct ISignatureTransfer.PermitTransferFrom memory,struct ISignatureTransfer.SignatureTransferDetails memory,address,bytes32,string memory,bytes memory) external"
                            }
                          },
                          "id": 578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2133:408:4",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 586,
                        "nodeType": "TryStatement",
                        "src": "2117:500:4"
                      },
                      {
                        "condition": {
                          "id": 598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2632:83:4",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 593,
                                "name": "SWAP_ROUTER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 437,
                                "src": "2678:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "expression": {
                                    "id": 594,
                                    "name": "permit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 485,
                                    "src": "2691:6:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PermitTransferFrom_$764_memory_ptr",
                                      "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                                    }
                                  },
                                  "id": 595,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2698:9:4",
                                  "memberName": "permitted",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 759,
                                  "src": "2691:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_TokenPermissions_$769_memory_ptr",
                                    "typeString": "struct ISignatureTransfer.TokenPermissions memory"
                                  }
                                },
                                "id": 596,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2708:6:4",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 768,
                                "src": "2691:23:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "expression": {
                                        "id": 588,
                                        "name": "permit",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 485,
                                        "src": "2646:6:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_PermitTransferFrom_$764_memory_ptr",
                                          "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                                        }
                                      },
                                      "id": 589,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "2653:9:4",
                                      "memberName": "permitted",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 759,
                                      "src": "2646:16:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TokenPermissions_$769_memory_ptr",
                                        "typeString": "struct ISignatureTransfer.TokenPermissions memory"
                                      }
                                    },
                                    "id": 590,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2663:5:4",
                                    "memberName": "token",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 766,
                                    "src": "2646:22:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 587,
                                  "name": "IERC20Permit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 754,
                                  "src": "2633:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20Permit_$754_$",
                                    "typeString": "type(contract IERC20Permit)"
                                  }
                                },
                                "id": 591,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2633:36:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Permit_$754",
                                  "typeString": "contract IERC20Permit"
                                }
                              },
                              "id": 592,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2670:7:4",
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 733,
                              "src": "2633:44:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 597,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2633:82:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 603,
                        "nodeType": "IfStatement",
                        "src": "2628:133:4",
                        "trueBody": {
                          "id": 602,
                          "nodeType": "Block",
                          "src": "2717:44:4",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 599,
                                  "name": "SwapFailed",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 449,
                                  "src": "2738:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 600,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2738:12:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 601,
                              "nodeType": "RevertStatement",
                              "src": "2731:19:4"
                            }
                          ]
                        }
                      },
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 645,
                              "nodeType": "Block",
                              "src": "3328:257:4",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 630,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 628,
                                      "name": "amountOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 500,
                                      "src": "3342:9:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "id": 629,
                                      "name": "_amountOut",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 626,
                                      "src": "3354:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "3342:22:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 631,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3342:22:4"
                                },
                                {
                                  "eventCall": {
                                    "arguments": [
                                      {
                                        "id": 633,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 482,
                                        "src": "3409:5:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "expression": {
                                            "id": 634,
                                            "name": "permit",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 485,
                                            "src": "3432:6:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_PermitTransferFrom_$764_memory_ptr",
                                              "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                                            }
                                          },
                                          "id": 635,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3439:9:4",
                                          "memberName": "permitted",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 759,
                                          "src": "3432:16:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TokenPermissions_$769_memory_ptr",
                                            "typeString": "struct ISignatureTransfer.TokenPermissions memory"
                                          }
                                        },
                                        "id": 636,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3449:5:4",
                                        "memberName": "token",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 766,
                                        "src": "3432:22:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "expression": {
                                            "id": 637,
                                            "name": "permit",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 485,
                                            "src": "3472:6:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_PermitTransferFrom_$764_memory_ptr",
                                              "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                                            }
                                          },
                                          "id": 638,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "3479:9:4",
                                          "memberName": "permitted",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 759,
                                          "src": "3472:16:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_TokenPermissions_$769_memory_ptr",
                                            "typeString": "struct ISignatureTransfer.TokenPermissions memory"
                                          }
                                        },
                                        "id": 639,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3489:6:4",
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 768,
                                        "src": "3472:23:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 640,
                                          "name": "witnessData",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 523,
                                          "src": "3513:11:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_SwapWitness_$472_memory_ptr",
                                            "typeString": "struct swapPermit.SwapWitness memory"
                                          }
                                        },
                                        "id": 641,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "3525:8:4",
                                        "memberName": "tokenOut",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 465,
                                        "src": "3513:20:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 642,
                                        "name": "amountOut",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 500,
                                        "src": "3551:9:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 632,
                                      "name": "SwapDone",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 463,
                                      "src": "3383:8:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,address,uint256,address,uint256)"
                                      }
                                    },
                                    "id": 643,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3383:191:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 644,
                                  "nodeType": "EmitStatement",
                                  "src": "3378:196:4"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 646,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 627,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 626,
                                  "mutability": "mutable",
                                  "name": "_amountOut",
                                  "nameLocation": "3316:10:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 646,
                                  "src": "3308:18:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 625,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3308:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "3307:20:4"
                            },
                            "src": "3299:286:4"
                          },
                          {
                            "block": {
                              "id": 650,
                              "nodeType": "Block",
                              "src": "3592:44:4",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 647,
                                      "name": "SwapFailed",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 449,
                                      "src": "3613:10:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                        "typeString": "function () pure returns (error)"
                                      }
                                    },
                                    "id": 648,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3613:12:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_error",
                                      "typeString": "error"
                                    }
                                  },
                                  "id": 649,
                                  "nodeType": "RevertStatement",
                                  "src": "3606:19:4"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 651,
                            "nodeType": "TryCatchClause",
                            "src": "3586:50:4"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 610,
                                      "name": "permit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 485,
                                      "src": "2913:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PermitTransferFrom_$764_memory_ptr",
                                        "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                                      }
                                    },
                                    "id": 611,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2920:9:4",
                                    "memberName": "permitted",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 759,
                                    "src": "2913:16:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenPermissions_$769_memory_ptr",
                                      "typeString": "struct ISignatureTransfer.TokenPermissions memory"
                                    }
                                  },
                                  "id": 612,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2930:5:4",
                                  "memberName": "token",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 766,
                                  "src": "2913:22:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 613,
                                    "name": "witnessData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 523,
                                    "src": "2967:11:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SwapWitness_$472_memory_ptr",
                                      "typeString": "struct swapPermit.SwapWitness memory"
                                    }
                                  },
                                  "id": 614,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2979:8:4",
                                  "memberName": "tokenOut",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 465,
                                  "src": "2967:20:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 615,
                                  "name": "POOL_FEE",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 443,
                                  "src": "3014:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  }
                                },
                                {
                                  "id": 616,
                                  "name": "recipient",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 487,
                                  "src": "3055:9:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 617,
                                  "name": "deadline",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 491,
                                  "src": "3096:8:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "expression": {
                                      "id": 618,
                                      "name": "permit",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 485,
                                      "src": "3136:6:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PermitTransferFrom_$764_memory_ptr",
                                        "typeString": "struct ISignatureTransfer.PermitTransferFrom memory"
                                      }
                                    },
                                    "id": 619,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3143:9:4",
                                    "memberName": "permitted",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 759,
                                    "src": "3136:16:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TokenPermissions_$769_memory_ptr",
                                      "typeString": "struct ISignatureTransfer.TokenPermissions memory"
                                    }
                                  },
                                  "id": 620,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3153:6:4",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 768,
                                  "src": "3136:23:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 621,
                                  "name": "amountOutMinimum",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 489,
                                  "src": "3199:16:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "hexValue": "30",
                                  "id": 622,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3256:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint24",
                                    "typeString": "uint24"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "expression": {
                                  "id": 608,
                                  "name": "ISwapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 820,
                                  "src": "2847:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$820_$",
                                    "typeString": "type(contract ISwapRouter)"
                                  }
                                },
                                "id": 609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2859:22:4",
                                "memberName": "ExactInputSingleParams",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 811,
                                "src": "2847:34:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$811_storage_ptr_$",
                                  "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                                }
                              },
                              "id": 623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "nameLocations": [
                                "2904:7:4",
                                "2957:8:4",
                                "3009:3:4",
                                "3044:9:4",
                                "3086:8:4",
                                "3126:8:4",
                                "3181:16:4",
                                "3237:17:4"
                              ],
                              "names": [
                                "tokenIn",
                                "tokenOut",
                                "fee",
                                "recipient",
                                "deadline",
                                "amountIn",
                                "amountOutMinimum",
                                "sqrtPriceLimitX96"
                              ],
                              "nodeType": "FunctionCall",
                              "src": "2847:429:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExactInputSingleParams_$811_memory_ptr",
                                "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_ExactInputSingleParams_$811_memory_ptr",
                                "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 605,
                                  "name": "SWAP_ROUTER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 437,
                                  "src": "2800:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 604,
                                "name": "ISwapRouter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 820,
                                "src": "2788:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$820_$",
                                  "typeString": "type(contract ISwapRouter)"
                                }
                              },
                              "id": 606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2788:24:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISwapRouter_$820",
                                "typeString": "contract ISwapRouter"
                              }
                            },
                            "id": 607,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2813:16:4",
                            "memberName": "exactInputSingle",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 819,
                            "src": "2788:41:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$811_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                            }
                          },
                          "id": 624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2788:502:4",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 652,
                        "nodeType": "TryStatement",
                        "src": "2772:864:4"
                      },
                      {
                        "expression": {
                          "id": 653,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 500,
                          "src": "3653:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 501,
                        "id": 654,
                        "nodeType": "Return",
                        "src": "3646:16:4"
                      }
                    ]
                  },
                  "functionSelector": "31a6fed5",
                  "id": 656,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swapWithPermit",
                  "nameLocation": "1258:14:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 498,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 482,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1290:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "1282:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 481,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1282:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "permit",
                        "nameLocation": "1350:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "1305:51:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$764_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom"
                        },
                        "typeName": {
                          "id": 484,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 483,
                            "name": "ISignatureTransfer.PermitTransferFrom",
                            "nameLocations": [
                              "1305:18:4",
                              "1324:18:4"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 764,
                            "src": "1305:37:4"
                          },
                          "referencedDeclaration": 764,
                          "src": "1305:37:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PermitTransferFrom_$764_storage_ptr",
                            "typeString": "struct ISignatureTransfer.PermitTransferFrom"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 487,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "1374:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "1366:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1366:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 489,
                        "mutability": "mutable",
                        "name": "amountOutMinimum",
                        "nameLocation": "1401:16:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "1393:24:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 488,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1393:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 491,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1435:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "1427:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 490,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1427:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "1459:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "1453:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1453:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 495,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1478:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "1470:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 494,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1470:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 497,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "1497:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "1489:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 496,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1489:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1272:232:4"
                  },
                  "returnParameters": {
                    "id": 501,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 500,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "1531:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "1523:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 499,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1523:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1522:19:4"
                  },
                  "scope": 657,
                  "src": "1249:2420:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 658,
              "src": "194:3477:4",
              "usedErrors": [
                445,
                447,
                449,
                451
              ],
              "usedEvents": [
                463
              ]
            }
          ],
          "src": "39:3632:4"
        },
        "id": 4
      },
      "interfaces/IERC20Permit.sol": {
        "ast": {
          "absolutePath": "interfaces/IERC20Permit.sol",
          "exportedSymbols": {
            "IERC20Permit": [
              754
            ]
          },
          "id": 755,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 659,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:5"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Permit",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 754,
              "linearizedBaseContracts": [
                754
              ],
              "name": "IERC20Permit",
              "nameLocation": "75:12:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "d505accf",
                  "id": 676,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "103:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 661,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "127:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "119:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "119:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 663,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "150:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "142:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 662,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "142:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 665,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "175:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "167:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 664,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "167:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 667,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "198:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "190:16:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 666,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "190:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 669,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "222:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "216:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "216:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 671,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "241:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "233:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 670,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "233:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 673,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "260:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "252:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 672,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "252:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "109:158:5"
                  },
                  "returnParameters": {
                    "id": 675,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "276:0:5"
                  },
                  "scope": 754,
                  "src": "94:183:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7ecebe00",
                  "id": 683,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonces",
                  "nameLocation": "292:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 679,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 678,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "307:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 683,
                        "src": "299:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 677,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "299:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "298:15:5"
                  },
                  "returnParameters": {
                    "id": 682,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 683,
                        "src": "337:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "337:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "336:9:5"
                  },
                  "scope": 754,
                  "src": "283:63:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3644e515",
                  "id": 688,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nameLocation": "360:16:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 684,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "376:2:5"
                  },
                  "returnParameters": {
                    "id": 687,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 688,
                        "src": "402:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "402:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "401:9:5"
                  },
                  "scope": 754,
                  "src": "351:60:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "06fdde03",
                  "id": 693,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "426:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 689,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "430:2:5"
                  },
                  "returnParameters": {
                    "id": 692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 691,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 693,
                        "src": "456:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "456:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "455:15:5"
                  },
                  "scope": 754,
                  "src": "417:54:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "95d89b41",
                  "id": 698,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "485:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 694,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "491:2:5"
                  },
                  "returnParameters": {
                    "id": 697,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 696,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 698,
                        "src": "517:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 695,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "517:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "516:15:5"
                  },
                  "scope": 754,
                  "src": "476:56:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "313ce567",
                  "id": 703,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "546:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 699,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "554:2:5"
                  },
                  "returnParameters": {
                    "id": 702,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 701,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 703,
                        "src": "580:5:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 700,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "580:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "579:7:5"
                  },
                  "scope": 754,
                  "src": "537:50:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "18160ddd",
                  "id": 708,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "601:11:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 704,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "612:2:5"
                  },
                  "returnParameters": {
                    "id": 707,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 706,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 708,
                        "src": "638:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 705,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "638:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "637:6:5"
                  },
                  "scope": 754,
                  "src": "592:52:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70a08231",
                  "id": 715,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "658:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 711,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 710,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "676:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "668:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "668:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "667:15:5"
                  },
                  "returnParameters": {
                    "id": 714,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 713,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 715,
                        "src": "706:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 712,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "706:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "705:6:5"
                  },
                  "scope": 754,
                  "src": "649:63:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "dd62ed3e",
                  "id": 724,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "726:9:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 720,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 717,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "744:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 724,
                        "src": "736:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 716,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "736:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 719,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "759:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 724,
                        "src": "751:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 718,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "751:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "735:32:5"
                  },
                  "returnParameters": {
                    "id": 723,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 722,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 724,
                        "src": "791:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 721,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "791:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "790:6:5"
                  },
                  "scope": 754,
                  "src": "717:80:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "095ea7b3",
                  "id": 733,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "812:7:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 729,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 726,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "828:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 733,
                        "src": "820:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 725,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 728,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "842:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 733,
                        "src": "837:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 727,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "837:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:29:5"
                  },
                  "returnParameters": {
                    "id": 732,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 731,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 733,
                        "src": "867:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 730,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "867:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "866:6:5"
                  },
                  "scope": 754,
                  "src": "803:70:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a9059cbb",
                  "id": 742,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "887:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 738,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 735,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "904:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 742,
                        "src": "896:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 734,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "896:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 737,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "913:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 742,
                        "src": "908:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 736,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "908:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "895:24:5"
                  },
                  "returnParameters": {
                    "id": 741,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 740,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 742,
                        "src": "938:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 739,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "938:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "937:6:5"
                  },
                  "scope": 754,
                  "src": "878:66:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23b872dd",
                  "id": 753,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "958:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 749,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 744,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "979:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "971:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 743,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 746,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "993:2:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "985:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 745,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "985:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 748,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1002:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "997:10:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 747,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "997:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:38:5"
                  },
                  "returnParameters": {
                    "id": 752,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 751,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 753,
                        "src": "1027:4:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 750,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1027:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1026:6:5"
                  },
                  "scope": 754,
                  "src": "949:84:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 755,
              "src": "65:970:5",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "39:996:5"
        },
        "id": 5
      },
      "interfaces/ISignatureTransfer.sol": {
        "ast": {
          "absolutePath": "interfaces/ISignatureTransfer.sol",
          "exportedSymbols": {
            "ISignatureTransfer": [
              792
            ]
          },
          "id": 793,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 756,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:6"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISignatureTransfer",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 792,
              "linearizedBaseContracts": [
                792
              ],
              "name": "ISignatureTransfer",
              "nameLocation": "75:18:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ISignatureTransfer.PermitTransferFrom",
                  "id": 764,
                  "members": [
                    {
                      "constant": false,
                      "id": 759,
                      "mutability": "mutable",
                      "name": "permitted",
                      "nameLocation": "153:9:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 764,
                      "src": "136:26:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TokenPermissions_$769_storage_ptr",
                        "typeString": "struct ISignatureTransfer.TokenPermissions"
                      },
                      "typeName": {
                        "id": 758,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 757,
                          "name": "TokenPermissions",
                          "nameLocations": [
                            "136:16:6"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 769,
                          "src": "136:16:6"
                        },
                        "referencedDeclaration": 769,
                        "src": "136:16:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TokenPermissions_$769_storage_ptr",
                          "typeString": "struct ISignatureTransfer.TokenPermissions"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 761,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "180:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 764,
                      "src": "172:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 760,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "172:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 763,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "203:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 764,
                      "src": "195:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 762,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "195:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "PermitTransferFrom",
                  "nameLocation": "107:18:6",
                  "nodeType": "StructDefinition",
                  "scope": 792,
                  "src": "100:118:6",
                  "visibility": "public"
                },
                {
                  "canonicalName": "ISignatureTransfer.TokenPermissions",
                  "id": 769,
                  "members": [
                    {
                      "constant": false,
                      "id": 766,
                      "mutability": "mutable",
                      "name": "token",
                      "nameLocation": "266:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 769,
                      "src": "258:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 765,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "258:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 768,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "289:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 769,
                      "src": "281:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 767,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "281:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "TokenPermissions",
                  "nameLocation": "231:16:6",
                  "nodeType": "StructDefinition",
                  "scope": 792,
                  "src": "224:78:6",
                  "visibility": "public"
                },
                {
                  "canonicalName": "ISignatureTransfer.SignatureTransferDetails",
                  "id": 774,
                  "members": [
                    {
                      "constant": false,
                      "id": 771,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "358:2:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 774,
                      "src": "350:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 770,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "350:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 773,
                      "mutability": "mutable",
                      "name": "requestedAmount",
                      "nameLocation": "378:15:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 774,
                      "src": "370:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 772,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "370:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "SignatureTransferDetails",
                  "nameLocation": "315:24:6",
                  "nodeType": "StructDefinition",
                  "scope": 792,
                  "src": "308:92:6",
                  "visibility": "public"
                },
                {
                  "functionSelector": "137c29fe",
                  "id": 791,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permitWitnessTransferFrom",
                  "nameLocation": "415:25:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 789,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 777,
                        "mutability": "mutable",
                        "name": "permit",
                        "nameLocation": "476:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 791,
                        "src": "450:32:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PermitTransferFrom_$764_memory_ptr",
                          "typeString": "struct ISignatureTransfer.PermitTransferFrom"
                        },
                        "typeName": {
                          "id": 776,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 775,
                            "name": "PermitTransferFrom",
                            "nameLocations": [
                              "450:18:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 764,
                            "src": "450:18:6"
                          },
                          "referencedDeclaration": 764,
                          "src": "450:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PermitTransferFrom_$764_storage_ptr",
                            "typeString": "struct ISignatureTransfer.PermitTransferFrom"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 780,
                        "mutability": "mutable",
                        "name": "transferDetails",
                        "nameLocation": "526:15:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 791,
                        "src": "492:49:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SignatureTransferDetails_$774_calldata_ptr",
                          "typeString": "struct ISignatureTransfer.SignatureTransferDetails"
                        },
                        "typeName": {
                          "id": 779,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 778,
                            "name": "SignatureTransferDetails",
                            "nameLocations": [
                              "492:24:6"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 774,
                            "src": "492:24:6"
                          },
                          "referencedDeclaration": 774,
                          "src": "492:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SignatureTransferDetails_$774_storage_ptr",
                            "typeString": "struct ISignatureTransfer.SignatureTransferDetails"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 782,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "559:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 791,
                        "src": "551:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 781,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "551:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 784,
                        "mutability": "mutable",
                        "name": "witness",
                        "nameLocation": "582:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 791,
                        "src": "574:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 783,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "574:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 786,
                        "mutability": "mutable",
                        "name": "witnessTypeString",
                        "nameLocation": "615:17:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 791,
                        "src": "599:33:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 785,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "599:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 788,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "657:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 791,
                        "src": "642:24:6",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 787,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "642:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "440:232:6"
                  },
                  "returnParameters": {
                    "id": 790,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "681:0:6"
                  },
                  "scope": 792,
                  "src": "406:276:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 793,
              "src": "65:619:6",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "39:645:6"
        },
        "id": 6
      },
      "interfaces/ISwapRouter.sol": {
        "ast": {
          "absolutePath": "interfaces/ISwapRouter.sol",
          "exportedSymbols": {
            "ISwapRouter": [
              820
            ]
          },
          "id": 821,
          "license": "UNLICENSED",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 794,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".28"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:24:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ISwapRouter",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 820,
              "linearizedBaseContracts": [
                820
              ],
              "name": "ISwapRouter",
              "nameLocation": "75:11:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ISwapRouter.ExactInputSingleParams",
                  "id": 811,
                  "members": [
                    {
                      "constant": false,
                      "id": 796,
                      "mutability": "mutable",
                      "name": "tokenIn",
                      "nameLocation": "141:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 811,
                      "src": "133:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 795,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "133:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 798,
                      "mutability": "mutable",
                      "name": "tokenOut",
                      "nameLocation": "166:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 811,
                      "src": "158:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 797,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "158:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 800,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "191:3:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 811,
                      "src": "184:10:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint24",
                        "typeString": "uint24"
                      },
                      "typeName": {
                        "id": 799,
                        "name": "uint24",
                        "nodeType": "ElementaryTypeName",
                        "src": "184:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 802,
                      "mutability": "mutable",
                      "name": "recipient",
                      "nameLocation": "212:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 811,
                      "src": "204:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 801,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "204:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 804,
                      "mutability": "mutable",
                      "name": "deadline",
                      "nameLocation": "239:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 811,
                      "src": "231:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 803,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "231:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 806,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "nameLocation": "265:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 811,
                      "src": "257:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 805,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "257:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 808,
                      "mutability": "mutable",
                      "name": "amountOutMinimum",
                      "nameLocation": "291:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 811,
                      "src": "283:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 807,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "283:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 810,
                      "mutability": "mutable",
                      "name": "sqrtPriceLimitX96",
                      "nameLocation": "325:17:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 811,
                      "src": "317:25:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint160",
                        "typeString": "uint160"
                      },
                      "typeName": {
                        "id": 809,
                        "name": "uint160",
                        "nodeType": "ElementaryTypeName",
                        "src": "317:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint160",
                          "typeString": "uint160"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "ExactInputSingleParams",
                  "nameLocation": "100:22:7",
                  "nodeType": "StructDefinition",
                  "scope": 820,
                  "src": "93:256:7",
                  "visibility": "public"
                },
                {
                  "functionSelector": "414bf389",
                  "id": 819,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "exactInputSingle",
                  "nameLocation": "372:16:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 815,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 814,
                        "mutability": "mutable",
                        "name": "params",
                        "nameLocation": "421:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 819,
                        "src": "389:38:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$811_calldata_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        },
                        "typeName": {
                          "id": 813,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 812,
                            "name": "ExactInputSingleParams",
                            "nameLocations": [
                              "389:22:7"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 811,
                            "src": "389:22:7"
                          },
                          "referencedDeclaration": 811,
                          "src": "389:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$811_storage_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "388:40:7"
                  },
                  "returnParameters": {
                    "id": 818,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 817,
                        "mutability": "mutable",
                        "name": "amountOut",
                        "nameLocation": "463:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 819,
                        "src": "455:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 816,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "455:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "454:19:7"
                  },
                  "scope": 820,
                  "src": "363:111:7",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 821,
              "src": "65:411:7",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "39:439:7"
        },
        "id": 7
      }
    },
    "contracts": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "IERC20Permit": {
          "abi": [
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[ERC-2612]. Adds the {permit} method, which can be used to change an account's ERC-20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]}},\"version\":1}"
        }
      },
      "contracts/EIP712Helper.sol": {
        "EIP712Helper": {
          "abi": [
            {
              "inputs": [],
              "name": "DOMAIN_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "EIP712_DOMAIN_NAME",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "EIP712_DOMAIN_VERSION",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "chainId",
                  "type": "uint256"
                }
              ],
              "name": "buildDomainSeparator",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "domainSeparator",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "permitHash",
                  "type": "bytes32"
                }
              ],
              "name": "buildEIP712Hash",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                }
              ],
              "name": "buildPermitHash",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "608080604052346015576103de908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c90816310cde3631461027f5750806320606b701461024457806330adf81f146102095780633b98dff9146101c85780635cc333211461018c578063a3a406d2146100be5763fd0702961461006c57600080fd5b346100b95760003660031901126100b9576100b560405161008e604082610327565b600e81526d2230b49029ba30b13632b1b7b4b760911b60208201526040519182918261035f565b0390f35b600080fd5b346100b95760403660031901126100b95760206100d9610311565b6040516100e7604082610327565b600e8152828101906d2230b49029ba30b13632b1b7b4b760911b825251902090604051610115604082610327565b6001815283810190603160f81b82525190209060405191848301937f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f855260408401526060830152602435608083015260018060a01b031660a082015260a0815261018160c082610327565b519020604051908152f35b346100b95760003660031901126100b9576100b56040516101ae604082610327565b60018152603160f81b60208201526040519182918261035f565b346100b95760403660031901126100b95760206040518181019061190160f01b82526004356022820152602435604282015260428152610181606282610327565b346100b95760003660031901126100b95760206040517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98152f35b346100b95760003660031901126100b95760206040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8152f35b346100b95760a03660031901126100b957610298610311565b6024356001600160a01b03811692908390036100b957602092838201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9845260018060a01b031660408301526060820152604435608082015260643560a082015260843560c082015260c0815261018160e082610327565b600435906001600160a01b03821682036100b957565b90601f8019910116810190811067ffffffffffffffff82111761034957604052565b634e487b7160e01b600052604160045260246000fd5b91909160208152825180602083015260005b818110610392575060409293506000838284010152601f8019910116010190565b806020809287010151604082860101520161037156fea26469706673582212201cfbc24727a0f60c1b74cf9b2096b6ae240e546abb836de16ed7fdc6f6ba3d1d64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x3DE SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x10CDE363 EQ PUSH2 0x27F JUMPI POP DUP1 PUSH4 0x20606B70 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x3B98DFF9 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x5CC33321 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xA3A406D2 EQ PUSH2 0xBE JUMPI PUSH4 0xFD070296 EQ PUSH2 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB9 JUMPI PUSH2 0xB5 PUSH1 0x40 MLOAD PUSH2 0x8E PUSH1 0x40 DUP3 PUSH2 0x327 JUMP JUMPDEST PUSH1 0xE DUP2 MSTORE PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x35F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB9 JUMPI PUSH1 0x20 PUSH2 0xD9 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 PUSH1 0x40 DUP3 PUSH2 0x327 JUMP JUMPDEST PUSH1 0xE DUP2 MSTORE DUP3 DUP2 ADD SWAP1 PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL DUP3 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x115 PUSH1 0x40 DUP3 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 PUSH1 0x31 PUSH1 0xF8 SHL DUP3 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP5 DUP4 ADD SWAP4 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP6 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x181 PUSH1 0xC0 DUP3 PUSH2 0x327 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB9 JUMPI PUSH2 0xB5 PUSH1 0x40 MLOAD PUSH2 0x1AE PUSH1 0x40 DUP3 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x35F JUMP JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD DUP2 DUP2 ADD SWAP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP3 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH2 0x181 PUSH1 0x62 DUP3 PUSH2 0x327 JUMP JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB9 JUMPI PUSH2 0x298 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0xB9 JUMPI PUSH1 0x20 SWAP3 DUP4 DUP3 ADD SWAP3 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 MSTORE PUSH2 0x181 PUSH1 0xE0 DUP3 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB9 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x349 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x392 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x371 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xFB 0xC2 SELFBALANCE 0x27 LOG0 0xF6 0xC SHL PUSH21 0xCF9B2096B6AE240E546ABB836DE16ED7FDC6F6BA3D SAR PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "265:1818:2:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 785,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_encode_string": {
                  "entryPoint": 863,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 807,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b60003560e01c90816310cde3631461027f5750806320606b701461024457806330adf81f146102095780633b98dff9146101c85780635cc333211461018c578063a3a406d2146100be5763fd0702961461006c57600080fd5b346100b95760003660031901126100b9576100b560405161008e604082610327565b600e81526d2230b49029ba30b13632b1b7b4b760911b60208201526040519182918261035f565b0390f35b600080fd5b346100b95760403660031901126100b95760206100d9610311565b6040516100e7604082610327565b600e8152828101906d2230b49029ba30b13632b1b7b4b760911b825251902090604051610115604082610327565b6001815283810190603160f81b82525190209060405191848301937f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f855260408401526060830152602435608083015260018060a01b031660a082015260a0815261018160c082610327565b519020604051908152f35b346100b95760003660031901126100b9576100b56040516101ae604082610327565b60018152603160f81b60208201526040519182918261035f565b346100b95760403660031901126100b95760206040518181019061190160f01b82526004356022820152602435604282015260428152610181606282610327565b346100b95760003660031901126100b95760206040517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98152f35b346100b95760003660031901126100b95760206040517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f8152f35b346100b95760a03660031901126100b957610298610311565b6024356001600160a01b03811692908390036100b957602092838201927f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9845260018060a01b031660408301526060820152604435608082015260643560a082015260843560c082015260c0815261018160e082610327565b600435906001600160a01b03821682036100b957565b90601f8019910116810190811067ffffffffffffffff82111761034957604052565b634e487b7160e01b600052604160045260246000fd5b91909160208152825180602083015260005b818110610392575060409293506000838284010152601f8019910116010190565b806020809287010151604082860101520161037156fea26469706673582212201cfbc24727a0f60c1b74cf9b2096b6ae240e546abb836de16ed7fdc6f6ba3d1d64736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x10CDE363 EQ PUSH2 0x27F JUMPI POP DUP1 PUSH4 0x20606B70 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x3B98DFF9 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x5CC33321 EQ PUSH2 0x18C JUMPI DUP1 PUSH4 0xA3A406D2 EQ PUSH2 0xBE JUMPI PUSH4 0xFD070296 EQ PUSH2 0x6C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB9 JUMPI PUSH2 0xB5 PUSH1 0x40 MLOAD PUSH2 0x8E PUSH1 0x40 DUP3 PUSH2 0x327 JUMP JUMPDEST PUSH1 0xE DUP2 MSTORE PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x35F JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB9 JUMPI PUSH1 0x20 PUSH2 0xD9 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE7 PUSH1 0x40 DUP3 PUSH2 0x327 JUMP JUMPDEST PUSH1 0xE DUP2 MSTORE DUP3 DUP2 ADD SWAP1 PUSH14 0x2230B49029BA30B13632B1B7B4B7 PUSH1 0x91 SHL DUP3 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x115 PUSH1 0x40 DUP3 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE DUP4 DUP2 ADD SWAP1 PUSH1 0x31 PUSH1 0xF8 SHL DUP3 MSTORE MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP5 DUP4 ADD SWAP4 PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP6 MSTORE PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x181 PUSH1 0xC0 DUP3 PUSH2 0x327 JUMP JUMPDEST MLOAD SWAP1 KECCAK256 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB9 JUMPI PUSH2 0xB5 PUSH1 0x40 MLOAD PUSH2 0x1AE PUSH1 0x40 DUP3 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x35F JUMP JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD DUP2 DUP2 ADD SWAP1 PUSH2 0x1901 PUSH1 0xF0 SHL DUP3 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x22 DUP3 ADD MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x42 DUP3 ADD MSTORE PUSH1 0x42 DUP2 MSTORE PUSH2 0x181 PUSH1 0x62 DUP3 PUSH2 0x327 JUMP JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB9 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0xB9 JUMPI PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xB9 JUMPI PUSH2 0x298 PUSH2 0x311 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0xB9 JUMPI PUSH1 0x20 SWAP3 DUP4 DUP3 ADD SWAP3 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 MSTORE PUSH2 0x181 PUSH1 0xE0 DUP3 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xB9 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x349 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 SWAP2 PUSH1 0x20 DUP2 MSTORE DUP3 MLOAD DUP1 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x392 JUMPI POP PUSH1 0x40 SWAP3 SWAP4 POP PUSH1 0x0 DUP4 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP8 ADD ADD MLOAD PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x371 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SHR 0xFB 0xC2 SELFBALANCE 0x27 LOG0 0xF6 0xC SHL PUSH21 0xCF9B2096B6AE240E546ABB836DE16ED7FDC6F6BA3D SAR PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "265:1818:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;265:1818:2;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;265:1818:2;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;265:1818:2;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;265:1818:2;;;1118:36;;265:1818;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;;;265:1818:2;;;1172:39;;265:1818;;;1057:223;;;;265:1818;565:117;265:1818;;;;;;;;;;;;;;;;;;;;;;;;;;;1057:223;;;;;;:::i;:::-;265:1818;1047:234;;265:1818;;;;;;;;;;;;-1:-1:-1;;265:1818:2;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;265:1818:2;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;265:1818:2;;;;;;;1950:119;;;265:1818;;;;;;;;;;;;;;;;;;;1950:119;;;;;;:::i;265:1818::-;;;;;;-1:-1:-1;;265:1818:2;;;;;;;743:117;265:1818;;;;;;;;;-1:-1:-1;;265:1818:2;;;;;;;565:117;265:1818;;;;;;;;;-1:-1:-1;;265:1818:2;;;;;;:::i;:::-;;;-1:-1:-1;;;;;265:1818:2;;;;;;;;;;1555:177;;;;265:1818;743:117;265:1818;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1555:177;;;265:1818;1555:177;;:::i;265:1818::-;;;;-1:-1:-1;;;;;265:1818:2;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;265:1818:2;;;;;-1:-1:-1;265:1818:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "DOMAIN_TYPEHASH()": "20606b70",
              "EIP712_DOMAIN_NAME()": "fd070296",
              "EIP712_DOMAIN_VERSION()": "5cc33321",
              "PERMIT_TYPEHASH()": "30adf81f",
              "buildDomainSeparator(address,uint256)": "a3a406d2",
              "buildEIP712Hash(bytes32,bytes32)": "3b98dff9",
              "buildPermitHash(address,address,uint256,uint256,uint256)": "10cde363"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIP712_DOMAIN_NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIP712_DOMAIN_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"buildDomainSeparator\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"domainSeparator\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitHash\",\"type\":\"bytes32\"}],\"name\":\"buildEIP712Hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"buildPermitHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EIP712Helper.sol\":\"EIP712Helper\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"contracts/EIP712Helper.sol\":{\"keccak256\":\"0x8f26039521bae1ca3567c263a6c41ab427ca6560d12f2e018fb456e1a887b0dd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://50520925fa1671e3f58496401e444bab2381ed87528ad14a1b30d2d03c18b8b1\",\"dweb:/ipfs/QmYxyz5VFRipuGzRUejeoM1QEmjCoHr9Q7J9cyPh1ozPEy\"]},\"contracts/swapPermit.sol\":{\"keccak256\":\"0xb262bc1b6f2b0ea936b73004ef711e59932f4a2dac500d21ebeaa7b084fbf13b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e6a2dc31bf939b35ecc17561d521d0dfa3eeb3364acf127370cbec262cb09e9a\",\"dweb:/ipfs/QmaQgcPVa7ZxPHcAy6b28LLtioUk7StU5G5P2CkvAMY2iH\"]},\"interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xa1162270bf379dd0dd05e8e7bce479dc8e16e0905ae2785be1c01aa34891332d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://574bd659840d050e514d703f3f934346bee99b8bc092f311b66e77c3a477f723\",\"dweb:/ipfs/Qmbxgvpz8Yo6ivCExTiVCkNJG9paQxopyq7PMNwziXgxwY\"]}},\"version\":1}"
        }
      },
      "contracts/swapPermit.sol": {
        "SwapPermit": {
          "abi": [
            {
              "inputs": [],
              "name": "DeadlineExpired",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientAmount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidSignature",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SwapFailed",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "name": "SwapExecuted",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "UNISWAP_ROUTER",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "eip712Helper",
              "outputs": [
                {
                  "internalType": "contract EIP712Helper",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "name": "swapDAIToUSDC",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "permitAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                },
                {
                  "internalType": "uint256",
                  "name": "swapAmountIn",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "swapAmountOutMin",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "swapDeadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint24",
                  "name": "fee",
                  "type": "uint24"
                }
              ],
              "name": "swapWithPermit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601557610627908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816304afe81f146101ed5750806304e82dda146100a5578063c69060da1461007e5763d82649201461004d57600080fd5b3461007b578060031936011261007b57602060405173e592427a0aece92de3edee1f18e0157c058615648152f35b80fd5b503461007b578060031936011261007b57546040516001600160a01b039091168152602090f35b503461007b5760e036600319011261007b576100bf61058b565b90602435604435906064359060ff82168092036101e95760c4356001600160a01b03811692908390036101e557604051956304afe81f60e01b875260018060a01b03166004870152736b175474e89094c44da98b954eedeac495271d0f6024870152816044870152836064870152608486015260843560a486015260a43560c486015260e48501528261010485015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48610124850152610144840152610164830152610bb86101848301526020826101a48184305af19081156101d957906101a1575b602090604051908152f35b506020813d6020116101d1575b816101bb602093836105a1565b810103126101cc5760209051610196565b600080fd5b3d91506101ae565b604051903d90823e3d90fd5b8480fd5b8380fd5b823461007b576101a036600319011261007b5761020861058b565b6024356001600160a01b0381169081900361058757604435606435926084359360ff85168095036105835760e43596610124356001600160a01b038116969087900361057f57610144356001600160a01b038116939084900361057b57610184359462ffffff86168096036105595781421161056c57868b1161055d57873b156105595763d505accf60e01b84526001600160a01b03166004840181905230602485015260448401969096526064830152608482015260a480359082015260c4803590820152868160e48183895af19081610545575b506102f257638baa579f60e01b8652600486fd5b6040516323b872dd60e01b81528360048201523060248201528760448201526020816064818a895af1801561051d57610528575b5060405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c058615646004820152602481018890526020816044818a895af1801561051d576104f0575b5060405191610100830183811067ffffffffffffffff8211176104dc576040908152858452602080850188815285830193845260608601948552610164356080870190815260a087018c8152610104803560c08a0190815260e08a018e8152965163414bf38960e01b815299516001600160a01b0390811660048c01529451851660248b0152965162ffffff1660448a0152965183166064890152905160848801525160a4870152925160c4860152905190911660e4840152908290818873e592427a0aece92de3edee1f18e0157c058615645af19485156101d95794610486575b507f764f0dc063c06f32d89a3f3af80c0db4be8a090901f589a478b447e0a51f09f1604060209681519081528688820152a4604051908152f35b9493506020853d6020116104d4575b816104a2602093836105a1565b810103126101cc57935192937f764f0dc063c06f32d89a3f3af80c0db4be8a090901f589a478b447e0a51f09f161044c565b3d9150610495565b634e487b7160e01b88526041600452602488fd5b6105119060203d602011610516575b61050981836105a1565b8101906105d9565b61036a565b503d6104ff565b6040513d89823e3d90fd5b6105409060203d6020116105165761050981836105a1565b610326565b87610552919892986105a1565b95886102de565b8980fd5b632ca2f52b60e11b8a5260048afd5b631ab7da6b60e01b8a5260048afd5b8880fd5b8780fd5b8580fd5b8280fd5b600435906001600160a01b03821682036101cc57565b90601f8019910116810190811067ffffffffffffffff8211176105c357604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126101cc575180151581036101cc579056fea2646970667358221220284012a359f3e2a5ce51ae47ba1339f98b5f965caa89cee2b7af571eff5cf4f964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x627 SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4AFE81F EQ PUSH2 0x1ED JUMPI POP DUP1 PUSH4 0x4E82DDA EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xC69060DA EQ PUSH2 0x7E JUMPI PUSH4 0xD8264920 EQ PUSH2 0x4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7B JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x7B JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7B JUMPI PUSH2 0xBF PUSH2 0x58B JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1E9 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD SWAP6 PUSH4 0x4AFE81F PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP8 ADD MSTORE PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH1 0x24 DUP8 ADD MSTORE DUP2 PUSH1 0x44 DUP8 ADD MSTORE DUP4 PUSH1 0x64 DUP8 ADD MSTORE PUSH1 0x84 DUP7 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xA4 DUP7 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xC4 DUP7 ADD MSTORE PUSH1 0xE4 DUP6 ADD MSTORE DUP3 PUSH2 0x104 DUP6 ADD MSTORE PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH2 0x124 DUP6 ADD MSTORE PUSH2 0x144 DUP5 ADD MSTORE PUSH2 0x164 DUP4 ADD MSTORE PUSH2 0xBB8 PUSH2 0x184 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH2 0x1A4 DUP2 DUP5 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1D9 JUMPI SWAP1 PUSH2 0x1A1 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D1 JUMPI JUMPDEST DUP2 PUSH2 0x1BB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x5A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1CC JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x196 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x7B JUMPI PUSH2 0x1A0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7B JUMPI PUSH2 0x208 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x587 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH1 0xFF DUP6 AND DUP1 SWAP6 SUB PUSH2 0x583 JUMPI PUSH1 0xE4 CALLDATALOAD SWAP7 PUSH2 0x124 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP7 SWAP1 DUP8 SWAP1 SUB PUSH2 0x57F JUMPI PUSH2 0x144 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH2 0x57B JUMPI PUSH2 0x184 CALLDATALOAD SWAP5 PUSH3 0xFFFFFF DUP7 AND DUP1 SWAP7 SUB PUSH2 0x559 JUMPI DUP2 TIMESTAMP GT PUSH2 0x56C JUMPI DUP7 DUP12 GT PUSH2 0x55D JUMPI DUP8 EXTCODESIZE ISZERO PUSH2 0x559 JUMPI PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0xE4 DUP2 DUP4 DUP10 GAS CALL SWAP1 DUP2 PUSH2 0x545 JUMPI JUMPDEST POP PUSH2 0x2F2 JUMPI PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x4 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP8 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 DUP11 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x51D JUMPI PUSH2 0x528 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP11 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x51D JUMPI PUSH2 0x4F0 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH2 0x100 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4DC JUMPI PUSH1 0x40 SWAP1 DUP2 MSTORE DUP6 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD DUP9 DUP2 MSTORE DUP6 DUP4 ADD SWAP4 DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP5 DUP6 MSTORE PUSH2 0x164 CALLDATALOAD PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD DUP13 DUP2 MSTORE PUSH2 0x104 DUP1 CALLDATALOAD PUSH1 0xC0 DUP11 ADD SWAP1 DUP2 MSTORE PUSH1 0xE0 DUP11 ADD DUP15 DUP2 MSTORE SWAP7 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP10 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP13 ADD MSTORE SWAP5 MLOAD DUP6 AND PUSH1 0x24 DUP12 ADD MSTORE SWAP7 MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP11 ADD MSTORE SWAP7 MLOAD DUP4 AND PUSH1 0x64 DUP10 ADD MSTORE SWAP1 MLOAD PUSH1 0x84 DUP9 ADD MSTORE MLOAD PUSH1 0xA4 DUP8 ADD MSTORE SWAP3 MLOAD PUSH1 0xC4 DUP7 ADD MSTORE SWAP1 MLOAD SWAP1 SWAP2 AND PUSH1 0xE4 DUP5 ADD MSTORE SWAP1 DUP3 SWAP1 DUP2 DUP9 PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x1D9 JUMPI SWAP5 PUSH2 0x486 JUMPI JUMPDEST POP PUSH32 0x764F0DC063C06F32D89A3F3AF80C0DB4BE8A090901F589A478B447E0A51F09F1 PUSH1 0x40 PUSH1 0x20 SWAP7 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP7 DUP9 DUP3 ADD MSTORE LOG4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP5 SWAP4 POP PUSH1 0x20 DUP6 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4D4 JUMPI JUMPDEST DUP2 PUSH2 0x4A2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x5A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1CC JUMPI SWAP4 MLOAD SWAP3 SWAP4 PUSH32 0x764F0DC063C06F32D89A3F3AF80C0DB4BE8A090901F589A478B447E0A51F09F1 PUSH2 0x44C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x495 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH2 0x511 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x516 JUMPI JUMPDEST PUSH2 0x509 DUP2 DUP4 PUSH2 0x5A1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x540 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x516 JUMPI PUSH2 0x509 DUP2 DUP4 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x326 JUMP JUMPDEST DUP8 PUSH2 0x552 SWAP2 SWAP9 SWAP3 SWAP9 PUSH2 0x5A1 JUMP JUMPDEST SWAP6 DUP9 PUSH2 0x2DE JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH4 0x2CA2F52B PUSH1 0xE1 SHL DUP11 MSTORE PUSH1 0x4 DUP11 REVERT JUMPDEST PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x4 DUP11 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1CC JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5C3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1CC JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1CC JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 BLOCKHASH SLT LOG3 MSIZE RETURN 0xE2 0xA5 0xCE MLOAD 0xAE SELFBALANCE 0xBA SGT CODECOPY 0xF9 DUP12 PUSH0 SWAP7 TLOAD 0xAA DUP10 0xCE 0xE2 0xB7 0xAF JUMPI 0x1E SELFDESTRUCT TLOAD DELEGATECALL 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "267:3089:3:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode_address": {
                  "entryPoint": 1419,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 1497,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 1441,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b600090813560e01c90816304afe81f146101ed5750806304e82dda146100a5578063c69060da1461007e5763d82649201461004d57600080fd5b3461007b578060031936011261007b57602060405173e592427a0aece92de3edee1f18e0157c058615648152f35b80fd5b503461007b578060031936011261007b57546040516001600160a01b039091168152602090f35b503461007b5760e036600319011261007b576100bf61058b565b90602435604435906064359060ff82168092036101e95760c4356001600160a01b03811692908390036101e557604051956304afe81f60e01b875260018060a01b03166004870152736b175474e89094c44da98b954eedeac495271d0f6024870152816044870152836064870152608486015260843560a486015260a43560c486015260e48501528261010485015273a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48610124850152610144840152610164830152610bb86101848301526020826101a48184305af19081156101d957906101a1575b602090604051908152f35b506020813d6020116101d1575b816101bb602093836105a1565b810103126101cc5760209051610196565b600080fd5b3d91506101ae565b604051903d90823e3d90fd5b8480fd5b8380fd5b823461007b576101a036600319011261007b5761020861058b565b6024356001600160a01b0381169081900361058757604435606435926084359360ff85168095036105835760e43596610124356001600160a01b038116969087900361057f57610144356001600160a01b038116939084900361057b57610184359462ffffff86168096036105595781421161056c57868b1161055d57873b156105595763d505accf60e01b84526001600160a01b03166004840181905230602485015260448401969096526064830152608482015260a480359082015260c4803590820152868160e48183895af19081610545575b506102f257638baa579f60e01b8652600486fd5b6040516323b872dd60e01b81528360048201523060248201528760448201526020816064818a895af1801561051d57610528575b5060405163095ea7b360e01b815273e592427a0aece92de3edee1f18e0157c058615646004820152602481018890526020816044818a895af1801561051d576104f0575b5060405191610100830183811067ffffffffffffffff8211176104dc576040908152858452602080850188815285830193845260608601948552610164356080870190815260a087018c8152610104803560c08a0190815260e08a018e8152965163414bf38960e01b815299516001600160a01b0390811660048c01529451851660248b0152965162ffffff1660448a0152965183166064890152905160848801525160a4870152925160c4860152905190911660e4840152908290818873e592427a0aece92de3edee1f18e0157c058615645af19485156101d95794610486575b507f764f0dc063c06f32d89a3f3af80c0db4be8a090901f589a478b447e0a51f09f1604060209681519081528688820152a4604051908152f35b9493506020853d6020116104d4575b816104a2602093836105a1565b810103126101cc57935192937f764f0dc063c06f32d89a3f3af80c0db4be8a090901f589a478b447e0a51f09f161044c565b3d9150610495565b634e487b7160e01b88526041600452602488fd5b6105119060203d602011610516575b61050981836105a1565b8101906105d9565b61036a565b503d6104ff565b6040513d89823e3d90fd5b6105409060203d6020116105165761050981836105a1565b610326565b87610552919892986105a1565b95886102de565b8980fd5b632ca2f52b60e11b8a5260048afd5b631ab7da6b60e01b8a5260048afd5b8880fd5b8780fd5b8580fd5b8280fd5b600435906001600160a01b03821682036101cc57565b90601f8019910116810190811067ffffffffffffffff8211176105c357604052565b634e487b7160e01b600052604160045260246000fd5b908160209103126101cc575180151581036101cc579056fea2646970667358221220284012a359f3e2a5ce51ae47ba1339f98b5f965caa89cee2b7af571eff5cf4f964736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x4AFE81F EQ PUSH2 0x1ED JUMPI POP DUP1 PUSH4 0x4E82DDA EQ PUSH2 0xA5 JUMPI DUP1 PUSH4 0xC69060DA EQ PUSH2 0x7E JUMPI PUSH4 0xD8264920 EQ PUSH2 0x4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7B JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7B JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7B JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x7B JUMPI PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7B JUMPI PUSH2 0xBF PUSH2 0x58B JUMP JUMPDEST SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x1E9 JUMPI PUSH1 0xC4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP3 SWAP1 DUP4 SWAP1 SUB PUSH2 0x1E5 JUMPI PUSH1 0x40 MLOAD SWAP6 PUSH4 0x4AFE81F PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP8 ADD MSTORE PUSH20 0x6B175474E89094C44DA98B954EEDEAC495271D0F PUSH1 0x24 DUP8 ADD MSTORE DUP2 PUSH1 0x44 DUP8 ADD MSTORE DUP4 PUSH1 0x64 DUP8 ADD MSTORE PUSH1 0x84 DUP7 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0xA4 DUP7 ADD MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0xC4 DUP7 ADD MSTORE PUSH1 0xE4 DUP6 ADD MSTORE DUP3 PUSH2 0x104 DUP6 ADD MSTORE PUSH20 0xA0B86991C6218B36C1D19D4A2E9EB0CE3606EB48 PUSH2 0x124 DUP6 ADD MSTORE PUSH2 0x144 DUP5 ADD MSTORE PUSH2 0x164 DUP4 ADD MSTORE PUSH2 0xBB8 PUSH2 0x184 DUP4 ADD MSTORE PUSH1 0x20 DUP3 PUSH2 0x1A4 DUP2 DUP5 ADDRESS GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x1D9 JUMPI SWAP1 PUSH2 0x1A1 JUMPI JUMPDEST PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1D1 JUMPI JUMPDEST DUP2 PUSH2 0x1BB PUSH1 0x20 SWAP4 DUP4 PUSH2 0x5A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1CC JUMPI PUSH1 0x20 SWAP1 MLOAD PUSH2 0x196 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1AE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 RETURNDATASIZE SWAP1 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST DUP3 CALLVALUE PUSH2 0x7B JUMPI PUSH2 0x1A0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7B JUMPI PUSH2 0x208 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x587 JUMPI PUSH1 0x44 CALLDATALOAD PUSH1 0x64 CALLDATALOAD SWAP3 PUSH1 0x84 CALLDATALOAD SWAP4 PUSH1 0xFF DUP6 AND DUP1 SWAP6 SUB PUSH2 0x583 JUMPI PUSH1 0xE4 CALLDATALOAD SWAP7 PUSH2 0x124 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP7 SWAP1 DUP8 SWAP1 SUB PUSH2 0x57F JUMPI PUSH2 0x144 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP4 SWAP1 DUP5 SWAP1 SUB PUSH2 0x57B JUMPI PUSH2 0x184 CALLDATALOAD SWAP5 PUSH3 0xFFFFFF DUP7 AND DUP1 SWAP7 SUB PUSH2 0x559 JUMPI DUP2 TIMESTAMP GT PUSH2 0x56C JUMPI DUP7 DUP12 GT PUSH2 0x55D JUMPI DUP8 EXTCODESIZE ISZERO PUSH2 0x559 JUMPI PUSH4 0xD505ACCF PUSH1 0xE0 SHL DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP5 ADD DUP2 SWAP1 MSTORE ADDRESS PUSH1 0x24 DUP6 ADD MSTORE PUSH1 0x44 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0xC4 DUP1 CALLDATALOAD SWAP1 DUP3 ADD MSTORE DUP7 DUP2 PUSH1 0xE4 DUP2 DUP4 DUP10 GAS CALL SWAP1 DUP2 PUSH2 0x545 JUMPI JUMPDEST POP PUSH2 0x2F2 JUMPI PUSH4 0x8BAA579F PUSH1 0xE0 SHL DUP7 MSTORE PUSH1 0x4 DUP7 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE DUP4 PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE DUP8 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x20 DUP2 PUSH1 0x64 DUP2 DUP11 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x51D JUMPI PUSH2 0x528 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x20 DUP2 PUSH1 0x44 DUP2 DUP11 DUP10 GAS CALL DUP1 ISZERO PUSH2 0x51D JUMPI PUSH2 0x4F0 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP2 PUSH2 0x100 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x4DC JUMPI PUSH1 0x40 SWAP1 DUP2 MSTORE DUP6 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD DUP9 DUP2 MSTORE DUP6 DUP4 ADD SWAP4 DUP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP5 DUP6 MSTORE PUSH2 0x164 CALLDATALOAD PUSH1 0x80 DUP8 ADD SWAP1 DUP2 MSTORE PUSH1 0xA0 DUP8 ADD DUP13 DUP2 MSTORE PUSH2 0x104 DUP1 CALLDATALOAD PUSH1 0xC0 DUP11 ADD SWAP1 DUP2 MSTORE PUSH1 0xE0 DUP11 ADD DUP15 DUP2 MSTORE SWAP7 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP10 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP13 ADD MSTORE SWAP5 MLOAD DUP6 AND PUSH1 0x24 DUP12 ADD MSTORE SWAP7 MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP11 ADD MSTORE SWAP7 MLOAD DUP4 AND PUSH1 0x64 DUP10 ADD MSTORE SWAP1 MLOAD PUSH1 0x84 DUP9 ADD MSTORE MLOAD PUSH1 0xA4 DUP8 ADD MSTORE SWAP3 MLOAD PUSH1 0xC4 DUP7 ADD MSTORE SWAP1 MLOAD SWAP1 SWAP2 AND PUSH1 0xE4 DUP5 ADD MSTORE SWAP1 DUP3 SWAP1 DUP2 DUP9 PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 GAS CALL SWAP5 DUP6 ISZERO PUSH2 0x1D9 JUMPI SWAP5 PUSH2 0x486 JUMPI JUMPDEST POP PUSH32 0x764F0DC063C06F32D89A3F3AF80C0DB4BE8A090901F589A478B447E0A51F09F1 PUSH1 0x40 PUSH1 0x20 SWAP7 DUP2 MLOAD SWAP1 DUP2 MSTORE DUP7 DUP9 DUP3 ADD MSTORE LOG4 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP5 SWAP4 POP PUSH1 0x20 DUP6 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x4D4 JUMPI JUMPDEST DUP2 PUSH2 0x4A2 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x5A1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1CC JUMPI SWAP4 MLOAD SWAP3 SWAP4 PUSH32 0x764F0DC063C06F32D89A3F3AF80C0DB4BE8A090901F589A478B447E0A51F09F1 PUSH2 0x44C JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x495 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP9 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP9 REVERT JUMPDEST PUSH2 0x511 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x516 JUMPI JUMPDEST PUSH2 0x509 DUP2 DUP4 PUSH2 0x5A1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x36A JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x4FF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x540 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x516 JUMPI PUSH2 0x509 DUP2 DUP4 PUSH2 0x5A1 JUMP JUMPDEST PUSH2 0x326 JUMP JUMPDEST DUP8 PUSH2 0x552 SWAP2 SWAP9 SWAP3 SWAP9 PUSH2 0x5A1 JUMP JUMPDEST SWAP6 DUP9 PUSH2 0x2DE JUMP JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH4 0x2CA2F52B PUSH1 0xE1 SHL DUP11 MSTORE PUSH1 0x4 DUP11 REVERT JUMPDEST PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x4 DUP11 REVERT JUMPDEST DUP9 DUP1 REVERT JUMPDEST DUP8 DUP1 REVERT JUMPDEST DUP6 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x1CC JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5C3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x1CC JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x1CC JUMPI SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 BLOCKHASH SLT LOG3 MSIZE RETURN 0xE2 0xA5 0xCE MLOAD 0xAE SELFBALANCE 0xBA SGT CODECOPY 0xF9 DUP12 PUSH0 SWAP7 TLOAD 0xAA DUP10 0xCE 0xE2 0xB7 0xAF JUMPI 0x1E SELFDESTRUCT TLOAD DELEGATECALL 0xF9 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
              "sourceMap": "267:3089:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:42;267:3089;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;267:3089:3;;;;;;;;;;;;;;;-1:-1:-1;;267:3089:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;267:3089:3;;;;;;;;;;;;;;;3019:328;;267:3089;;;;;;;3019:328;;267:3089;2840:42;267:3089;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2911:42;267:3089;;;;;;;;;;;;2980:4;267:3089;;;;;3019:4;:328;:4;;;:328;;;;;;;;;;267:3089;;;;;;;;;3019:328;;267:3089;3019:328;;267:3089;3019:328;;;;;;267:3089;3019:328;;;:::i;:::-;;;267:3089;;;;;;;3019:328;;267:3089;-1:-1:-1;267:3089:3;;3019:328;;;-1:-1:-1;3019:328:3;;;267:3089;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;267:3089:3;;;;;;:::i;:::-;;;-1:-1:-1;;;;;267:3089:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;267:3089:3;;;;;;;;;;;-1:-1:-1;;;;;267:3089:3;;;;;;;;;;;;;;;;;;;;1166:15;;:26;1162:89;;1294:27;;;1290:93;;1495:67;;;;;-1:-1:-1;;;1495:67:3;;-1:-1:-1;;;;;267:3089:3;;1495:67;;267:3089;;;1523:4;267:3089;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1495:67;;267:3089;1495:67;;;;;;;;;267:3089;-1:-1:-1;1491:152:3;;-1:-1:-1;;;1610:18:3;;267:3089;1610:18;;1491:152;267:3089;;;;;1682:64;;;267:3089;1682:64;;267:3089;1523:4;267:3089;;;;;;;;;;1682:64;267:3089;1682:64;;;;;;;;;;;1491:152;-1:-1:-1;267:3089:3;;-1:-1:-1;;;1786:53:3;;373:42;267:3089;1786:53;;267:3089;;;;;;;;;;;1786:53;;;;;;;;;;1491:152;267:3089;;;;;;;;;;;;;;;;;;;;;;;;1930:355;;;267:3089;;;1930:355;;;267:3089;;;;1930:355;;267:3089;;;;;;1930:355;;267:3089;;;;1930:355;;267:3089;;;;;;;1930:355;;267:3089;;;;1930:355;;267:3089;;;;;-1:-1:-1;;;2337:52:3;;267:3089;;-1:-1:-1;;;;;267:3089:3;;;;2337:52;;267:3089;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;373:42;2337:52;;;;;;;;;;1491:152;267:3089;2434:63;267:3089;;;;;;;;;;;;;2434:63;267:3089;;;;;;2337:52;;;;267:3089;2337:52;;267:3089;2337:52;;;;;;267:3089;2337:52;;;:::i;:::-;;;267:3089;;;;;;2337:52;;2434:63;2337:52;;;;;-1:-1:-1;2337:52:3;;267:3089;-1:-1:-1;;;267:3089:3;;;;;;;;1786:53;;;267:3089;1786:53;267:3089;1786:53;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;267:3089;;;;;;;;;1682:64;;;267:3089;1682:64;267:3089;1682:64;;;;;;;:::i;:::-;;;1495:67;;;;;;;;:::i;:::-;;;;;;267:3089;;;1290:93;-1:-1:-1;;;1348:20:3;;267:3089;1348:20;;1162:89;-1:-1:-1;;;1219:17:3;;267:3089;1219:17;;267:3089;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;267:3089:3;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;267:3089:3;;;;;-1:-1:-1;267:3089:3;;;;;;;;;;;;;;;;;;;:::o"
            },
            "methodIdentifiers": {
              "UNISWAP_ROUTER()": "d8264920",
              "eip712Helper()": "c69060da",
              "swapDAIToUSDC(address,uint256,uint256,uint8,bytes32,bytes32,address)": "04e82dda",
              "swapWithPermit(address,address,uint256,uint256,uint8,bytes32,bytes32,uint256,uint256,address,address,uint256,uint24)": "04afe81f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DeadlineExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"SwapExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UNISWAP_ROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eip712Helper\",\"outputs\":[{\"internalType\":\"contract EIP712Helper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"swapDAIToUSDC\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"permitAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"swapAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"swapAmountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"swapDeadline\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"swapWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swapPermit.sol\":\"SwapPermit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x2fa0657dd7b8bc75475a47f64bc04a9adb42236b15d65e6781594ea69a46c3e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7496f42681aed94bf0142a077324e50b86046610c1724e7c12e96cf1c365914a\",\"dweb:/ipfs/QmZvhNdSAAbN4PKPdheAqwpXukUiXp3Q3TdQccDMg2NDTV\"]},\"contracts/EIP712Helper.sol\":{\"keccak256\":\"0x8f26039521bae1ca3567c263a6c41ab427ca6560d12f2e018fb456e1a887b0dd\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://50520925fa1671e3f58496401e444bab2381ed87528ad14a1b30d2d03c18b8b1\",\"dweb:/ipfs/QmYxyz5VFRipuGzRUejeoM1QEmjCoHr9Q7J9cyPh1ozPEy\"]},\"contracts/swapPermit.sol\":{\"keccak256\":\"0xb262bc1b6f2b0ea936b73004ef711e59932f4a2dac500d21ebeaa7b084fbf13b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://e6a2dc31bf939b35ecc17561d521d0dfa3eeb3364acf127370cbec262cb09e9a\",\"dweb:/ipfs/QmaQgcPVa7ZxPHcAy6b28LLtioUk7StU5G5P2CkvAMY2iH\"]},\"interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xa1162270bf379dd0dd05e8e7bce479dc8e16e0905ae2785be1c01aa34891332d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://574bd659840d050e514d703f3f934346bee99b8bc092f311b66e77c3a477f723\",\"dweb:/ipfs/Qmbxgvpz8Yo6ivCExTiVCkNJG9paQxopyq7PMNwziXgxwY\"]}},\"version\":1}"
        }
      },
      "contracts/swapPermit2.sol": {
        "swapPermit": {
          "abi": [
            {
              "inputs": [],
              "name": "DeadlineExpired",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "FailedSignature",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InsufficientFund",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "SwapFailed",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "tokenIn",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountIn",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "tokenOut",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "name": "SwapDone",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "PERMIT2",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "POOL_FEE",
              "outputs": [
                {
                  "internalType": "uint24",
                  "name": "",
                  "type": "uint24"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "SWAP_ROUTER",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "SWAP_WITNESS_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "WITNESS_TYPE_STRING",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ISignatureTransfer.TokenPermissions",
                      "name": "permitted",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ISignatureTransfer.PermitTransferFrom",
                  "name": "permit",
                  "type": "tuple"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amountOutMinimum",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "swapWithPermit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60808060405234601557610891908161001b8239f35b600080fdfe608080604052600436101561001357600080fd5b600090813560e01c90816307a45b06146106b257508063156e21521461067e57806331a6fed5146100db5780636afdd850146100b1578063c6005893146100825763dd1b9c4a1461006357600080fd5b3461007f578060031936011261007f576020604051610bb88152f35b80fd5b503461007f578060031936011261007f57602060405173e592427a0aece92de3edee1f18e0157c058615648152f35b503461007f578060031936011261007f5760206040516e22d473030f116ddee9f6b43ac78ba38152f35b503461007f5761016036600319011261007f576004356001600160a01b0381169081900361067a573660231901906080821261066257604051916060830183811067ffffffffffffffff821117610666579060409182521261066257604051610143816106ec565b6024356001600160a01b038116810361065e578152604435602082015282526020820160643581526040830190608435825260a4359060018060a01b0382169081830361065a5760c4359060e43593610104359060ff821682036106565785421161064757602089510151156106385730850361063257508751516001600160a01b0316955b604051966080880188811067ffffffffffffffff8211176105b157908b93929160405260018060a01b0316885260208801610bb881526040890187815260608a018781526040519162ffffff60208401947f336f2af0a798b15b2079358586beb4bba15d1d2cde480c696dafc27f30e1b57786528d60018060a01b0390511660408601525116606084015260018060a01b0390511660808301525160a082015260a0815261027860c08261071e565b5190209060208b5101519260405193610290856106ec565b30855260208501526102a0610740565b936040519161012435602084015261014435604084015260ff60f81b9060f81b166060830152604182526102d560618361071e565b6e22d473030f116ddee9f6b43ac78ba33b156105a5576040516309be14ff60e11b81528d5180516001600160a01b031660048301526020015160248201529687958695610384956103719492939192610352929091905160448a015251606489015280516001600160a01b031660848901526020015160a4880152565b8d60c487015260e486015261014061010486015261014485019061081a565b838103600319016101248501529061081a565b0381836e22d473030f116ddee9f6b43ac78ba35af1908161061e575b506103b457631639d65d60e31b8752600487fd5b866020875160448260018060a01b03835116920151604051948593849263095ea7b360e01b845273e592427a0aece92de3edee1f18e0157c05861564600485015260248401525af19081156106135788916105d4575b50156105c557855180518551602090920151604051956001600160a01b03938416959193909216610100870167ffffffffffffffff8111888210176105b15760409081529087526020808801968752610bb8888301908152606089019384526080890194855260a0890195865260c0890196875260e089018d8152925163414bf38960e01b815298516001600160a01b0390811660048b01529751881660248a01525162ffffff16604489015291518616606488015291516084870152915160a4860152915160c4850152905190911660e483015281610104818873e592427a0aece92de3edee1f18e0157c058615645af1859181610579575b506105185763081ceff360e41b8552600485fd5b925180516020918201519251604080516001600160a01b039384168152808501959095529116908301526060820184905293507f83246e14d7c48054cd6e296526137915acc65174820cf05490d19f8090c0089a90608090a2604051908152f35b9091506020813d6020116105a9575b816105956020938361071e565b810103126105a557519038610504565b8580fd5b3d9150610588565b634e487b7160e01b8c52604160045260248cfd5b63081ceff360e41b8752600487fd5b90506020813d60201161060b575b816105ef6020938361071e565b8101031261060757518015158103610607573861040a565b8780fd5b3d91506105e2565b6040513d8a823e3d90fd5b8861062b9199929961071e565b96386103a0565b956101c9565b636a259e3160e11b8a5260048afd5b631ab7da6b60e01b8a5260048afd5b8980fd5b8680fd5b8480fd5b8280fd5b634e487b7160e01b85526041600452602485fd5b5080fd5b503461007f578060031936011261007f576106ae61069a610740565b60405191829160208352602083019061081a565b0390f35b90503461067a578160031936011261067a57807f336f2af0a798b15b2079358586beb4bba15d1d2cde480c696dafc27f30e1b57760209252f35b6040810190811067ffffffffffffffff82111761070857604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761070857604052565b6040519060c0820182811067ffffffffffffffff821117610708576040526095825274746f6b656e2c75696e7432353620616d6f756e742960581b60a0837f537761705769746e657373207769746e65737329537761705769746e6573732860208201527f6164647265737320746f6b656e4f75742c75696e743234206665652c6164647260408201527f65737320726563697069656e742c75696e7432353620616d6f756e744f75744d60608201527f696e696d756d29546f6b656e5065726d697373696f6e7328616464726573732060808201520152565b919082519283825260005b848110610846575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161082556fea264697066735822122048536e03d58fb0a0ceec4f85577f0109160881c212bdffab67e52d156d8cecd564736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x15 JUMPI PUSH2 0x891 SWAP1 DUP2 PUSH2 0x1B DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x7A45B06 EQ PUSH2 0x6B2 JUMPI POP DUP1 PUSH4 0x156E2152 EQ PUSH2 0x67E JUMPI DUP1 PUSH4 0x31A6FED5 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x6AFDD850 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xC6005893 EQ PUSH2 0x82 JUMPI PUSH4 0xDD1B9C4A EQ PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0xBB8 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH2 0x160 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x67A JUMPI CALLDATASIZE PUSH1 0x23 NOT ADD SWAP1 PUSH1 0x80 DUP3 SLT PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0x60 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x666 JUMPI SWAP1 PUSH1 0x40 SWAP2 DUP3 MSTORE SLT PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH2 0x143 DUP2 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x65E JUMPI DUP2 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x64 CALLDATALOAD DUP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x84 CALLDATALOAD DUP3 MSTORE PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x65A JUMPI PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0xE4 CALLDATALOAD SWAP4 PUSH2 0x104 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x656 JUMPI DUP6 TIMESTAMP GT PUSH2 0x647 JUMPI PUSH1 0x20 DUP10 MLOAD ADD MLOAD ISZERO PUSH2 0x638 JUMPI ADDRESS DUP6 SUB PUSH2 0x632 JUMPI POP DUP8 MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 JUMPDEST PUSH1 0x40 MLOAD SWAP7 PUSH1 0x80 DUP9 ADD DUP9 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5B1 JUMPI SWAP1 DUP12 SWAP4 SWAP3 SWAP2 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD PUSH2 0xBB8 DUP2 MSTORE PUSH1 0x40 DUP10 ADD DUP8 DUP2 MSTORE PUSH1 0x60 DUP11 ADD DUP8 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH3 0xFFFFFF PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0x336F2AF0A798B15B2079358586BEB4BBA15D1D2CDE480C696DAFC27F30E1B577 DUP7 MSTORE DUP14 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x40 DUP7 ADD MSTORE MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x80 DUP4 ADD MSTORE MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x278 PUSH1 0xC0 DUP3 PUSH2 0x71E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x20 DUP12 MLOAD ADD MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x290 DUP6 PUSH2 0x6EC JUMP JUMPDEST ADDRESS DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2A0 PUSH2 0x740 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x124 CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x144 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0xF8 SHL SWAP1 PUSH1 0xF8 SHL AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x41 DUP3 MSTORE PUSH2 0x2D5 PUSH1 0x61 DUP4 PUSH2 0x71E JUMP JUMPDEST PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 EXTCODESIZE ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9BE14FF PUSH1 0xE1 SHL DUP2 MSTORE DUP14 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x20 ADD MLOAD PUSH1 0x24 DUP3 ADD MSTORE SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH2 0x384 SWAP6 PUSH2 0x371 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x352 SWAP3 SWAP1 SWAP2 SWAP1 MLOAD PUSH1 0x44 DUP11 ADD MSTORE MLOAD PUSH1 0x64 DUP10 ADD MSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x84 DUP10 ADD MSTORE PUSH1 0x20 ADD MLOAD PUSH1 0xA4 DUP9 ADD MSTORE JUMP JUMPDEST DUP14 PUSH1 0xC4 DUP8 ADD MSTORE PUSH1 0xE4 DUP7 ADD MSTORE PUSH2 0x140 PUSH2 0x104 DUP7 ADD MSTORE PUSH2 0x144 DUP6 ADD SWAP1 PUSH2 0x81A JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x3 NOT ADD PUSH2 0x124 DUP6 ADD MSTORE SWAP1 PUSH2 0x81A JUMP JUMPDEST SUB DUP2 DUP4 PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 GAS CALL SWAP1 DUP2 PUSH2 0x61E JUMPI JUMPDEST POP PUSH2 0x3B4 JUMPI PUSH4 0x1639D65D PUSH1 0xE3 SHL DUP8 MSTORE PUSH1 0x4 DUP8 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP8 MLOAD PUSH1 0x44 DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND SWAP3 ADD MLOAD PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x613 JUMPI DUP9 SWAP2 PUSH2 0x5D4 JUMPI JUMPDEST POP ISZERO PUSH2 0x5C5 JUMPI DUP6 MLOAD DUP1 MLOAD DUP6 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH1 0x40 MLOAD SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 SWAP2 SWAP4 SWAP1 SWAP3 AND PUSH2 0x100 DUP8 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP9 DUP3 LT OR PUSH2 0x5B1 JUMPI PUSH1 0x40 SWAP1 DUP2 MSTORE SWAP1 DUP8 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP7 DUP8 MSTORE PUSH2 0xBB8 DUP9 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP10 ADD SWAP4 DUP5 MSTORE PUSH1 0x80 DUP10 ADD SWAP5 DUP6 MSTORE PUSH1 0xA0 DUP10 ADD SWAP6 DUP7 MSTORE PUSH1 0xC0 DUP10 ADD SWAP7 DUP8 MSTORE PUSH1 0xE0 DUP10 ADD DUP14 DUP2 MSTORE SWAP3 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP12 ADD MSTORE SWAP8 MLOAD DUP9 AND PUSH1 0x24 DUP11 ADD MSTORE MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP10 ADD MSTORE SWAP2 MLOAD DUP7 AND PUSH1 0x64 DUP9 ADD MSTORE SWAP2 MLOAD PUSH1 0x84 DUP8 ADD MSTORE SWAP2 MLOAD PUSH1 0xA4 DUP7 ADD MSTORE SWAP2 MLOAD PUSH1 0xC4 DUP6 ADD MSTORE SWAP1 MLOAD SWAP1 SWAP2 AND PUSH1 0xE4 DUP4 ADD MSTORE DUP2 PUSH2 0x104 DUP2 DUP9 PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 GAS CALL DUP6 SWAP2 DUP2 PUSH2 0x579 JUMPI JUMPDEST POP PUSH2 0x518 JUMPI PUSH4 0x81CEFF3 PUSH1 0xE4 SHL DUP6 MSTORE PUSH1 0x4 DUP6 REVERT JUMPDEST SWAP3 MLOAD DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD MLOAD SWAP3 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE DUP1 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP2 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE SWAP4 POP PUSH32 0x83246E14D7C48054CD6E296526137915ACC65174820CF05490D19F8090C0089A SWAP1 PUSH1 0x80 SWAP1 LOG2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5A9 JUMPI JUMPDEST DUP2 PUSH2 0x595 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x71E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A5 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x504 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x588 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH4 0x81CEFF3 PUSH1 0xE4 SHL DUP8 MSTORE PUSH1 0x4 DUP8 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x60B JUMPI JUMPDEST DUP2 PUSH2 0x5EF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x71E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x607 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x607 JUMPI CODESIZE PUSH2 0x40A JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0x62B SWAP2 SWAP10 SWAP3 SWAP10 PUSH2 0x71E JUMP JUMPDEST SWAP7 CODESIZE PUSH2 0x3A0 JUMP JUMPDEST SWAP6 PUSH2 0x1C9 JUMP JUMPDEST PUSH4 0x6A259E31 PUSH1 0xE1 SHL DUP11 MSTORE PUSH1 0x4 DUP11 REVERT JUMPDEST PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x4 DUP11 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH2 0x6AE PUSH2 0x69A PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x81A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x67A JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x67A JUMPI DUP1 PUSH32 0x336F2AF0A798B15B2079358586BEB4BBA15D1D2CDE480C696DAFC27F30E1B577 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x708 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x708 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xC0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x708 JUMPI PUSH1 0x40 MSTORE PUSH1 0x95 DUP3 MSTORE PUSH21 0x746F6B656E2C75696E7432353620616D6F756E7429 PUSH1 0x58 SHL PUSH1 0xA0 DUP4 PUSH32 0x537761705769746E657373207769746E65737329537761705769746E65737328 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6164647265737320746F6B656E4F75742C75696E743234206665652C61646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x65737320726563697069656E742C75696E7432353620616D6F756E744F75744D PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x696E696D756D29546F6B656E5065726D697373696F6E73286164647265737320 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x846 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x825 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE MSTORE8 PUSH15 0x3D58FB0A0CEEC4F85577F01091608 DUP2 0xC2 SLT 0xBD SELFDESTRUCT 0xAB PUSH8 0xE52D156D8CECD564 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
              "sourceMap": "194:3477:4:-:0;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_encode_string": {
                  "entryPoint": 2074,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_struct_TokenPermissions": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_literal_to_memory_7079ddfdc59d22b558648e60fd7f4cd636aa78db38d1e54fb679027acfc894bd": {
                  "entryPoint": 1856,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 1822,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "finalize_allocation_4525": {
                  "entryPoint": 1772,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608080604052600436101561001357600080fd5b600090813560e01c90816307a45b06146106b257508063156e21521461067e57806331a6fed5146100db5780636afdd850146100b1578063c6005893146100825763dd1b9c4a1461006357600080fd5b3461007f578060031936011261007f576020604051610bb88152f35b80fd5b503461007f578060031936011261007f57602060405173e592427a0aece92de3edee1f18e0157c058615648152f35b503461007f578060031936011261007f5760206040516e22d473030f116ddee9f6b43ac78ba38152f35b503461007f5761016036600319011261007f576004356001600160a01b0381169081900361067a573660231901906080821261066257604051916060830183811067ffffffffffffffff821117610666579060409182521261066257604051610143816106ec565b6024356001600160a01b038116810361065e578152604435602082015282526020820160643581526040830190608435825260a4359060018060a01b0382169081830361065a5760c4359060e43593610104359060ff821682036106565785421161064757602089510151156106385730850361063257508751516001600160a01b0316955b604051966080880188811067ffffffffffffffff8211176105b157908b93929160405260018060a01b0316885260208801610bb881526040890187815260608a018781526040519162ffffff60208401947f336f2af0a798b15b2079358586beb4bba15d1d2cde480c696dafc27f30e1b57786528d60018060a01b0390511660408601525116606084015260018060a01b0390511660808301525160a082015260a0815261027860c08261071e565b5190209060208b5101519260405193610290856106ec565b30855260208501526102a0610740565b936040519161012435602084015261014435604084015260ff60f81b9060f81b166060830152604182526102d560618361071e565b6e22d473030f116ddee9f6b43ac78ba33b156105a5576040516309be14ff60e11b81528d5180516001600160a01b031660048301526020015160248201529687958695610384956103719492939192610352929091905160448a015251606489015280516001600160a01b031660848901526020015160a4880152565b8d60c487015260e486015261014061010486015261014485019061081a565b838103600319016101248501529061081a565b0381836e22d473030f116ddee9f6b43ac78ba35af1908161061e575b506103b457631639d65d60e31b8752600487fd5b866020875160448260018060a01b03835116920151604051948593849263095ea7b360e01b845273e592427a0aece92de3edee1f18e0157c05861564600485015260248401525af19081156106135788916105d4575b50156105c557855180518551602090920151604051956001600160a01b03938416959193909216610100870167ffffffffffffffff8111888210176105b15760409081529087526020808801968752610bb8888301908152606089019384526080890194855260a0890195865260c0890196875260e089018d8152925163414bf38960e01b815298516001600160a01b0390811660048b01529751881660248a01525162ffffff16604489015291518616606488015291516084870152915160a4860152915160c4850152905190911660e483015281610104818873e592427a0aece92de3edee1f18e0157c058615645af1859181610579575b506105185763081ceff360e41b8552600485fd5b925180516020918201519251604080516001600160a01b039384168152808501959095529116908301526060820184905293507f83246e14d7c48054cd6e296526137915acc65174820cf05490d19f8090c0089a90608090a2604051908152f35b9091506020813d6020116105a9575b816105956020938361071e565b810103126105a557519038610504565b8580fd5b3d9150610588565b634e487b7160e01b8c52604160045260248cfd5b63081ceff360e41b8752600487fd5b90506020813d60201161060b575b816105ef6020938361071e565b8101031261060757518015158103610607573861040a565b8780fd5b3d91506105e2565b6040513d8a823e3d90fd5b8861062b9199929961071e565b96386103a0565b956101c9565b636a259e3160e11b8a5260048afd5b631ab7da6b60e01b8a5260048afd5b8980fd5b8680fd5b8480fd5b8280fd5b634e487b7160e01b85526041600452602485fd5b5080fd5b503461007f578060031936011261007f576106ae61069a610740565b60405191829160208352602083019061081a565b0390f35b90503461067a578160031936011261067a57807f336f2af0a798b15b2079358586beb4bba15d1d2cde480c696dafc27f30e1b57760209252f35b6040810190811067ffffffffffffffff82111761070857604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761070857604052565b6040519060c0820182811067ffffffffffffffff821117610708576040526095825274746f6b656e2c75696e7432353620616d6f756e742960581b60a0837f537761705769746e657373207769746e65737329537761705769746e6573732860208201527f6164647265737320746f6b656e4f75742c75696e743234206665652c6164647260408201527f65737320726563697069656e742c75696e7432353620616d6f756e744f75744d60608201527f696e696d756d29546f6b656e5065726d697373696f6e7328616464726573732060808201520152565b919082519283825260005b848110610846575050826000602080949584010152601f8019910116010190565b8060208092840101518282860101520161082556fea264697066735822122048536e03d58fb0a0ceec4f85577f0109160881c212bdffab67e52d156d8cecd564736f6c634300081c0033",
              "opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x7A45B06 EQ PUSH2 0x6B2 JUMPI POP DUP1 PUSH4 0x156E2152 EQ PUSH2 0x67E JUMPI DUP1 PUSH4 0x31A6FED5 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0x6AFDD850 EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0xC6005893 EQ PUSH2 0x82 JUMPI PUSH4 0xDD1B9C4A EQ PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x7F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH2 0xBB8 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI PUSH2 0x160 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x7F JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x67A JUMPI CALLDATASIZE PUSH1 0x23 NOT ADD SWAP1 PUSH1 0x80 DUP3 SLT PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH1 0x60 DUP4 ADD DUP4 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x666 JUMPI SWAP1 PUSH1 0x40 SWAP2 DUP3 MSTORE SLT PUSH2 0x662 JUMPI PUSH1 0x40 MLOAD PUSH2 0x143 DUP2 PUSH2 0x6EC JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x65E JUMPI DUP2 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x20 DUP3 ADD MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x64 CALLDATALOAD DUP2 MSTORE PUSH1 0x40 DUP4 ADD SWAP1 PUSH1 0x84 CALLDATALOAD DUP3 MSTORE PUSH1 0xA4 CALLDATALOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP2 DUP4 SUB PUSH2 0x65A JUMPI PUSH1 0xC4 CALLDATALOAD SWAP1 PUSH1 0xE4 CALLDATALOAD SWAP4 PUSH2 0x104 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP3 SUB PUSH2 0x656 JUMPI DUP6 TIMESTAMP GT PUSH2 0x647 JUMPI PUSH1 0x20 DUP10 MLOAD ADD MLOAD ISZERO PUSH2 0x638 JUMPI ADDRESS DUP6 SUB PUSH2 0x632 JUMPI POP DUP8 MLOAD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP6 JUMPDEST PUSH1 0x40 MLOAD SWAP7 PUSH1 0x80 DUP9 ADD DUP9 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x5B1 JUMPI SWAP1 DUP12 SWAP4 SWAP3 SWAP2 PUSH1 0x40 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND DUP9 MSTORE PUSH1 0x20 DUP9 ADD PUSH2 0xBB8 DUP2 MSTORE PUSH1 0x40 DUP10 ADD DUP8 DUP2 MSTORE PUSH1 0x60 DUP11 ADD DUP8 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP2 PUSH3 0xFFFFFF PUSH1 0x20 DUP5 ADD SWAP5 PUSH32 0x336F2AF0A798B15B2079358586BEB4BBA15D1D2CDE480C696DAFC27F30E1B577 DUP7 MSTORE DUP14 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x40 DUP7 ADD MSTORE MLOAD AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 MLOAD AND PUSH1 0x80 DUP4 ADD MSTORE MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xA0 DUP2 MSTORE PUSH2 0x278 PUSH1 0xC0 DUP3 PUSH2 0x71E JUMP JUMPDEST MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x20 DUP12 MLOAD ADD MLOAD SWAP3 PUSH1 0x40 MLOAD SWAP4 PUSH2 0x290 DUP6 PUSH2 0x6EC JUMP JUMPDEST ADDRESS DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH2 0x2A0 PUSH2 0x740 JUMP JUMPDEST SWAP4 PUSH1 0x40 MLOAD SWAP2 PUSH2 0x124 CALLDATALOAD PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x144 CALLDATALOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0xF8 SHL SWAP1 PUSH1 0xF8 SHL AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x41 DUP3 MSTORE PUSH2 0x2D5 PUSH1 0x61 DUP4 PUSH2 0x71E JUMP JUMPDEST PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 EXTCODESIZE ISZERO PUSH2 0x5A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9BE14FF PUSH1 0xE1 SHL DUP2 MSTORE DUP14 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x20 ADD MLOAD PUSH1 0x24 DUP3 ADD MSTORE SWAP7 DUP8 SWAP6 DUP7 SWAP6 PUSH2 0x384 SWAP6 PUSH2 0x371 SWAP5 SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x352 SWAP3 SWAP1 SWAP2 SWAP1 MLOAD PUSH1 0x44 DUP11 ADD MSTORE MLOAD PUSH1 0x64 DUP10 ADD MSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x84 DUP10 ADD MSTORE PUSH1 0x20 ADD MLOAD PUSH1 0xA4 DUP9 ADD MSTORE JUMP JUMPDEST DUP14 PUSH1 0xC4 DUP8 ADD MSTORE PUSH1 0xE4 DUP7 ADD MSTORE PUSH2 0x140 PUSH2 0x104 DUP7 ADD MSTORE PUSH2 0x144 DUP6 ADD SWAP1 PUSH2 0x81A JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x3 NOT ADD PUSH2 0x124 DUP6 ADD MSTORE SWAP1 PUSH2 0x81A JUMP JUMPDEST SUB DUP2 DUP4 PUSH15 0x22D473030F116DDEE9F6B43AC78BA3 GAS CALL SWAP1 DUP2 PUSH2 0x61E JUMPI JUMPDEST POP PUSH2 0x3B4 JUMPI PUSH4 0x1639D65D PUSH1 0xE3 SHL DUP8 MSTORE PUSH1 0x4 DUP8 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP8 MLOAD PUSH1 0x44 DUP3 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND SWAP3 ADD MLOAD PUSH1 0x40 MLOAD SWAP5 DUP6 SWAP4 DUP5 SWAP3 PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP5 MSTORE PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL SWAP1 DUP2 ISZERO PUSH2 0x613 JUMPI DUP9 SWAP2 PUSH2 0x5D4 JUMPI JUMPDEST POP ISZERO PUSH2 0x5C5 JUMPI DUP6 MLOAD DUP1 MLOAD DUP6 MLOAD PUSH1 0x20 SWAP1 SWAP3 ADD MLOAD PUSH1 0x40 MLOAD SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND SWAP6 SWAP2 SWAP4 SWAP1 SWAP3 AND PUSH2 0x100 DUP8 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP9 DUP3 LT OR PUSH2 0x5B1 JUMPI PUSH1 0x40 SWAP1 DUP2 MSTORE SWAP1 DUP8 MSTORE PUSH1 0x20 DUP1 DUP9 ADD SWAP7 DUP8 MSTORE PUSH2 0xBB8 DUP9 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x60 DUP10 ADD SWAP4 DUP5 MSTORE PUSH1 0x80 DUP10 ADD SWAP5 DUP6 MSTORE PUSH1 0xA0 DUP10 ADD SWAP6 DUP7 MSTORE PUSH1 0xC0 DUP10 ADD SWAP7 DUP8 MSTORE PUSH1 0xE0 DUP10 ADD DUP14 DUP2 MSTORE SWAP3 MLOAD PUSH4 0x414BF389 PUSH1 0xE0 SHL DUP2 MSTORE SWAP9 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x4 DUP12 ADD MSTORE SWAP8 MLOAD DUP9 AND PUSH1 0x24 DUP11 ADD MSTORE MLOAD PUSH3 0xFFFFFF AND PUSH1 0x44 DUP10 ADD MSTORE SWAP2 MLOAD DUP7 AND PUSH1 0x64 DUP9 ADD MSTORE SWAP2 MLOAD PUSH1 0x84 DUP8 ADD MSTORE SWAP2 MLOAD PUSH1 0xA4 DUP7 ADD MSTORE SWAP2 MLOAD PUSH1 0xC4 DUP6 ADD MSTORE SWAP1 MLOAD SWAP1 SWAP2 AND PUSH1 0xE4 DUP4 ADD MSTORE DUP2 PUSH2 0x104 DUP2 DUP9 PUSH20 0xE592427A0AECE92DE3EDEE1F18E0157C05861564 GAS CALL DUP6 SWAP2 DUP2 PUSH2 0x579 JUMPI JUMPDEST POP PUSH2 0x518 JUMPI PUSH4 0x81CEFF3 PUSH1 0xE4 SHL DUP6 MSTORE PUSH1 0x4 DUP6 REVERT JUMPDEST SWAP3 MLOAD DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD MLOAD SWAP3 MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE DUP1 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP2 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD DUP5 SWAP1 MSTORE SWAP4 POP PUSH32 0x83246E14D7C48054CD6E296526137915ACC65174820CF05490D19F8090C0089A SWAP1 PUSH1 0x80 SWAP1 LOG2 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST SWAP1 SWAP2 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x5A9 JUMPI JUMPDEST DUP2 PUSH2 0x595 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x71E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x5A5 JUMPI MLOAD SWAP1 CODESIZE PUSH2 0x504 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x588 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP13 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP13 REVERT JUMPDEST PUSH4 0x81CEFF3 PUSH1 0xE4 SHL DUP8 MSTORE PUSH1 0x4 DUP8 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x60B JUMPI JUMPDEST DUP2 PUSH2 0x5EF PUSH1 0x20 SWAP4 DUP4 PUSH2 0x71E JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x607 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x607 JUMPI CODESIZE PUSH2 0x40A JUMP JUMPDEST DUP8 DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP9 PUSH2 0x62B SWAP2 SWAP10 SWAP3 SWAP10 PUSH2 0x71E JUMP JUMPDEST SWAP7 CODESIZE PUSH2 0x3A0 JUMP JUMPDEST SWAP6 PUSH2 0x1C9 JUMP JUMPDEST PUSH4 0x6A259E31 PUSH1 0xE1 SHL DUP11 MSTORE PUSH1 0x4 DUP11 REVERT JUMPDEST PUSH4 0x1AB7DA6B PUSH1 0xE0 SHL DUP11 MSTORE PUSH1 0x4 DUP11 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP5 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x7F JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x7F JUMPI PUSH2 0x6AE PUSH2 0x69A PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x81A JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST SWAP1 POP CALLVALUE PUSH2 0x67A JUMPI DUP2 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x67A JUMPI DUP1 PUSH32 0x336F2AF0A798B15B2079358586BEB4BBA15D1D2CDE480C696DAFC27F30E1B577 PUSH1 0x20 SWAP3 MSTORE RETURN JUMPDEST PUSH1 0x40 DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x708 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x708 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0xC0 DUP3 ADD DUP3 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x708 JUMPI PUSH1 0x40 MSTORE PUSH1 0x95 DUP3 MSTORE PUSH21 0x746F6B656E2C75696E7432353620616D6F756E7429 PUSH1 0x58 SHL PUSH1 0xA0 DUP4 PUSH32 0x537761705769746E657373207769746E65737329537761705769746E65737328 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x6164647265737320746F6B656E4F75742C75696E743234206665652C61646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH32 0x65737320726563697069656E742C75696E7432353620616D6F756E744F75744D PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x696E696D756D29546F6B656E5065726D697373696F6E73286164647265737320 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x846 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x20 DUP1 SWAP3 DUP5 ADD ADD MLOAD DUP3 DUP3 DUP7 ADD ADD MSTORE ADD PUSH2 0x825 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE MSTORE8 PUSH15 0x3D58FB0A0CEEC4F85577F01091608 DUP2 0xC2 SLT 0xBD SELFDESTRUCT 0xAB PUSH8 0xE52D156D8CECD564 PUSH20 0x6F6C634300081C00330000000000000000000000 ",
              "sourceMap": "194:3477:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;433:4;194:3477;;;;;;;;;;;;;;;;;;;;;;259:42;194:3477;;;;;;;;;;;;;;;;;;;346:42;194:3477;;;;;;;;;;-1:-1:-1;;194:3477:4;;;;;;-1:-1:-1;;;;;194:3477:4;;;;;;;;;-1:-1:-1;;194:3477:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;194:3477:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1565:15;;:26;1561:81;;194:3477;1665:16;;:23;194:3477;1665:28;1661:84;;1854:4;1833:26;;1854:4;;-1:-1:-1;1862:16:4;;194:3477;-1:-1:-1;;;;;194:3477:4;;1833:63;194:3477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1797:219;;433:4;194:3477;;;1797:219;;194:3477;;;;1797:219;;194:3477;;;;;2054:46;194:3477;;2054:46;;194:3477;925:96;194:3477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:46;;;194:3477;2054:46;;:::i;:::-;194:3477;2044:57;;2350:16;194:3477;2350:16;;:23;194:3477;;;;;;;;:::i;:::-;1854:4;194:3477;;;2228:164;;194:3477;;;:::i;:::-;;;;;;;;2501:25;;194:3477;;;;;;;;;;;;;;;;;;2501:25;;;;;;;:::i;:::-;346:42;2133:408;;;;194:3477;;-1:-1:-1;;;2133:408:4;;194:3477;;;;-1:-1:-1;;;;;194:3477:4;;2133:408;;194:3477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;194:3477:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;194:3477:4;;;;;;;:::i;:::-;2133:408;;;346:42;2133:408;;;;;;1833:63;-1:-1:-1;2117:500:4;;-1:-1:-1;;;2589:17:4;;194:3477;2589:17;;2117:500;2646:16;194:3477;2646:16;;194:3477;;;;;;;;;;2691:23;;194:3477;;;;;;;;;;;2633:82;;259:42;194:3477;2633:82;;194:3477;;;;;2633:82;;;;;;;;;;;2117:500;2632:83;;2628:133;;2913:16;;194:3477;;;;;3136:23;;;194:3477;;;;-1:-1:-1;;;;;194:3477:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2847:429;;;194:3477;;;433:4;2847:429;;;194:3477;;;;2847:429;;194:3477;;;;2847:429;;194:3477;;;;2847:429;;194:3477;;;;2847:429;;194:3477;;;;2847:429;;194:3477;;;;;-1:-1:-1;;;2788:502:4;;194:3477;;-1:-1:-1;;;;;194:3477:4;;;;2788:502;;194:3477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;259:42;2788:502;;;;;;;2117:500;-1:-1:-1;2772:864:4;;-1:-1:-1;;;3613:12:4;;194:3477;2738:12;3613;2772:864;3432:16;;194:3477;;;3472:23;;;194:3477;;;;;;-1:-1:-1;;;;;194:3477:4;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3383:191:4;;194:3477;;3383:191;194:3477;;;;;;2788:502;;;;194:3477;2788:502;;194:3477;2788:502;;;;;;194:3477;2788:502;;;:::i;:::-;;;194:3477;;;;;2788:502;;;;194:3477;;;;2788:502;;;-1:-1:-1;2788:502:4;;194:3477;-1:-1:-1;;;194:3477:4;;2501:25;194:3477;;;;;2628:133;-1:-1:-1;;;2738:12:4;;194:3477;2738:12;;2633:82;;;194:3477;2633:82;;194:3477;2633:82;;;;;;194:3477;2633:82;;;:::i;:::-;;;194:3477;;;;;;;;;;;;2633:82;;;194:3477;;;;2633:82;;;-1:-1:-1;2633:82:4;;;194:3477;;;;;;;;;2133:408;;;;;;;;:::i;:::-;;;;;1833:63;;;;1661:84;-1:-1:-1;;;1716:18:4;;194:3477;1716:18;;1561:81;-1:-1:-1;;;1614:17:4;;194:3477;1614:17;;194:3477;;;;;;;;;;;;;;;;;-1:-1:-1;;;194:3477:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;925:96;194:3477;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;194:3477:4;;;;;-1:-1:-1;194:3477:4;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;194:3477:4;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;"
            },
            "methodIdentifiers": {
              "PERMIT2()": "6afdd850",
              "POOL_FEE()": "dd1b9c4a",
              "SWAP_ROUTER()": "c6005893",
              "SWAP_WITNESS_TYPEHASH()": "07a45b06",
              "WITNESS_TYPE_STRING()": "156e2152",
              "swapWithPermit(address,((address,uint256),uint256,uint256),address,uint256,uint256,uint8,bytes32,bytes32)": "31a6fed5"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DeadlineExpired\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedSignature\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFund\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SwapFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"SwapDone\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PERMIT2\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POOL_FEE\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_ROUTER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SWAP_WITNESS_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WITNESS_TYPE_STRING\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"swapWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swapPermit2.sol\":\"swapPermit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/swapPermit2.sol\":{\"keccak256\":\"0xf555038074b46e5fa8e16cd87b997001f3e5853e8b5d67c47e12f4cc67e0191b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://efd84931cd684fb029130269fdb9217019b96bd1f8db07ec40701fabd2c1c4bf\",\"dweb:/ipfs/QmTG3Qc54WsRy5YnMsFniTLN4FXTuVauD7P9eRroattda2\"]},\"interfaces/IERC20Permit.sol\":{\"keccak256\":\"0xc0e0f7113943103d6e21fe33a0436bb19940e0f1d2f661aba53674dc81b91f5d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9f1ae95e62c3f297af2a4bab6f25e7764d7510879d285ce544f796172d844b5c\",\"dweb:/ipfs/QmSsiU8QiF9jotaPfKGXv5N8aPYmgDzpjAgW7Neui5u25C\"]},\"interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x2b54c0b24da1621aa4200585d66a5abd949c44d9205e78077ab3369b81f5f4ba\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://97d81e0f11081a8469b42e8377b12841a39fdd0e98f695c4f768832109342c77\",\"dweb:/ipfs/QmctKwRv1jdC9uvXd4siU7aWyiiyavcLibq6Fha2CQdkLf\"]},\"interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xa1162270bf379dd0dd05e8e7bce479dc8e16e0905ae2785be1c01aa34891332d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://574bd659840d050e514d703f3f934346bee99b8bc092f311b66e77c3a477f723\",\"dweb:/ipfs/Qmbxgvpz8Yo6ivCExTiVCkNJG9paQxopyq7PMNwziXgxwY\"]}},\"version\":1}"
        }
      },
      "interfaces/IERC20Permit.sol": {
        "IERC20Permit": {
          "abi": [
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"interfaces/IERC20Permit.sol\":{\"keccak256\":\"0xc0e0f7113943103d6e21fe33a0436bb19940e0f1d2f661aba53674dc81b91f5d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://9f1ae95e62c3f297af2a4bab6f25e7764d7510879d285ce544f796172d844b5c\",\"dweb:/ipfs/QmSsiU8QiF9jotaPfKGXv5N8aPYmgDzpjAgW7Neui5u25C\"]}},\"version\":1}"
        }
      },
      "interfaces/ISignatureTransfer.sol": {
        "ISignatureTransfer": {
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "components": [
                        {
                          "internalType": "address",
                          "name": "token",
                          "type": "address"
                        },
                        {
                          "internalType": "uint256",
                          "name": "amount",
                          "type": "uint256"
                        }
                      ],
                      "internalType": "struct ISignatureTransfer.TokenPermissions",
                      "name": "permitted",
                      "type": "tuple"
                    },
                    {
                      "internalType": "uint256",
                      "name": "nonce",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ISignatureTransfer.PermitTransferFrom",
                  "name": "permit",
                  "type": "tuple"
                },
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "requestedAmount",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ISignatureTransfer.SignatureTransferDetails",
                  "name": "transferDetails",
                  "type": "tuple"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "witness",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "witnessTypeString",
                  "type": "string"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "name": "permitWitnessTransferFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "permitWitnessTransferFrom(((address,uint256),uint256,uint256),(address,uint256),address,bytes32,string,bytes)": "137c29fe"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.TokenPermissions\",\"name\":\"permitted\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.PermitTransferFrom\",\"name\":\"permit\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct ISignatureTransfer.SignatureTransferDetails\",\"name\":\"transferDetails\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"witness\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"witnessTypeString\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"permitWitnessTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/ISignatureTransfer.sol\":\"ISignatureTransfer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"interfaces/ISignatureTransfer.sol\":{\"keccak256\":\"0x2b54c0b24da1621aa4200585d66a5abd949c44d9205e78077ab3369b81f5f4ba\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://97d81e0f11081a8469b42e8377b12841a39fdd0e98f695c4f768832109342c77\",\"dweb:/ipfs/QmctKwRv1jdC9uvXd4siU7aWyiiyavcLibq6Fha2CQdkLf\"]}},\"version\":1}"
        }
      },
      "interfaces/ISwapRouter.sol": {
        "ISwapRouter": {
          "abi": [
            {
              "inputs": [
                {
                  "components": [
                    {
                      "internalType": "address",
                      "name": "tokenIn",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "tokenOut",
                      "type": "address"
                    },
                    {
                      "internalType": "uint24",
                      "name": "fee",
                      "type": "uint24"
                    },
                    {
                      "internalType": "address",
                      "name": "recipient",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "deadline",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountIn",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amountOutMinimum",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint160",
                      "name": "sqrtPriceLimitX96",
                      "type": "uint160"
                    }
                  ],
                  "internalType": "struct ISwapRouter.ExactInputSingleParams",
                  "name": "params",
                  "type": "tuple"
                }
              ],
              "name": "exactInputSingle",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amountOut",
                  "type": "uint256"
                }
              ],
              "stateMutability": "payable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))": "414bf389"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"interfaces/ISwapRouter.sol\":{\"keccak256\":\"0xa1162270bf379dd0dd05e8e7bce479dc8e16e0905ae2785be1c01aa34891332d\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://574bd659840d050e514d703f3f934346bee99b8bc092f311b66e77c3a477f723\",\"dweb:/ipfs/Qmbxgvpz8Yo6ivCExTiVCkNJG9paQxopyq7PMNwziXgxwY\"]}},\"version\":1}"
        }
      }
    }
  }
}