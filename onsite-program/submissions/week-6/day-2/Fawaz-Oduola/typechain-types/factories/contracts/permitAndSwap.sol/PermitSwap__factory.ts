/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PermitSwap,
  PermitSwapInterface,
} from "../../../contracts/permitAndSwap.sol/PermitSwap";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permitAndSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506103418061001f6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ea25310214610030575b600080fd5b61004a600480360381019061004591906101d3565b61004c565b005b8573ffffffffffffffffffffffffffffffffffffffff1663d505accf333088888888886040518863ffffffff1660e01b8152600401610091979695949392919061029c565b600060405180830381600087803b1580156100ab57600080fd5b505af11580156100bf573d6000803e3d6000fd5b50505050505050505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100fb826100d0565b9050919050565b61010b816100f0565b811461011657600080fd5b50565b60008135905061012881610102565b92915050565b6000819050919050565b6101418161012e565b811461014c57600080fd5b50565b60008135905061015e81610138565b92915050565b600060ff82169050919050565b61017a81610164565b811461018557600080fd5b50565b60008135905061019781610171565b92915050565b6000819050919050565b6101b08161019d565b81146101bb57600080fd5b50565b6000813590506101cd816101a7565b92915050565b60008060008060008060c087890312156101f0576101ef6100cb565b5b60006101fe89828a01610119565b965050602061020f89828a0161014f565b955050604061022089828a0161014f565b945050606061023189828a01610188565b935050608061024289828a016101be565b92505060a061025389828a016101be565b9150509295509295509295565b610269816100f0565b82525050565b6102788161012e565b82525050565b61028781610164565b82525050565b6102968161019d565b82525050565b600060e0820190506102b1600083018a610260565b6102be6020830189610260565b6102cb604083018861026f565b6102d8606083018761026f565b6102e5608083018661027e565b6102f260a083018561028d565b6102ff60c083018461028d565b9897505050505050505056fea2646970667358221220e94631bbdfef0fd21a3e38b1a24831a473398946829bb4cd207abc3fbd5a67f964736f6c634300081c0033";

type PermitSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PermitSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PermitSwap__factory extends ContractFactory {
  constructor(...args: PermitSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PermitSwap & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PermitSwap__factory {
    return super.connect(runner) as PermitSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PermitSwapInterface {
    return new Interface(_abi) as PermitSwapInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PermitSwap {
    return new Contract(address, _abi, runner) as unknown as PermitSwap;
  }
}
