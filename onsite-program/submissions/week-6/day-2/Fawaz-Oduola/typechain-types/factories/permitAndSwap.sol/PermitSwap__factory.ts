/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PermitSwap,
  PermitSwapInterface,
} from "../../permitAndSwap.sol/PermitSwap";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "PERMIT2",
    outputs: [
      {
        internalType: "contract IPermit2",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Router",
    outputs: [
      {
        internalType: "contract IUniswapV2Router01",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "out",
        type: "address",
      },
      {
        internalType: "uint160",
        name: "amount",
        type: "uint160",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "address",
                name: "token",
                type: "address",
              },
              {
                internalType: "uint160",
                name: "amount",
                type: "uint160",
              },
              {
                internalType: "uint48",
                name: "expiration",
                type: "uint48",
              },
              {
                internalType: "uint48",
                name: "nonce",
                type: "uint48",
              },
            ],
            internalType: "struct IAllowanceTransfer.PermitDetails",
            name: "details",
            type: "tuple",
          },
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sigDeadline",
            type: "uint256",
          },
        ],
        internalType: "struct IAllowanceTransfer.PermitSingle",
        name: "permitSingle",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "permitAndSwap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    name: "tokenBalancesByUser",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506108638061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636afdd850146100515780636dfb83da1461006f5780638d00e14e1461008b578063f6d7eade146100bb575b600080fd5b6100596100d9565b604051610066919061022c565b60405180910390f35b610089600480360381019061008491906105b8565b6100ec565b005b6100a560048036038101906100a091906106ba565b610170565b6040516100b29190610709565b60405180910390f35b6100c3610195565b6040516100d09190610745565b60405180910390f35b6e22d473030f116ddee9f6b43ac78ba381565b8a73ffffffffffffffffffffffffffffffffffffffff1663d505accf33308c8b8a8a8a6040518863ffffffff1660e01b815260040161013197969594939291906107be565b600060405180830381600087803b15801561014b57600080fd5b505af115801561015f573d6000803e3d6000fd5b505050505050505050505050505050565b6000602052816000526040600020602052806000526040600020600091509150505481565b73f164fc0ec4e93095b804a4795bbe1e041497b92a81565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101f26101ed6101e8846101ad565b6101cd565b6101ad565b9050919050565b6000610204826101d7565b9050919050565b6000610216826101f9565b9050919050565b6102268161020b565b82525050565b6000602082019050610241600083018461021d565b92915050565b6000604051905090565b600080fd5b600080fd5b6000610266826101ad565b9050919050565b60006102788261025b565b9050919050565b6102888161026d565b811461029357600080fd5b50565b6000813590506102a58161027f565b92915050565b6102b4816101ad565b81146102bf57600080fd5b50565b6000813590506102d1816102ab565b92915050565b6000819050919050565b6102ea816102d7565b81146102f557600080fd5b50565b600081359050610307816102e1565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61035b82610312565b810181811067ffffffffffffffff8211171561037a57610379610323565b5b80604052505050565b600061038d610247565b90506103998282610352565b919050565b6103a78161025b565b81146103b257600080fd5b50565b6000813590506103c48161039e565b92915050565b600065ffffffffffff82169050919050565b6103e5816103ca565b81146103f057600080fd5b50565b600081359050610402816103dc565b92915050565b60006080828403121561041e5761041d61030d565b5b6104286080610383565b90506000610438848285016103b5565b600083015250602061044c848285016102c2565b6020830152506040610460848285016103f3565b6040830152506060610474848285016103f3565b60608301525092915050565b600060c082840312156104965761049561030d565b5b6104a06060610383565b905060006104b084828501610408565b60008301525060806104c4848285016103b5565b60208301525060a06104d8848285016102f8565b60408301525092915050565b600060ff82169050919050565b6104fa816104e4565b811461050557600080fd5b50565b600081359050610517816104f1565b92915050565b6000819050919050565b6105308161051d565b811461053b57600080fd5b50565b60008135905061054d81610527565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261057857610577610553565b5b8235905067ffffffffffffffff81111561059557610594610558565b5b6020830191508360018202830111156105b1576105b061055d565b5b9250929050565b60008060008060008060008060008060006101e08c8e0312156105de576105dd610251565b5b60006105ec8e828f01610296565b9b505060206105fd8e828f01610296565b9a5050604061060e8e828f016102c2565b995050606061061f8e828f016102f8565b98505060806106308e828f016102f8565b97505060a06106418e828f01610480565b9650506101606106538e828f01610508565b9550506101806106658e828f0161053e565b9450506101a06106778e828f0161053e565b9350506101c08c013567ffffffffffffffff81111561069957610698610256565b5b6106a58e828f01610562565b92509250509295989b509295989b9093969950565b600080604083850312156106d1576106d0610251565b5b60006106df858286016103b5565b92505060206106f085828601610296565b9150509250929050565b610703816102d7565b82525050565b600060208201905061071e60008301846106fa565b92915050565b600061072f826101f9565b9050919050565b61073f81610724565b82525050565b600060208201905061075a6000830184610736565b92915050565b6107698161025b565b82525050565b600061078a610785610780846101ad565b6101cd565b6102d7565b9050919050565b61079a8161076f565b82525050565b6107a9816104e4565b82525050565b6107b88161051d565b82525050565b600060e0820190506107d3600083018a610760565b6107e06020830189610760565b6107ed6040830188610791565b6107fa60608301876106fa565b61080760808301866107a0565b61081460a08301856107af565b61082160c08301846107af565b9897505050505050505056fea264697066735822122081a90d0f2bc474ece2e734d78ee60742aba486ea7932cceecb361a871a4cb7c764736f6c634300081c0033";

type PermitSwapConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PermitSwapConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PermitSwap__factory extends ContractFactory {
  constructor(...args: PermitSwapConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PermitSwap & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PermitSwap__factory {
    return super.connect(runner) as PermitSwap__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PermitSwapInterface {
    return new Interface(_abi) as PermitSwapInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): PermitSwap {
    return new Contract(address, _abi, runner) as unknown as PermitSwap;
  }
}
