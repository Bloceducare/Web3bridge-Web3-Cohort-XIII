/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { PayableOverrides } from "../common";
import type { Multisig, MultisigInterface } from "../Multisig";

const _abi = [
  {
    inputs: [],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "proposer",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "signatureCount",
            type: "uint256",
          },
          {
            internalType: "address[]",
            name: "signers",
            type: "address[]",
          },
          {
            internalType: "enum Multisig.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct Multisig.Proposal",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "getSignerStatus",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "makeProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredSignatureCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isSigner",
        type: "bool",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_proposalId",
        type: "uint256",
      },
    ],
    name: "signProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040526003600055610023672b3874a53c55881960c01b6100e760201b60201c565b61003d67bd2986560001cb1360c01b6100e760201b60201c565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505061008b6718693993bccd057460c01b6100e760201b60201c565b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506100ea565b50565b6080516119c361010c6000396000818161023101526107f401526119c36000f3fe6080604052600436106100745760003560e01c80638da5cb5b1161004e5780638da5cb5b14610111578063ab2730161461013c578063c7f758a814610165578063e695402a146101a25761007b565b806331cb6105146100805780634e054d8d146100a95780636b3b92a2146100e65761007b565b3661007b57005b600080fd5b34801561008c57600080fd5b506100a760048036038101906100a2919061130e565b6101df565b005b3480156100b557600080fd5b506100d060048036038101906100cb9190611384565b6103b8565b6040516100dd91906113d3565b60405180910390f35b3480156100f257600080fd5b506100fb6107ec565b60405161010891906113d3565b60405180910390f35b34801561011d57600080fd5b506101266107f2565b60405161013391906113fd565b60405180910390f35b34801561014857600080fd5b50610163600480360381019061015e9190611418565b610816565b005b34801561017157600080fd5b5061018c60048036038101906101879190611418565b610e4a565b6040516101999190611612565b60405180910390f35b3480156101ae57600080fd5b506101c960048036038101906101c49190611634565b61103c565b6040516101d69190611670565b60405180910390f35b6101f3672ccdb81ef7c9ab1f60c01b6110ce565b61020767c8377c5016f65da960c01b6110ce565b61021b67c1ad9b6840b20d1160c01b6110ce565b61022f671a1d3ff8037c404f60c01b6110ce565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146102f95761029667985d61d41d46e9d960c01b6110ce565b6102aa67e371494370806e4460c01b6110ce565b6102be67e0b4e61aaf2f18fb60c01b6110ce565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f09061170e565b60405180910390fd5b61030d679c3669ddcd16ee1f60c01b6110ce565b610321675fff1faa75f2676060c01b6110ce565b610335678f12b814f966cf7e60c01b6110ce565b61034967939dff512ede058360c01b6110ce565b61035d67c9cc054f5cc2594e60c01b6110ce565b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60006103ce673be701abf115795a60c01b6110ce565b6103e26766d2fdeb94de112b60c01b6110ce565b6103f66702a541d14e95a4e860c01b6110ce565b61040a6763747cd90327e90460c01b6110ce565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166104d25761046f678771d54d16cbd6eb60c01b6110ce565b61048367ce61ebfb40b4dfa960c01b6110ce565b6104976767cb81829ed0669d60c01b6110ce565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c9906117a0565b60405180910390fd5b6104e6677929546762a313e860c01b6110ce565b6104fa67f450f033b96cc47460c01b6110ce565b61050e676270c4d3d60ad58c60c01b6110ce565b6105226781fee0307ad189e860c01b6110ce565b61053667e7432814378b7da860c01b6110ce565b61054a67f27d0551e600876e60c01b6110ce565b6000600167ffffffffffffffff811115610567576105666117c0565b5b6040519080825280602002602001820160405280156105955781602001602082028036833780820191505090505b5090506105ac674ae0bcdce2988d0d60c01b6110ce565b33816000815181106105c1576105c06117ef565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505061060f67b3e5f367c28dba6360c01b6110ce565b6040518060c001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600181526020018281526020016000600181111561067957610678611512565b5b81525060026000600354815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030155608082015181600401908051906020019061074f929190611158565b5060a08201518160050160006101000a81548160ff0219169083600181111561077b5761077a611512565b5b0217905550905050610797670162089eab83fae460c01b6110ce565b60016003546107a6919061184d565b6003819055506107c0679bc65c9dde73035b60c01b6110ce565b6107d467fc7697a31c89536360c01b6110ce565b60016003546107e39190611881565b91505092915050565b60005481565b7f000000000000000000000000000000000000000000000000000000000000000081565b61082a6725e1a3d52c46bad160c01b6110ce565b61083e6766d2fdeb94de112b60c01b6110ce565b6108526702a541d14e95a4e860c01b6110ce565b6108666763747cd90327e90460c01b6110ce565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661092e576108cb678771d54d16cbd6eb60c01b6110ce565b6108df67ce61ebfb40b4dfa960c01b6110ce565b6108f36767cb81829ed0669d60c01b6110ce565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610925906117a0565b60405180910390fd5b610942677929546762a313e860c01b6110ce565b61095667f450f033b96cc47460c01b6110ce565b61096a6705afae64a9557e1c60c01b6110ce565b61097e6742c26b51fdf757ae60c01b6110ce565b61099267add848f8496850c060c01b6110ce565b6109a667a3226106218d9deb60c01b6110ce565b6001808111156109b9576109b8611512565b5b6002600083815260200190815260200160002060050160009054906101000a900460ff1660018111156109ef576109ee611512565b5b03610a6b57610a08676fe92b78260c570660c01b6110ce565b610a1c67649754d0f3d98afe60c01b6110ce565b610a3067bc4b1cba48e1491860c01b6110ce565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a6290611901565b60405180910390fd5b610a7f672eb5f29f6426ca5060c01b6110ce565b610a93675e109c02fcc7404e60c01b6110ce565b610aa767db2779b91a0e9fa360c01b6110ce565b60005b6002600083815260200190815260200160002060040180549050811015610c1057610adf67b7950dfcd232966560c01b6110ce565b610af3671ec830dcb1fb46e160c01b6110ce565b3373ffffffffffffffffffffffffffffffffffffffff16600260008481526020019081526020016000206004018281548110610b3257610b316117ef565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bef57610b8c67bb5e84120eca245260c01b6110ce565b610ba067c97430c30509cc8b60c01b6110ce565b610bb4675bbe1063b8ea16a760c01b6110ce565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be69061196d565b60405180910390fd5b610c0367e7848ea6a7c9713260c01b6110ce565b8080600101915050610aaa565b50610c25678a154c219824659b60c01b6110ce565b60016002600083815260200190815260200160002060030154610c48919061184d565b6002600083815260200190815260200160002060030181905550610c7667e2e268f85d9d85c660c01b6110ce565b610c8a67f8b7b51da141c31f60c01b6110ce565b60026000828152602001908152602001600020600401339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d15677eda88d59c8e042560c01b6110ce565b610d2967d5df1b44f850104e60c01b6110ce565b600054600260008381526020019081526020016000206003015410610e3257610d5c67c38fdaf12f8f73e660c01b6110ce565b610d70678e6c815da93ff8c960c01b6110ce565b610d84674ac26e7fab201aa160c01b6110ce565b610dda6002600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660026000848152602001908152602001600020600101546110d1565b610dee673c822054bf08407960c01b6110ce565b60016002600083815260200190815260200160002060050160006101000a81548160ff02191690836001811115610e2857610e27611512565b5b0217905550610e47565b610e4667d047ff59c776af8360c01b6110ce565b5b50565b610e526111e2565b610e66675be84f3fadce952060c01b6110ce565b610e7a6760d4438f6d56bd5c60c01b6110ce565b610e8e67d80fa4683917f35a60c01b6110ce565b600260008381526020019081526020016000206040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020018280548015610ff157602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610fa7575b505050505081526020016005820160009054906101000a900460ff16600181111561101f5761101e611512565b5b600181111561103157611030611512565b5b815250509050919050565b6000611052671bda463c6df2a16160c01b6110ce565b61106667364b786ef364561860c01b6110ce565b61107a673619f5d0d641fb7e60c01b6110ce565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b50565b6110e56726c5132debcffb6060c01b6110ce565b6110f96793617b067525740e60c01b6110ce565b61110d6788fa93633906499060c01b6110ce565b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611153573d6000803e3d6000fd5b505050565b8280548282559060005260206000209081019282156111d1579160200282015b828111156111d05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611178565b5b5090506111de9190611256565b5090565b6040518060c00160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160608152602001600060018111156112505761124f611512565b5b81525090565b5b8082111561126f576000816000905550600101611257565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006112a382611278565b9050919050565b6112b381611298565b81146112be57600080fd5b50565b6000813590506112d0816112aa565b92915050565b60008115159050919050565b6112eb816112d6565b81146112f657600080fd5b50565b600081359050611308816112e2565b92915050565b6000806040838503121561132557611324611273565b5b6000611333858286016112c1565b9250506020611344858286016112f9565b9150509250929050565b6000819050919050565b6113618161134e565b811461136c57600080fd5b50565b60008135905061137e81611358565b92915050565b6000806040838503121561139b5761139a611273565b5b60006113a9858286016112c1565b92505060206113ba8582860161136f565b9150509250929050565b6113cd8161134e565b82525050565b60006020820190506113e860008301846113c4565b92915050565b6113f781611298565b82525050565b600060208201905061141260008301846113ee565b92915050565b60006020828403121561142e5761142d611273565b5b600061143c8482850161136f565b91505092915050565b61144e81611298565b82525050565b61145d8161134e565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600061149b8383611445565b60208301905092915050565b6000602082019050919050565b60006114bf82611463565b6114c9818561146e565b93506114d48361147f565b8060005b838110156115055781516114ec888261148f565b97506114f7836114a7565b9250506001810190506114d8565b5085935050505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6002811061155257611551611512565b5b50565b600081905061156382611541565b919050565b600061157382611555565b9050919050565b61158381611568565b82525050565b600060c0830160008301516115a16000860182611445565b5060208301516115b46020860182611454565b5060408301516115c76040860182611445565b5060608301516115da6060860182611454565b50608083015184820360808601526115f282826114b4565b91505060a083015161160760a086018261157a565b508091505092915050565b6000602082019050818103600083015261162c8184611589565b905092915050565b60006020828403121561164a57611649611273565b5b6000611658848285016112c1565b91505092915050565b61166a816112d6565b82525050565b60006020820190506116856000830184611661565b92915050565b600082825260208201905092915050565b7f6f6e6c79206f776e65722063616e206d616b652074686973207472616e73616360008201527f74696f6e00000000000000000000000000000000000000000000000000000000602082015250565b60006116f860248361168b565b91506117038261169c565b604082019050919050565b60006020820190508181036000830152611727816116eb565b9050919050565b7f6f6e6c792061207369676e65722063616e206d616b652074686973207472616e60008201527f73616374696f6e00000000000000000000000000000000000000000000000000602082015250565b600061178a60278361168b565b91506117958261172e565b604082019050919050565b600060208201905081810360008301526117b98161177d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006118588261134e565b91506118638361134e565b925082820190508082111561187b5761187a61181e565b5b92915050565b600061188c8261134e565b91506118978361134e565b92508282039050818111156118af576118ae61181e565b5b92915050565b7f50726f706f73616c20686173206265656e20617070726f766564000000000000600082015250565b60006118eb601a8361168b565b91506118f6826118b5565b602082019050919050565b6000602082019050818103600083015261191a816118de565b9050919050565b7f596f75277665207369676e656420746869732070726f706f73616c0000000000600082015250565b6000611957601b8361168b565b915061196282611921565b602082019050919050565b600060208201905081810360008301526119868161194a565b905091905056fea2646970667358221220b88ac9f38d8dd78dd9fc49537c064d98444a1f70d134bf70cf0313940035947264736f6c634300081c0033";

type MultisigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultisigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Multisig__factory extends ContractFactory {
  constructor(...args: MultisigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: PayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Multisig & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Multisig__factory {
    return super.connect(runner) as Multisig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultisigInterface {
    return new Interface(_abi) as MultisigInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Multisig {
    return new Contract(address, _abi, runner) as unknown as Multisig;
  }
}
