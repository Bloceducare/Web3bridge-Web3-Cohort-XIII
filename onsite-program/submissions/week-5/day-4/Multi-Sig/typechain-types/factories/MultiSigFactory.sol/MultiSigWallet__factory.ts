/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  MultiSigWallet,
  MultiSigWalletInterface,
} from "../../MultiSigFactory.sol/MultiSigWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_owners",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_requiredApprovals",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "approveTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "createTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getTransfer",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "approvals",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTransfersCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "owners",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredApprovals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transfers",
    outputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "approvals",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161113c38038061113c83398181016040528101906100329190610343565b8082511015610076576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006d906103fc565b60405180910390fd5b816000908051906020019061008c92919061009b565b5080600181905550505061041c565b828054828255906000526020600020908101928215610114579160200282015b828111156101135782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906100bb565b5b5090506101219190610125565b5090565b5b8082111561013e576000816000905550600101610126565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101a48261015b565b810181811067ffffffffffffffff821117156101c3576101c261016c565b5b80604052505050565b60006101d6610142565b90506101e2828261019b565b919050565b600067ffffffffffffffff8211156102025761020161016c565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061024382610218565b9050919050565b61025381610238565b811461025e57600080fd5b50565b6000815190506102708161024a565b92915050565b6000610289610284846101e7565b6101cc565b905080838252602082019050602084028301858111156102ac576102ab610213565b5b835b818110156102d557806102c18882610261565b8452602084019350506020810190506102ae565b5050509392505050565b600082601f8301126102f4576102f3610156565b5b8151610304848260208601610276565b91505092915050565b6000819050919050565b6103208161030d565b811461032b57600080fd5b50565b60008151905061033d81610317565b92915050565b6000806040838503121561035a5761035961014c565b5b600083015167ffffffffffffffff81111561037857610377610151565b5b610384858286016102df565b92505060206103958582860161032e565b9150509250929050565b600082825260208201905092915050565b7f4e6f7420656e6f756768206f776e657273000000000000000000000000000000600082015250565b60006103e660118361039f565b91506103f1826103b0565b602082019050919050565b60006020820190508181036000830152610415816103d9565b9050919050565b610d118061042b6000396000f3fe60806040526004361061007f5760003560e01c806399c1aadc1161004e57806399c1aadc1461015c578063a0e67e2b14610187578063c16fe907146101b2578063cacca4a0146101f257610086565b8063025e7c271461008b5780633ac172dd146100c85780639377d711146100f157806398649f201461013157610086565b3661008657005b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610881565b61021b565b6040516100bf91906108ef565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610936565b61025a565b005b3480156100fd57600080fd5b5061011860048036038101906101139190610881565b6103cc565b60405161012894939291906109a0565b60405180910390f35b34801561013d57600080fd5b50610146610439565b60405161015391906109e5565b60405180910390f35b34801561016857600080fd5b50610171610446565b60405161017e91906109e5565b60405180910390f35b34801561019357600080fd5b5061019c61044c565b6040516101a99190610abe565b60405180910390f35b3480156101be57600080fd5b506101d960048036038101906101d49190610881565b6104da565b6040516101e994939291906109a0565b60405180910390f35b3480156101fe57600080fd5b5061021960048036038101906102149190610881565b610557565b005b6000818154811061022b57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000805b6000805490508110156102ee576000818154811061027f5761027e610ae0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036102e157600191505b808060010191505061025e565b508061032f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032690610b6c565b60405180910390fd5b600060026001816001815401808255809150500390600052602060002090600502019050838160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508281600101819055506000816002018190555060008160030160006101000a81548160ff02191690831515021790555050505050565b600281815481106103dc57600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030160009054906101000a900460ff16905084565b6000600280549050905090565b60015481565b606060008054806020026020016040519081016040528092919081815260200182805480156104d057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610486575b5050505050905090565b6000806000806000600286815481106104f6576104f5610ae0565b5b906000526020600020906005020190508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001015482600201548360030160009054906101000a900460ff169450945094509450509193509193565b6000805b6000805490508110156105eb576000818154811061057c5761057b610ae0565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036105de57600191505b808060010191505061055b565b508061062c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062390610b6c565b60405180910390fd5b60006002838154811061064257610641610ae0565b5b906000526020600020906005020190508060030160009054906101000a900460ff16156106a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069b90610bd8565b60405180910390fd5b8060040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072a90610c44565b60405180910390fd5b60018160040160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508060020160008154809291906107a290610c93565b91905055506001548160020154106108415760018160030160006101000a81548160ff0219169083151502179055508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600101549081150290604051600060405180830381858888f1935050505015801561083f573d6000803e3d6000fd5b505b505050565b600080fd5b6000819050919050565b61085e8161084b565b811461086957600080fd5b50565b60008135905061087b81610855565b92915050565b60006020828403121561089757610896610846565b5b60006108a58482850161086c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108d9826108ae565b9050919050565b6108e9816108ce565b82525050565b600060208201905061090460008301846108e0565b92915050565b610913816108ce565b811461091e57600080fd5b50565b6000813590506109308161090a565b92915050565b6000806040838503121561094d5761094c610846565b5b600061095b85828601610921565b925050602061096c8582860161086c565b9150509250929050565b61097f8161084b565b82525050565b60008115159050919050565b61099a81610985565b82525050565b60006080820190506109b560008301876108e0565b6109c26020830186610976565b6109cf6040830185610976565b6109dc6060830184610991565b95945050505050565b60006020820190506109fa6000830184610976565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610a35816108ce565b82525050565b6000610a478383610a2c565b60208301905092915050565b6000602082019050919050565b6000610a6b82610a00565b610a758185610a0b565b9350610a8083610a1c565b8060005b83811015610ab1578151610a988882610a3b565b9750610aa383610a53565b925050600181019050610a84565b5085935050505092915050565b60006020820190508181036000830152610ad88184610a60565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f4e6f7420616e206f776e65720000000000000000000000000000000000000000600082015250565b6000610b56600c83610b0f565b9150610b6182610b20565b602082019050919050565b60006020820190508181036000830152610b8581610b49565b9050919050565b7f416c726561647920657865637574656400000000000000000000000000000000600082015250565b6000610bc2601083610b0f565b9150610bcd82610b8c565b602082019050919050565b60006020820190508181036000830152610bf181610bb5565b9050919050565b7f416c726561647920617070726f76656400000000000000000000000000000000600082015250565b6000610c2e601083610b0f565b9150610c3982610bf8565b602082019050919050565b60006020820190508181036000830152610c5d81610c21565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c9e8261084b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610cd057610ccf610c64565b5b60018201905091905056fea2646970667358221220ad5a9c425115cbbf489780f7d73ec302e2521ce292b304916aaea5d9e573929f64736f6c634300081c0033";

type MultiSigWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSigWallet__factory extends ContractFactory {
  constructor(...args: MultiSigWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owners: AddressLike[],
    _requiredApprovals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _owners,
      _requiredApprovals,
      overrides || {}
    );
  }
  override deploy(
    _owners: AddressLike[],
    _requiredApprovals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _owners,
      _requiredApprovals,
      overrides || {}
    ) as Promise<
      MultiSigWallet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MultiSigWallet__factory {
    return super.connect(runner) as MultiSigWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigWalletInterface {
    return new Interface(_abi) as MultiSigWalletInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): MultiSigWallet {
    return new Contract(address, _abi, runner) as unknown as MultiSigWallet;
  }
}
