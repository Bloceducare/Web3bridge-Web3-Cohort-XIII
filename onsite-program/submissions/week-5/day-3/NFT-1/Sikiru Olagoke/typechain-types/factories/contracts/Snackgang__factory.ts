/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Snackgang, SnackgangInterface } from "../../contracts/Snackgang";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "string",
        name: "ipfsHash",
        type: "string",
      },
    ],
    name: "safeMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051612d56380380612d5683398181016040528101906100329190610272565b806040518060400160405280600981526020017f536e61636b67616e6700000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f534e47000000000000000000000000000000000000000000000000000000000081525081600090816100ae91906104ef565b5080600190816100be91906104ef565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036101335760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161012a91906105d0565b60405180910390fd5b6101428161014960201b60201c565b50506105eb565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061023f82610214565b9050919050565b61024f81610234565b811461025a57600080fd5b50565b60008151905061026c81610246565b92915050565b6000602082840312156102885761028761020f565b5b60006102968482850161025d565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061032057607f821691505b602082108103610333576103326102d9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261039b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261035e565b6103a5868361035e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006103ec6103e76103e2846103bd565b6103c7565b6103bd565b9050919050565b6000819050919050565b610406836103d1565b61041a610412826103f3565b84845461036b565b825550505050565b600090565b61042f610422565b61043a8184846103fd565b505050565b5b8181101561045e57610453600082610427565b600181019050610440565b5050565b601f8211156104a35761047481610339565b61047d8461034e565b8101602085101561048c578190505b6104a06104988561034e565b83018261043f565b50505b505050565b600082821c905092915050565b60006104c6600019846008026104a8565b1980831691505092915050565b60006104df83836104b5565b9150826002028217905092915050565b6104f88261029f565b67ffffffffffffffff811115610511576105106102aa565b5b61051b8254610308565b610526828285610462565b600060209050601f8311600181146105595760008415610547578287015190505b61055185826104d3565b8655506105b9565b601f19841661056786610339565b60005b8281101561058f5784890151825560018201915060208501945060208101905061056a565b868310156105ac57848901516105a8601f8916826104b5565b8355505b6001600288020188555050505b505050505050565b6105ca81610234565b82525050565b60006020820190506105e560008301846105c1565b92915050565b61275c806105fa6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063715018a6116100a2578063b88d4fde11610071578063b88d4fde146102a4578063c87b56dd146102c0578063d204c45e146102f0578063e985e9c514610320578063f2fde38b146103505761010b565b8063715018a6146102425780638da5cb5b1461024c57806395d89b411461026a578063a22cb465146102885761010b565b806323b872dd116100de57806323b872dd146101aa57806342842e0e146101c65780636352211e146101e257806370a08231146102125761010b565b806301ffc9a71461011057806306fdde0314610140578063081812fc1461015e578063095ea7b31461018e575b600080fd5b61012a60048036038101906101259190611b20565b61036c565b6040516101379190611b68565b60405180910390f35b61014861037e565b6040516101559190611c13565b60405180910390f35b61017860048036038101906101739190611c6b565b610410565b6040516101859190611cd9565b60405180910390f35b6101a860048036038101906101a39190611d20565b61042c565b005b6101c460048036038101906101bf9190611d60565b610442565b005b6101e060048036038101906101db9190611d60565b610544565b005b6101fc60048036038101906101f79190611c6b565b610564565b6040516102099190611cd9565b60405180910390f35b61022c60048036038101906102279190611db3565b610576565b6040516102399190611def565b60405180910390f35b61024a610630565b005b610254610644565b6040516102619190611cd9565b60405180910390f35b61027261066e565b60405161027f9190611c13565b60405180910390f35b6102a2600480360381019061029d9190611e36565b610700565b005b6102be60048036038101906102b99190611fab565b610716565b005b6102da60048036038101906102d59190611c6b565b61073b565b6040516102e79190611c13565b60405180910390f35b61030a600480360381019061030591906120cf565b61074d565b6040516103179190611def565b60405180910390f35b61033a6004803603810190610335919061212b565b6107b5565b6040516103479190611b68565b60405180910390f35b61036a60048036038101906103659190611db3565b610849565b005b6000610377826108cf565b9050919050565b60606000805461038d9061219a565b80601f01602080910402602001604051908101604052809291908181526020018280546103b99061219a565b80156104065780601f106103db57610100808354040283529160200191610406565b820191906000526020600020905b8154815290600101906020018083116103e957829003601f168201915b5050505050905090565b600061041b82610930565b50610425826109b8565b9050919050565b61043e82826104396109f5565b6109fd565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104b45760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016104ab9190611cd9565b60405180910390fd5b60006104c883836104c36109f5565b610a0f565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461053e578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610535939291906121cb565b60405180910390fd5b50505050565b61055f83838360405180602001604052806000815250610716565b505050565b600061056f82610930565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105e95760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016105e09190611cd9565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610638610c29565b6106426000610cb0565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606001805461067d9061219a565b80601f01602080910402602001604051908101604052809291908181526020018280546106a99061219a565b80156106f65780601f106106cb576101008083540402835291602001916106f6565b820191906000526020600020905b8154815290600101906020018083116106d957829003601f168201915b5050505050905090565b61071261070b6109f5565b8383610d76565b5050565b610721848484610442565b61073561072c6109f5565b85858585610ee5565b50505050565b606061074682611096565b9050919050565b6000610757610c29565b60006008600081548092919061076c90612231565b91905055905061077c84826111a9565b60008360405160200161078f9190612327565b60405160208183030381529060405290506107aa82826111c7565b819250505092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610851610c29565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108c35760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108ba9190611cd9565b60405180910390fd5b6108cc81610cb0565b50565b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610929575061092882611223565b5b9050919050565b60008061093c83611305565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036109af57826040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016109a69190611def565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610a0a8383836001611342565b505050565b600080610a1b84611305565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a5d57610a5c818486611507565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610aee57610a9f600085600080611342565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610b71576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610c316109f5565b73ffffffffffffffffffffffffffffffffffffffff16610c4f610644565b73ffffffffffffffffffffffffffffffffffffffff1614610cae57610c726109f5565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ca59190611cd9565b60405180910390fd5b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610de757816040517f5b08ba18000000000000000000000000000000000000000000000000000000008152600401610dde9190611cd9565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ed89190611b68565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b111561108f578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b8152600401610f44949392919061239e565b6020604051808303816000875af1925050508015610f8057506040513d601f19601f82011682018060405250810190610f7d91906123ff565b60015b611004573d8060008114610fb0576040519150601f19603f3d011682016040523d82523d6000602084013e610fb5565b606091505b506000815103610ffc57836040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610ff39190611cd9565b60405180910390fd5b805160208201fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461108d57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016110849190611cd9565b60405180910390fd5b505b5050505050565b60606110a182610930565b5060006006600084815260200190815260200160002080546110c29061219a565b80601f01602080910402602001604051908101604052809291908181526020018280546110ee9061219a565b801561113b5780601f106111105761010080835404028352916020019161113b565b820191906000526020600020905b81548152906001019060200180831161111e57829003601f168201915b50505050509050600061114c6115cb565b905060008151036111615781925050506111a4565b60008251111561119657808260405160200161117e92919061242c565b604051602081830303815290604052925050506111a4565b61119f846115e2565b925050505b919050565b6111c382826040518060200160405280600081525061164b565b5050565b806006600084815260200190815260200160002090816111e791906125fc565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7826040516112179190611def565b60405180910390a15050565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806112ee57507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806112fe57506112fd8261166f565b5b9050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061137b5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156114af57600061138b84610930565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156113f657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611409575061140781846107b5565b155b1561144b57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016114429190611cd9565b60405180910390fd5b81156114ad57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6115128383836116d9565b6115c657600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361158757806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161157e9190611def565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016115bd9291906126ce565b60405180910390fd5b505050565b606060405180602001604052806000815250905090565b60606115ed82610930565b5060006115f86115cb565b905060008151116116185760405180602001604052806000815250611643565b806116228461179a565b60405160200161163392919061242c565b6040516020818303038152906040525b915050919050565b6116558383611868565b61166a6116606109f5565b6000858585610ee5565b505050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561179157508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611752575061175184846107b5565b5b8061179057508273ffffffffffffffffffffffffffffffffffffffff16611778836109b8565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6060600060016117a984611961565b01905060008167ffffffffffffffff8111156117c8576117c7611e80565b5b6040519080825280601f01601f1916602001820160405280156117fa5781602001600182028036833780820191505090505b509050600082602083010190505b60011561185d578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581611851576118506126f7565b5b04945060008503611808575b819350505050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118da5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016118d19190611cd9565b60405180910390fd5b60006118e883836000610a0f565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461195c5760006040517f73c6ac6e0000000000000000000000000000000000000000000000000000000081526004016119539190611cd9565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106119bf577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816119b5576119b46126f7565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106119fc576d04ee2d6d415b85acef810000000083816119f2576119f16126f7565b5b0492506020810190505b662386f26fc100008310611a2b57662386f26fc100008381611a2157611a206126f7565b5b0492506010810190505b6305f5e1008310611a54576305f5e1008381611a4a57611a496126f7565b5b0492506008810190505b6127108310611a79576127108381611a6f57611a6e6126f7565b5b0492506004810190505b60648310611a9c5760648381611a9257611a916126f7565b5b0492506002810190505b600a8310611aab576001810190505b80915050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611afd81611ac8565b8114611b0857600080fd5b50565b600081359050611b1a81611af4565b92915050565b600060208284031215611b3657611b35611abe565b5b6000611b4484828501611b0b565b91505092915050565b60008115159050919050565b611b6281611b4d565b82525050565b6000602082019050611b7d6000830184611b59565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611bbd578082015181840152602081019050611ba2565b60008484015250505050565b6000601f19601f8301169050919050565b6000611be582611b83565b611bef8185611b8e565b9350611bff818560208601611b9f565b611c0881611bc9565b840191505092915050565b60006020820190508181036000830152611c2d8184611bda565b905092915050565b6000819050919050565b611c4881611c35565b8114611c5357600080fd5b50565b600081359050611c6581611c3f565b92915050565b600060208284031215611c8157611c80611abe565b5b6000611c8f84828501611c56565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cc382611c98565b9050919050565b611cd381611cb8565b82525050565b6000602082019050611cee6000830184611cca565b92915050565b611cfd81611cb8565b8114611d0857600080fd5b50565b600081359050611d1a81611cf4565b92915050565b60008060408385031215611d3757611d36611abe565b5b6000611d4585828601611d0b565b9250506020611d5685828601611c56565b9150509250929050565b600080600060608486031215611d7957611d78611abe565b5b6000611d8786828701611d0b565b9350506020611d9886828701611d0b565b9250506040611da986828701611c56565b9150509250925092565b600060208284031215611dc957611dc8611abe565b5b6000611dd784828501611d0b565b91505092915050565b611de981611c35565b82525050565b6000602082019050611e046000830184611de0565b92915050565b611e1381611b4d565b8114611e1e57600080fd5b50565b600081359050611e3081611e0a565b92915050565b60008060408385031215611e4d57611e4c611abe565b5b6000611e5b85828601611d0b565b9250506020611e6c85828601611e21565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611eb882611bc9565b810181811067ffffffffffffffff82111715611ed757611ed6611e80565b5b80604052505050565b6000611eea611ab4565b9050611ef68282611eaf565b919050565b600067ffffffffffffffff821115611f1657611f15611e80565b5b611f1f82611bc9565b9050602081019050919050565b82818337600083830152505050565b6000611f4e611f4984611efb565b611ee0565b905082815260208101848484011115611f6a57611f69611e7b565b5b611f75848285611f2c565b509392505050565b600082601f830112611f9257611f91611e76565b5b8135611fa2848260208601611f3b565b91505092915050565b60008060008060808587031215611fc557611fc4611abe565b5b6000611fd387828801611d0b565b9450506020611fe487828801611d0b565b9350506040611ff587828801611c56565b925050606085013567ffffffffffffffff81111561201657612015611ac3565b5b61202287828801611f7d565b91505092959194509250565b600067ffffffffffffffff82111561204957612048611e80565b5b61205282611bc9565b9050602081019050919050565b600061207261206d8461202e565b611ee0565b90508281526020810184848401111561208e5761208d611e7b565b5b612099848285611f2c565b509392505050565b600082601f8301126120b6576120b5611e76565b5b81356120c684826020860161205f565b91505092915050565b600080604083850312156120e6576120e5611abe565b5b60006120f485828601611d0b565b925050602083013567ffffffffffffffff81111561211557612114611ac3565b5b612121858286016120a1565b9150509250929050565b6000806040838503121561214257612141611abe565b5b600061215085828601611d0b565b925050602061216185828601611d0b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806121b257607f821691505b6020821081036121c5576121c461216b565b5b50919050565b60006060820190506121e06000830186611cca565b6121ed6020830185611de0565b6121fa6040830184611cca565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061223c82611c35565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361226e5761226d612202565b5b600182019050919050565b600081905092915050565b7f68747470733a2f2f676174657761792e70696e6174612e636c6f75642f69706660008201527f732f000000000000000000000000000000000000000000000000000000000000602082015250565b60006122e0602283612279565b91506122eb82612284565b602282019050919050565b600061230182611b83565b61230b8185612279565b935061231b818560208601611b9f565b80840191505092915050565b6000612332826122d3565b915061233e82846122f6565b915081905092915050565b600081519050919050565b600082825260208201905092915050565b600061237082612349565b61237a8185612354565b935061238a818560208601611b9f565b61239381611bc9565b840191505092915050565b60006080820190506123b36000830187611cca565b6123c06020830186611cca565b6123cd6040830185611de0565b81810360608301526123df8184612365565b905095945050505050565b6000815190506123f981611af4565b92915050565b60006020828403121561241557612414611abe565b5b6000612423848285016123ea565b91505092915050565b600061243882856122f6565b915061244482846122f6565b91508190509392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026124b27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612475565b6124bc8683612475565b95508019841693508086168417925050509392505050565b6000819050919050565b60006124f96124f46124ef84611c35565b6124d4565b611c35565b9050919050565b6000819050919050565b612513836124de565b61252761251f82612500565b848454612482565b825550505050565b600090565b61253c61252f565b61254781848461250a565b505050565b5b8181101561256b57612560600082612534565b60018101905061254d565b5050565b601f8211156125b05761258181612450565b61258a84612465565b81016020851015612599578190505b6125ad6125a585612465565b83018261254c565b50505b505050565b600082821c905092915050565b60006125d3600019846008026125b5565b1980831691505092915050565b60006125ec83836125c2565b9150826002028217905092915050565b61260582611b83565b67ffffffffffffffff81111561261e5761261d611e80565b5b612628825461219a565b61263382828561256f565b600060209050601f8311600181146126665760008415612654578287015190505b61265e85826125e0565b8655506126c6565b601f19841661267486612450565b60005b8281101561269c57848901518255600182019150602085019450602081019050612677565b868310156126b957848901516126b5601f8916826125c2565b8355505b6001600288020188555050505b505050505050565b60006040820190506126e36000830185611cca565b6126f06020830184611de0565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fdfea264697066735822122038bd5573b9f69b5fc3e16cf28202cd9d7073b3d3681b4c57bfc484e0b367fab364736f6c634300081b0033";

type SnackgangConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SnackgangConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Snackgang__factory extends ContractFactory {
  constructor(...args: SnackgangConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      Snackgang & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Snackgang__factory {
    return super.connect(runner) as Snackgang__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SnackgangInterface {
    return new Interface(_abi) as SnackgangInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Snackgang {
    return new Contract(address, _abi, runner) as unknown as Snackgang;
  }
}
