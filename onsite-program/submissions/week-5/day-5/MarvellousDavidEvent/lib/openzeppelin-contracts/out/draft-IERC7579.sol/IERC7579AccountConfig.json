{"abi":[{"type":"function","name":"accountId","inputs":[],"outputs":[{"name":"accountImplementationId","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"supportsExecutionMode","inputs":[{"name":"encodedMode","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"supportsModule","inputs":[{"name":"moduleTypeId","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"accountId()":"9cfd7cff","supportsExecutionMode(bytes32)":"d03c7914","supportsModule(uint256)":"f2dc691d"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"accountId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"accountImplementationId\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"encodedMode\",\"type\":\"bytes32\"}],\"name\":\"supportsExecutionMode\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"moduleTypeId\",\"type\":\"uint256\"}],\"name\":\"supportsModule\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-7579 Account Config. Accounts should implement this interface to expose information that identifies the account, supported modules and capabilities.\",\"kind\":\"dev\",\"methods\":{\"accountId()\":{\"details\":\"Returns the account id of the smart account\",\"returns\":{\"accountImplementationId\":\"the account id of the smart account MUST return a non-empty string The accountId SHOULD be structured like so:        \\\"vendorname.accountname.semver\\\" The id SHOULD be unique across all smart accounts\"}},\"supportsExecutionMode(bytes32)\":{\"details\":\"Function to check if the account supports a certain execution mode (see above)\",\"params\":{\"encodedMode\":\"the encoded mode MUST return true if the account supports the mode and false otherwise\"}},\"supportsModule(uint256)\":{\"details\":\"Function to check if the account supports a certain module typeId\",\"params\":{\"moduleTypeId\":\"the module type ID according to the ERC-7579 spec MUST return true if the account supports the module type and false otherwise\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/draft-IERC7579.sol\":\"IERC7579AccountConfig\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=contracts/\",\":erc4626-tests/=lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\"]},\"sources\":{\"contracts/interfaces/draft-IERC4337.sol\":{\"keccak256\":\"0xc4c1b33f7f7ee592aa2ff5e7a184c400a9f9a34eeb501681cffe97e0faf0583d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed7189e2a50eba8c8b9d5505659fe8d2c136a6ce8b99486f2711925a1fc0068c\",\"dweb:/ipfs/QmaU747ZrNDaPW2UPsDLfmZU5Es6BqyPiB3Sfvi3pa4ZEr\"]},\"contracts/interfaces/draft-IERC7579.sol\":{\"keccak256\":\"0xab2822930f57c35ec15d64fae79d977f603d607d692ee70ec7d43bcbaca95aa7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af938c25a535b1fac2d343bc619cb839134e81c1ab5a2edac75185c238466dae\",\"dweb:/ipfs/QmQ7ge19AHMxaAkqdSPLNs7Xr9Q3AEviXEM34GBCRMuhZ4\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"accountId","outputs":[{"internalType":"string","name":"accountImplementationId","type":"string"}]},{"inputs":[{"internalType":"bytes32","name":"encodedMode","type":"bytes32"}],"stateMutability":"view","type":"function","name":"supportsExecutionMode","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"moduleTypeId","type":"uint256"}],"stateMutability":"view","type":"function","name":"supportsModule","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{"accountId()":{"details":"Returns the account id of the smart account","returns":{"accountImplementationId":"the account id of the smart account MUST return a non-empty string The accountId SHOULD be structured like so:        \"vendorname.accountname.semver\" The id SHOULD be unique across all smart accounts"}},"supportsExecutionMode(bytes32)":{"details":"Function to check if the account supports a certain execution mode (see above)","params":{"encodedMode":"the encoded mode MUST return true if the account supports the mode and false otherwise"}},"supportsModule(uint256)":{"details":"Function to check if the account supports a certain module typeId","params":{"moduleTypeId":"the module type ID according to the ERC-7579 spec MUST return true if the account supports the module type and false otherwise"}}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=contracts/","erc4626-tests/=lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/halmos-cheatcodes/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/interfaces/draft-IERC7579.sol":"IERC7579AccountConfig"},"evmVersion":"prague","libraries":{}},"sources":{"contracts/interfaces/draft-IERC4337.sol":{"keccak256":"0xc4c1b33f7f7ee592aa2ff5e7a184c400a9f9a34eeb501681cffe97e0faf0583d","urls":["bzz-raw://ed7189e2a50eba8c8b9d5505659fe8d2c136a6ce8b99486f2711925a1fc0068c","dweb:/ipfs/QmaU747ZrNDaPW2UPsDLfmZU5Es6BqyPiB3Sfvi3pa4ZEr"],"license":"MIT"},"contracts/interfaces/draft-IERC7579.sol":{"keccak256":"0xab2822930f57c35ec15d64fae79d977f603d607d692ee70ec7d43bcbaca95aa7","urls":["bzz-raw://af938c25a535b1fac2d343bc619cb839134e81c1ab5a2edac75185c238466dae","dweb:/ipfs/QmQ7ge19AHMxaAkqdSPLNs7Xr9Q3AEviXEM34GBCRMuhZ4"],"license":"MIT"}},"version":1},"id":82}