{"abi":[{"type":"function","name":"signer","inputs":[],"outputs":[{"name":"e","type":"bytes","internalType":"bytes"},{"name":"n","type":"bytes","internalType":"bytes"}],"stateMutability":"view"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"signer()":"238ac933"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"e\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"n\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of {AbstractSigner} using xref:api:utils/cryptography#RSA[RSA] signatures. For {Account} usage, a {_setSigner} function is provided to set the {signer} public key. Doing so is easier for a factory, who is likely to use initializable clones of this contract. Example of usage: ```solidity contract MyAccountRSA is Account, SignerRSA, Initializable {     function initialize(bytes memory e, bytes memory n) public initializer {       _setSigner(e, n);     } } ``` IMPORTANT: Failing to call {_setSigner} either during construction (if used standalone) or during initialization (if used as a clone) may leave the signer either front-runnable or unusable.\",\"kind\":\"dev\",\"methods\":{\"signer()\":{\"details\":\"Return the signer's RSA public key.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/cryptography/signers/SignerRSA.sol\":\"SignerRSA\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=contracts/\",\":erc4626-tests/=lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\"]},\"sources\":{\"contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"contracts/utils/cryptography/RSA.sol\":{\"keccak256\":\"0x54ccb5ac41fd2ee33b30742c3c92183ff756b109039e74eba563412628737961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e4e26c5bdfedbbab6634fb0a8941eb7f0e5c01711e03f93841dff060f3ab92c6\",\"dweb:/ipfs/QmXWfBpUENkn4X3dMHN4CGD1dwfENsJ7NcPr2sthUC7Xp6\"]},\"contracts/utils/cryptography/signers/AbstractSigner.sol\":{\"keccak256\":\"0x2e803d54b627d8ce2841c39e973f499be029a706f7157aee74adb648a27ecda9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62197d50f708cccc7f17509f54d429eb6921416f3695f08f1178bbb9ca5ce0c5\",\"dweb:/ipfs/QmeaUebF8obuUXwqFH4rhwTzUqa4A7z4S8TkHpWyUSrDo6\"]},\"contracts/utils/cryptography/signers/SignerRSA.sol\":{\"keccak256\":\"0xdc8a23031d91e7f9580027b4297c2cf48cfcf0f9d467f63cd10775d832c63215\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a312c551988b74cfca7076394d7aeb472a1d22d8b03360de648cbb599a0fb1ac\",\"dweb:/ipfs/QmeCB4gsTPB6w3paeMvFRhNFsC5PNFYqdkB6GffbrpJ3dj\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"view","type":"function","name":"signer","outputs":[{"internalType":"bytes","name":"e","type":"bytes"},{"internalType":"bytes","name":"n","type":"bytes"}]}],"devdoc":{"kind":"dev","methods":{"signer()":{"details":"Return the signer's RSA public key."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=contracts/","erc4626-tests/=lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/halmos-cheatcodes/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/utils/cryptography/signers/SignerRSA.sol":"SignerRSA"},"evmVersion":"prague","libraries":{}},"sources":{"contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"],"license":"MIT"},"contracts/utils/cryptography/RSA.sol":{"keccak256":"0x54ccb5ac41fd2ee33b30742c3c92183ff756b109039e74eba563412628737961","urls":["bzz-raw://e4e26c5bdfedbbab6634fb0a8941eb7f0e5c01711e03f93841dff060f3ab92c6","dweb:/ipfs/QmXWfBpUENkn4X3dMHN4CGD1dwfENsJ7NcPr2sthUC7Xp6"],"license":"MIT"},"contracts/utils/cryptography/signers/AbstractSigner.sol":{"keccak256":"0x2e803d54b627d8ce2841c39e973f499be029a706f7157aee74adb648a27ecda9","urls":["bzz-raw://62197d50f708cccc7f17509f54d429eb6921416f3695f08f1178bbb9ca5ce0c5","dweb:/ipfs/QmeaUebF8obuUXwqFH4rhwTzUqa4A7z4S8TkHpWyUSrDo6"],"license":"MIT"},"contracts/utils/cryptography/signers/SignerRSA.sol":{"keccak256":"0xdc8a23031d91e7f9580027b4297c2cf48cfcf0f9d467f63cd10775d832c63215","urls":["bzz-raw://a312c551988b74cfca7076394d7aeb472a1d22d8b03360de648cbb599a0fb1ac","dweb:/ipfs/QmeCB4gsTPB6w3paeMvFRhNFsC5PNFYqdkB6GffbrpJ3dj"],"license":"MIT"},"contracts/utils/math/Math.sol":{"keccak256":"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6","urls":["bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3","dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"],"license":"MIT"},"contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"}},"version":1},"id":299}