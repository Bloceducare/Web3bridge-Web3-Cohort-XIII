{"abi":[{"type":"function","name":"getSignerCount","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"getSigners","inputs":[{"name":"start","type":"uint64","internalType":"uint64"},{"name":"end","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"","type":"bytes[]","internalType":"bytes[]"}],"stateMutability":"view"},{"type":"function","name":"isSigner","inputs":[{"name":"signer","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"threshold","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"event","name":"ERC7913SignerAdded","inputs":[{"name":"signers","type":"bytes","indexed":true,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"ERC7913SignerRemoved","inputs":[{"name":"signers","type":"bytes","indexed":true,"internalType":"bytes"}],"anonymous":false},{"type":"event","name":"ERC7913ThresholdSet","inputs":[{"name":"threshold","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"error","name":"MultiSignerERC7913AlreadyExists","inputs":[{"name":"signer","type":"bytes","internalType":"bytes"}]},{"type":"error","name":"MultiSignerERC7913InvalidSigner","inputs":[{"name":"signer","type":"bytes","internalType":"bytes"}]},{"type":"error","name":"MultiSignerERC7913NonexistentSigner","inputs":[{"name":"signer","type":"bytes","internalType":"bytes"}]},{"type":"error","name":"MultiSignerERC7913UnreachableThreshold","inputs":[{"name":"signers","type":"uint64","internalType":"uint64"},{"name":"threshold","type":"uint64","internalType":"uint64"}]},{"type":"error","name":"MultiSignerERC7913ZeroThreshold","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"getSignerCount()":"b715be81","getSigners(uint64,uint64)":"95fcd041","isSigner(bytes)":"43b98665","threshold()":"42cde4e8"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signer\",\"type\":\"bytes\"}],\"name\":\"MultiSignerERC7913AlreadyExists\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signer\",\"type\":\"bytes\"}],\"name\":\"MultiSignerERC7913InvalidSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signer\",\"type\":\"bytes\"}],\"name\":\"MultiSignerERC7913NonexistentSigner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"signers\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"threshold\",\"type\":\"uint64\"}],\"name\":\"MultiSignerERC7913UnreachableThreshold\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MultiSignerERC7913ZeroThreshold\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"signers\",\"type\":\"bytes\"}],\"name\":\"ERC7913SignerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes\",\"name\":\"signers\",\"type\":\"bytes\"}],\"name\":\"ERC7913SignerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"threshold\",\"type\":\"uint64\"}],\"name\":\"ERC7913ThresholdSet\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getSignerCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"start\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"end\",\"type\":\"uint64\"}],\"name\":\"getSigners\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"signer\",\"type\":\"bytes\"}],\"name\":\"isSigner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"threshold\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of {AbstractSigner} using multiple ERC-7913 signers with a threshold-based signature verification system. This contract allows managing a set of authorized signers and requires a minimum number of signatures (threshold) to approve operations. It uses ERC-7913 formatted signers, which makes it natively compatible with ECDSA and ERC-1271 signers. Example of usage: ```solidity contract MyMultiSignerAccount is Account, MultiSignerERC7913, Initializable {     function initialize(bytes[] memory signers, uint64 threshold) public initializer {         _addSigners(signers);         _setThreshold(threshold);     }     function addSigners(bytes[] memory signers) public onlyEntryPointOrSelf {         _addSigners(signers);     }     function removeSigners(bytes[] memory signers) public onlyEntryPointOrSelf {         _removeSigners(signers);     }     function setThreshold(uint64 threshold) public onlyEntryPointOrSelf {         _setThreshold(threshold);     } } ``` IMPORTANT: Failing to properly initialize the signers and threshold either during construction (if used standalone) or during initialization (if used as a clone) may leave the contract either front-runnable or unusable.\",\"errors\":{\"MultiSignerERC7913AlreadyExists(bytes)\":[{\"details\":\"The `signer` already exists.\"}],\"MultiSignerERC7913InvalidSigner(bytes)\":[{\"details\":\"The `signer` is less than 20 bytes long.\"}],\"MultiSignerERC7913NonexistentSigner(bytes)\":[{\"details\":\"The `signer` does not exist.\"}],\"MultiSignerERC7913UnreachableThreshold(uint64,uint64)\":[{\"details\":\"The `threshold` is unreachable given the number of `signers`.\"}],\"MultiSignerERC7913ZeroThreshold()\":[{\"details\":\"The `threshold` is zero.\"}]},\"events\":{\"ERC7913SignerAdded(bytes)\":{\"details\":\"Emitted when a signer is added.\"},\"ERC7913SignerRemoved(bytes)\":{\"details\":\"Emitted when a signers is removed.\"},\"ERC7913ThresholdSet(uint64)\":{\"details\":\"Emitted when the threshold is updated.\"}},\"kind\":\"dev\",\"methods\":{\"getSignerCount()\":{\"details\":\"Returns the number of authorized signers\"},\"getSigners(uint64,uint64)\":{\"details\":\"Returns a slice of the set of authorized signers. Using `start = 0` and `end = type(uint64).max` will return the entire set of signers. WARNING: Depending on the `start` and `end`, this operation can copy a large amount of data to memory, which can be expensive. This is designed for view accessors queried without gas fees. Using it in state-changing functions may become uncallable if the slice grows too large.\"},\"isSigner(bytes)\":{\"details\":\"Returns whether the `signer` is an authorized signer.\"},\"threshold()\":{\"details\":\"Returns the minimum number of signers required to approve a multisignature operation.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/cryptography/signers/MultiSignerERC7913.sol\":\"MultiSignerERC7913\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=contracts/\",\":erc4626-tests/=lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\"]},\"sources\":{\"contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x66c7ec42c6c43712be2107a50ab4529379bc76a632b425babec698d9da921ac6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dce2778f0b638adfc5ba29c2c618c855fe725fa74a16846386aa1d56a834aa04\",\"dweb:/ipfs/QmPV9oWnzQdi58od266j62xvviavLNHqKLZfm6k2K1qy9E\"]},\"contracts/interfaces/IERC7913.sol\":{\"keccak256\":\"0xe5a126930df1d54e4a6dd5fea09010c4a7db0ea974c6c17a1e6082879f5a032b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f58f5a90328536a6c68289916bfa4ed653d871319c7b2a416ab3f6263c4f2f5\",\"dweb:/ipfs/Qmaa9DmgUA16Urz5fuF4RbFz2NaVpNLV41ddwykSdasFUd\"]},\"contracts/utils/Arrays.sol\":{\"keccak256\":\"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d\",\"dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY\"]},\"contracts/utils/Bytes.sol\":{\"keccak256\":\"0x1613f93e376ab96791fd29f79da754e253c3d766831bc8c42f50545662f49065\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e88ee314d50d0f323616f88d0ccf5e4110dbdec2775d8d42523bcc8b76ed36eb\",\"dweb:/ipfs/QmQ18ygHRrDdz4AEZXy5PASUHvJk1SNWWKM3TyC1xvDedP\"]},\"contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0x0f39d23ae345355f0913470b15d00c0434754302077ac97cdc038b5c000fc5cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ebc3233ff506c43e0f9960d2459403f878bbb63b7c71c318f16839564919ac\",\"dweb:/ipfs/QmbctngFd6aQkHVqZeFAL3iHfw4X7wNgfsgUxX8t26U2m4\"]},\"contracts/utils/cryptography/signers/AbstractSigner.sol\":{\"keccak256\":\"0x2e803d54b627d8ce2841c39e973f499be029a706f7157aee74adb648a27ecda9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62197d50f708cccc7f17509f54d429eb6921416f3695f08f1178bbb9ca5ce0c5\",\"dweb:/ipfs/QmeaUebF8obuUXwqFH4rhwTzUqa4A7z4S8TkHpWyUSrDo6\"]},\"contracts/utils/cryptography/signers/MultiSignerERC7913.sol\":{\"keccak256\":\"0xd2b221866c7863b16adaff1a4cfdd02eac72436a7c1ecfd14d409a26d4770ccf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://775cbee67a41cda6763fdfc35437ae2d4cbeed78b677261103cd92be586b84a2\",\"dweb:/ipfs/QmfSyFLswzXWRHpBSBUgJANzTM4FLDVJBY5eibfv2u6v13\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b\",\"dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes","name":"signer","type":"bytes"}],"type":"error","name":"MultiSignerERC7913AlreadyExists"},{"inputs":[{"internalType":"bytes","name":"signer","type":"bytes"}],"type":"error","name":"MultiSignerERC7913InvalidSigner"},{"inputs":[{"internalType":"bytes","name":"signer","type":"bytes"}],"type":"error","name":"MultiSignerERC7913NonexistentSigner"},{"inputs":[{"internalType":"uint64","name":"signers","type":"uint64"},{"internalType":"uint64","name":"threshold","type":"uint64"}],"type":"error","name":"MultiSignerERC7913UnreachableThreshold"},{"inputs":[],"type":"error","name":"MultiSignerERC7913ZeroThreshold"},{"inputs":[{"internalType":"bytes","name":"signers","type":"bytes","indexed":true}],"type":"event","name":"ERC7913SignerAdded","anonymous":false},{"inputs":[{"internalType":"bytes","name":"signers","type":"bytes","indexed":true}],"type":"event","name":"ERC7913SignerRemoved","anonymous":false},{"inputs":[{"internalType":"uint64","name":"threshold","type":"uint64","indexed":false}],"type":"event","name":"ERC7913ThresholdSet","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"getSignerCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"uint64","name":"start","type":"uint64"},{"internalType":"uint64","name":"end","type":"uint64"}],"stateMutability":"view","type":"function","name":"getSigners","outputs":[{"internalType":"bytes[]","name":"","type":"bytes[]"}]},{"inputs":[{"internalType":"bytes","name":"signer","type":"bytes"}],"stateMutability":"view","type":"function","name":"isSigner","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"threshold","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]}],"devdoc":{"kind":"dev","methods":{"getSignerCount()":{"details":"Returns the number of authorized signers"},"getSigners(uint64,uint64)":{"details":"Returns a slice of the set of authorized signers. Using `start = 0` and `end = type(uint64).max` will return the entire set of signers. WARNING: Depending on the `start` and `end`, this operation can copy a large amount of data to memory, which can be expensive. This is designed for view accessors queried without gas fees. Using it in state-changing functions may become uncallable if the slice grows too large."},"isSigner(bytes)":{"details":"Returns whether the `signer` is an authorized signer."},"threshold()":{"details":"Returns the minimum number of signers required to approve a multisignature operation."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=contracts/","erc4626-tests/=lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/halmos-cheatcodes/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/utils/cryptography/signers/MultiSignerERC7913.sol":"MultiSignerERC7913"},"evmVersion":"prague","libraries":{}},"sources":{"contracts/interfaces/IERC1271.sol":{"keccak256":"0x66c7ec42c6c43712be2107a50ab4529379bc76a632b425babec698d9da921ac6","urls":["bzz-raw://dce2778f0b638adfc5ba29c2c618c855fe725fa74a16846386aa1d56a834aa04","dweb:/ipfs/QmPV9oWnzQdi58od266j62xvviavLNHqKLZfm6k2K1qy9E"],"license":"MIT"},"contracts/interfaces/IERC7913.sol":{"keccak256":"0xe5a126930df1d54e4a6dd5fea09010c4a7db0ea974c6c17a1e6082879f5a032b","urls":["bzz-raw://2f58f5a90328536a6c68289916bfa4ed653d871319c7b2a416ab3f6263c4f2f5","dweb:/ipfs/Qmaa9DmgUA16Urz5fuF4RbFz2NaVpNLV41ddwykSdasFUd"],"license":"MIT"},"contracts/utils/Arrays.sol":{"keccak256":"0xa4b9958797e0e9cde82a090525e90f80d5745ba1c67ee72b488bd3087498a17e","urls":["bzz-raw://c9344f7c2f80322c2e76d9d89bed03fd12f3e011e74fde7cf24ea21bdd2abe2d","dweb:/ipfs/QmPMAjF5x2fHUAee2FKMZDBbFVrbZbPCr3a9KHLZaSn1zY"],"license":"MIT"},"contracts/utils/Bytes.sol":{"keccak256":"0x1613f93e376ab96791fd29f79da754e253c3d766831bc8c42f50545662f49065","urls":["bzz-raw://e88ee314d50d0f323616f88d0ccf5e4110dbdec2775d8d42523bcc8b76ed36eb","dweb:/ipfs/QmQ18ygHRrDdz4AEZXy5PASUHvJk1SNWWKM3TyC1xvDedP"],"license":"MIT"},"contracts/utils/Comparators.sol":{"keccak256":"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58","urls":["bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd","dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC"],"license":"MIT"},"contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"],"license":"MIT"},"contracts/utils/SlotDerivation.sol":{"keccak256":"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26","urls":["bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2","dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2"],"license":"MIT"},"contracts/utils/StorageSlot.sol":{"keccak256":"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97","urls":["bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b","dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"],"license":"MIT"},"contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84","urls":["bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9","dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"],"license":"MIT"},"contracts/utils/cryptography/SignatureChecker.sol":{"keccak256":"0x0f39d23ae345355f0913470b15d00c0434754302077ac97cdc038b5c000fc5cc","urls":["bzz-raw://d5ebc3233ff506c43e0f9960d2459403f878bbb63b7c71c318f16839564919ac","dweb:/ipfs/QmbctngFd6aQkHVqZeFAL3iHfw4X7wNgfsgUxX8t26U2m4"],"license":"MIT"},"contracts/utils/cryptography/signers/AbstractSigner.sol":{"keccak256":"0x2e803d54b627d8ce2841c39e973f499be029a706f7157aee74adb648a27ecda9","urls":["bzz-raw://62197d50f708cccc7f17509f54d429eb6921416f3695f08f1178bbb9ca5ce0c5","dweb:/ipfs/QmeaUebF8obuUXwqFH4rhwTzUqa4A7z4S8TkHpWyUSrDo6"],"license":"MIT"},"contracts/utils/cryptography/signers/MultiSignerERC7913.sol":{"keccak256":"0xd2b221866c7863b16adaff1a4cfdd02eac72436a7c1ecfd14d409a26d4770ccf","urls":["bzz-raw://775cbee67a41cda6763fdfc35437ae2d4cbeed78b677261103cd92be586b84a2","dweb:/ipfs/QmfSyFLswzXWRHpBSBUgJANzTM4FLDVJBY5eibfv2u6v13"],"license":"MIT"},"contracts/utils/math/Math.sol":{"keccak256":"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6","urls":["bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3","dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"],"license":"MIT"},"contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"},"contracts/utils/structs/EnumerableSet.sol":{"keccak256":"0x1fc283df727585919c3db301b948a3e827aee16917457ad7f916db9da2228e77","urls":["bzz-raw://a4f4b5e2cd0ebc3b74e41e4e94771a0417eedd9b11cec3ef9f90b2ac2989264b","dweb:/ipfs/QmZmsEsvsXiwAyAe1YeoLSKezeFcvR1giUeEY6ex4zpsTS"],"license":"MIT"}},"version":1},"id":293}