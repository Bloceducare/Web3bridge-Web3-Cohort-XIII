{"abi":[],"bytecode":{"object":"0x60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d49746123e9699c31b597667ddd0293b8617e3f895557e5149c5e34f62c155bb64736f6c634300081b0033","sourceMap":"782:1434:261:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;782:1434:261;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d49746123e9699c31b597667ddd0293b8617e3f895557e5149c5e34f62c155bb64736f6c634300081b0033","sourceMap":"782:1434:261:-:0;;;;;;;;","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for accessing historical block hashes beyond the standard 256 block limit. Uses EIP-2935's history storage contract which maintains a ring buffer of the last 8191 block hashes in state. For blocks within the last 256 blocks, it uses the native `BLOCKHASH` opcode. For blocks between 257 and 8191 blocks ago, it queries the EIP-2935 history storage. For blocks older than 8191 or future blocks, it returns zero, matching the `BLOCKHASH` behavior. NOTE: After EIP-2935 activation, it takes 8191 blocks to completely fill the history. Before that, only block hashes since the fork block will be available.\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"HISTORY_STORAGE_ADDRESS\":{\"details\":\"Address of the EIP-2935 history storage contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/Blockhash.sol\":\"Blockhash\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=contracts/\",\":erc4626-tests/=lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\"]},\"sources\":{\"contracts/utils/Blockhash.sol\":{\"keccak256\":\"0xff9d3682734d0818fd8d19dba63595455894bdfd5d3b264dc492b16b93655bf4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d9a093ab9bc34b8971d14827d73a335abb4136952fc65e1adce1b5b170883d4e\",\"dweb:/ipfs/QmX98Tw65cffgQYLx53YVg9zm2Vcu9H89M8cG4RigmgvsE\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=contracts/","erc4626-tests/=lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/halmos-cheatcodes/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/utils/Blockhash.sol":"Blockhash"},"evmVersion":"prague","libraries":{}},"sources":{"contracts/utils/Blockhash.sol":{"keccak256":"0xff9d3682734d0818fd8d19dba63595455894bdfd5d3b264dc492b16b93655bf4","urls":["bzz-raw://d9a093ab9bc34b8971d14827d73a335abb4136952fc65e1adce1b5b170883d4e","dweb:/ipfs/QmX98Tw65cffgQYLx53YVg9zm2Vcu9H89M8cG4RigmgvsE"],"license":"MIT"}},"version":1},"id":261}