{"abi":[{"type":"function","name":"signer","inputs":[],"outputs":[{"name":"qx","type":"bytes32","internalType":"bytes32"},{"name":"qy","type":"bytes32","internalType":"bytes32"}],"stateMutability":"view"},{"type":"error","name":"SignerP256InvalidPublicKey","inputs":[{"name":"qx","type":"bytes32","internalType":"bytes32"},{"name":"qy","type":"bytes32","internalType":"bytes32"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"signer()":"238ac933"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"qx\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"qy\",\"type\":\"bytes32\"}],\"name\":\"SignerP256InvalidPublicKey\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"signer\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"qx\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"qy\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of {AbstractSigner} using xref:api:utils/cryptography#P256[P256] signatures. For {Account} usage, a {_setSigner} function is provided to set the {signer} public key. Doing so is easier for a factory, who is likely to use initializable clones of this contract. Example of usage: ```solidity contract MyAccountP256 is Account, SignerP256, Initializable {     function initialize(bytes32 qx, bytes32 qy) public initializer {       _setSigner(qx, qy);     } } ``` IMPORTANT: Failing to call {_setSigner} either during construction (if used standalone) or during initialization (if used as a clone) may leave the signer either front-runnable or unusable.\",\"kind\":\"dev\",\"methods\":{\"signer()\":{\"details\":\"Return the signer's P256 public key.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/utils/cryptography/signers/SignerP256.sol\":\"SignerP256\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=contracts/\",\":erc4626-tests/=lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/halmos-cheatcodes/src/\"]},\"sources\":{\"contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"contracts/utils/cryptography/P256.sol\":{\"keccak256\":\"0x88c54d9537016a9c0af742fe9d6303e5b9ef76946866296382f62a34875d06e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ffdc3422a88fdf71693a139af52f9a7c4e92cb9d2db1002a23c643dbbab1b42f\",\"dweb:/ipfs/Qma2hbbigJBetFACyFxwyakzHHLnP7T2kztKxXyNHtcFLR\"]},\"contracts/utils/cryptography/signers/AbstractSigner.sol\":{\"keccak256\":\"0x2e803d54b627d8ce2841c39e973f499be029a706f7157aee74adb648a27ecda9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://62197d50f708cccc7f17509f54d429eb6921416f3695f08f1178bbb9ca5ce0c5\",\"dweb:/ipfs/QmeaUebF8obuUXwqFH4rhwTzUqa4A7z4S8TkHpWyUSrDo6\"]},\"contracts/utils/cryptography/signers/SignerP256.sol\":{\"keccak256\":\"0x7e607ba81c6c81698a84eb474dbc562b3b03e696656cf7480372988420bbe15c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77ec9e5a6241db26dd7ef8284af58e7cef7591576e4e7b8d5a228e1c14bdef1a\",\"dweb:/ipfs/QmbzAytwzRcFytagTxVk6ts9zKjQAkudnTUU8xoREfBQy2\"]},\"contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"bytes32","name":"qx","type":"bytes32"},{"internalType":"bytes32","name":"qy","type":"bytes32"}],"type":"error","name":"SignerP256InvalidPublicKey"},{"inputs":[],"stateMutability":"view","type":"function","name":"signer","outputs":[{"internalType":"bytes32","name":"qx","type":"bytes32"},{"internalType":"bytes32","name":"qy","type":"bytes32"}]}],"devdoc":{"kind":"dev","methods":{"signer()":{"details":"Return the signer's P256 public key."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=contracts/","erc4626-tests/=lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/halmos-cheatcodes/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/utils/cryptography/signers/SignerP256.sol":"SignerP256"},"evmVersion":"prague","libraries":{}},"sources":{"contracts/utils/Errors.sol":{"keccak256":"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123","urls":["bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf","dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"],"license":"MIT"},"contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"],"license":"MIT"},"contracts/utils/cryptography/P256.sol":{"keccak256":"0x88c54d9537016a9c0af742fe9d6303e5b9ef76946866296382f62a34875d06e7","urls":["bzz-raw://ffdc3422a88fdf71693a139af52f9a7c4e92cb9d2db1002a23c643dbbab1b42f","dweb:/ipfs/Qma2hbbigJBetFACyFxwyakzHHLnP7T2kztKxXyNHtcFLR"],"license":"MIT"},"contracts/utils/cryptography/signers/AbstractSigner.sol":{"keccak256":"0x2e803d54b627d8ce2841c39e973f499be029a706f7157aee74adb648a27ecda9","urls":["bzz-raw://62197d50f708cccc7f17509f54d429eb6921416f3695f08f1178bbb9ca5ce0c5","dweb:/ipfs/QmeaUebF8obuUXwqFH4rhwTzUqa4A7z4S8TkHpWyUSrDo6"],"license":"MIT"},"contracts/utils/cryptography/signers/SignerP256.sol":{"keccak256":"0x7e607ba81c6c81698a84eb474dbc562b3b03e696656cf7480372988420bbe15c","urls":["bzz-raw://77ec9e5a6241db26dd7ef8284af58e7cef7591576e4e7b8d5a228e1c14bdef1a","dweb:/ipfs/QmbzAytwzRcFytagTxVk6ts9zKjQAkudnTUU8xoREfBQy2"],"license":"MIT"},"contracts/utils/math/Math.sol":{"keccak256":"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6","urls":["bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3","dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB"],"license":"MIT"},"contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"}},"version":1},"id":298}