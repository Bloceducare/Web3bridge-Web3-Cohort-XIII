/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC20Standard,
  ERC20StandardInterface,
} from "../../contracts/ERC20Standard";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addy",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "token_name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "trasferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5069021e19e0c9bab24000006000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610c178061006d6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063947a31681161005b578063947a31681461013b578063a9059cbb14610159578063cffb751714610189578063dd62ed3e146101a757610088565b8063095ea7b31461008d57806318160ddd146100bd578063666b6041146100db57806370a082311461010b575b600080fd5b6100a760048036038101906100a291906107f4565b6101d7565b6040516100b4919061084f565b60405180910390f35b6100c5610264565b6040516100d29190610879565b60405180910390f35b6100f560048036038101906100f09190610894565b610276565b604051610102919061084f565b60405180910390f35b610125600480360381019061012091906108e7565b61050d565b6040516101329190610879565b60405180910390f35b610143610555565b60405161015091906109a4565b60405180910390f35b610173600480360381019061016e91906107f4565b610592565b604051610180919061084f565b60405180910390f35b6101916106c8565b60405161019e9190610879565b60405180910390f35b6101c160048036038101906101bc91906109c6565b6106d1565b6040516101ce9190610879565b60405180910390f35b600081600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506001905092915050565b600069021e19e0c9bab2400000905090565b6000803073ffffffffffffffffffffffffffffffffffffffff166370a08231866040518263ffffffff1660e01b81526004016102b29190610a15565b602060405180830381865afa1580156102cf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f39190610a45565b90506000600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050838211801561038457508381115b6103c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ba90610abe565b60405180910390fd5b836000808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104119190610b0d565b9250508190555083600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104a49190610b0d565b92505081905550836000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546104f99190610b41565b925050819055506001925050509392505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606040518060400160405280600a81526020017f546f6b656e5f4e616d6500000000000000000000000000000000000000000000815250905090565b6000816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610614576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060b90610bc1565b60405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106629190610b0d565b92505081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106b79190610b41565b925050819055506001905092915050565b60006012905090565b6000339250600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061078b82610760565b9050919050565b61079b81610780565b81146107a657600080fd5b50565b6000813590506107b881610792565b92915050565b6000819050919050565b6107d1816107be565b81146107dc57600080fd5b50565b6000813590506107ee816107c8565b92915050565b6000806040838503121561080b5761080a61075b565b5b6000610819858286016107a9565b925050602061082a858286016107df565b9150509250929050565b60008115159050919050565b61084981610834565b82525050565b60006020820190506108646000830184610840565b92915050565b610873816107be565b82525050565b600060208201905061088e600083018461086a565b92915050565b6000806000606084860312156108ad576108ac61075b565b5b60006108bb868287016107a9565b93505060206108cc868287016107a9565b92505060406108dd868287016107df565b9150509250925092565b6000602082840312156108fd576108fc61075b565b5b600061090b848285016107a9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561094e578082015181840152602081019050610933565b60008484015250505050565b6000601f19601f8301169050919050565b600061097682610914565b610980818561091f565b9350610990818560208601610930565b6109998161095a565b840191505092915050565b600060208201905081810360008301526109be818461096b565b905092915050565b600080604083850312156109dd576109dc61075b565b5b60006109eb858286016107a9565b92505060206109fc858286016107a9565b9150509250929050565b610a0f81610780565b82525050565b6000602082019050610a2a6000830184610a06565b92915050565b600081519050610a3f816107c8565b92915050565b600060208284031215610a5b57610a5a61075b565b5b6000610a6984828501610a30565b91505092915050565b7f596f7520646f6e2774206861766520656e6f7567682070726976696c65646765600082015250565b6000610aa860208361091f565b9150610ab382610a72565b602082019050919050565b60006020820190508181036000830152610ad781610a9b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b18826107be565b9150610b23836107be565b9250828203905081811115610b3b57610b3a610ade565b5b92915050565b6000610b4c826107be565b9150610b57836107be565b9250828201905080821115610b6f57610b6e610ade565b5b92915050565b7f596f75277265206c6f77206f6e20746f6b656e2062616c616e63650000000000600082015250565b6000610bab601b8361091f565b9150610bb682610b75565b602082019050919050565b60006020820190508181036000830152610bda81610b9e565b905091905056fea2646970667358221220fd06bfc0676016cf2daacdbd0f540922e91a30a245eb39a78737a1a5cc3e1a4c64736f6c63430008140033";

type ERC20StandardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20StandardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Standard__factory extends ContractFactory {
  constructor(...args: ERC20StandardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC20Standard & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Standard__factory {
    return super.connect(runner) as ERC20Standard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20StandardInterface {
    return new Interface(_abi) as ERC20StandardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC20Standard {
    return new Contract(address, _abi, runner) as unknown as ERC20Standard;
  }
}
