/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CHILD_TOKEN,
  CHILD_TOKENInterface,
} from "../../ERC-20.sol/CHILD_TOKEN";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allowed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attempted",
        type: "uint256",
      },
    ],
    name: "ExceedsLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "error_message",
        type: "string",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "error_message",
        type: "string",
      },
    ],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SYMBOL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526010600260006101000a81548160ff021916908360ff16021790555034801561002c57600080fd5b50604051611c8f380380611c8f833981810160405281019061004e91906102f6565b826000908161005d91906105a2565b50816001908161006d91906105a2565b508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050600260009054906101000a900460ff16600a6100be91906107e3565b633b9aca006100cd919061082e565b6003819055506003546004600060805173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050610870565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61018a82610141565b810181811067ffffffffffffffff821117156101a9576101a8610152565b5b80604052505050565b60006101bc610123565b90506101c88282610181565b919050565b600067ffffffffffffffff8211156101e8576101e7610152565b5b6101f182610141565b9050602081019050919050565b60005b8381101561021c578082015181840152602081019050610201565b60008484015250505050565b600061023b610236846101cd565b6101b2565b9050828152602081018484840111156102575761025661013c565b5b6102628482856101fe565b509392505050565b600082601f83011261027f5761027e610137565b5b815161028f848260208601610228565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102c382610298565b9050919050565b6102d3816102b8565b81146102de57600080fd5b50565b6000815190506102f0816102ca565b92915050565b60008060006060848603121561030f5761030e61012d565b5b600084015167ffffffffffffffff81111561032d5761032c610132565b5b6103398682870161026a565b935050602084015167ffffffffffffffff81111561035a57610359610132565b5b6103668682870161026a565b9250506040610377868287016102e1565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806103d357607f821691505b6020821081036103e6576103e561038c565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261044e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610411565b6104588683610411565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061049f61049a61049584610470565b61047a565b610470565b9050919050565b6000819050919050565b6104b983610484565b6104cd6104c5826104a6565b84845461041e565b825550505050565b600090565b6104e26104d5565b6104ed8184846104b0565b505050565b5b81811015610511576105066000826104da565b6001810190506104f3565b5050565b601f82111561055657610527816103ec565b61053084610401565b8101602085101561053f578190505b61055361054b85610401565b8301826104f2565b50505b505050565b600082821c905092915050565b60006105796000198460080261055b565b1980831691505092915050565b60006105928383610568565b9150826002028217905092915050565b6105ab82610381565b67ffffffffffffffff8111156105c4576105c3610152565b5b6105ce82546103bb565b6105d9828285610515565b600060209050601f83116001811461060c57600084156105fa578287015190505b6106048582610586565b86555061066c565b601f19841661061a866103ec565b60005b828110156106425784890151825560018201915060208501945060208101905061061d565b8683101561065f578489015161065b601f891682610568565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156106fa578086048111156106d6576106d5610674565b5b60018516156106e55780820291505b80810290506106f3856106a3565b94506106ba565b94509492505050565b60008261071357600190506107cf565b8161072157600090506107cf565b8160018114610737576002811461074157610770565b60019150506107cf565b60ff84111561075357610752610674565b5b8360020a91508482111561076a57610769610674565b5b506107cf565b5060208310610133831016604e8410600b84101617156107a55782820a9050838111156107a05761079f610674565b5b6107cf565b6107b284848460016106b0565b925090508184048111156107c9576107c8610674565b5b81810290505b9392505050565b600060ff82169050919050565b60006107ee82610470565b91506107f9836107d6565b92506108267fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610703565b905092915050565b600061083982610470565b915061084483610470565b925082820261085281610470565b9150828204841483151761086957610868610674565b5b5092915050565b60805161140461088b6000396000610a1901526114046000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063a9059cbb11610066578063a9059cbb14610251578063dd336c1214610281578063dd62ed3e146102b1578063f76f8d78146102e1576100ea565b80638da5cb5b146101f757806395d89b4114610215578063a3f4df7e14610233576100ea565b806323b872dd116100c857806323b872dd1461015b5780632e0f26251461018b578063313ce567146101a957806370a08231146101c7576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102ff565b6040516101049190610f34565b60405180910390f35b61012760048036038101906101229190610fef565b610391565b604051610134919061104a565b60405180910390f35b610145610504565b6040516101529190611074565b60405180910390f35b6101756004803603810190610170919061108f565b61050e565b604051610182919061104a565b60405180910390f35b6101936109a1565b6040516101a091906110fe565b60405180910390f35b6101b16109b4565b6040516101be9190611074565b60405180910390f35b6101e160048036038101906101dc9190611119565b6109ce565b6040516101ee9190611074565b60405180910390f35b6101ff610a17565b60405161020c9190611155565b60405180910390f35b61021d610a3b565b60405161022a9190610f34565b60405180910390f35b61023b610acd565b6040516102489190610f34565b60405180910390f35b61026b60048036038101906102669190610fef565b610b5b565b604051610278919061104a565b60405180910390f35b61029b60048036038101906102969190611170565b610d6a565b6040516102a89190611074565b60405180910390f35b6102cb60048036038101906102c69190611170565b610d8f565b6040516102d89190611074565b60405180910390f35b6102e9610e16565b6040516102f69190610f34565b60405180910390f35b60606000805461030e906111df565b80601f016020809104026020016040519081016040528092919081815260200182805461033a906111df565b80156103875780601f1061035c57610100808354040283529160200191610387565b820191906000526020600020905b81548152906001019060200180831161036a57829003601f168201915b5050505050905090565b600080600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104f29190611074565b60405180910390a36001905092915050565b6000600354905090565b600080600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036105ce576040517f457291170000000000000000000000000000000000000000000000000000000081526004016105c590611282565b60405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561070d57600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826040517f89fe1d920000000000000000000000000000000000000000000000000000000081526004016107049291906112a2565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461075891906112fa565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107e6919061132e565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108b191906112fa565b600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161098e9190611074565b60405180910390a3600190509392505050565b600260009054906101000a900460ff1681565b6000600260009054906101000a900460ff1660ff16905090565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b606060018054610a4a906111df565b80601f0160208091040260200160405190810160405280929190818152602001828054610a76906111df565b8015610ac35780601f10610a9857610100808354040283529160200191610ac3565b820191906000526020600020905b815481529060010190602001808311610aa657829003601f168201915b5050505050905090565b60008054610ada906111df565b80601f0160208091040260200160405190810160405280929190818152602001828054610b06906111df565b8015610b535780601f10610b2857610100808354040283529160200191610b53565b820191906000526020600020905b815481529060010190602001808311610b3657829003601f168201915b505050505081565b600081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610bdf576040517f7979dc87000000000000000000000000000000000000000000000000000000008152600401610bd6906113ae565b60405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c2a91906112fa565b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cb8919061132e565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d589190611074565b60405180910390a36001905092915050565b6005602052816000526040600020602052806000526040600020600091509150505481565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60018054610e23906111df565b80601f0160208091040260200160405190810160405280929190818152602001828054610e4f906111df565b8015610e9c5780601f10610e7157610100808354040283529160200191610e9c565b820191906000526020600020905b815481529060010190602001808311610e7f57829003601f168201915b505050505081565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ede578082015181840152602081019050610ec3565b60008484015250505050565b6000601f19601f8301169050919050565b6000610f0682610ea4565b610f108185610eaf565b9350610f20818560208601610ec0565b610f2981610eea565b840191505092915050565b60006020820190508181036000830152610f4e8184610efb565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f8682610f5b565b9050919050565b610f9681610f7b565b8114610fa157600080fd5b50565b600081359050610fb381610f8d565b92915050565b6000819050919050565b610fcc81610fb9565b8114610fd757600080fd5b50565b600081359050610fe981610fc3565b92915050565b6000806040838503121561100657611005610f56565b5b600061101485828601610fa4565b925050602061102585828601610fda565b9150509250929050565b60008115159050919050565b6110448161102f565b82525050565b600060208201905061105f600083018461103b565b92915050565b61106e81610fb9565b82525050565b60006020820190506110896000830184611065565b92915050565b6000806000606084860312156110a8576110a7610f56565b5b60006110b686828701610fa4565b93505060206110c786828701610fa4565b92505060406110d886828701610fda565b9150509250925092565b600060ff82169050919050565b6110f8816110e2565b82525050565b600060208201905061111360008301846110ef565b92915050565b60006020828403121561112f5761112e610f56565b5b600061113d84828501610fa4565b91505092915050565b61114f81610f7b565b82525050565b600060208201905061116a6000830184611146565b92915050565b6000806040838503121561118757611186610f56565b5b600061119585828601610fa4565b92505060206111a685828601610fa4565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111f757607f821691505b60208210810361120a576112096111b0565b5b50919050565b7f756e617574686f726973656420746f2073656e642066726f6d2074686973206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061126c602683610eaf565b915061127782611210565b604082019050919050565b6000602082019050818103600083015261129b8161125f565b9050919050565b60006040820190506112b76000830185611065565b6112c46020830184611065565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061130582610fb9565b915061131083610fb9565b9250828203905081811115611328576113276112cb565b5b92915050565b600061133982610fb9565b915061134483610fb9565b925082820190508082111561135c5761135b6112cb565b5b92915050565b7f496e73756666696369656e742042616c616e6365000000000000000000000000600082015250565b6000611398601483610eaf565b91506113a382611362565b602082019050919050565b600060208201905081810360008301526113c78161138b565b905091905056fea2646970667358221220d6be1f7c23eb30cede4dc21176059795731e2f4507d99c9ed3a498098b4266d264736f6c634300081c0033";

type CHILD_TOKENConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CHILD_TOKENConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CHILD_TOKEN__factory extends ContractFactory {
  constructor(...args: CHILD_TOKENConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_name, _symbol, _owner, overrides || {});
  }
  override deploy(
    _name: string,
    _symbol: string,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_name, _symbol, _owner, overrides || {}) as Promise<
      CHILD_TOKEN & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CHILD_TOKEN__factory {
    return super.connect(runner) as CHILD_TOKEN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CHILD_TOKENInterface {
    return new Interface(_abi) as CHILD_TOKENInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CHILD_TOKEN {
    return new Contract(address, _abi, runner) as unknown as CHILD_TOKEN;
  }
}
