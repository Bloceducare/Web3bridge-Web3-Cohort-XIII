/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { MYTOKEN20, MYTOKEN20Interface } from "../MYTOKEN20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allowed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "attempted",
        type: "uint256",
      },
    ],
    name: "ExceedsLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "error_message",
        type: "string",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "error_message",
        type: "string",
      },
    ],
    name: "UNAUTHORIZED",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DECIMALS",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SYMBOL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040526040518060400160405280600381526020017f494244000000000000000000000000000000000000000000000000000000000081525060009081610048919061033e565b506010600160006101000a81548160ff021916908360ff16021790555034801561007157600080fd5b50600160009054906101000a900460ff16600a61008e919061057f565b633b9aca0061009d91906105ca565b600281905550600254600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061060c565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061016f57607f821691505b60208210810361018257610181610128565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026101ea7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826101ad565b6101f486836101ad565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061023b6102366102318461020c565b610216565b61020c565b9050919050565b6000819050919050565b61025583610220565b61026961026182610242565b8484546101ba565b825550505050565b600090565b61027e610271565b61028981848461024c565b505050565b5b818110156102ad576102a2600082610276565b60018101905061028f565b5050565b601f8211156102f2576102c381610188565b6102cc8461019d565b810160208510156102db578190505b6102ef6102e78561019d565b83018261028e565b50505b505050565b600082821c905092915050565b6000610315600019846008026102f7565b1980831691505092915050565b600061032e8383610304565b9150826002028217905092915050565b610347826100ee565b67ffffffffffffffff8111156103605761035f6100f9565b5b61036a8254610157565b6103758282856102b1565b600060209050601f8311600181146103a85760008415610396578287015190505b6103a08582610322565b865550610408565b601f1984166103b686610188565b60005b828110156103de578489015182556001820191506020850194506020810190506103b9565b868310156103fb57848901516103f7601f891682610304565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156104965780860481111561047257610471610410565b5b60018516156104815780820291505b808102905061048f8561043f565b9450610456565b94509492505050565b6000826104af576001905061056b565b816104bd576000905061056b565b81600181146104d357600281146104dd5761050c565b600191505061056b565b60ff8411156104ef576104ee610410565b5b8360020a91508482111561050657610505610410565b5b5061056b565b5060208310610133831016604e8410600b84101617156105415782820a90508381111561053c5761053b610410565b5b61056b565b61054e848484600161044c565b9250905081840481111561056557610564610410565b5b81810290505b9392505050565b600060ff82169050919050565b600061058a8261020c565b915061059583610572565b92506105c27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461049f565b905092915050565b60006105d58261020c565b91506105e08361020c565b92508282026105ee8161020c565b9150828204841483151761060557610604610410565b5b5092915050565b60805161135a61062760003960006109c4015261135a6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063a9059cbb11610066578063a9059cbb14610251578063dd336c1214610281578063dd62ed3e146102b1578063f76f8d78146102e1576100ea565b80638da5cb5b146101f757806395d89b4114610215578063a3f4df7e14610233576100ea565b806323b872dd116100c857806323b872dd1461015b5780632e0f26251461018b578063313ce567146101a957806370a08231146101c7576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102ff565b6040516101049190610e8a565b60405180910390f35b61012760048036038101906101229190610f45565b61033c565b6040516101349190610fa0565b60405180910390f35b6101456104af565b6040516101529190610fca565b60405180910390f35b61017560048036038101906101709190610fe5565b6104b9565b6040516101829190610fa0565b60405180910390f35b61019361094c565b6040516101a09190611054565b60405180910390f35b6101b161095f565b6040516101be9190610fca565b60405180910390f35b6101e160048036038101906101dc919061106f565b610979565b6040516101ee9190610fca565b60405180910390f35b6101ff6109c2565b60405161020c91906110ab565b60405180910390f35b61021d6109e6565b60405161022a9190610e8a565b60405180910390f35b61023b610a78565b6040516102489190610e8a565b60405180910390f35b61026b60048036038101906102669190610f45565b610ab1565b6040516102789190610fa0565b60405180910390f35b61029b600480360381019061029691906110c6565b610cc0565b6040516102a89190610fca565b60405180910390f35b6102cb60048036038101906102c691906110c6565b610ce5565b6040516102d89190610fca565b60405180910390f35b6102e9610d6c565b6040516102f69190610e8a565b60405180910390f35b60606040518060400160405280600681526020017f49424144414e0000000000000000000000000000000000000000000000000000815250905090565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161049d9190610fca565b60405180910390a36001905092915050565b6000600254905090565b600080600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205403610579576040517f4572911700000000000000000000000000000000000000000000000000000000815260040161057090611178565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106b857600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054826040517f89fe1d920000000000000000000000000000000000000000000000000000000081526004016106af929190611198565b60405180910390fd5b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461070391906111f0565b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107919190611224565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461085c91906111f0565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109399190610fca565b60405180910390a3600190509392505050565b600160009054906101000a900460ff1681565b6000600160009054906101000a900460ff1660ff16905090565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600080546109f590611287565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2190611287565b8015610a6e5780601f10610a4357610100808354040283529160200191610a6e565b820191906000526020600020905b815481529060010190602001808311610a5157829003601f168201915b5050505050905090565b6040518060400160405280600681526020017f49424144414e000000000000000000000000000000000000000000000000000081525081565b600081600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b35576040517f7979dc87000000000000000000000000000000000000000000000000000000008152600401610b2c90611304565b60405180910390fd5b81600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b8091906111f0565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c0e9190611224565b600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610cae9190610fca565b60405180910390a36001905092915050565b6004602052816000526040600020602052806000526040600020600091509150505481565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60008054610d7990611287565b80601f0160208091040260200160405190810160405280929190818152602001828054610da590611287565b8015610df25780601f10610dc757610100808354040283529160200191610df2565b820191906000526020600020905b815481529060010190602001808311610dd557829003601f168201915b505050505081565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e34578082015181840152602081019050610e19565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e5c82610dfa565b610e668185610e05565b9350610e76818560208601610e16565b610e7f81610e40565b840191505092915050565b60006020820190508181036000830152610ea48184610e51565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610edc82610eb1565b9050919050565b610eec81610ed1565b8114610ef757600080fd5b50565b600081359050610f0981610ee3565b92915050565b6000819050919050565b610f2281610f0f565b8114610f2d57600080fd5b50565b600081359050610f3f81610f19565b92915050565b60008060408385031215610f5c57610f5b610eac565b5b6000610f6a85828601610efa565b9250506020610f7b85828601610f30565b9150509250929050565b60008115159050919050565b610f9a81610f85565b82525050565b6000602082019050610fb56000830184610f91565b92915050565b610fc481610f0f565b82525050565b6000602082019050610fdf6000830184610fbb565b92915050565b600080600060608486031215610ffe57610ffd610eac565b5b600061100c86828701610efa565b935050602061101d86828701610efa565b925050604061102e86828701610f30565b9150509250925092565b600060ff82169050919050565b61104e81611038565b82525050565b60006020820190506110696000830184611045565b92915050565b60006020828403121561108557611084610eac565b5b600061109384828501610efa565b91505092915050565b6110a581610ed1565b82525050565b60006020820190506110c0600083018461109c565b92915050565b600080604083850312156110dd576110dc610eac565b5b60006110eb85828601610efa565b92505060206110fc85828601610efa565b9150509250929050565b7f756e617574686f726973656420746f2073656e642066726f6d2074686973206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611162602683610e05565b915061116d82611106565b604082019050919050565b6000602082019050818103600083015261119181611155565b9050919050565b60006040820190506111ad6000830185610fbb565b6111ba6020830184610fbb565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111fb82610f0f565b915061120683610f0f565b925082820390508181111561121e5761121d6111c1565b5b92915050565b600061122f82610f0f565b915061123a83610f0f565b9250828201905080821115611252576112516111c1565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061129f57607f821691505b6020821081036112b2576112b1611258565b5b50919050565b7f496e73756666696369656e742042616c616e6365000000000000000000000000600082015250565b60006112ee601483610e05565b91506112f9826112b8565b602082019050919050565b6000602082019050818103600083015261131d816112e1565b905091905056fea2646970667358221220a7866e09b6bf8e8a9928b2f63590936c865fa454bbe1ea1b31faa82f586ac40964736f6c634300081c0033";

type MYTOKEN20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MYTOKEN20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MYTOKEN20__factory extends ContractFactory {
  constructor(...args: MYTOKEN20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MYTOKEN20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MYTOKEN20__factory {
    return super.connect(runner) as MYTOKEN20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MYTOKEN20Interface {
    return new Interface(_abi) as MYTOKEN20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MYTOKEN20 {
    return new Contract(address, _abi, runner) as unknown as MYTOKEN20;
  }
}
