/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20Token,
  ERC20TokenInterface,
} from "../../../contracts/ERC20.sol/ERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ALLOWANCE_TOO_LOW",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_ENOUGH_FUND",
    type: "error",
  },
  {
    inputs: [],
    name: "ONLY_OWNER_CAN_CALL_THIS_FUNCTION",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "_totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051611e14380380611e1483398181016040528101906100329190610348565b61004c6763cc7a5b53cc001160c01b61013960201b60201c565b61006667bd7607d89350c90e60c01b61013960201b60201c565b83600090816100759190610608565b5061009067a31a4bd4db5d8ee560c01b61013960201b60201c565b826001908161009f9190610608565b506100ba67fe3464252df89ffa60c01b61013960201b60201c565b81600260006101000a81548160ff021916908360ff1602179055506100ef674c49d2e4697de00760c01b61013960201b60201c565b80600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506106da565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101a38261015a565b810181811067ffffffffffffffff821117156101c2576101c161016b565b5b80604052505050565b60006101d561013c565b90506101e1828261019a565b919050565b600067ffffffffffffffff8211156102015761020061016b565b5b61020a8261015a565b9050602081019050919050565b60005b8381101561023557808201518184015260208101905061021a565b60008484015250505050565b600061025461024f846101e6565b6101cb565b9050828152602081018484840111156102705761026f610155565b5b61027b848285610217565b509392505050565b600082601f83011261029857610297610150565b5b81516102a8848260208601610241565b91505092915050565b600060ff82169050919050565b6102c7816102b1565b81146102d257600080fd5b50565b6000815190506102e4816102be565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610315826102ea565b9050919050565b6103258161030a565b811461033057600080fd5b50565b6000815190506103428161031c565b92915050565b6000806000806080858703121561036257610361610146565b5b600085015167ffffffffffffffff8111156103805761037f61014b565b5b61038c87828801610283565b945050602085015167ffffffffffffffff8111156103ad576103ac61014b565b5b6103b987828801610283565b93505060406103ca878288016102d5565b92505060606103db87828801610333565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061043957607f821691505b60208210810361044c5761044b6103f2565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026104b47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610477565b6104be8683610477565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006105056105006104fb846104d6565b6104e0565b6104d6565b9050919050565b6000819050919050565b61051f836104ea565b61053361052b8261050c565b848454610484565b825550505050565b600090565b61054861053b565b610553818484610516565b505050565b5b818110156105775761056c600082610540565b600181019050610559565b5050565b601f8211156105bc5761058d81610452565b61059684610467565b810160208510156105a5578190505b6105b96105b185610467565b830182610558565b50505b505050565b600082821c905092915050565b60006105df600019846008026105c1565b1980831691505092915050565b60006105f883836105ce565b9150826002028217905092915050565b610611826103e7565b67ffffffffffffffff81111561062a5761062961016b565b5b6106348254610421565b61063f82828561057b565b600060209050601f8311600181146106725760008415610660578287015190505b61066a85826105ec565b8655506106d2565b601f19841661068086610452565b60005b828110156106a857848901518255600182019150602085019450602081019050610683565b868310156106c557848901516106c1601f8916826105ce565b8355505b6001600288020188555050505b505050505050565b61172b806106e96000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806340c10f191161008c5780638da5cb5b116100665780638da5cb5b1461025f57806395d89b411461027d578063a9059cbb1461029b578063dd62ed3e146102cb576100ea565b806340c10f19146101f757806342966c681461021357806370a082311461022f576100ea565b806323b872dd116100c857806323b872dd1461015b57806327e235e31461018b578063313ce567146101bb5780633eaaf86b146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102fb565b6040516101049190611355565b60405180910390f35b61012760048036038101906101229190611410565b610389565b604051610134919061146b565b60405180910390f35b6101456104f3565b6040516101529190611495565b60405180910390f35b610175600480360381019061017091906114b0565b6104f9565b604051610182919061146b565b60405180910390f35b6101a560048036038101906101a09190611503565b61093e565b6040516101b29190611495565b60405180910390f35b6101c3610956565b6040516101d0919061154c565b60405180910390f35b6101e1610969565b6040516101ee9190611495565b60405180910390f35b610211600480360381019061020c9190611410565b6109af565b005b61022d60048036038101906102289190611567565b610bd7565b005b61024960048036038101906102449190611503565b610e41565b6040516102569190611495565b60405180910390f35b610267610ec6565b60405161027491906115a3565b60405180910390f35b610285610eec565b6040516102929190611355565b60405180910390f35b6102b560048036038101906102b09190611410565b610f7a565b6040516102c2919061146b565b60405180910390f35b6102e560048036038101906102e091906115be565b6111ff565b6040516102f29190611495565b60405180910390f35b600080546103089061162d565b80601f01602080910402602001604051908101604052809291908181526020018280546103349061162d565b80156103815780601f1061035657610100808354040283529160200191610381565b820191906000526020600020905b81548152906001019060200180831161036457829003601f168201915b505050505081565b600061039f67e978f2fe4b56e86a60c01b6112c2565b6103b367b568c228bfed337760c01b6112c2565b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061044867b07aa20c4a1b6bce60c01b6112c2565b61045c679b3e790baaa4988560c01b6112c2565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104b99190611495565b60405180910390a36104d5674473049b64aef51460c01b6112c2565b6104e9673a78b07dd0bc551660c01b6112c2565b6001905092915050565b60035481565b600061050f67fb26ea9b7125cd4c60c01b6112c2565b610523674c0603f3a70b21a160c01b6112c2565b61053767d677da3924e2ac4360c01b6112c2565b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116105d75761059167d10986cb2805624260c01b6112c2565b6105a567f1bc7adc180c588460c01b6112c2565b6040517f62e890de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105ea66796715a96b63e360c01b6112c2565b6105fe67774afea6a26ce3fd60c01b6112c2565b6106126711eef1d87ca409b360c01b6112c2565b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054116106ef576106a967065ba6512369489260c01b6112c2565b6106bd67ddbde262ce71168a60c01b6112c2565b6040517f5afbda2b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610703674d2d28bf34991d3760c01b6112c2565b610717672aafb5fd4d5d8eaa60c01b6112c2565b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610766919061168d565b92505081905550610781676f6e8f75e2b8e54360c01b6112c2565b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107d091906116c1565b925050819055506107eb67ef515b10c632a6db60c01b6112c2565b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610877919061168d565b9250508190555061089267be2e74d3a460c15d60c01b6112c2565b6108a667c78e1bf7cc8bcd1d60c01b6112c2565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109039190611495565b60405180910390a361091f67e8c4d025b37bb83160c01b6112c2565b61093367fd654d07011e050560c01b6112c2565b600190509392505050565b60046020528060005260406000206000915090505481565b600260009054906101000a900460ff1681565b600061097f670363162b54fd3cf360c01b6112c2565b61099367c38e7ad96f245e8a60c01b6112c2565b6109a767e37b43798b094c9f60c01b6112c2565b600354905090565b6109c367157083b87a532ece60c01b6112c2565b6109d7676121552960ccf22560c01b6112c2565b6109eb6709c77c239f6bb10e60c01b6112c2565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a9a57610a546761e562a5dc7b761260c01b6112c2565b610a6867d872782b3f7bffcc60c01b6112c2565b6040517ff933864500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610aae67222069b0c8cc3fb160c01b6112c2565b610ac267d18cbd17a4402e0a60c01b6112c2565b8060036000828254610ad491906116c1565b92505081905550610aef671b9024d2ba05a83060c01b6112c2565b80600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b3e91906116c1565b92505081905550610b59671e5c4e820b6c66c460c01b6112c2565b610b6d67b42497d0ed1163ba60c01b6112c2565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bcb9190611495565b60405180910390a35050565b610beb67813e58887a328d8160c01b6112c2565b610bff6736ce96250722236460c01b6112c2565b610c1266c1e17459743f7160c01b6112c2565b3373ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610cc157610c7b677c2938fbe1b8aa6460c01b6112c2565b610c8f677a76c729bb56fa0a60c01b6112c2565b6040517ff933864500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cd567fc265ed5713a679760c01b6112c2565b610ce967afb0ecdcf6257ee160c01b6112c2565b8060036000828254610cfb919061168d565b92505081905550610d1667ccbf6c9e6f93267a60c01b6112c2565b8060046000600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d87919061168d565b92505081905550610da267583a7164e29a55ef60c01b6112c2565b610db667122784d66d02d11760c01b6112c2565b600073ffffffffffffffffffffffffffffffffffffffff16600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e369190611495565b60405180910390a350565b6000610e5767f6364d75fa400d1760c01b6112c2565b610e6b6781a0fbb031a8485a60c01b6112c2565b610e7f67d036817d347e427960c01b6112c2565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054610ef99061162d565b80601f0160208091040260200160405190810160405280929190818152602001828054610f259061162d565b8015610f725780601f10610f4757610100808354040283529160200191610f72565b820191906000526020600020905b815481529060010190602001808311610f5557829003601f168201915b505050505081565b6000610f90679c759c739ed99af860c01b6112c2565b610fa467e958e755d2b0185160c01b6112c2565b610fb86726949323d54b09a960c01b6112c2565b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541161105857611012670b0e06c0283d8c2560c01b6112c2565b6110266708c3ded7b7380bca60c01b6112c2565b6040517f62e890de00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61106c67c5aacbbaa383509b60c01b6112c2565b61108067eb34dd98e7be42e560c01b6112c2565b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110cf919061168d565b925050819055506110ea67aab8ca5645d9d0a260c01b6112c2565b81600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461113991906116c1565b9250508190555061115467dff8aa0b609537bc60c01b6112c2565b611168677256b5b5d740298f60c01b6112c2565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516111c59190611495565b60405180910390a36111e167f7e597d7a3a7dcd560c01b6112c2565b6111f5672549ba674309643060c01b6112c2565b6001905092915050565b6000611215672f702d1977f74e5f60c01b6112c2565b61122967184e499305ca3d8a60c01b6112c2565b61123d67cf21add738a7cfb360c01b6112c2565b600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b50565b600081519050919050565b600082825260208201905092915050565b60005b838110156112ff5780820151818401526020810190506112e4565b60008484015250505050565b6000601f19601f8301169050919050565b6000611327826112c5565b61133181856112d0565b93506113418185602086016112e1565b61134a8161130b565b840191505092915050565b6000602082019050818103600083015261136f818461131c565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113a78261137c565b9050919050565b6113b78161139c565b81146113c257600080fd5b50565b6000813590506113d4816113ae565b92915050565b6000819050919050565b6113ed816113da565b81146113f857600080fd5b50565b60008135905061140a816113e4565b92915050565b6000806040838503121561142757611426611377565b5b6000611435858286016113c5565b9250506020611446858286016113fb565b9150509250929050565b60008115159050919050565b61146581611450565b82525050565b6000602082019050611480600083018461145c565b92915050565b61148f816113da565b82525050565b60006020820190506114aa6000830184611486565b92915050565b6000806000606084860312156114c9576114c8611377565b5b60006114d7868287016113c5565b93505060206114e8868287016113c5565b92505060406114f9868287016113fb565b9150509250925092565b60006020828403121561151957611518611377565b5b6000611527848285016113c5565b91505092915050565b600060ff82169050919050565b61154681611530565b82525050565b6000602082019050611561600083018461153d565b92915050565b60006020828403121561157d5761157c611377565b5b600061158b848285016113fb565b91505092915050565b61159d8161139c565b82525050565b60006020820190506115b86000830184611594565b92915050565b600080604083850312156115d5576115d4611377565b5b60006115e3858286016113c5565b92505060206115f4858286016113c5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061164557607f821691505b602082108103611658576116576115fe565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611698826113da565b91506116a3836113da565b92508282039050818111156116bb576116ba61165e565b5b92915050565b60006116cc826113da565b91506116d7836113da565b92508282019050808211156116ef576116ee61165e565b5b9291505056fea2646970667358221220cdd3394a26fd67fbdb7f2345e32e03a06fb4b3793535e706c24c9e8817f72f5764736f6c634300081c0033";

type ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Token__factory extends ContractFactory {
  constructor(...args: ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _owner,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _owner,
      overrides || {}
    ) as Promise<
      ERC20Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Token__factory {
    return super.connect(runner) as ERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new Interface(_abi) as ERC20TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Token {
    return new Contract(address, _abi, runner) as unknown as ERC20Token;
  }
}
