/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { ERC20, ERC20Interface } from "../ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_decimals",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "INSUFFICIENT_ALLOWANCE",
    type: "error",
  },
  {
    inputs: [],
    name: "INSUFFICIENT_BALANCE",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_OWNER",
    type: "error",
  },
  {
    inputs: [],
    name: "ZERO_ADDRESS",
    type: "error",
  },
  {
    inputs: [],
    name: "ZERO_AMOUNT",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approve",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "get_total_supply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051611ac1380380611ac183398181016040528101906100329190610300565b836000908161004191906105b6565b50826001908161005191906105b6565b5081608081815250508060028190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516101449190610697565b60405180910390a3505050506106b2565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6101bc82610173565b810181811067ffffffffffffffff821117156101db576101da610184565b5b80604052505050565b60006101ee610155565b90506101fa82826101b3565b919050565b600067ffffffffffffffff82111561021a57610219610184565b5b61022382610173565b9050602081019050919050565b60005b8381101561024e578082015181840152602081019050610233565b60008484015250505050565b600061026d610268846101ff565b6101e4565b9050828152602081018484840111156102895761028861016e565b5b610294848285610230565b509392505050565b600082601f8301126102b1576102b0610169565b5b81516102c184826020860161025a565b91505092915050565b6000819050919050565b6102dd816102ca565b81146102e857600080fd5b50565b6000815190506102fa816102d4565b92915050565b6000806000806080858703121561031a5761031961015f565b5b600085015167ffffffffffffffff81111561033857610337610164565b5b6103448782880161029c565b945050602085015167ffffffffffffffff81111561036557610364610164565b5b6103718782880161029c565b9350506040610382878288016102eb565b9250506060610393878288016102eb565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806103f157607f821691505b602082108103610404576104036103aa565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261046c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261042f565b610476868361042f565b95508019841693508086168417925050509392505050565b6000819050919050565b60006104b36104ae6104a9846102ca565b61048e565b6102ca565b9050919050565b6000819050919050565b6104cd83610498565b6104e16104d9826104ba565b84845461043c565b825550505050565b600090565b6104f66104e9565b6105018184846104c4565b505050565b5b818110156105255761051a6000826104ee565b600181019050610507565b5050565b601f82111561056a5761053b8161040a565b6105448461041f565b81016020851015610553578190505b61056761055f8561041f565b830182610506565b50505b505050565b600082821c905092915050565b600061058d6000198460080261056f565b1980831691505092915050565b60006105a6838361057c565b9150826002028217905092915050565b6105bf8261039f565b67ffffffffffffffff8111156105d8576105d7610184565b5b6105e282546103d9565b6105ed828285610529565b600060209050601f831160018114610620576000841561060e578287015190505b610618858261059a565b865550610680565b601f19841661062e8661040a565b60005b8281101561065657848901518255600182019150602085019450602081019050610631565b86831015610673578489015161066f601f89168261057c565b8355505b6001600288020188555050505b505050505050565b610691816102ca565b82525050565b60006020820190506106ac6000830184610688565b92915050565b6080516113f46106cd600039600061089f01526113f46000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a9059cbb11610066578063a9059cbb1461024d578063cca3e8321461027d578063dd62ed3e146102ad578063f923058c146102dd576100ea565b806370a08231146101e15780638da5cb5b1461021157806395d89b411461022f576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806340c10f19146101a957806342966c68146101c5576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f76102fb565b6040516101049190611055565b60405180910390f35b61012760048036038101906101229190611110565b610389565b604051610134919061116b565b60405180910390f35b6101456104e0565b6040516101529190611195565b60405180910390f35b610175600480360381019061017091906111b0565b6104e6565b604051610182919061116b565b60405180910390f35b61019361089d565b6040516101a09190611195565b60405180910390f35b6101c360048036038101906101be9190611110565b6108c1565b005b6101df60048036038101906101da9190611203565b610ac1565b005b6101fb60048036038101906101f69190611230565b610c4c565b6040516102089190611195565b60405180910390f35b610219610c95565b604051610226919061126c565b60405180910390f35b610237610cbb565b6040516102449190611055565b60405180910390f35b61026760048036038101906102629190611110565b610d49565b604051610274919061116b565b60405180910390f35b61029760048036038101906102929190611230565b610f7e565b6040516102a49190611195565b60405180910390f35b6102c760048036038101906102c29190611287565b610f96565b6040516102d49190611195565b60405180910390f35b6102e5610fbb565b6040516102f29190611195565b60405180910390f35b60008054610308906112f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610334906112f6565b80156103815780601f1061035657610100808354040283529160200191610381565b820191906000526020600020905b81548152906001019060200180831161036457829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036103f0576040517f538ba4f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104ce9190611195565b60405180910390a36001905092915050565b60025481565b60008073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061054e5750600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16145b15610585576040517f538ba4f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082036105bf576040517ff6fa545000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610638576040517f50b1f35600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156106ee576040517f0fd3919300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461077a9190611356565b9250508190555081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107d09190611356565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610826919061138a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161088a9190611195565b60405180910390a3600190509392505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610948576040517f71d78b1200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109ae576040517f538ba4f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600081036109e8576040517ff6fa545000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600260008282546109fa919061138a565b9250508190555080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610a50919061138a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ab59190611195565b60405180910390a35050565b60008103610afb576040517ff6fa545000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b74576040517f50b1f35600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610bc39190611356565b925050819055508060026000828254610bdc9190611356565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c419190611195565b60405180910390a350565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054610cc8906112f6565b80601f0160208091040260200160405190810160405280929190818152602001828054610cf4906112f6565b8015610d415780601f10610d1657610100808354040283529160200191610d41565b820191906000526020600020905b815481529060010190602001808311610d2457829003601f168201915b505050505081565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610db0576040517f538ba4f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008203610dea576040517ff6fa545000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610e63576040517f50b1f35600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610eb29190611356565b9250508190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f08919061138a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f6c9190611195565b60405180910390a36001905092915050565b60046020528060005260406000206000915090505481565b6005602052816000526040600020602052806000526040600020600091509150505481565b6000600254905090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fff578082015181840152602081019050610fe4565b60008484015250505050565b6000601f19601f8301169050919050565b600061102782610fc5565b6110318185610fd0565b9350611041818560208601610fe1565b61104a8161100b565b840191505092915050565b6000602082019050818103600083015261106f818461101c565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110a78261107c565b9050919050565b6110b78161109c565b81146110c257600080fd5b50565b6000813590506110d4816110ae565b92915050565b6000819050919050565b6110ed816110da565b81146110f857600080fd5b50565b60008135905061110a816110e4565b92915050565b6000806040838503121561112757611126611077565b5b6000611135858286016110c5565b9250506020611146858286016110fb565b9150509250929050565b60008115159050919050565b61116581611150565b82525050565b6000602082019050611180600083018461115c565b92915050565b61118f816110da565b82525050565b60006020820190506111aa6000830184611186565b92915050565b6000806000606084860312156111c9576111c8611077565b5b60006111d7868287016110c5565b93505060206111e8868287016110c5565b92505060406111f9868287016110fb565b9150509250925092565b60006020828403121561121957611218611077565b5b6000611227848285016110fb565b91505092915050565b60006020828403121561124657611245611077565b5b6000611254848285016110c5565b91505092915050565b6112668161109c565b82525050565b6000602082019050611281600083018461125d565b92915050565b6000806040838503121561129e5761129d611077565b5b60006112ac858286016110c5565b92505060206112bd858286016110c5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061130e57607f821691505b602082108103611321576113206112c7565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611361826110da565b915061136c836110da565b925082820390508181111561138457611383611327565b5b92915050565b6000611395826110da565b91506113a0836110da565b92508282019050808211156113b8576113b7611327565b5b9291505056fea264697066735822122094c34c3187a17810fe254445d66cd486e4952544682e4470916aff1ed76a05f664736f6c634300081c0033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      _initialSupply,
      overrides || {}
    );
  }
  override deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    _initialSupply: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      _initialSupply,
      overrides || {}
    ) as Promise<
      ERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20__factory {
    return super.connect(runner) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20 {
    return new Contract(address, _abi, runner) as unknown as ERC20;
  }
}
