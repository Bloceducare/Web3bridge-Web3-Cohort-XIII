/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IEmployeePayment,
  IEmployeePaymentInterface,
} from "../IEmployeePayment";

const _abi = [
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_employee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "disburseSalary",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employee",
        type: "address",
      },
    ],
    name: "getEmployeeDetails",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "salary",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IEmployeePayment__factory {
  static readonly abi = _abi;
  static createInterface(): IEmployeePaymentInterface {
    return new Interface(_abi) as IEmployeePaymentInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IEmployeePayment {
    return new Contract(address, _abi, runner) as unknown as IEmployeePayment;
  }
}
