/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IEmployeeManagement,
  IEmployeeManagementInterface,
} from "../IEmployeeManagement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_employeeAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "enum IEmployeeManagement.Role",
        name: "_role",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_salary",
        type: "uint256",
      },
    ],
    name: "addEmployee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employeeAddress",
        type: "address",
      },
    ],
    name: "canAccessGarage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employeeAddress",
        type: "address",
      },
    ],
    name: "disburseSalary",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEmployees",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum IEmployeeManagement.Role",
            name: "role",
            type: "uint8",
          },
          {
            internalType: "enum IEmployeeManagement.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "salary",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPaid",
            type: "uint256",
          },
        ],
        internalType: "struct IEmployeeManagement.Employee[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employeeAddress",
        type: "address",
      },
    ],
    name: "getEmployeeDetails",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum IEmployeeManagement.Role",
            name: "role",
            type: "uint8",
          },
          {
            internalType: "enum IEmployeeManagement.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "salary",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalPaid",
            type: "uint256",
          },
        ],
        internalType: "struct IEmployeeManagement.Employee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IEmployeeManagement__factory {
  static readonly abi = _abi;
  static createInterface(): IEmployeeManagementInterface {
    return new Interface(_abi) as IEmployeeManagementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IEmployeeManagement {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IEmployeeManagement;
  }
}
