/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IEmployeeManagement,
  IEmployeeManagementInterface,
} from "../../../interface/employeeManagement.sol/IEmployeeManagement";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "enum IEmployeeManagement.EmployeePosition",
        name: "_position",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_salary",
        type: "uint256",
      },
    ],
    name: "addEmployee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "payEmployee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IEmployeeManagement__factory {
  static readonly abi = _abi;
  static createInterface(): IEmployeeManagementInterface {
    return new Interface(_abi) as IEmployeeManagementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IEmployeeManagement {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IEmployeeManagement;
  }
}
