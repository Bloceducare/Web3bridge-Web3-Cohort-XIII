/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EmployeeManagement,
  EmployeeManagementInterface,
} from "../../employeeManagement.sol/EmployeeManagement";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "enum IEmployeeManagement.EmployeePosition",
        name: "_position",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_salary",
        type: "uint256",
      },
    ],
    name: "addEmployee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "employees",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "salary",
        type: "uint256",
      },
      {
        internalType: "enum IEmployeeManagement.EmployeePosition",
        name: "position",
        type: "uint8",
      },
      {
        internalType: "enum IEmployeeManagement.Status",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundContract",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getEmployee",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "_address",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "salary",
            type: "uint256",
          },
          {
            internalType: "enum IEmployeeManagement.EmployeePosition",
            name: "position",
            type: "uint8",
          },
          {
            internalType: "enum IEmployeeManagement.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct IEmployeeManagement.Employee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "payEmployee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506112ff8061001f6000396000f3fe60806040526004361061004e5760003560e01c80631f50ad161461005a57806332648e09146100835780634739326b146100c057806372831f9c14610101578063bd097e211461013e57610055565b3661005557005b600080fd5b34801561006657600080fd5b50610081600480360381019061007c91906109d1565b610148565b005b34801561008f57600080fd5b506100aa60048036038101906100a591906109d1565b6103b8565b6040516100b79190610beb565b60405180910390f35b3480156100cc57600080fd5b506100e760048036038101906100e29190610c39565b610579565b6040516100f8959493929190610cec565b60405180910390f35b34801561010d57600080fd5b5061012860048036038101906101239190610ea0565b610681565b6040516101359190610f3e565b60405180910390f35b6101466108f4565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820180546101a490610f88565b80601f01602080910402602001604051908101604052809291908181526020018280546101d090610f88565b801561021d5780601f106101f25761010080835404028352916020019161021d565b820191906000526020600020905b81548152906001019060200180831161020057829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff1660028111156102ab576102aa610ab6565b5b60028111156102bd576102bc610ab6565b5b81526020016003820160019054906101000a900460ff1660028111156102e6576102e5610ab6565b5b60028111156102f8576102f7610ab6565b5b8152505090506000600281111561031257610311610ab6565b5b8160800151600281111561032957610328610ab6565b5b14610369576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103609061102b565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff166108fc82604001519081150290604051600060405180830381858888f193505050501580156103b3573d6000803e3d6000fd5b505050565b6103c06108f6565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a001604052908160008201805461041a90610f88565b80601f016020809104026020016040519081016040528092919081815260200182805461044690610f88565b80156104935780601f1061046857610100808354040283529160200191610493565b820191906000526020600020905b81548152906001019060200180831161047657829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff16600281111561052157610520610ab6565b5b600281111561053357610532610ab6565b5b81526020016003820160019054906101000a900460ff16600281111561055c5761055b610ab6565b5b600281111561056e5761056d610ab6565b5b815250509050919050565b6000818154811061058957600080fd5b90600052602060002090600402016000915090508060000180546105ac90610f88565b80601f01602080910402602001604051908101604052809291908181526020018280546105d890610f88565b80156106255780601f106105fa57610100808354040283529160200191610625565b820191906000526020600020905b81548152906001019060200180831161060857829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16908060030160019054906101000a900460ff16905085565b6000806040518060a001604052808781526020018673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020018560028111156106ca576106c9610ab6565b5b8152602001600060028111156106e3576106e2610ab6565b5b81525090506000819080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001908161072991906111f7565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff021916908360028111156107a6576107a5610ab6565b5b021790555060808201518160030160016101000a81548160ff021916908360028111156107d6576107d5610ab6565b5b0217905550505080600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908161083291906111f7565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff021916908360028111156108af576108ae610ab6565b5b021790555060808201518160030160016101000a81548160ff021916908360028111156108df576108de610ab6565b5b02179055509050506001915050949350505050565b565b6040518060a0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600060028111156109405761093f610ab6565b5b81526020016000600281111561095957610958610ab6565b5b81525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061099e82610973565b9050919050565b6109ae81610993565b81146109b957600080fd5b50565b6000813590506109cb816109a5565b92915050565b6000602082840312156109e7576109e6610969565b5b60006109f5848285016109bc565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a38578082015181840152602081019050610a1d565b60008484015250505050565b6000601f19601f8301169050919050565b6000610a60826109fe565b610a6a8185610a09565b9350610a7a818560208601610a1a565b610a8381610a44565b840191505092915050565b610a9781610993565b82525050565b6000819050919050565b610ab081610a9d565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610af657610af5610ab6565b5b50565b6000819050610b0782610ae5565b919050565b6000610b1782610af9565b9050919050565b610b2781610b0c565b82525050565b60038110610b3e57610b3d610ab6565b5b50565b6000819050610b4f82610b2d565b919050565b6000610b5f82610b41565b9050919050565b610b6f81610b54565b82525050565b600060a0830160008301518482036000860152610b928282610a55565b9150506020830151610ba76020860182610a8e565b506040830151610bba6040860182610aa7565b506060830151610bcd6060860182610b1e565b506080830151610be06080860182610b66565b508091505092915050565b60006020820190508181036000830152610c058184610b75565b905092915050565b610c1681610a9d565b8114610c2157600080fd5b50565b600081359050610c3381610c0d565b92915050565b600060208284031215610c4f57610c4e610969565b5b6000610c5d84828501610c24565b91505092915050565b600082825260208201905092915050565b6000610c82826109fe565b610c8c8185610c66565b9350610c9c818560208601610a1a565b610ca581610a44565b840191505092915050565b610cb981610993565b82525050565b610cc881610a9d565b82525050565b610cd781610b0c565b82525050565b610ce681610b54565b82525050565b600060a0820190508181036000830152610d068188610c77565b9050610d156020830187610cb0565b610d226040830186610cbf565b610d2f6060830185610cce565b610d3c6080830184610cdd565b9695505050505050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d8882610a44565b810181811067ffffffffffffffff82111715610da757610da6610d50565b5b80604052505050565b6000610dba61095f565b9050610dc68282610d7f565b919050565b600067ffffffffffffffff821115610de657610de5610d50565b5b610def82610a44565b9050602081019050919050565b82818337600083830152505050565b6000610e1e610e1984610dcb565b610db0565b905082815260208101848484011115610e3a57610e39610d4b565b5b610e45848285610dfc565b509392505050565b600082601f830112610e6257610e61610d46565b5b8135610e72848260208601610e0b565b91505092915050565b60038110610e8857600080fd5b50565b600081359050610e9a81610e7b565b92915050565b60008060008060808587031215610eba57610eb9610969565b5b600085013567ffffffffffffffff811115610ed857610ed761096e565b5b610ee487828801610e4d565b9450506020610ef5878288016109bc565b9350506040610f0687828801610e8b565b9250506060610f1787828801610c24565b91505092959194509250565b60008115159050919050565b610f3881610f23565b82525050565b6000602082019050610f536000830184610f2f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610fa057607f821691505b602082108103610fb357610fb2610f59565b5b50919050565b7f456d706c6f796565206e6f7420656c696769626c6520666f72207061796d656e60008201527f7400000000000000000000000000000000000000000000000000000000000000602082015250565b6000611015602183610c66565b915061102082610fb9565b604082019050919050565b6000602082019050818103600083015261104481611008565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026110ad7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611070565b6110b78683611070565b95508019841693508086168417925050509392505050565b6000819050919050565b60006110f46110ef6110ea84610a9d565b6110cf565b610a9d565b9050919050565b6000819050919050565b61110e836110d9565b61112261111a826110fb565b84845461107d565b825550505050565b600090565b61113761112a565b611142818484611105565b505050565b5b818110156111665761115b60008261112f565b600181019050611148565b5050565b601f8211156111ab5761117c8161104b565b61118584611060565b81016020851015611194578190505b6111a86111a085611060565b830182611147565b50505b505050565b600082821c905092915050565b60006111ce600019846008026111b0565b1980831691505092915050565b60006111e783836111bd565b9150826002028217905092915050565b611200826109fe565b67ffffffffffffffff81111561121957611218610d50565b5b6112238254610f88565b61122e82828561116a565b600060209050601f831160018114611261576000841561124f578287015190505b61125985826111db565b8655506112c1565b601f19841661126f8661104b565b60005b8281101561129757848901518255600182019150602085019450602081019050611272565b868310156112b457848901516112b0601f8916826111bd565b8355505b6001600288020188555050505b50505050505056fea264697066735822122048a45bc68fd898935b9acf285b72da08735fbe28145cac0332203bff2e85e48064736f6c634300081c0033";

type EmployeeManagementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EmployeeManagementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EmployeeManagement__factory extends ContractFactory {
  constructor(...args: EmployeeManagementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      EmployeeManagement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EmployeeManagement__factory {
    return super.connect(runner) as EmployeeManagement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmployeeManagementInterface {
    return new Interface(_abi) as EmployeeManagementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EmployeeManagement {
    return new Contract(address, _abi, runner) as unknown as EmployeeManagement;
  }
}
