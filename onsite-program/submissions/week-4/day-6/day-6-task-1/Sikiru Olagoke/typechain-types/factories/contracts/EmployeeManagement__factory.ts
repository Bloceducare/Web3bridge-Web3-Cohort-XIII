/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  EmployeeManagement,
  EmployeeManagementInterface,
} from "../../contracts/EmployeeManagement";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "SALARY_DO_NOT_MATCH",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_salary",
        type: "uint256",
      },
      {
        internalType: "enum IEmployee.STATUS",
        name: "_status",
        type: "uint8",
      },
      {
        internalType: "enum IEmployee.ROLE",
        name: "_role",
        type: "uint8",
      },
    ],
    name: "create_employee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "get_all_employees",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "user_address",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "salary",
            type: "uint256",
          },
          {
            internalType: "enum IEmployee.STATUS",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "enum IEmployee.ROLE",
            name: "role",
            type: "uint8",
          },
        ],
        internalType: "struct IEmployee.Employee[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "get_emplooyee",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "user_address",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "salary",
            type: "uint256",
          },
          {
            internalType: "enum IEmployee.STATUS",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "enum IEmployee.ROLE",
            name: "role",
            type: "uint8",
          },
        ],
        internalType: "struct IEmployee.Employee",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employer_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "pay_employee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001479380380620014798339818101604052810190620000379190620000e8565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000b08262000083565b9050919050565b620000c281620000a3565b8114620000ce57600080fd5b50565b600081519050620000e281620000b7565b92915050565b6000602082840312156200010157620001006200007e565b5b60006200011184828501620000d1565b91505092915050565b61134f806200012a6000396000f3fe6080604052600436106100435760003560e01c8063123a92e01461004c578063694dd3d014610075578063a399760a1461009e578063d95aabba146100db5761004a565b3661004a57005b005b34801561005857600080fd5b50610073600480360381019061006e91906109dc565b610106565b005b34801561008157600080fd5b5061009c60048036038101906100979190610bac565b6102d7565b005b3480156100aa57600080fd5b506100c560048036038101906100c09190610c43565b610543565b6040516100d29190610e42565b60405180910390f35b3480156100e757600080fd5b506100f0610704565b6040516100fd9190610f9c565b60405180910390f35b3373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610194576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018b9061101b565b60405180910390fd5b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015414801561025857506002808111156101f3576101f2610d0d565b5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160009054906101000a900460ff16600281111561025557610254610d0d565b5b14155b156102a5578173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102a3573d6000803e3d6000fd5b505b6040517f0729764400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006040518060a001604052808781526020018673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184600281111561031f5761031e610d0d565b5b815260200183600281111561033757610336610d0d565b5b81525090506001819080600181540180825580915050600190039060005260206000209060040201600090919091909150600082015181600001908161037d9190611247565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff021916908360028111156103fa576103f9610d0d565b5b021790555060808201518160030160016101000a81548160ff0219169083600281111561042a57610429610d0d565b5b0217905550505080600260008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816104869190611247565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083600281111561050357610502610d0d565b5b021790555060808201518160030160016101000a81548160ff0219169083600281111561053357610532610d0d565b5b0217905550905050505050505050565b61054b6108cb565b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820180546105a59061106a565b80601f01602080910402602001604051908101604052809291908181526020018280546105d19061106a565b801561061e5780601f106105f35761010080835404028352916020019161061e565b820191906000526020600020905b81548152906001019060200180831161060157829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff1660028111156106ac576106ab610d0d565b5b60028111156106be576106bd610d0d565b5b81526020016003820160019054906101000a900460ff1660028111156106e7576106e6610d0d565b5b60028111156106f9576106f8610d0d565b5b815250509050919050565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156108c257838290600052602060002090600402016040518060a001604052908160008201805461075b9061106a565b80601f01602080910402602001604051908101604052809291908181526020018280546107879061106a565b80156107d45780601f106107a9576101008083540402835291602001916107d4565b820191906000526020600020905b8154815290600101906020018083116107b757829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff16600281111561086257610861610d0d565b5b600281111561087457610873610d0d565b5b81526020016003820160019054906101000a900460ff16600281111561089d5761089c610d0d565b5b60028111156108af576108ae610d0d565b5b8152505081526020019060010190610728565b50505050905090565b6040518060a0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000600281111561091557610914610d0d565b5b81526020016000600281111561092e5761092d610d0d565b5b81525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061097382610948565b9050919050565b61098381610968565b811461098e57600080fd5b50565b6000813590506109a08161097a565b92915050565b6000819050919050565b6109b9816109a6565b81146109c457600080fd5b50565b6000813590506109d6816109b0565b92915050565b600080604083850312156109f3576109f261093e565b5b6000610a0185828601610991565b9250506020610a12858286016109c7565b9150509250929050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610a6f82610a26565b810181811067ffffffffffffffff82111715610a8e57610a8d610a37565b5b80604052505050565b6000610aa1610934565b9050610aad8282610a66565b919050565b600067ffffffffffffffff821115610acd57610acc610a37565b5b610ad682610a26565b9050602081019050919050565b82818337600083830152505050565b6000610b05610b0084610ab2565b610a97565b905082815260208101848484011115610b2157610b20610a21565b5b610b2c848285610ae3565b509392505050565b600082601f830112610b4957610b48610a1c565b5b8135610b59848260208601610af2565b91505092915050565b60038110610b6f57600080fd5b50565b600081359050610b8181610b62565b92915050565b60038110610b9457600080fd5b50565b600081359050610ba681610b87565b92915050565b600080600080600060a08688031215610bc857610bc761093e565b5b600086013567ffffffffffffffff811115610be657610be5610943565b5b610bf288828901610b34565b9550506020610c0388828901610991565b9450506040610c14888289016109c7565b9350506060610c2588828901610b72565b9250506080610c3688828901610b97565b9150509295509295909350565b600060208284031215610c5957610c5861093e565b5b6000610c6784828501610991565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610caa578082015181840152602081019050610c8f565b60008484015250505050565b6000610cc182610c70565b610ccb8185610c7b565b9350610cdb818560208601610c8c565b610ce481610a26565b840191505092915050565b610cf881610968565b82525050565b610d07816109a6565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610d4d57610d4c610d0d565b5b50565b6000819050610d5e82610d3c565b919050565b6000610d6e82610d50565b9050919050565b610d7e81610d63565b82525050565b60038110610d9557610d94610d0d565b5b50565b6000819050610da682610d84565b919050565b6000610db682610d98565b9050919050565b610dc681610dab565b82525050565b600060a0830160008301518482036000860152610de98282610cb6565b9150506020830151610dfe6020860182610cef565b506040830151610e116040860182610cfe565b506060830151610e246060860182610d75565b506080830151610e376080860182610dbd565b508091505092915050565b60006020820190508181036000830152610e5c8184610dcc565b905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060a0830160008301518482036000860152610ead8282610cb6565b9150506020830151610ec26020860182610cef565b506040830151610ed56040860182610cfe565b506060830151610ee86060860182610d75565b506080830151610efb6080860182610dbd565b508091505092915050565b6000610f128383610e90565b905092915050565b6000602082019050919050565b6000610f3282610e64565b610f3c8185610e6f565b935083602082028501610f4e85610e80565b8060005b85811015610f8a5784840389528151610f6b8582610f06565b9450610f7683610f1a565b925060208a01995050600181019050610f52565b50829750879550505050505092915050565b60006020820190508181036000830152610fb68184610f27565b905092915050565b600082825260208201905092915050565b7f4d757374206265206f6e77657200000000000000000000000000000000000000600082015250565b6000611005600d83610fbe565b915061101082610fcf565b602082019050919050565b6000602082019050818103600083015261103481610ff8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061108257607f821691505b6020821081036110955761109461103b565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026110fd7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826110c0565b61110786836110c0565b95508019841693508086168417925050509392505050565b6000819050919050565b600061114461113f61113a846109a6565b61111f565b6109a6565b9050919050565b6000819050919050565b61115e83611129565b61117261116a8261114b565b8484546110cd565b825550505050565b600090565b61118761117a565b611192818484611155565b505050565b5b818110156111b6576111ab60008261117f565b600181019050611198565b5050565b601f8211156111fb576111cc8161109b565b6111d5846110b0565b810160208510156111e4578190505b6111f86111f0856110b0565b830182611197565b50505b505050565b600082821c905092915050565b600061121e60001984600802611200565b1980831691505092915050565b6000611237838361120d565b9150826002028217905092915050565b61125082610c70565b67ffffffffffffffff81111561126957611268610a37565b5b611273825461106a565b61127e8282856111ba565b600060209050601f8311600181146112b1576000841561129f578287015190505b6112a9858261122b565b865550611311565b601f1984166112bf8661109b565b60005b828110156112e7578489015182556001820191506020850194506020810190506112c2565b868310156113045784890151611300601f89168261120d565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220d6bb333def560cce2d0b47da01aa560ef3230058635cfce680045a7d85571c2a64736f6c63430008140033";

type EmployeeManagementConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EmployeeManagementConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EmployeeManagement__factory extends ContractFactory {
  constructor(...args: EmployeeManagementConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  override deploy(
    _owner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_owner, overrides || {}) as Promise<
      EmployeeManagement & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EmployeeManagement__factory {
    return super.connect(runner) as EmployeeManagement__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EmployeeManagementInterface {
    return new Interface(_abi) as EmployeeManagementInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EmployeeManagement {
    return new Contract(address, _abi, runner) as unknown as EmployeeManagement;
  }
}
