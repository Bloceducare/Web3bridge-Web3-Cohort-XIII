/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "./common";

export declare namespace StudentManagement {
  export type StudentStruct = {
    id: BigNumberish;
    name: string;
    age: BigNumberish;
    status: BigNumberish;
    gender: BigNumberish;
    score: BigNumberish;
  };

  export type StudentStructOutput = [
    id: bigint,
    name: string,
    age: bigint,
    status: bigint,
    gender: bigint,
    score: bigint
  ] & {
    id: bigint;
    name: string;
    age: bigint;
    status: bigint;
    gender: bigint;
    score: bigint;
  };
}

export interface StudentManagementInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "deleteStudent"
      | "getAllStudents"
      | "getStudent"
      | "getStudentAge"
      | "getStudentGender"
      | "getStudentName"
      | "getStudentScore"
      | "getStudentStatus"
      | "registerStudent"
      | "setAge"
      | "setGender"
      | "setName"
      | "setScore"
      | "setStatus"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "deleteStudent",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getAllStudents",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getStudent",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getStudentAge",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getStudentGender",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getStudentName",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getStudentScore",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getStudentStatus",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "registerStudent",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setAge",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setGender",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setName",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setScore",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setStatus",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "deleteStudent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAllStudents",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getStudent", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getStudentAge",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStudentGender",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStudentName",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStudentScore",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStudentStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "registerStudent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setAge", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setGender", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setName", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setScore", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "setStatus", data: BytesLike): Result;
}

export interface StudentManagement extends BaseContract {
  connect(runner?: ContractRunner | null): StudentManagement;
  waitForDeployment(): Promise<this>;

  interface: StudentManagementInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  deleteStudent: TypedContractMethod<
    [_index: BigNumberish],
    [void],
    "nonpayable"
  >;

  getAllStudents: TypedContractMethod<
    [],
    [StudentManagement.StudentStructOutput[]],
    "view"
  >;

  getStudent: TypedContractMethod<
    [_index: BigNumberish],
    [StudentManagement.StudentStructOutput],
    "view"
  >;

  getStudentAge: TypedContractMethod<[_index: BigNumberish], [bigint], "view">;

  getStudentGender: TypedContractMethod<
    [_index: BigNumberish],
    [bigint],
    "view"
  >;

  getStudentName: TypedContractMethod<[_index: BigNumberish], [string], "view">;

  getStudentScore: TypedContractMethod<
    [_index: BigNumberish],
    [bigint],
    "view"
  >;

  getStudentStatus: TypedContractMethod<
    [_index: BigNumberish],
    [bigint],
    "view"
  >;

  registerStudent: TypedContractMethod<
    [_name: string, _age: BigNumberish, _gender: BigNumberish],
    [void],
    "nonpayable"
  >;

  setAge: TypedContractMethod<
    [_age: BigNumberish, _index: BigNumberish],
    [void],
    "nonpayable"
  >;

  setGender: TypedContractMethod<
    [_gender: BigNumberish, _index: BigNumberish],
    [void],
    "nonpayable"
  >;

  setName: TypedContractMethod<
    [_name: string, _index: BigNumberish],
    [void],
    "nonpayable"
  >;

  setScore: TypedContractMethod<
    [_score: BigNumberish, _index: BigNumberish],
    [void],
    "nonpayable"
  >;

  setStatus: TypedContractMethod<
    [_status: BigNumberish, _index: BigNumberish],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "deleteStudent"
  ): TypedContractMethod<[_index: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "getAllStudents"
  ): TypedContractMethod<[], [StudentManagement.StudentStructOutput[]], "view">;
  getFunction(
    nameOrSignature: "getStudent"
  ): TypedContractMethod<
    [_index: BigNumberish],
    [StudentManagement.StudentStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "getStudentAge"
  ): TypedContractMethod<[_index: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getStudentGender"
  ): TypedContractMethod<[_index: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getStudentName"
  ): TypedContractMethod<[_index: BigNumberish], [string], "view">;
  getFunction(
    nameOrSignature: "getStudentScore"
  ): TypedContractMethod<[_index: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "getStudentStatus"
  ): TypedContractMethod<[_index: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "registerStudent"
  ): TypedContractMethod<
    [_name: string, _age: BigNumberish, _gender: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setAge"
  ): TypedContractMethod<
    [_age: BigNumberish, _index: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setGender"
  ): TypedContractMethod<
    [_gender: BigNumberish, _index: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setName"
  ): TypedContractMethod<
    [_name: string, _index: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setScore"
  ): TypedContractMethod<
    [_score: BigNumberish, _index: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setStatus"
  ): TypedContractMethod<
    [_status: BigNumberish, _index: BigNumberish],
    [void],
    "nonpayable"
  >;

  filters: {};
}
