/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { AccessGarage, AccessGarageInterface } from "../AccessGarage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "enum AccessGarage.Role",
        name: "_role",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "_isEmployed",
        type: "bool",
      },
    ],
    name: "UpdateOraddEmployee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "canAccessGarage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEmployees",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum AccessGarage.Role",
            name: "role",
            type: "uint8",
          },
          {
            internalType: "bool",
            name: "isEmployed",
            type: "bool",
          },
          {
            internalType: "address",
            name: "wallet",
            type: "address",
          },
        ],
        internalType: "struct AccessGarage.Employee[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_wallet",
        type: "address",
      },
    ],
    name: "getEmployee",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum AccessGarage.Role",
        name: "role",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "isEmployed",
        type: "bool",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506111c78061001f6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806332648e0914610051578063b24e34c814610084578063b38d6d3e146100b4578063e3366fed146100d0575b600080fd5b61006b6004803603810190610066919061091d565b6100ee565b60405161007b9493929190610a7b565b60405180910390f35b61009e6004803603810190610099919061091d565b6102a3565b6040516100ab9190610ac7565b60405180910390f35b6100ce60048036038101906100c99190610c68565b6104ee565b005b6100d861070e565b6040516100e59190610e87565b60405180910390f35b60606000806000806000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201805461014f90610ed8565b80601f016020809104026020016040519081016040528092919081815260200182805461017b90610ed8565b80156101c85780601f1061019d576101008083540402835291602001916101c8565b820191906000526020600020905b8154815290600101906020018083116101ab57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660058111156101f6576101f56109da565b5b6005811115610208576102076109da565b5b81526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905080600001518160200151826040015183606001519450945094509450509193509193565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820180546102ff90610ed8565b80601f016020809104026020016040519081016040528092919081815260200182805461032b90610ed8565b80156103785780601f1061034d57610100808354040283529160200191610378565b820191906000526020600020905b81548152906001019060200180831161035b57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660058111156103a6576103a56109da565b5b60058111156103b8576103b76109da565b5b81526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905080604001516104425760009150506104e9565b60006005811115610456576104556109da565b5b8160200151600581111561046d5761046c6109da565b5b14806104a1575060016005811115610488576104876109da565b5b8160200151600581111561049f5761049e6109da565b5b145b806104d45750600260058111156104bb576104ba6109da565b5b816020015160058111156104d2576104d16109da565b5b145b156104e35760019150506104e9565b60009150505b919050565b60006040518060800160405280858152602001846005811115610514576105136109da565b5b815260200183151581526020018673ffffffffffffffffffffffffffffffffffffffff168152509050806000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908161059191906110bf565b5060208201518160010160006101000a81548160ff021916908360058111156105bd576105bc6109da565b5b021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050506001819080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001908161066d91906110bf565b5060208201518160010160006101000a81548160ff02191690836005811115610699576106986109da565b5b021790555060408201518160010160016101000a81548160ff02191690831515021790555060608201518160010160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050565b60606001805480602002602001604051908101604052809291908181526020016000905b828210156108a2578382906000526020600020906002020160405180608001604052908160008201805461076590610ed8565b80601f016020809104026020016040519081016040528092919081815260200182805461079190610ed8565b80156107de5780601f106107b3576101008083540402835291602001916107de565b820191906000526020600020905b8154815290600101906020018083116107c157829003601f168201915b505050505081526020016001820160009054906101000a900460ff16600581111561080c5761080b6109da565b5b600581111561081e5761081d6109da565b5b81526020016001820160019054906101000a900460ff161515151581526020016001820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152505081526020019060010190610732565b50505050905090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006108ea826108bf565b9050919050565b6108fa816108df565b811461090557600080fd5b50565b600081359050610917816108f1565b92915050565b600060208284031215610933576109326108b5565b5b600061094184828501610908565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610984578082015181840152602081019050610969565b60008484015250505050565b6000601f19601f8301169050919050565b60006109ac8261094a565b6109b68185610955565b93506109c6818560208601610966565b6109cf81610990565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068110610a1a57610a196109da565b5b50565b6000819050610a2b82610a09565b919050565b6000610a3b82610a1d565b9050919050565b610a4b81610a30565b82525050565b60008115159050919050565b610a6681610a51565b82525050565b610a75816108df565b82525050565b60006080820190508181036000830152610a9581876109a1565b9050610aa46020830186610a42565b610ab16040830185610a5d565b610abe6060830184610a6c565b95945050505050565b6000602082019050610adc6000830184610a5d565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b2482610990565b810181811067ffffffffffffffff82111715610b4357610b42610aec565b5b80604052505050565b6000610b566108ab565b9050610b628282610b1b565b919050565b600067ffffffffffffffff821115610b8257610b81610aec565b5b610b8b82610990565b9050602081019050919050565b82818337600083830152505050565b6000610bba610bb584610b67565b610b4c565b905082815260208101848484011115610bd657610bd5610ae7565b5b610be1848285610b98565b509392505050565b600082601f830112610bfe57610bfd610ae2565b5b8135610c0e848260208601610ba7565b91505092915050565b60068110610c2457600080fd5b50565b600081359050610c3681610c17565b92915050565b610c4581610a51565b8114610c5057600080fd5b50565b600081359050610c6281610c3c565b92915050565b60008060008060808587031215610c8257610c816108b5565b5b6000610c9087828801610908565b945050602085013567ffffffffffffffff811115610cb157610cb06108ba565b5b610cbd87828801610be9565b9350506040610cce87828801610c27565b9250506060610cdf87828801610c53565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610d338261094a565b610d3d8185610d17565b9350610d4d818560208601610966565b610d5681610990565b840191505092915050565b610d6a81610a30565b82525050565b610d7981610a51565b82525050565b610d88816108df565b82525050565b60006080830160008301518482036000860152610dab8282610d28565b9150506020830151610dc06020860182610d61565b506040830151610dd36040860182610d70565b506060830151610de66060860182610d7f565b508091505092915050565b6000610dfd8383610d8e565b905092915050565b6000602082019050919050565b6000610e1d82610ceb565b610e278185610cf6565b935083602082028501610e3985610d07565b8060005b85811015610e755784840389528151610e568582610df1565b9450610e6183610e05565b925060208a01995050600181019050610e3d565b50829750879550505050505092915050565b60006020820190508181036000830152610ea18184610e12565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ef057607f821691505b602082108103610f0357610f02610ea9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610f6b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610f2e565b610f758683610f2e565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000610fbc610fb7610fb284610f8d565b610f97565b610f8d565b9050919050565b6000819050919050565b610fd683610fa1565b610fea610fe282610fc3565b848454610f3b565b825550505050565b600090565b610fff610ff2565b61100a818484610fcd565b505050565b5b8181101561102e57611023600082610ff7565b600181019050611010565b5050565b601f8211156110735761104481610f09565b61104d84610f1e565b8101602085101561105c578190505b61107061106885610f1e565b83018261100f565b50505b505050565b600082821c905092915050565b600061109660001984600802611078565b1980831691505092915050565b60006110af8383611085565b9150826002028217905092915050565b6110c88261094a565b67ffffffffffffffff8111156110e1576110e0610aec565b5b6110eb8254610ed8565b6110f6828285611032565b600060209050601f8311600181146111295760008415611117578287015190505b61112185826110a3565b865550611189565b601f19841661113786610f09565b60005b8281101561115f5784890151825560018201915060208501945060208101905061113a565b8683101561117c5784890151611178601f891682611085565b8355505b6001600288020188555050505b50505050505056fea26469706673582212205199ae954d860f920ae829876a3897e9645c7f894c2b3bab35f9b8d8eb1f47c664736f6c634300081c0033";

type AccessGarageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessGarageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccessGarage__factory extends ContractFactory {
  constructor(...args: AccessGarageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      AccessGarage & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AccessGarage__factory {
    return super.connect(runner) as AccessGarage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessGarageInterface {
    return new Interface(_abi) as AccessGarageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AccessGarage {
    return new Contract(address, _abi, runner) as unknown as AccessGarage;
  }
}
