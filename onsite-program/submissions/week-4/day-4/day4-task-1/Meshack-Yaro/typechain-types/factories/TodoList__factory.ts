/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { TodoList, TodoListInterface } from "../TodoList";

const _abi = [
  {
    inputs: [],
    name: "INVALID_INDEX",
    type: "error",
  },
  {
    inputs: [],
    name: "NOT_AUTHORIZED",
    type: "error",
  },
  {
    inputs: [],
    name: "TODO_NOT_FOUND",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "create_todo_for_sender",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "delete_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "get_todos",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "status",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TodoList.Todo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_userAddress",
        type: "address",
      },
    ],
    name: "get_todos_by_address",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "status",
            type: "bool",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
        ],
        internalType: "struct TodoList.Todo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "todos",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "todosByAddress",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "toggle_todo_status",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_new_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_new_description",
        type: "string",
      },
    ],
    name: "update_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506117968061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063864106f51161005b578063864106f5146101165780638f08bb2114610146578063bc8bc2b414610162578063e66d3e741461019557610088565b80633865881b1461008d5780634bc70efb146100ab5780635a051ea2146100de5780636bbdadff146100fa575b600080fd5b6100956101b1565b6040516100a29190610f5f565b60405180910390f35b6100c560048036038101906100c09190610ff7565b6103a5565b6040516100d5949392919061109f565b60405180910390f35b6100f860048036038101906100f391906110f2565b61052f565b005b610114600480360381019061010f91906110f2565b6105a2565b005b610130600480360381019061012b919061111f565b610679565b60405161013d9190610f5f565b60405180910390f35b610160600480360381019061015b9190611281565b6108ac565b005b61017c600480360381019061017791906110f2565b61096b565b60405161018c949392919061109f565b60405180910390f35b6101af60048036038101906101aa919061130c565b610ae8565b005b60606000805480602002602001604051908101604052809291908181526020016000905b8282101561039c5783829060005260206000209060030201604051806080016040529081600082018054610208906113b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610234906113b3565b80156102815780601f1061025657610100808354040283529160200191610281565b820191906000526020600020905b81548152906001019060200180831161026457829003601f168201915b5050505050815260200160018201805461029a906113b3565b80601f01602080910402602001604051908101604052809291908181526020018280546102c6906113b3565b80156103135780601f106102e857610100808354040283529160200191610313565b820191906000526020600020905b8154815290600101906020018083116102f657829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906101d5565b50505050905090565b600160205281600052604060002081815481106103c157600080fd5b9060005260206000209060030201600091509150508060000180546103e5906113b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610411906113b3565b801561045e5780601f106104335761010080835404028352916020019161045e565b820191906000526020600020905b81548152906001019060200180831161044157829003601f168201915b505050505090806001018054610473906113b3565b80601f016020809104026020016040519081016040528092919081815260200182805461049f906113b3565b80156104ec5780601f106104c1576101008083540402835291602001916104ec565b820191906000526020600020905b8154815290600101906020018083116104cf57829003601f168201915b5050505050908060020160009054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60008181548110610543576105426113e4565b5b906000526020600020906003020160020160009054906101000a900460ff161560008281548110610577576105766113e4565b5b906000526020600020906003020160020160006101000a81548160ff02191690831515021790555050565b60016000805490506105b49190611442565b8111156105f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ed906114c2565b60405180910390fd5b6000818154811061060a576106096113e4565b5b9060005260206000209060030201600080820160006106299190610cea565b6001820160006106399190610cea565b6002820160006101000a81549060ff02191690556002820160016101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156108a1578382906000526020600020906003020160405180608001604052908160008201805461070d906113b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610739906113b3565b80156107865780601f1061075b57610100808354040283529160200191610786565b820191906000526020600020905b81548152906001019060200180831161076957829003601f168201915b5050505050815260200160018201805461079f906113b3565b80601f01602080910402602001604051908101604052809291908181526020018280546107cb906113b3565b80156108185780601f106107ed57610100808354040283529160200191610818565b820191906000526020600020905b8154815290600101906020018083116107fb57829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016002820160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050815260200190600101906106da565b505050509050919050565b60016000805490506108be9190611442565b831115610900576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f7906114c2565b60405180910390fd5b8160008481548110610915576109146113e4565b5b90600052602060002090600302016000019081610932919061168e565b508060008481548110610948576109476113e4565b5b90600052602060002090600302016001019081610965919061168e565b50505050565b6000818154811061097b57600080fd5b906000526020600020906003020160009150905080600001805461099e906113b3565b80601f01602080910402602001604051908101604052809291908181526020018280546109ca906113b3565b8015610a175780601f106109ec57610100808354040283529160200191610a17565b820191906000526020600020905b8154815290600101906020018083116109fa57829003601f168201915b505050505090806001018054610a2c906113b3565b80601f0160208091040260200160405190810160405280929190818152602001828054610a58906113b3565b8015610aa55780601f10610a7a57610100808354040283529160200191610aa5565b820191906000526020600020905b815481529060010190602001808311610a8857829003601f168201915b5050505050908060020160009054906101000a900460ff16908060020160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b600060405180608001604052808481526020018381526020016000151581526020013373ffffffffffffffffffffffffffffffffffffffff168152509050600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000019081610ba4919061168e565b506020820151816001019081610bba919061168e565b5060408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505060008190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000019081610c65919061168e565b506020820151816001019081610c7b919061168e565b5060408201518160020160006101000a81548160ff02191690831515021790555060608201518160020160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b508054610cf6906113b3565b6000825580601f10610d085750610d27565b601f016020900490600052602060002090810190610d269190610d2a565b5b50565b5b80821115610d43576000816000905550600101610d2b565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610dad578082015181840152602081019050610d92565b60008484015250505050565b6000601f19601f8301169050919050565b6000610dd582610d73565b610ddf8185610d7e565b9350610def818560208601610d8f565b610df881610db9565b840191505092915050565b60008115159050919050565b610e1881610e03565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e4982610e1e565b9050919050565b610e5981610e3e565b82525050565b60006080830160008301518482036000860152610e7c8282610dca565b91505060208301518482036020860152610e968282610dca565b9150506040830151610eab6040860182610e0f565b506060830151610ebe6060860182610e50565b508091505092915050565b6000610ed58383610e5f565b905092915050565b6000602082019050919050565b6000610ef582610d47565b610eff8185610d52565b935083602082028501610f1185610d63565b8060005b85811015610f4d5784840389528151610f2e8582610ec9565b9450610f3983610edd565b925060208a01995050600181019050610f15565b50829750879550505050505092915050565b60006020820190508181036000830152610f798184610eea565b905092915050565b6000604051905090565b600080fd5b600080fd5b610f9e81610e3e565b8114610fa957600080fd5b50565b600081359050610fbb81610f95565b92915050565b6000819050919050565b610fd481610fc1565b8114610fdf57600080fd5b50565b600081359050610ff181610fcb565b92915050565b6000806040838503121561100e5761100d610f8b565b5b600061101c85828601610fac565b925050602061102d85828601610fe2565b9150509250929050565b600082825260208201905092915050565b600061105382610d73565b61105d8185611037565b935061106d818560208601610d8f565b61107681610db9565b840191505092915050565b61108a81610e03565b82525050565b61109981610e3e565b82525050565b600060808201905081810360008301526110b98187611048565b905081810360208301526110cd8186611048565b90506110dc6040830185611081565b6110e96060830184611090565b95945050505050565b60006020828403121561110857611107610f8b565b5b600061111684828501610fe2565b91505092915050565b60006020828403121561113557611134610f8b565b5b600061114384828501610fac565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61118e82610db9565b810181811067ffffffffffffffff821117156111ad576111ac611156565b5b80604052505050565b60006111c0610f81565b90506111cc8282611185565b919050565b600067ffffffffffffffff8211156111ec576111eb611156565b5b6111f582610db9565b9050602081019050919050565b82818337600083830152505050565b600061122461121f846111d1565b6111b6565b9050828152602081018484840111156112405761123f611151565b5b61124b848285611202565b509392505050565b600082601f8301126112685761126761114c565b5b8135611278848260208601611211565b91505092915050565b60008060006060848603121561129a57611299610f8b565b5b60006112a886828701610fe2565b935050602084013567ffffffffffffffff8111156112c9576112c8610f90565b5b6112d586828701611253565b925050604084013567ffffffffffffffff8111156112f6576112f5610f90565b5b61130286828701611253565b9150509250925092565b6000806040838503121561132357611322610f8b565b5b600083013567ffffffffffffffff81111561134157611340610f90565b5b61134d85828601611253565b925050602083013567ffffffffffffffff81111561136e5761136d610f90565b5b61137a85828601611253565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113cb57607f821691505b6020821081036113de576113dd611384565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061144d82610fc1565b915061145883610fc1565b92508282039050818111156114705761146f611413565b5b92915050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b60006114ac600d83611037565b91506114b782611476565b602082019050919050565b600060208201905081810360008301526114db8161149f565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115447fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611507565b61154e8683611507565b95508019841693508086168417925050509392505050565b6000819050919050565b600061158b61158661158184610fc1565b611566565b610fc1565b9050919050565b6000819050919050565b6115a583611570565b6115b96115b182611592565b848454611514565b825550505050565b600090565b6115ce6115c1565b6115d981848461159c565b505050565b5b818110156115fd576115f26000826115c6565b6001810190506115df565b5050565b601f82111561164257611613816114e2565b61161c846114f7565b8101602085101561162b578190505b61163f611637856114f7565b8301826115de565b50505b505050565b600082821c905092915050565b600061166560001984600802611647565b1980831691505092915050565b600061167e8383611654565b9150826002028217905092915050565b61169782610d73565b67ffffffffffffffff8111156116b0576116af611156565b5b6116ba82546113b3565b6116c5828285611601565b600060209050601f8311600181146116f857600084156116e6578287015190505b6116f08582611672565b865550611758565b601f198416611706866114e2565b60005b8281101561172e57848901518255600182019150602085019450602081019050611709565b8683101561174b5784890151611747601f891682611654565b8355505b6001600288020188555050505b50505050505056fea26469706673582212203350cbfc7577909087e84b8c7a5ebe4a7fbdbd74f4119476f7be44063a8ae6d464736f6c634300081e0033";

type TodoListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodoListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TodoList__factory extends ContractFactory {
  constructor(...args: TodoListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TodoList & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TodoList__factory {
    return super.connect(runner) as TodoList__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodoListInterface {
    return new Interface(_abi) as TodoListInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TodoList {
    return new Contract(address, _abi, runner) as unknown as TodoList;
  }
}
