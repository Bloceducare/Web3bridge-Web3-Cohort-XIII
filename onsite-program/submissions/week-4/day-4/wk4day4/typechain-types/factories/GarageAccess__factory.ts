/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { GarageAccess, GarageAccessInterface } from "../GarageAccess";

const _abi = [
  {
    inputs: [],
    name: "INVALID_ROLE",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employeeAddress",
        type: "address",
      },
    ],
    name: "canAccessGarage",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllEmployee",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employeeAddress",
        type: "address",
      },
    ],
    name: "getEmployeeData",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "employeeAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum GarageAccess.Role",
            name: "role",
            type: "uint8",
          },
          {
            internalType: "enum GarageAccess.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct GarageAccess.EmployeeData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employeeAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "enum GarageAccess.Role",
        name: "_role",
        type: "uint8",
      },
    ],
    name: "recruitEmployee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employeeAddress",
        type: "address",
      },
    ],
    name: "terminateEmployee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_employeeAddress",
        type: "address",
      },
      {
        internalType: "enum GarageAccess.Role",
        name: "_role",
        type: "uint8",
      },
    ],
    name: "updateEmployeeDetail",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5061149b8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806364c6d333146100675780636cff9c7b146100835780636fa50604146100a1578063b24e34c8146100bd578063befb27c4146100ed578063dec7171114610109575b600080fd5b610081600480360381019061007c9190610b99565b610139565b005b61008b610264565b6040516100989190610c97565b60405180910390f35b6100bb60048036038101906100b69190610cb9565b6102f2565b005b6100d760048036038101906100d29190610cb9565b6103ef565b6040516100e49190610d01565b60405180910390f35b61010760048036038101906101029190610e62565b610698565b005b610123600480360381019061011e9190610cb9565b6108ea565b6040516101309190611072565b60405180910390f35b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054610187906110c3565b9050036101c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101c090611151565b60405180910390fd5b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548160ff0219169083600581111561022d5761022c610f50565b5b02179055506040517f3bfd183100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b606060018054806020026020016040519081016040528092919081815260200182805480156102e857602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161029e575b5050505050905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054610340906110c3565b905003610382576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037990611151565b60405180910390fd5b60016000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160016101000a81548160ff021916908360018111156103e7576103e6610f50565b5b021790555050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546104a1906110c3565b80601f01602080910402602001604051908101604052809291908181526020018280546104cd906110c3565b801561051a5780601f106104ef5761010080835404028352916020019161051a565b820191906000526020600020905b8154815290600101906020018083116104fd57829003601f168201915b505050505081526020016002820160009054906101000a900460ff16600581111561054857610547610f50565b5b600581111561055a57610559610f50565b5b81526020016002820160019054906101000a900460ff16600181111561058357610582610f50565b5b600181111561059557610594610f50565b5b8152505090506000816020015151036105b2576000915050610693565b600060018111156105c6576105c5610f50565b5b816060015160018111156105dd576105dc610f50565b5b146105ec576000915050610693565b60006005811115610600576105ff610f50565b5b8160400151600581111561061757610616610f50565b5b148061064b57506001600581111561063257610631610f50565b5b8160400151600581111561064957610648610f50565b5b145b8061067e57506002600581111561066557610664610f50565b5b8160400151600581111561067c5761067b610f50565b5b145b1561068d576001915050610693565b60009150505b919050565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180546106e6906110c3565b905014610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071f906111bd565b60405180910390fd5b60405180608001604052808473ffffffffffffffffffffffffffffffffffffffff16815260200183815260200182600581111561076857610767610f50565b5b81526020016000600181111561078157610780610f50565b5b8152506000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908161081e9190611393565b5060408201518160020160006101000a81548160ff0219169083600581111561084a57610849610f50565b5b021790555060608201518160020160016101000a81548160ff0219169083600181111561087a57610879610f50565b5b02179055509050506001839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b6108f2610aa0565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546109a1906110c3565b80601f01602080910402602001604051908101604052809291908181526020018280546109cd906110c3565b8015610a1a5780601f106109ef57610100808354040283529160200191610a1a565b820191906000526020600020905b8154815290600101906020018083116109fd57829003601f168201915b505050505081526020016002820160009054906101000a900460ff166005811115610a4857610a47610f50565b5b6005811115610a5a57610a59610f50565b5b81526020016002820160019054906101000a900460ff166001811115610a8357610a82610f50565b5b6001811115610a9557610a94610f50565b5b815250509050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160006005811115610ae357610ae2610f50565b5b815260200160006001811115610afc57610afb610f50565b5b81525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b4182610b16565b9050919050565b610b5181610b36565b8114610b5c57600080fd5b50565b600081359050610b6e81610b48565b92915050565b60068110610b8157600080fd5b50565b600081359050610b9381610b74565b92915050565b60008060408385031215610bb057610baf610b0c565b5b6000610bbe85828601610b5f565b9250506020610bcf85828601610b84565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b610c0e81610b36565b82525050565b6000610c208383610c05565b60208301905092915050565b6000602082019050919050565b6000610c4482610bd9565b610c4e8185610be4565b9350610c5983610bf5565b8060005b83811015610c8a578151610c718882610c14565b9750610c7c83610c2c565b925050600181019050610c5d565b5085935050505092915050565b60006020820190508181036000830152610cb18184610c39565b905092915050565b600060208284031215610ccf57610cce610b0c565b5b6000610cdd84828501610b5f565b91505092915050565b60008115159050919050565b610cfb81610ce6565b82525050565b6000602082019050610d166000830184610cf2565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d6f82610d26565b810181811067ffffffffffffffff82111715610d8e57610d8d610d37565b5b80604052505050565b6000610da1610b02565b9050610dad8282610d66565b919050565b600067ffffffffffffffff821115610dcd57610dcc610d37565b5b610dd682610d26565b9050602081019050919050565b82818337600083830152505050565b6000610e05610e0084610db2565b610d97565b905082815260208101848484011115610e2157610e20610d21565b5b610e2c848285610de3565b509392505050565b600082601f830112610e4957610e48610d1c565b5b8135610e59848260208601610df2565b91505092915050565b600080600060608486031215610e7b57610e7a610b0c565b5b6000610e8986828701610b5f565b935050602084013567ffffffffffffffff811115610eaa57610ea9610b11565b5b610eb686828701610e34565b9250506040610ec786828701610b84565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b83811015610f0b578082015181840152602081019050610ef0565b60008484015250505050565b6000610f2282610ed1565b610f2c8185610edc565b9350610f3c818560208601610eed565b610f4581610d26565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068110610f9057610f8f610f50565b5b50565b6000819050610fa182610f7f565b919050565b6000610fb182610f93565b9050919050565b610fc181610fa6565b82525050565b60028110610fd857610fd7610f50565b5b50565b6000819050610fe982610fc7565b919050565b6000610ff982610fdb565b9050919050565b61100981610fee565b82525050565b60006080830160008301516110276000860182610c05565b506020830151848203602086015261103f8282610f17565b91505060408301516110546040860182610fb8565b5060608301516110676060860182611000565b508091505092915050565b6000602082019050818103600083015261108c818461100f565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806110db57607f821691505b6020821081036110ee576110ed611094565b5b50919050565b600082825260208201905092915050565b7f4e6f207375636820656d706c6f79656500000000000000000000000000000000600082015250565b600061113b6010836110f4565b915061114682611105565b602082019050919050565b6000602082019050818103600083015261116a8161112e565b9050919050565b7f456d706c6f79656520616c726561647920657869737400000000000000000000600082015250565b60006111a76016836110f4565b91506111b282611171565b602082019050919050565b600060208201905081810360008301526111d68161119a565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261123f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611202565b6112498683611202565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061129061128b61128684611261565b61126b565b611261565b9050919050565b6000819050919050565b6112aa83611275565b6112be6112b682611297565b84845461120f565b825550505050565b600090565b6112d36112c6565b6112de8184846112a1565b505050565b5b81811015611302576112f76000826112cb565b6001810190506112e4565b5050565b601f82111561134757611318816111dd565b611321846111f2565b81016020851015611330578190505b61134461133c856111f2565b8301826112e3565b50505b505050565b600082821c905092915050565b600061136a6000198460080261134c565b1980831691505092915050565b60006113838383611359565b9150826002028217905092915050565b61139c82610ed1565b67ffffffffffffffff8111156113b5576113b4610d37565b5b6113bf82546110c3565b6113ca828285611306565b600060209050601f8311600181146113fd57600084156113eb578287015190505b6113f58582611377565b86555061145d565b601f19841661140b866111dd565b60005b828110156114335784890151825560018201915060208501945060208101905061140e565b86831015611450578489015161144c601f891682611359565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220401a42b1ec5ddf62c15ebca7ab830ab16351a8e1cbe3e1a18d37a9e383b0b8d064736f6c634300081c0033";

type GarageAccessConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GarageAccessConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GarageAccess__factory extends ContractFactory {
  constructor(...args: GarageAccessConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      GarageAccess & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GarageAccess__factory {
    return super.connect(runner) as GarageAccess__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GarageAccessInterface {
    return new Interface(_abi) as GarageAccessInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GarageAccess {
    return new Contract(address, _abi, runner) as unknown as GarageAccess;
  }
}
