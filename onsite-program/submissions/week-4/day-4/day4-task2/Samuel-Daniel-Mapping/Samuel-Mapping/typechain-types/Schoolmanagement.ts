/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedListener,
  TypedContractMethod,
} from "./common";

export declare namespace Schoolmanagement {
  export type StudentDetailsStruct = {
    id: BigNumberish;
    name: string;
    course: string;
    age: BigNumberish;
    status: BigNumberish;
  };

  export type StudentDetailsStructOutput = [
    id: bigint,
    name: string,
    course: string,
    age: bigint,
    status: bigint
  ] & { id: bigint; name: string; course: string; age: bigint; status: bigint };
}

export interface SchoolmanagementInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "another_registration"
      | "delete_student"
      | "get_all_students"
      | "get_student_by_id"
      | "register_student"
      | "update_student"
      | "update_students_status"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "another_registration",
    values: [Schoolmanagement.StudentDetailsStruct]
  ): string;
  encodeFunctionData(
    functionFragment: "delete_student",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "get_all_students",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "get_student_by_id",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "register_student",
    values: [string, string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "update_student",
    values: [BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "update_students_status",
    values: [BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "another_registration",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "delete_student",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_all_students",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "get_student_by_id",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "register_student",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "update_student",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "update_students_status",
    data: BytesLike
  ): Result;
}

export interface Schoolmanagement extends BaseContract {
  connect(runner?: ContractRunner | null): Schoolmanagement;
  waitForDeployment(): Promise<this>;

  interface: SchoolmanagementInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  another_registration: TypedContractMethod<
    [details: Schoolmanagement.StudentDetailsStruct],
    [void],
    "nonpayable"
  >;

  delete_student: TypedContractMethod<
    [_student_id: BigNumberish],
    [void],
    "nonpayable"
  >;

  get_all_students: TypedContractMethod<
    [],
    [Schoolmanagement.StudentDetailsStructOutput[]],
    "view"
  >;

  get_student_by_id: TypedContractMethod<
    [_student_id: BigNumberish],
    [Schoolmanagement.StudentDetailsStructOutput],
    "view"
  >;

  register_student: TypedContractMethod<
    [_name: string, _course: string, _age: BigNumberish],
    [void],
    "nonpayable"
  >;

  update_student: TypedContractMethod<
    [_student_id: BigNumberish, _new_name: string],
    [void],
    "nonpayable"
  >;

  update_students_status: TypedContractMethod<
    [_student_id: BigNumberish, _new_status: BigNumberish],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "another_registration"
  ): TypedContractMethod<
    [details: Schoolmanagement.StudentDetailsStruct],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "delete_student"
  ): TypedContractMethod<[_student_id: BigNumberish], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "get_all_students"
  ): TypedContractMethod<
    [],
    [Schoolmanagement.StudentDetailsStructOutput[]],
    "view"
  >;
  getFunction(
    nameOrSignature: "get_student_by_id"
  ): TypedContractMethod<
    [_student_id: BigNumberish],
    [Schoolmanagement.StudentDetailsStructOutput],
    "view"
  >;
  getFunction(
    nameOrSignature: "register_student"
  ): TypedContractMethod<
    [_name: string, _course: string, _age: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "update_student"
  ): TypedContractMethod<
    [_student_id: BigNumberish, _new_name: string],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "update_students_status"
  ): TypedContractMethod<
    [_student_id: BigNumberish, _new_status: BigNumberish],
    [void],
    "nonpayable"
  >;

  filters: {};
}
