/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  SchoolManagementSystem,
  SchoolManagementSystemInterface,
} from "../SchoolManagementSystem";

const _abi = [
  {
    inputs: [],
    name: "STUDENT_ALREADY_REGISTERED",
    type: "error",
  },
  {
    inputs: [],
    name: "STUDENT_NOT_FOUND",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "studentAddress",
        type: "address",
      },
    ],
    name: "delete_student",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "get_all_students",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "course",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "age",
            type: "uint256",
          },
          {
            internalType: "enum SchoolManagementSystem.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SchoolManagementSystem.StudentDetails[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "studentAddress",
        type: "address",
      },
    ],
    name: "get_student",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "course",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "age",
            type: "uint256",
          },
          {
            internalType: "enum SchoolManagementSystem.Status",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct SchoolManagementSystem.StudentDetails",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "studentAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_course",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_age",
        type: "uint256",
      },
    ],
    name: "register_student",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "studentAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_new_name",
        type: "string",
      },
    ],
    name: "update_student",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "studentAddress",
        type: "address",
      },
      {
        internalType: "enum SchoolManagementSystem.Status",
        name: "_new_status",
        type: "uint8",
      },
    ],
    name: "update_student_status",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506114718061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806309b4bda2146100675780633ab9a9ec14610083578063521df8d6146100a157806368be63cd146100bd578063b6393da2146100d9578063e4d1ee61146100f5575b600080fd5b610081600480360381019061007c9190610b6b565b610125565b005b61008b610219565b6040516100989190610df7565b60405180910390f35b6100bb60048036038101906100b69190610f7a565b6104ac565b005b6100d760048036038101906100d29190611019565b610614565b005b6100f360048036038101906100ee9190611075565b6106ee565b005b61010f600480360381019061010a9190611075565b6107f5565b60405161011c919061110c565b60405180910390f35b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546101739061115d565b9050036101ac576040517faca0832a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030160006101000a81548160ff021916908360028111156102105761020f610c80565b5b02179055505050565b60606000600180549050905060008167ffffffffffffffff81111561024157610240610e23565b5b60405190808252806020026020018201604052801561027a57816020015b610267610a3d565b81526020019060019003908161025f5790505b50905060005b828110156104a3576000806001838154811061029f5761029e61118e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052908160008201805461031f9061115d565b80601f016020809104026020016040519081016040528092919081815260200182805461034b9061115d565b80156103985780601f1061036d57610100808354040283529160200191610398565b820191906000526020600020905b81548152906001019060200180831161037b57829003601f168201915b505050505081526020016001820180546103b19061115d565b80601f01602080910402602001604051908101604052809291908181526020018280546103dd9061115d565b801561042a5780601f106103ff5761010080835404028352916020019161042a565b820191906000526020600020905b81548152906001019060200180831161040d57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff16600281111561046257610461610c80565b5b600281111561047457610473610c80565b5b8152505082828151811061048b5761048a61118e565b5b60200260200101819052508080600101915050610280565b50809250505090565b60008060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546104fa9061115d565b905014610533576040517fff446eaa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180608001604052808481526020018381526020018281526020016000600281111561056457610563610c80565b5b8152506000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816105ba9190611369565b5060208201518160010190816105d09190611369565b506040820151816002015560608201518160030160006101000a81548160ff0219169083600281111561060657610605610c80565b5b021790555090505050505050565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180546106629061115d565b90500361069b576040517faca0832a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190816106e99190611369565b505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805461073c9061115d565b905003610775576040517faca0832a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006107c49190610a77565b6001820160006107d49190610a77565b60028201600090556003820160006101000a81549060ff0219169055505050565b6107fd610a3d565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001805461084b9061115d565b905003610884576040517faca0832a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820180546108dd9061115d565b80601f01602080910402602001604051908101604052809291908181526020018280546109099061115d565b80156109565780601f1061092b57610100808354040283529160200191610956565b820191906000526020600020905b81548152906001019060200180831161093957829003601f168201915b5050505050815260200160018201805461096f9061115d565b80601f016020809104026020016040519081016040528092919081815260200182805461099b9061115d565b80156109e85780601f106109bd576101008083540402835291602001916109e8565b820191906000526020600020905b8154815290600101906020018083116109cb57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900460ff166002811115610a2057610a1f610c80565b5b6002811115610a3257610a31610c80565b5b815250509050919050565b604051806080016040528060608152602001606081526020016000815260200160006002811115610a7157610a70610c80565b5b81525090565b508054610a839061115d565b6000825580601f10610a955750610ab4565b601f016020900490600052602060002090810190610ab39190610ab7565b5b50565b5b80821115610ad0576000816000905550600101610ab8565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1382610ae8565b9050919050565b610b2381610b08565b8114610b2e57600080fd5b50565b600081359050610b4081610b1a565b92915050565b60038110610b5357600080fd5b50565b600081359050610b6581610b46565b92915050565b60008060408385031215610b8257610b81610ade565b5b6000610b9085828601610b31565b9250506020610ba185828601610b56565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610c11578082015181840152602081019050610bf6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c3982610bd7565b610c438185610be2565b9350610c53818560208601610bf3565b610c5c81610c1d565b840191505092915050565b6000819050919050565b610c7a81610c67565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610cc057610cbf610c80565b5b50565b6000819050610cd182610caf565b919050565b6000610ce182610cc3565b9050919050565b610cf181610cd6565b82525050565b60006080830160008301518482036000860152610d148282610c2e565b91505060208301518482036020860152610d2e8282610c2e565b9150506040830151610d436040860182610c71565b506060830151610d566060860182610ce8565b508091505092915050565b6000610d6d8383610cf7565b905092915050565b6000602082019050919050565b6000610d8d82610bab565b610d978185610bb6565b935083602082028501610da985610bc7565b8060005b85811015610de55784840389528151610dc68582610d61565b9450610dd183610d75565b925060208a01995050600181019050610dad565b50829750879550505050505092915050565b60006020820190508181036000830152610e118184610d82565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e5b82610c1d565b810181811067ffffffffffffffff82111715610e7a57610e79610e23565b5b80604052505050565b6000610e8d610ad4565b9050610e998282610e52565b919050565b600067ffffffffffffffff821115610eb957610eb8610e23565b5b610ec282610c1d565b9050602081019050919050565b82818337600083830152505050565b6000610ef1610eec84610e9e565b610e83565b905082815260208101848484011115610f0d57610f0c610e1e565b5b610f18848285610ecf565b509392505050565b600082601f830112610f3557610f34610e19565b5b8135610f45848260208601610ede565b91505092915050565b610f5781610c67565b8114610f6257600080fd5b50565b600081359050610f7481610f4e565b92915050565b60008060008060808587031215610f9457610f93610ade565b5b6000610fa287828801610b31565b945050602085013567ffffffffffffffff811115610fc357610fc2610ae3565b5b610fcf87828801610f20565b935050604085013567ffffffffffffffff811115610ff057610fef610ae3565b5b610ffc87828801610f20565b925050606061100d87828801610f65565b91505092959194509250565b600080604083850312156110305761102f610ade565b5b600061103e85828601610b31565b925050602083013567ffffffffffffffff81111561105f5761105e610ae3565b5b61106b85828601610f20565b9150509250929050565b60006020828403121561108b5761108a610ade565b5b600061109984828501610b31565b91505092915050565b600060808301600083015184820360008601526110bf8282610c2e565b915050602083015184820360208601526110d98282610c2e565b91505060408301516110ee6040860182610c71565b5060608301516111016060860182610ce8565b508091505092915050565b6000602082019050818103600083015261112681846110a2565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061117557607f821691505b6020821081036111885761118761112e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261121f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826111e2565b61122986836111e2565b95508019841693508086168417925050509392505050565b6000819050919050565b600061126661126161125c84610c67565b611241565b610c67565b9050919050565b6000819050919050565b6112808361124b565b61129461128c8261126d565b8484546111ef565b825550505050565b600090565b6112a961129c565b6112b4818484611277565b505050565b5b818110156112d8576112cd6000826112a1565b6001810190506112ba565b5050565b601f82111561131d576112ee816111bd565b6112f7846111d2565b81016020851015611306578190505b61131a611312856111d2565b8301826112b9565b50505b505050565b600082821c905092915050565b600061134060001984600802611322565b1980831691505092915050565b6000611359838361132f565b9150826002028217905092915050565b61137282610bd7565b67ffffffffffffffff81111561138b5761138a610e23565b5b611395825461115d565b6113a08282856112dc565b600060209050601f8311600181146113d357600084156113c1578287015190505b6113cb858261134d565b865550611433565b601f1984166113e1866111bd565b60005b82811015611409578489015182556001820191506020850194506020810190506113e4565b868310156114265784890151611422601f89168261132f565b8355505b6001600288020188555050505b50505050505056fea26469706673582212206fd4a2d81ab43a707c74c61658e09586defbfc5ba52e44d22bec248e292be8ee64736f6c634300081e0033";

type SchoolManagementSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SchoolManagementSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SchoolManagementSystem__factory extends ContractFactory {
  constructor(...args: SchoolManagementSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SchoolManagementSystem & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SchoolManagementSystem__factory {
    return super.connect(runner) as SchoolManagementSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SchoolManagementSystemInterface {
    return new Interface(_abi) as SchoolManagementSystemInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SchoolManagementSystem {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SchoolManagementSystem;
  }
}
