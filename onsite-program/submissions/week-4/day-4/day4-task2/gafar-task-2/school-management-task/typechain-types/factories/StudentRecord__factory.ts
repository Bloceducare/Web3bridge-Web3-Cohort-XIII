/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { StudentRecord, StudentRecordInterface } from "../StudentRecord";

const _abi = [
  {
    inputs: [],
    name: "ZERO_ADDRESS",
    type: "error",
  },
  {
    inputs: [],
    name: "get_all_students",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "age",
            type: "uint256",
          },
          {
            internalType: "enum StudentStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct StudentRecord.Student[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "get_student_by_id",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "age",
            type: "uint256",
          },
          {
            internalType: "enum StudentStatus",
            name: "status",
            type: "uint8",
          },
        ],
        internalType: "struct StudentRecord.Student",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "age",
        type: "uint256",
      },
    ],
    name: "register_student",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "remove_student",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "studentRecord",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "age",
        type: "uint256",
      },
      {
        internalType: "enum StudentStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "age",
        type: "uint256",
      },
      {
        internalType: "enum StudentStatus",
        name: "status",
        type: "uint8",
      },
    ],
    name: "update_student",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506112448061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632d550f7a146100675780633ab9a9ec14610083578063a7939864146100a1578063ae997f9c146100bd578063bbe770fb146100ed578063ec5221a8146100f7575b600080fd5b610081600480360381019061007c9190610966565b610129565b005b61008b6102b5565b6040516100989190610bd9565b60405180910390f35b6100bb60048036038101906100b69190610c20565b6103eb565b005b6100d760048036038101906100d29190610ced565b61047b565b6040516100e49190610d6a565b60405180910390f35b6100f5610617565b005b610111600480360381019061010c9190610ced565b610687565b60405161012093929190610df4565b60405180910390f35b60405180606001604052808381526020018281526020016000600281111561015457610153610a7c565b5b815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816101ab919061103e565b506020820151816001015560408201518160020160006101000a81548160ff021916908360028111156101e1576101e0610a7c565b5b02179055509050506000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080600181540180825580915050600190039060005260206000209060030201600090919091909150600082018160000190816102679190611126565b50600182015481600101556002820160009054906101000a900460ff168160020160006101000a81548160ff021916908360028111156102aa576102a9610a7c565b5b021790555050505050565b60606000805480602002602001604051908101604052809291908181526020016000905b828210156103e2578382906000526020600020906003020160405180606001604052908160008201805461030c90610e61565b80601f016020809104026020016040519081016040528092919081815260200182805461033890610e61565b80156103855780601f1061035a57610100808354040283529160200191610385565b820191906000526020600020905b81548152906001019060200180831161036857829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff1660028111156103bd576103bc610a7c565b5b60028111156103cf576103ce610a7c565b5b81525050815260200190600101906102d9565b50505050905090565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508381600001908161043f919061103e565b50828160010181905550818160020160006101000a81548160ff021916908360028111156104705761046f610a7c565b5b021790555050505050565b610483610746565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036104e9576040517f538ba4f900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060405180606001604052908160008201805461054890610e61565b80601f016020809104026020016040519081016040528092919081815260200182805461057490610e61565b80156105c15780601f10610596576101008083540402835291602001916105c1565b820191906000526020600020905b8154815290600101906020018083116105a457829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff1660028111156105f9576105f8610a7c565b5b600281111561060b5761060a610a7c565b5b81525050915050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006106679190610779565b60018201600090556002820160006101000a81549060ff02191690555050565b60016020528060005260406000206000915090508060000180546106aa90610e61565b80601f01602080910402602001604051908101604052809291908181526020018280546106d690610e61565b80156107235780601f106106f857610100808354040283529160200191610723565b820191906000526020600020905b81548152906001019060200180831161070657829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16905083565b604051806060016040528060608152602001600081526020016000600281111561077357610772610a7c565b5b81525090565b50805461078590610e61565b6000825580601f1061079757506107b6565b601f0160209004906000526020600020908101906107b591906107b9565b5b50565b5b808211156107d25760008160009055506001016107ba565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61083d826107f4565b810181811067ffffffffffffffff8211171561085c5761085b610805565b5b80604052505050565b600061086f6107d6565b905061087b8282610834565b919050565b600067ffffffffffffffff82111561089b5761089a610805565b5b6108a4826107f4565b9050602081019050919050565b82818337600083830152505050565b60006108d36108ce84610880565b610865565b9050828152602081018484840111156108ef576108ee6107ef565b5b6108fa8482856108b1565b509392505050565b600082601f830112610917576109166107ea565b5b81356109278482602086016108c0565b91505092915050565b6000819050919050565b61094381610930565b811461094e57600080fd5b50565b6000813590506109608161093a565b92915050565b6000806040838503121561097d5761097c6107e0565b5b600083013567ffffffffffffffff81111561099b5761099a6107e5565b5b6109a785828601610902565b92505060206109b885828601610951565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a28578082015181840152602081019050610a0d565b60008484015250505050565b6000610a3f826109ee565b610a4981856109f9565b9350610a59818560208601610a0a565b610a62816107f4565b840191505092915050565b610a7681610930565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60038110610abc57610abb610a7c565b5b50565b6000819050610acd82610aab565b919050565b6000610add82610abf565b9050919050565b610aed81610ad2565b82525050565b60006060830160008301518482036000860152610b108282610a34565b9150506020830151610b256020860182610a6d565b506040830151610b386040860182610ae4565b508091505092915050565b6000610b4f8383610af3565b905092915050565b6000602082019050919050565b6000610b6f826109c2565b610b7981856109cd565b935083602082028501610b8b856109de565b8060005b85811015610bc75784840389528151610ba88582610b43565b9450610bb383610b57565b925060208a01995050600181019050610b8f565b50829750879550505050505092915050565b60006020820190508181036000830152610bf38184610b64565b905092915050565b60038110610c0857600080fd5b50565b600081359050610c1a81610bfb565b92915050565b600080600060608486031215610c3957610c386107e0565b5b600084013567ffffffffffffffff811115610c5757610c566107e5565b5b610c6386828701610902565b9350506020610c7486828701610951565b9250506040610c8586828701610c0b565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cba82610c8f565b9050919050565b610cca81610caf565b8114610cd557600080fd5b50565b600081359050610ce781610cc1565b92915050565b600060208284031215610d0357610d026107e0565b5b6000610d1184828501610cd8565b91505092915050565b60006060830160008301518482036000860152610d378282610a34565b9150506020830151610d4c6020860182610a6d565b506040830151610d5f6040860182610ae4565b508091505092915050565b60006020820190508181036000830152610d848184610d1a565b905092915050565b600082825260208201905092915050565b6000610da8826109ee565b610db28185610d8c565b9350610dc2818560208601610a0a565b610dcb816107f4565b840191505092915050565b610ddf81610930565b82525050565b610dee81610ad2565b82525050565b60006060820190508181036000830152610e0e8186610d9d565b9050610e1d6020830185610dd6565b610e2a6040830184610de5565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610e7957607f821691505b602082108103610e8c57610e8b610e32565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610ef47fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610eb7565b610efe8683610eb7565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610f3b610f36610f3184610930565b610f16565b610930565b9050919050565b6000819050919050565b610f5583610f20565b610f69610f6182610f42565b848454610ec4565b825550505050565b600090565b610f7e610f71565b610f89818484610f4c565b505050565b5b81811015610fad57610fa2600082610f76565b600181019050610f8f565b5050565b601f821115610ff257610fc381610e92565b610fcc84610ea7565b81016020851015610fdb578190505b610fef610fe785610ea7565b830182610f8e565b50505b505050565b600082821c905092915050565b600061101560001984600802610ff7565b1980831691505092915050565b600061102e8383611004565b9150826002028217905092915050565b611047826109ee565b67ffffffffffffffff8111156110605761105f610805565b5b61106a8254610e61565b611075828285610fb1565b600060209050601f8311600181146110a85760008415611096578287015190505b6110a08582611022565b865550611108565b601f1984166110b686610e92565b60005b828110156110de578489015182556001820191506020850194506020810190506110b9565b868310156110fb57848901516110f7601f891682611004565b8355505b6001600288020188555050505b505050505050565b60008154905061111f81610e61565b9050919050565b81810361113457505061120c565b61113d82611110565b67ffffffffffffffff81111561115657611155610805565b5b6111608254610e61565b61116b828285610fb1565b6000601f83116001811461119a5760008415611188578287015490505b6111928582611022565b865550611205565b601f1984166111a887610e92565b96506111b386610e92565b60005b828110156111db578489015482556001820191506001850194506020810190506111b6565b868310156111f857848901546111f4601f891682611004565b8355505b6001600288020188555050505b5050505050505b56fea2646970667358221220d22e397dd940bd8de8d84c8942afe37bd5d4b19b735bcebdda02fd5c75841f9d64736f6c634300081c0033";

type StudentRecordConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StudentRecordConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StudentRecord__factory extends ContractFactory {
  constructor(...args: StudentRecordConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      StudentRecord & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): StudentRecord__factory {
    return super.connect(runner) as StudentRecord__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StudentRecordInterface {
    return new Interface(_abi) as StudentRecordInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): StudentRecord {
    return new Contract(address, _abi, runner) as unknown as StudentRecord;
  }
}
