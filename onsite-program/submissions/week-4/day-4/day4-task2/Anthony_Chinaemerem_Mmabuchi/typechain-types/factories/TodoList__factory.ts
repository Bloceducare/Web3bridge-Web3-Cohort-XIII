/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { TodoList, TodoListInterface } from "../TodoList";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "completeTodo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "createTask",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deleteTodo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllTasks",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct TodoList.Todo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMyTodos",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct TodoList.Todo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserTodoCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getUserTodos",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "completed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct TodoList.Todo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "todos",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userTodoCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTodos",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611f848061005f6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063779900b411610071578063779900b4146101505780638da5cb5b1461016e57806398ad7a7f1461018c578063bc8bc2b4146101c0578063d49fb3fe146101f4578063f35a7fc914610224576100a9565b806314ee9905146100ae57806320fe2144146100de578063292a4585146100fa57806345cd4759146101165780636e3c673814610134575b600080fd5b6100c860048036038101906100c3919061134b565b610254565b6040516100d59190611391565b60405180910390f35b6100f860048036038101906100f391906113d8565b61026c565b005b610114600480360381019061010f919061154b565b61041e565b005b61011e610644565b60405161012b91906117ab565b60405180910390f35b61014e600480360381019061014991906113d8565b610833565b005b610158610b08565b60405161016591906117ab565b60405180910390f35b610176610d48565b60405161018391906117dc565b60405180910390f35b6101a660048036038101906101a191906117f7565b610d6c565b6040516101b7959493929190611890565b60405180910390f35b6101da60048036038101906101d591906113d8565b610edc565b6040516101eb959493929190611890565b60405180910390f35b61020e6004803603810190610209919061134b565b61103f565b60405161021b9190611391565b60405180910390f35b61023e6004803603810190610239919061134b565b61108b565b60405161024b91906117ab565b60405180910390f35b60036020528060005260406000206000915090505481565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081106102f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102e79061193d565b60405180910390fd5b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106103415761034061195d565b5b906000526020600020906005020160020160009054906101000a900460ff16156103a0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610397906119d8565b60405180910390fd5b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106103f3576103f261195d565b5b906000526020600020906005020160020160006101000a81548160ff02191690831515021790555050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060006040518060a00160405280858152602001848152602001600015158152602001428152602001838152509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001908161050e9190611c04565b5060208201518160010190816105249190611c04565b5060408201518160020160006101000a81548160ff021916908315150217905550606082015181600301556080820151816004015550506001819080600181540180825580915050600190039060005260206000209060050201600090919091909150600082015181600001908161059c9190611c04565b5060208201518160010190816105b29190611c04565b5060408201518160020160006101000a81548160ff02191690831515021790555060608201518160030155608082015181600401555050600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919061063990611d05565b919050555050505050565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561082a57838290600052602060002090600502016040518060a00160405290816000820180546106d890611a27565b80601f016020809104026020016040519081016040528092919081815260200182805461070490611a27565b80156107515780601f1061072657610100808354040283529160200191610751565b820191906000526020600020905b81548152906001019060200180831161073457829003601f168201915b5050505050815260200160018201805461076a90611a27565b80601f016020809104026020016040519081016040528092919081815260200182805461079690611a27565b80156107e35780601f106107b8576101008083540402835291602001916107e3565b820191906000526020600020905b8154815290600101906020018083116107c657829003601f168201915b505050505081526020016002820160009054906101000a900460ff1615151515815260200160038201548152602001600482015481525050815260200190600101906106a5565b50505050905090565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081106108b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ae9061193d565b60405180910390fd5b60008190505b6001600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061090c9190611d4d565b811015610a5857600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018261095f9190611d81565b815481106109705761096f61195d565b5b9060005260206000209060050201600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106109cf576109ce61195d565b5b9060005260206000209060050201600082018160000190816109f19190611dcb565b5060018201816001019081610a069190611dcb565b506002820160009054906101000a900460ff168160020160006101000a81548160ff021916908315150217905550600382015481600301556004820154816004015590505080806001019150506108bd565b50600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480610aa857610aa7611eb3565b5b600190038181906000526020600020906005020160008082016000610acd919061127c565b600182016000610add919061127c565b6002820160006101000a81549060ff0219169055600382016000905560048201600090555050905550565b60603373ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610b98576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8f90611f2e565b60405180910390fd5b6001805480602002602001604051908101604052809291908181526020016000905b82821015610d3f57838290600052602060002090600502016040518060a0016040529081600082018054610bed90611a27565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1990611a27565b8015610c665780601f10610c3b57610100808354040283529160200191610c66565b820191906000526020600020905b815481529060010190602001808311610c4957829003601f168201915b50505050508152602001600182018054610c7f90611a27565b80601f0160208091040260200160405190810160405280929190818152602001828054610cab90611a27565b8015610cf85780601f10610ccd57610100808354040283529160200191610cf8565b820191906000526020600020905b815481529060010190602001808311610cdb57829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581526020016003820154815260200160048201548152505081526020019060010190610bba565b50505050905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026020528160005260406000208181548110610d8857600080fd5b906000526020600020906005020160009150915050806000018054610dac90611a27565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd890611a27565b8015610e255780601f10610dfa57610100808354040283529160200191610e25565b820191906000526020600020905b815481529060010190602001808311610e0857829003601f168201915b505050505090806001018054610e3a90611a27565b80601f0160208091040260200160405190810160405280929190818152602001828054610e6690611a27565b8015610eb35780601f10610e8857610100808354040283529160200191610eb3565b820191906000526020600020905b815481529060010190602001808311610e9657829003601f168201915b5050505050908060020160009054906101000a900460ff16908060030154908060040154905085565b60018181548110610eec57600080fd5b9060005260206000209060050201600091509050806000018054610f0f90611a27565b80601f0160208091040260200160405190810160405280929190818152602001828054610f3b90611a27565b8015610f885780601f10610f5d57610100808354040283529160200191610f88565b820191906000526020600020905b815481529060010190602001808311610f6b57829003601f168201915b505050505090806001018054610f9d90611a27565b80601f0160208091040260200160405190810160405280929190818152602001828054610fc990611a27565b80156110165780601f10610feb57610100808354040283529160200191611016565b820191906000526020600020905b815481529060010190602001808311610ff957829003601f168201915b5050505050908060020160009054906101000a900460ff16908060030154908060040154905085565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561127157838290600052602060002090600502016040518060a001604052908160008201805461111f90611a27565b80601f016020809104026020016040519081016040528092919081815260200182805461114b90611a27565b80156111985780601f1061116d57610100808354040283529160200191611198565b820191906000526020600020905b81548152906001019060200180831161117b57829003601f168201915b505050505081526020016001820180546111b190611a27565b80601f01602080910402602001604051908101604052809291908181526020018280546111dd90611a27565b801561122a5780601f106111ff5761010080835404028352916020019161122a565b820191906000526020600020905b81548152906001019060200180831161120d57829003601f168201915b505050505081526020016002820160009054906101000a900460ff1615151515815260200160038201548152602001600482015481525050815260200190600101906110ec565b505050509050919050565b50805461128890611a27565b6000825580601f1061129a57506112b9565b601f0160209004906000526020600020908101906112b891906112bc565b5b50565b5b808211156112d55760008160009055506001016112bd565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611318826112ed565b9050919050565b6113288161130d565b811461133357600080fd5b50565b6000813590506113458161131f565b92915050565b600060208284031215611361576113606112e3565b5b600061136f84828501611336565b91505092915050565b6000819050919050565b61138b81611378565b82525050565b60006020820190506113a66000830184611382565b92915050565b6113b581611378565b81146113c057600080fd5b50565b6000813590506113d2816113ac565b92915050565b6000602082840312156113ee576113ed6112e3565b5b60006113fc848285016113c3565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6114588261140f565b810181811067ffffffffffffffff8211171561147757611476611420565b5b80604052505050565b600061148a6112d9565b9050611496828261144f565b919050565b600067ffffffffffffffff8211156114b6576114b5611420565b5b6114bf8261140f565b9050602081019050919050565b82818337600083830152505050565b60006114ee6114e98461149b565b611480565b90508281526020810184848401111561150a5761150961140a565b5b6115158482856114cc565b509392505050565b600082601f83011261153257611531611405565b5b81356115428482602086016114db565b91505092915050565b60008060408385031215611562576115616112e3565b5b600083013567ffffffffffffffff8111156115805761157f6112e8565b5b61158c8582860161151d565b925050602083013567ffffffffffffffff8111156115ad576115ac6112e8565b5b6115b98582860161151d565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561162957808201518184015260208101905061160e565b60008484015250505050565b6000611640826115ef565b61164a81856115fa565b935061165a81856020860161160b565b6116638161140f565b840191505092915050565b60008115159050919050565b6116838161166e565b82525050565b61169281611378565b82525050565b600060a08301600083015184820360008601526116b58282611635565b915050602083015184820360208601526116cf8282611635565b91505060408301516116e4604086018261167a565b5060608301516116f76060860182611689565b50608083015161170a6080860182611689565b508091505092915050565b60006117218383611698565b905092915050565b6000602082019050919050565b6000611741826115c3565b61174b81856115ce565b93508360208202850161175d856115df565b8060005b85811015611799578484038952815161177a8582611715565b945061178583611729565b925060208a01995050600181019050611761565b50829750879550505050505092915050565b600060208201905081810360008301526117c58184611736565b905092915050565b6117d68161130d565b82525050565b60006020820190506117f160008301846117cd565b92915050565b6000806040838503121561180e5761180d6112e3565b5b600061181c85828601611336565b925050602061182d858286016113c3565b9150509250929050565b600082825260208201905092915050565b6000611853826115ef565b61185d8185611837565b935061186d81856020860161160b565b6118768161140f565b840191505092915050565b61188a8161166e565b82525050565b600060a08201905081810360008301526118aa8188611848565b905081810360208301526118be8187611848565b90506118cd6040830186611881565b6118da6060830185611382565b6118e76080830184611382565b9695505050505050565b7f546f646f206e6f7420666f756e64000000000000000000000000000000000000600082015250565b6000611927600e83611837565b9150611932826118f1565b602082019050919050565b600060208201905081810360008301526119568161191a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f546f646f20616c726561647920636f6d706c6574656400000000000000000000600082015250565b60006119c2601683611837565b91506119cd8261198c565b602082019050919050565b600060208201905081810360008301526119f1816119b5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a3f57607f821691505b602082108103611a5257611a516119f8565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611aba7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a7d565b611ac48683611a7d565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611b01611afc611af784611378565b611adc565b611378565b9050919050565b6000819050919050565b611b1b83611ae6565b611b2f611b2782611b08565b848454611a8a565b825550505050565b600090565b611b44611b37565b611b4f818484611b12565b505050565b5b81811015611b7357611b68600082611b3c565b600181019050611b55565b5050565b601f821115611bb857611b8981611a58565b611b9284611a6d565b81016020851015611ba1578190505b611bb5611bad85611a6d565b830182611b54565b50505b505050565b600082821c905092915050565b6000611bdb60001984600802611bbd565b1980831691505092915050565b6000611bf48383611bca565b9150826002028217905092915050565b611c0d826115ef565b67ffffffffffffffff811115611c2657611c25611420565b5b611c308254611a27565b611c3b828285611b77565b600060209050601f831160018114611c6e5760008415611c5c578287015190505b611c668582611be8565b865550611cce565b601f198416611c7c86611a58565b60005b82811015611ca457848901518255600182019150602085019450602081019050611c7f565b86831015611cc15784890151611cbd601f891682611bca565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611d1082611378565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611d4257611d41611cd6565b5b600182019050919050565b6000611d5882611378565b9150611d6383611378565b9250828203905081811115611d7b57611d7a611cd6565b5b92915050565b6000611d8c82611378565b9150611d9783611378565b9250828201905080821115611daf57611dae611cd6565b5b92915050565b600081549050611dc481611a27565b9050919050565b818103611dd9575050611eb1565b611de282611db5565b67ffffffffffffffff811115611dfb57611dfa611420565b5b611e058254611a27565b611e10828285611b77565b6000601f831160018114611e3f5760008415611e2d578287015490505b611e378582611be8565b865550611eaa565b601f198416611e4d87611a58565b9650611e5886611a58565b60005b82811015611e8057848901548255600182019150600185019450602081019050611e5b565b86831015611e9d5784890154611e99601f891682611bca565b8355505b6001600288020188555050505b5050505050505b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f596f75277265206e6f7420746865206f776e6572000000000000000000000000600082015250565b6000611f18601483611837565b9150611f2382611ee2565b602082019050919050565b60006020820190508181036000830152611f4781611f0b565b905091905056fea2646970667358221220bfa458eeb02c3fc38a8fe99ca17dc09a75ebfaf0c89bfb4b7156876fd1420ab764736f6c634300081c0033";

type TodoListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodoListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TodoList__factory extends ContractFactory {
  constructor(...args: TodoListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TodoList & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TodoList__factory {
    return super.connect(runner) as TodoList__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodoListInterface {
    return new Interface(_abi) as TodoListInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TodoList {
    return new Contract(address, _abi, runner) as unknown as TodoList;
  }
}
