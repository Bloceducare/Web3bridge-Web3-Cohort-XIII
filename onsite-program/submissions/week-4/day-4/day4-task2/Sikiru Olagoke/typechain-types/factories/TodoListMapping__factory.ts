/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  TodoListMapping,
  TodoListMappingInterface,
} from "../TodoListMapping";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "create_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "delete_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "get_todos",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "status",
            type: "bool",
          },
        ],
        internalType: "struct TodoListMapping.Todo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "get_todos_by_address",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "status",
            type: "bool",
          },
        ],
        internalType: "struct TodoListMapping.Todo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "toggle_todo_status",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_new_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_new_description",
        type: "string",
      },
    ],
    name: "update_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611591806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633865881b146100675780635a051ea2146100855780636bbdadff146100a1578063864106f5146100bd5780638f08bb21146100ed578063b5c90fd514610109575b600080fd5b61006f610125565b60405161007c9190610ce5565b60405180910390f35b61009f600480360381019061009a9190610d51565b6102ff565b005b6100bb60048036038101906100b69190610d51565b6103ea565b005b6100d760048036038101906100d29190610ddc565b61066f565b6040516100e49190610ce5565b60405180910390f35b61010760048036038101906101029190610f3e565b61084b565b005b610123600480360381019061011e9190610fc9565b6109e7565b005b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156102f657838290600052602060002090600302016040518060600160405290816000820180546101b890611070565b80601f01602080910402602001604051908101604052809291908181526020018280546101e490611070565b80156102315780601f1061020657610100808354040283529160200191610231565b820191906000526020600020905b81548152906001019060200180831161021457829003601f168201915b5050505050815260200160018201805461024a90611070565b80601f016020809104026020016040519081016040528092919081815260200182805461027690611070565b80156102c35780601f10610298576101008083540402835291602001916102c3565b820191906000526020600020905b8154815290600101906020018083116102a657829003601f168201915b505050505081526020016002820160009054906101000a900460ff16151515158152505081526020019060010190610185565b50505050905090565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020818154811061034f5761034e6110a1565b5b906000526020600020906003020160020160009054906101000a900460ff16156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106103bf576103be6110a1565b5b906000526020600020906003020160020160006101000a81548160ff02191690831515021790555050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081111561046e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104659061112d565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506104fa919061117c565b8154811061050b5761050a6110a1565b5b90600052602060002090600302016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610569576105686110a1565b5b90600052602060002090600302016000820181600001908161058b9190611372565b50600182018160010190816105a09190611372565b506002820160009054906101000a900460ff168160020160006101000a81548160ff0219169083151502179055509050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548061061f5761061e61145a565b5b6001900381819060005260206000209060030201600080820160006106449190610ac4565b6001820160006106549190610ac4565b6002820160006101000a81549060ff02191690555050905550565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610840578382906000526020600020906003020160405180606001604052908160008201805461070290611070565b80601f016020809104026020016040519081016040528092919081815260200182805461072e90611070565b801561077b5780601f106107505761010080835404028352916020019161077b565b820191906000526020600020905b81548152906001019060200180831161075e57829003601f168201915b5050505050815260200160018201805461079490611070565b80601f01602080910402602001604051908101604052809291908181526020018280546107c090611070565b801561080d5780601f106107e25761010080835404028352916020019161080d565b820191906000526020600020905b8154815290600101906020018083116107f057829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581525050815260200190600101906106cf565b505050509050919050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508311156108cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c69061112d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109e257816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110610954576109536110a1565b5b906000526020600020906003020160000190816109719190611489565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106109c3576109c26110a1565b5b906000526020600020906003020160010190816109e09190611489565b505b505050565b600060405180606001604052808481526020018381526020016000151581525090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000019081610a869190611489565b506020820151816001019081610a9c9190611489565b5060408201518160020160006101000a81548160ff0219169083151502179055505050505050565b508054610ad090611070565b6000825580601f10610ae25750610b01565b601f016020900490600052602060002090810190610b009190610b04565b5b50565b5b80821115610b1d576000816000905550600101610b05565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b87578082015181840152602081019050610b6c565b60008484015250505050565b6000601f19601f8301169050919050565b6000610baf82610b4d565b610bb98185610b58565b9350610bc9818560208601610b69565b610bd281610b93565b840191505092915050565b60008115159050919050565b610bf281610bdd565b82525050565b60006060830160008301518482036000860152610c158282610ba4565b91505060208301518482036020860152610c2f8282610ba4565b9150506040830151610c446040860182610be9565b508091505092915050565b6000610c5b8383610bf8565b905092915050565b6000602082019050919050565b6000610c7b82610b21565b610c858185610b2c565b935083602082028501610c9785610b3d565b8060005b85811015610cd35784840389528151610cb48582610c4f565b9450610cbf83610c63565b925060208a01995050600181019050610c9b565b50829750879550505050505092915050565b60006020820190508181036000830152610cff8184610c70565b905092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610d2e81610d1b565b8114610d3957600080fd5b50565b600081359050610d4b81610d25565b92915050565b600060208284031215610d6757610d66610d11565b5b6000610d7584828501610d3c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610da982610d7e565b9050919050565b610db981610d9e565b8114610dc457600080fd5b50565b600081359050610dd681610db0565b92915050565b600060208284031215610df257610df1610d11565b5b6000610e0084828501610dc7565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e4b82610b93565b810181811067ffffffffffffffff82111715610e6a57610e69610e13565b5b80604052505050565b6000610e7d610d07565b9050610e898282610e42565b919050565b600067ffffffffffffffff821115610ea957610ea8610e13565b5b610eb282610b93565b9050602081019050919050565b82818337600083830152505050565b6000610ee1610edc84610e8e565b610e73565b905082815260208101848484011115610efd57610efc610e0e565b5b610f08848285610ebf565b509392505050565b600082601f830112610f2557610f24610e09565b5b8135610f35848260208601610ece565b91505092915050565b600080600060608486031215610f5757610f56610d11565b5b6000610f6586828701610d3c565b935050602084013567ffffffffffffffff811115610f8657610f85610d16565b5b610f9286828701610f10565b925050604084013567ffffffffffffffff811115610fb357610fb2610d16565b5b610fbf86828701610f10565b9150509250925092565b60008060408385031215610fe057610fdf610d11565b5b600083013567ffffffffffffffff811115610ffe57610ffd610d16565b5b61100a85828601610f10565b925050602083013567ffffffffffffffff81111561102b5761102a610d16565b5b61103785828601610f10565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061108857607f821691505b60208210810361109b5761109a611041565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082825260208201905092915050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b6000611117600d836110d0565b9150611122826110e1565b602082019050919050565b600060208201905081810360008301526111468161110a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061118782610d1b565b915061119283610d1b565b92508282039050818111156111aa576111a961114d565b5b92915050565b6000815490506111bf81611070565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112287fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826111eb565b61123286836111eb565b95508019841693508086168417925050509392505050565b6000819050919050565b600061126f61126a61126584610d1b565b61124a565b610d1b565b9050919050565b6000819050919050565b61128983611254565b61129d61129582611276565b8484546111f8565b825550505050565b600090565b6112b26112a5565b6112bd818484611280565b505050565b5b818110156112e1576112d66000826112aa565b6001810190506112c3565b5050565b601f821115611326576112f7816111c6565b611300846111db565b8101602085101561130f578190505b61132361131b856111db565b8301826112c2565b50505b505050565b600082821c905092915050565b60006113496000198460080261132b565b1980831691505092915050565b60006113628383611338565b9150826002028217905092915050565b818103611380575050611458565b611389826111b0565b67ffffffffffffffff8111156113a2576113a1610e13565b5b6113ac8254611070565b6113b78282856112e5565b6000601f8311600181146113e657600084156113d4578287015490505b6113de8582611356565b865550611451565b601f1984166113f4876111c6565b96506113ff866111c6565b60005b8281101561142757848901548255600182019150600185019450602081019050611402565b868310156114445784890154611440601f891682611338565b8355505b6001600288020188555050505b5050505050505b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b61149282610b4d565b67ffffffffffffffff8111156114ab576114aa610e13565b5b6114b58254611070565b6114c08282856112e5565b600060209050601f8311600181146114f357600084156114e1578287015190505b6114eb8582611356565b865550611553565b601f198416611501866111c6565b60005b8281101561152957848901518255600182019150602085019450602081019050611504565b868310156115465784890151611542601f891682611338565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220d70ac1849809c26e436f43f9566d218839e56a3d611011daea38500b664c740e64736f6c63430008140033";

type TodoListMappingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodoListMappingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TodoListMapping__factory extends ContractFactory {
  constructor(...args: TodoListMappingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TodoListMapping & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TodoListMapping__factory {
    return super.connect(runner) as TodoListMapping__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodoListMappingInterface {
    return new Interface(_abi) as TodoListMappingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): TodoListMapping {
    return new Contract(address, _abi, runner) as unknown as TodoListMapping;
  }
}
