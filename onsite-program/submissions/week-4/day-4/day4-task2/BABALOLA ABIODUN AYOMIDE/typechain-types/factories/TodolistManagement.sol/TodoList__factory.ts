/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  TodoList,
  TodoListInterface,
} from "../../TodolistManagement.sol/TodoList";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "create_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "delete_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "get_todos",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "status",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
        ],
        internalType: "struct TodoList.Todo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "toggle_todo_status",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_new_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_new_description",
        type: "string",
      },
    ],
    name: "update_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTodos",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506116488061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633865881b146100675780635a051ea2146100855780636bbdadff146100a15780638f08bb21146100bd57806398ad7a7f146100d9578063b5c90fd51461010c575b600080fd5b61006f610128565b60405161007c9190610ce9565b60405180910390f35b61009f600480360381019061009a9190610d4b565b61030c565b005b6100bb60048036038101906100b69190610d4b565b61047a565b005b6100d760048036038101906100d29190610ead565b6106e9565b005b6100f360048036038101906100ee9190610f96565b6107f8565b604051610103949392919061103e565b60405180910390f35b61012660048036038101906101219190611091565b610962565b005b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561030357838290600052602060002090600402016040518060800160405290816000820180546101bb90611138565b80601f01602080910402602001604051908101604052809291908181526020018280546101e790611138565b80156102345780601f1061020957610100808354040283529160200191610234565b820191906000526020600020905b81548152906001019060200180831161021757829003601f168201915b5050505050815260200160018201805461024d90611138565b80601f016020809104026020016040519081016040528092919081815260200182805461027990611138565b80156102c65780601f1061029b576101008083540402835291602001916102c6565b820191906000526020600020905b8154815290600101906020018083116102a957829003601f168201915b505050505081526020016002820160009054906101000a900460ff1615151515815260200160038201548152505081526020019060010190610188565b50505050905090565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050811061038f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610386906111b5565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106103df576103de6111d5565b5b906000526020600020906004020160020160009054906101000a900460ff16156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061044f5761044e6111d5565b5b906000526020600020906004020160020160006101000a81548160ff02191690831515021790555050565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050808210610502576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f9906111b5565b60405180910390fd5b60018161050f9190611233565b8214610642576000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001826105609190611233565b81548110610571576105706111d5565b5b90600052602060002090600402016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481106105cf576105ce6111d5565b5b9060005260206000209060040201600082018160000190816105f19190611429565b50600182018160010190816106069190611429565b506002820160009054906101000a900460ff168160020160006101000a81548160ff021916908315150217905550600382015481600301559050505b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806106905761068f611511565b5b6001900381819060005260206000209060040201600080820160006106b59190610a9c565b6001820160006106c59190610a9c565b6002820160006101000a81549060ff02191690556003820160009055505090555050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050831061076c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610763906111b5565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106107be576107bd6111d5565b5b90600052602060002090600402019050828160000190816107df9190611540565b50818160010190816107f19190611540565b5050505050565b6000602052816000526040600020818154811061081457600080fd5b90600052602060002090600402016000915091505080600001805461083890611138565b80601f016020809104026020016040519081016040528092919081815260200182805461086490611138565b80156108b15780601f10610886576101008083540402835291602001916108b1565b820191906000526020600020905b81548152906001019060200180831161089457829003601f168201915b5050505050908060010180546108c690611138565b80601f01602080910402602001604051908101604052809291908181526020018280546108f290611138565b801561093f5780601f106109145761010080835404028352916020019161093f565b820191906000526020600020905b81548152906001019060200180831161092257829003601f168201915b5050505050908060020160009054906101000a900460ff16908060030154905084565b600060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506109b29190611233565b90506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060405180608001604052808581526020018481526020016000151581526020018381525090806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000019081610a549190611540565b506020820151816001019081610a6a9190611540565b5060408201518160020160006101000a81548160ff021916908315150217905550606082015181600301555050505050565b508054610aa890611138565b6000825580601f10610aba5750610ad9565b601f016020900490600052602060002090810190610ad89190610adc565b5b50565b5b80821115610af5576000816000905550600101610add565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b5f578082015181840152602081019050610b44565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b8782610b25565b610b918185610b30565b9350610ba1818560208601610b41565b610baa81610b6b565b840191505092915050565b60008115159050919050565b610bca81610bb5565b82525050565b6000819050919050565b610be381610bd0565b82525050565b60006080830160008301518482036000860152610c068282610b7c565b91505060208301518482036020860152610c208282610b7c565b9150506040830151610c356040860182610bc1565b506060830151610c486060860182610bda565b508091505092915050565b6000610c5f8383610be9565b905092915050565b6000602082019050919050565b6000610c7f82610af9565b610c898185610b04565b935083602082028501610c9b85610b15565b8060005b85811015610cd75784840389528151610cb88582610c53565b9450610cc383610c67565b925060208a01995050600181019050610c9f565b50829750879550505050505092915050565b60006020820190508181036000830152610d038184610c74565b905092915050565b6000604051905090565b600080fd5b600080fd5b610d2881610bd0565b8114610d3357600080fd5b50565b600081359050610d4581610d1f565b92915050565b600060208284031215610d6157610d60610d15565b5b6000610d6f84828501610d36565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610dba82610b6b565b810181811067ffffffffffffffff82111715610dd957610dd8610d82565b5b80604052505050565b6000610dec610d0b565b9050610df88282610db1565b919050565b600067ffffffffffffffff821115610e1857610e17610d82565b5b610e2182610b6b565b9050602081019050919050565b82818337600083830152505050565b6000610e50610e4b84610dfd565b610de2565b905082815260208101848484011115610e6c57610e6b610d7d565b5b610e77848285610e2e565b509392505050565b600082601f830112610e9457610e93610d78565b5b8135610ea4848260208601610e3d565b91505092915050565b600080600060608486031215610ec657610ec5610d15565b5b6000610ed486828701610d36565b935050602084013567ffffffffffffffff811115610ef557610ef4610d1a565b5b610f0186828701610e7f565b925050604084013567ffffffffffffffff811115610f2257610f21610d1a565b5b610f2e86828701610e7f565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f6382610f38565b9050919050565b610f7381610f58565b8114610f7e57600080fd5b50565b600081359050610f9081610f6a565b92915050565b60008060408385031215610fad57610fac610d15565b5b6000610fbb85828601610f81565b9250506020610fcc85828601610d36565b9150509250929050565b600082825260208201905092915050565b6000610ff282610b25565b610ffc8185610fd6565b935061100c818560208601610b41565b61101581610b6b565b840191505092915050565b61102981610bb5565b82525050565b61103881610bd0565b82525050565b600060808201905081810360008301526110588187610fe7565b9050818103602083015261106c8186610fe7565b905061107b6040830185611020565b611088606083018461102f565b95945050505050565b600080604083850312156110a8576110a7610d15565b5b600083013567ffffffffffffffff8111156110c6576110c5610d1a565b5b6110d285828601610e7f565b925050602083013567ffffffffffffffff8111156110f3576110f2610d1a565b5b6110ff85828601610e7f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061115057607f821691505b60208210810361116357611162611109565b5b50919050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b600061119f600d83610fd6565b91506111aa82611169565b602082019050919050565b600060208201905081810360008301526111ce81611192565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061123e82610bd0565b915061124983610bd0565b925082820390508181111561126157611260611204565b5b92915050565b60008154905061127681611138565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026112df7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826112a2565b6112e986836112a2565b95508019841693508086168417925050509392505050565b6000819050919050565b600061132661132161131c84610bd0565b611301565b610bd0565b9050919050565b6000819050919050565b6113408361130b565b61135461134c8261132d565b8484546112af565b825550505050565b600090565b61136961135c565b611374818484611337565b505050565b5b818110156113985761138d600082611361565b60018101905061137a565b5050565b601f8211156113dd576113ae8161127d565b6113b784611292565b810160208510156113c6578190505b6113da6113d285611292565b830182611379565b50505b505050565b600082821c905092915050565b6000611400600019846008026113e2565b1980831691505092915050565b600061141983836113ef565b9150826002028217905092915050565b81810361143757505061150f565b61144082611267565b67ffffffffffffffff81111561145957611458610d82565b5b6114638254611138565b61146e82828561139c565b6000601f83116001811461149d576000841561148b578287015490505b611495858261140d565b865550611508565b601f1984166114ab8761127d565b96506114b68661127d565b60005b828110156114de578489015482556001820191506001850194506020810190506114b9565b868310156114fb57848901546114f7601f8916826113ef565b8355505b6001600288020188555050505b5050505050505b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b61154982610b25565b67ffffffffffffffff81111561156257611561610d82565b5b61156c8254611138565b61157782828561139c565b600060209050601f8311600181146115aa5760008415611598578287015190505b6115a2858261140d565b86555061160a565b601f1984166115b88661127d565b60005b828110156115e0578489015182556001820191506020850194506020810190506115bb565b868310156115fd57848901516115f9601f8916826113ef565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220b85489173f4bd210ea47320c0e864511a0557010b715ee2da9fa2470cdfd8fd964736f6c634300081e0033";

type TodoListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodoListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TodoList__factory extends ContractFactory {
  constructor(...args: TodoListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TodoList & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TodoList__factory {
    return super.connect(runner) as TodoList__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodoListInterface {
    return new Interface(_abi) as TodoListInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TodoList {
    return new Contract(address, _abi, runner) as unknown as TodoList;
  }
}
