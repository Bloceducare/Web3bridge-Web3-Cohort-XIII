/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { TodoList, TodoListInterface } from "../TodoList";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_school",
        type: "string",
      },
    ],
    name: "create_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "delete_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "get_todos",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "status",
            type: "bool",
          },
        ],
        internalType: "struct TodoList.Todo[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "toggle_todo_status",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_new_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_new_description",
        type: "string",
      },
      {
        internalType: "string",
        name: "_new_school",
        type: "string",
      },
    ],
    name: "update_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "users",
    outputs: [
      {
        internalType: "string",
        name: "school",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506118888061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633865881b146100675780635a051ea2146100865780636bbdadff146100a257806373756b0a146100be578063a87430ba146100da578063cdcc4c1b1461010a575b600080fd5b61006f610126565b60405161007d929190610e9f565b60405180910390f35b6100a0600480360381019061009b9190610f20565b6103d7565b005b6100bc60048036038101906100b79190610f20565b61054e565b005b6100d860048036038101906100d39190611082565b6107e1565b005b6100f460048036038101906100ef919061119b565b6109ab565b60405161010191906111c8565b60405180910390f35b610124600480360381019061011f91906111ea565b610a51565b005b6060806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181805480602002602001604051908101604052809291908181526020016000905b8282101561033d57838290600052602060002090600302016040518060600160405290816000820180546101ff906112c0565b80601f016020809104026020016040519081016040528092919081815260200182805461022b906112c0565b80156102785780601f1061024d57610100808354040283529160200191610278565b820191906000526020600020905b81548152906001019060200180831161025b57829003601f168201915b50505050508152602001600182018054610291906112c0565b80601f01602080910402602001604051908101604052809291908181526020018280546102bd906112c0565b801561030a5780601f106102df5761010080835404028352916020019161030a565b820191906000526020600020905b8154815290600101906020018083116102ed57829003601f168201915b505050505081526020016002820160009054906101000a900460ff161515151581525050815260200190600101906101cc565b50505050915080805461034f906112c0565b80601f016020809104026020016040519081016040528092919081815260200182805461037b906112c0565b80156103c85780601f1061039d576101008083540402835291602001916103c8565b820191906000526020600020905b8154815290600101906020018083116103ab57829003601f168201915b50505050509050915091509091565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010180549050811061045d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045490611363565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181815481106104b0576104af611383565b5b906000526020600020906003020160020160009054906101000a900460ff16156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101828154811061052357610522611383565b5b906000526020600020906003020160020160006101000a81548160ff02191690831515021790555050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905081106105d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cb90611363565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018054905061066691906113e1565b8154811061067757610676611383565b5b90600052602060002090600302016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010182815481106106d8576106d7611383565b5b9060005260206000209060030201600082018160000190816106fa91906115d7565b506001820181600101908161070f91906115d7565b506002820160009054906101000a900460ff168160020160006101000a81548160ff0219169083151502179055509050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805480610791576107906116bf565b5b6001900381819060005260206000209060030201600080820160006107b69190610c34565b6001820160006107c69190610c34565b6002820160006101000a81549060ff02191690555050905550565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101805490508410610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085e90611363565b60405180910390fd5b6000815111156108c157806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000190816108bf91906116ee565b505b826000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101858154811061091557610914611383565b5b9060005260206000209060030201600001908161093291906116ee565b50816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101858154811061098757610986611383565b5b906000526020600020906003020160010190816109a491906116ee565b5050505050565b60006020528060005260406000206000915090508060000180546109ce906112c0565b80601f01602080910402602001604051908101604052809291908181526020018280546109fa906112c0565b8015610a475780601f10610a1c57610100808354040283529160200191610a47565b820191906000526020600020905b815481529060010190602001808311610a2a57829003601f168201915b5050505050905081565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054610a9f906112c0565b9050148015610aaf575060008151145b15610af9576000815111610af8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aef90611832565b60405180910390fd5b5b600081511115610b5357806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000019081610b5191906116ee565b505b600060405180606001604052808581526020018481526020016000151581525090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000019081610bf591906116ee565b506020820151816001019081610c0b91906116ee565b5060408201518160020160006101000a81548160ff021916908315150217905550505050505050565b508054610c40906112c0565b6000825580601f10610c525750610c71565b601f016020900490600052602060002090810190610c709190610c74565b5b50565b5b80821115610c8d576000816000905550600101610c75565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610cf7578082015181840152602081019050610cdc565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d1f82610cbd565b610d298185610cc8565b9350610d39818560208601610cd9565b610d4281610d03565b840191505092915050565b60008115159050919050565b610d6281610d4d565b82525050565b60006060830160008301518482036000860152610d858282610d14565b91505060208301518482036020860152610d9f8282610d14565b9150506040830151610db46040860182610d59565b508091505092915050565b6000610dcb8383610d68565b905092915050565b6000602082019050919050565b6000610deb82610c91565b610df58185610c9c565b935083602082028501610e0785610cad565b8060005b85811015610e435784840389528151610e248582610dbf565b9450610e2f83610dd3565b925060208a01995050600181019050610e0b565b50829750879550505050505092915050565b600082825260208201905092915050565b6000610e7182610cbd565b610e7b8185610e55565b9350610e8b818560208601610cd9565b610e9481610d03565b840191505092915050565b60006040820190508181036000830152610eb98185610de0565b90508181036020830152610ecd8184610e66565b90509392505050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610efd81610eea565b8114610f0857600080fd5b50565b600081359050610f1a81610ef4565b92915050565b600060208284031215610f3657610f35610ee0565b5b6000610f4484828501610f0b565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f8f82610d03565b810181811067ffffffffffffffff82111715610fae57610fad610f57565b5b80604052505050565b6000610fc1610ed6565b9050610fcd8282610f86565b919050565b600067ffffffffffffffff821115610fed57610fec610f57565b5b610ff682610d03565b9050602081019050919050565b82818337600083830152505050565b600061102561102084610fd2565b610fb7565b90508281526020810184848401111561104157611040610f52565b5b61104c848285611003565b509392505050565b600082601f83011261106957611068610f4d565b5b8135611079848260208601611012565b91505092915050565b6000806000806080858703121561109c5761109b610ee0565b5b60006110aa87828801610f0b565b945050602085013567ffffffffffffffff8111156110cb576110ca610ee5565b5b6110d787828801611054565b935050604085013567ffffffffffffffff8111156110f8576110f7610ee5565b5b61110487828801611054565b925050606085013567ffffffffffffffff81111561112557611124610ee5565b5b61113187828801611054565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111688261113d565b9050919050565b6111788161115d565b811461118357600080fd5b50565b6000813590506111958161116f565b92915050565b6000602082840312156111b1576111b0610ee0565b5b60006111bf84828501611186565b91505092915050565b600060208201905081810360008301526111e28184610e66565b905092915050565b60008060006060848603121561120357611202610ee0565b5b600084013567ffffffffffffffff81111561122157611220610ee5565b5b61122d86828701611054565b935050602084013567ffffffffffffffff81111561124e5761124d610ee5565b5b61125a86828701611054565b925050604084013567ffffffffffffffff81111561127b5761127a610ee5565b5b61128786828701611054565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112d857607f821691505b6020821081036112eb576112ea611291565b5b50919050565b7f496e64657820697320696e76616c6964206f7220646f6573206e6f742065786960008201527f7374000000000000000000000000000000000000000000000000000000000000602082015250565b600061134d602283610e55565b9150611358826112f1565b604082019050919050565b6000602082019050818103600083015261137c81611340565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006113ec82610eea565b91506113f783610eea565b925082820390508181111561140f5761140e6113b2565b5b92915050565b600081549050611424816112c0565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261148d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611450565b6114978683611450565b95508019841693508086168417925050509392505050565b6000819050919050565b60006114d46114cf6114ca84610eea565b6114af565b610eea565b9050919050565b6000819050919050565b6114ee836114b9565b6115026114fa826114db565b84845461145d565b825550505050565b600090565b61151761150a565b6115228184846114e5565b505050565b5b818110156115465761153b60008261150f565b600181019050611528565b5050565b601f82111561158b5761155c8161142b565b61156584611440565b81016020851015611574578190505b61158861158085611440565b830182611527565b50505b505050565b600082821c905092915050565b60006115ae60001984600802611590565b1980831691505092915050565b60006115c7838361159d565b9150826002028217905092915050565b8181036115e55750506116bd565b6115ee82611415565b67ffffffffffffffff81111561160757611606610f57565b5b61161182546112c0565b61161c82828561154a565b6000601f83116001811461164b5760008415611639578287015490505b61164385826115bb565b8655506116b6565b601f1984166116598761142b565b96506116648661142b565b60005b8281101561168c57848901548255600182019150600185019450602081019050611667565b868310156116a957848901546116a5601f89168261159d565b8355505b6001600288020188555050505b5050505050505b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6116f782610cbd565b67ffffffffffffffff8111156117105761170f610f57565b5b61171a82546112c0565b61172582828561154a565b600060209050601f8311600181146117585760008415611746578287015190505b61175085826115bb565b8655506117b8565b601f1984166117668661142b565b60005b8281101561178e57848901518255600182019150602085019450602081019050611769565b868310156117ab57848901516117a7601f89168261159d565b8355505b6001600288020188555050505b505050505050565b7f5363686f6f6c206e616d6520697320726571756972656420666f72206e65772060008201527f7573657200000000000000000000000000000000000000000000000000000000602082015250565b600061181c602483610e55565b9150611827826117c0565b604082019050919050565b6000602082019050818103600083015261184b8161180f565b905091905056fea2646970667358221220b8c7d91b33745f4ab74cbb699e7733254d648274d9b776d03590c9122da3955c64736f6c634300081c0033";

type TodoListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodoListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TodoList__factory extends ContractFactory {
  constructor(...args: TodoListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TodoList & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TodoList__factory {
    return super.connect(runner) as TodoList__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodoListInterface {
    return new Interface(_abi) as TodoListInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TodoList {
    return new Contract(address, _abi, runner) as unknown as TodoList;
  }
}
