/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { TodoList, TodoListInterface } from "../TodoList";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_description",
        type: "string",
      },
    ],
    name: "create_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "delete_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "get_todos",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "bool",
            name: "status",
            type: "bool",
          },
        ],
        internalType: "struct TodoList.Todo[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "toggle_todo_status",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_new_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_new_description",
        type: "string",
      },
    ],
    name: "update_todo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userTodos",
    outputs: [
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506116078061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633865881b146100675780635a051ea2146100855780636bbdadff146100a15780638f08bb21146100bd57806398ad7a7f146100d9578063b5c90fd51461010b575b600080fd5b61006f610127565b60405161007c9190610cbb565b60405180910390f35b61009f600480360381019061009a9190610d27565b610301565b005b6100bb60048036038101906100b69190610d27565b61046f565b005b6100d760048036038101906100d29190610e89565b6106f3565b005b6100f360048036038101906100ee9190610f72565b610859565b6040516101029392919061100b565b60405180910390f35b61012560048036038101906101209190611050565b6109bd565b005b60606000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156102f857838290600052602060002090600302016040518060600160405290816000820180546101ba906110f7565b80601f01602080910402602001604051908101604052809291908181526020018280546101e6906110f7565b80156102335780601f1061020857610100808354040283529160200191610233565b820191906000526020600020905b81548152906001019060200180831161021657829003601f168201915b5050505050815260200160018201805461024c906110f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610278906110f7565b80156102c55780601f1061029a576101008083540402835291602001916102c5565b820191906000526020600020905b8154815290600101906020018083116102a857829003601f168201915b505050505081526020016002820160009054906101000a900460ff16151515158152505081526020019060010190610187565b50505050905090565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110610384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037b90611174565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081815481106103d4576103d3611194565b5b906000526020600020906003020160020160009054906101000a900460ff16156000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061044457610443611194565b5b906000526020600020906003020160020160006101000a81548160ff02191690831515021790555050565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905081106104f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e990611174565b60405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061057e91906111f2565b8154811061058f5761058e611194565b5b90600052602060002090600302016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106105ed576105ec611194565b5b90600052602060002090600302016000820181600001908161060f91906113e8565b506001820181600101908161062491906113e8565b506002820160009054906101000a900460ff168160020160006101000a81548160ff0219169083151502179055509050506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806106a3576106a26114d0565b5b6001900381819060005260206000209060030201600080820160006106c89190610a9a565b6001820160006106d89190610a9a565b6002820160006101000a81549060ff02191690555050905550565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508310610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d90611174565b60405180910390fd5b816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106107c7576107c6611194565b5b906000526020600020906003020160000190816107e491906114ff565b50806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811061083657610835611194565b5b9060005260206000209060030201600101908161085391906114ff565b50505050565b6000602052816000526040600020818154811061087557600080fd5b906000526020600020906003020160009150915050806000018054610899906110f7565b80601f01602080910402602001604051908101604052809291908181526020018280546108c5906110f7565b80156109125780601f106108e757610100808354040283529160200191610912565b820191906000526020600020905b8154815290600101906020018083116108f557829003601f168201915b505050505090806001018054610927906110f7565b80601f0160208091040260200160405190810160405280929190818152602001828054610953906110f7565b80156109a05780601f10610975576101008083540402835291602001916109a0565b820191906000526020600020905b81548152906001019060200180831161098357829003601f168201915b5050505050908060020160009054906101000a900460ff16905083565b600060405180606001604052808481526020018381526020016000151581525090506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000019081610a5c91906114ff565b506020820151816001019081610a7291906114ff565b5060408201518160020160006101000a81548160ff0219169083151502179055505050505050565b508054610aa6906110f7565b6000825580601f10610ab85750610ad7565b601f016020900490600052602060002090810190610ad69190610ada565b5b50565b5b80821115610af3576000816000905550600101610adb565b5090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610b5d578082015181840152602081019050610b42565b60008484015250505050565b6000601f19601f8301169050919050565b6000610b8582610b23565b610b8f8185610b2e565b9350610b9f818560208601610b3f565b610ba881610b69565b840191505092915050565b60008115159050919050565b610bc881610bb3565b82525050565b60006060830160008301518482036000860152610beb8282610b7a565b91505060208301518482036020860152610c058282610b7a565b9150506040830151610c1a6040860182610bbf565b508091505092915050565b6000610c318383610bce565b905092915050565b6000602082019050919050565b6000610c5182610af7565b610c5b8185610b02565b935083602082028501610c6d85610b13565b8060005b85811015610ca95784840389528151610c8a8582610c25565b9450610c9583610c39565b925060208a01995050600181019050610c71565b50829750879550505050505092915050565b60006020820190508181036000830152610cd58184610c46565b905092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610d0481610cf1565b8114610d0f57600080fd5b50565b600081359050610d2181610cfb565b92915050565b600060208284031215610d3d57610d3c610ce7565b5b6000610d4b84828501610d12565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610d9682610b69565b810181811067ffffffffffffffff82111715610db557610db4610d5e565b5b80604052505050565b6000610dc8610cdd565b9050610dd48282610d8d565b919050565b600067ffffffffffffffff821115610df457610df3610d5e565b5b610dfd82610b69565b9050602081019050919050565b82818337600083830152505050565b6000610e2c610e2784610dd9565b610dbe565b905082815260208101848484011115610e4857610e47610d59565b5b610e53848285610e0a565b509392505050565b600082601f830112610e7057610e6f610d54565b5b8135610e80848260208601610e19565b91505092915050565b600080600060608486031215610ea257610ea1610ce7565b5b6000610eb086828701610d12565b935050602084013567ffffffffffffffff811115610ed157610ed0610cec565b5b610edd86828701610e5b565b925050604084013567ffffffffffffffff811115610efe57610efd610cec565b5b610f0a86828701610e5b565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f3f82610f14565b9050919050565b610f4f81610f34565b8114610f5a57600080fd5b50565b600081359050610f6c81610f46565b92915050565b60008060408385031215610f8957610f88610ce7565b5b6000610f9785828601610f5d565b9250506020610fa885828601610d12565b9150509250929050565b600082825260208201905092915050565b6000610fce82610b23565b610fd88185610fb2565b9350610fe8818560208601610b3f565b610ff181610b69565b840191505092915050565b61100581610bb3565b82525050565b600060608201905081810360008301526110258186610fc3565b905081810360208301526110398185610fc3565b90506110486040830184610ffc565b949350505050565b6000806040838503121561106757611066610ce7565b5b600083013567ffffffffffffffff81111561108557611084610cec565b5b61109185828601610e5b565b925050602083013567ffffffffffffffff8111156110b2576110b1610cec565b5b6110be85828601610e5b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061110f57607f821691505b602082108103611122576111216110c8565b5b50919050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b600061115e600d83610fb2565b915061116982611128565b602082019050919050565b6000602082019050818103600083015261118d81611151565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006111fd82610cf1565b915061120883610cf1565b92508282039050818111156112205761121f6111c3565b5b92915050565b600081549050611235816110f7565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261129e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611261565b6112a88683611261565b95508019841693508086168417925050509392505050565b6000819050919050565b60006112e56112e06112db84610cf1565b6112c0565b610cf1565b9050919050565b6000819050919050565b6112ff836112ca565b61131361130b826112ec565b84845461126e565b825550505050565b600090565b61132861131b565b6113338184846112f6565b505050565b5b818110156113575761134c600082611320565b600181019050611339565b5050565b601f82111561139c5761136d8161123c565b61137684611251565b81016020851015611385578190505b61139961139185611251565b830182611338565b50505b505050565b600082821c905092915050565b60006113bf600019846008026113a1565b1980831691505092915050565b60006113d883836113ae565b9150826002028217905092915050565b8181036113f65750506114ce565b6113ff82611226565b67ffffffffffffffff81111561141857611417610d5e565b5b61142282546110f7565b61142d82828561135b565b6000601f83116001811461145c576000841561144a578287015490505b61145485826113cc565b8655506114c7565b601f19841661146a8761123c565b96506114758661123c565b60005b8281101561149d57848901548255600182019150600185019450602081019050611478565b868310156114ba57848901546114b6601f8916826113ae565b8355505b6001600288020188555050505b5050505050505b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b61150882610b23565b67ffffffffffffffff81111561152157611520610d5e565b5b61152b82546110f7565b61153682828561135b565b600060209050601f8311600181146115695760008415611557578287015190505b61156185826113cc565b8655506115c9565b601f1984166115778661123c565b60005b8281101561159f5784890151825560018201915060208501945060208101905061157a565b868310156115bc57848901516115b8601f8916826113ae565b8355505b6001600288020188555050505b50505050505056fea26469706673582212207f23581a0fdc7e4efd4cd2a0ca844434f000a944b4012f10c98e83c5041465ae64736f6c634300081c0033";

type TodoListConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TodoListConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TodoList__factory extends ContractFactory {
  constructor(...args: TodoListConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      TodoList & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TodoList__factory {
    return super.connect(runner) as TodoList__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TodoListInterface {
    return new Interface(_abi) as TodoListInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): TodoList {
    return new Contract(address, _abi, runner) as unknown as TodoList;
  }
}
