/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { LudoGame, LudoGameInterface } from "../LudoGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minStakeAmount",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "roll",
        type: "uint256",
      },
    ],
    name: "DiceRolled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "winner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "payout",
        type: "uint256",
      },
    ],
    name: "GameEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "GameStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newPosition",
        type: "uint256",
      },
    ],
    name: "PlayerMoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "enum LudoGame.Color",
        name: "color",
        type: "uint8",
      },
    ],
    name: "PlayerRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensStaked",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "enum LudoGame.Color",
        name: "",
        type: "uint8",
      },
    ],
    name: "colorToPlayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPlayer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentPlayerIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameState",
    outputs: [
      {
        internalType: "enum LudoGame.GameState",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllPlayers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getGameInfo",
    outputs: [
      {
        internalType: "enum LudoGame.GameState",
        name: "state",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "currentTurn",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "playerCount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "gameWinner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "playerAddr",
        type: "address",
      },
    ],
    name: "getPlayerInfo",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum LudoGame.Color",
        name: "color",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "stakedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minStakeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "playerAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum LudoGame.Color",
        name: "color",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "stakedAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "enum LudoGame.Color",
        name: "_color",
        type: "uint8",
      },
    ],
    name: "registerPlayer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "resetGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollDice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStakedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161169638038061169683398101604081905261002f91610041565b6005556003805460ff1916905561005a565b60006020828403121561005357600080fd5b5051919050565b61162d806100696000396000f3fe6080604052600436106100e85760003560e01c8063837e7cc61161008a578063e2eb41ff11610059578063e2eb41ff146102a1578063efa1c482146102d4578063f1887684146102f6578063fb9bdab41461030c57600080fd5b8063837e7cc61461022b578063bb47221914610240578063d1f9c24d14610255578063dfbf53ae1461027c57600080fd5b80634404a438116100c65780634404a4381461017f57806350865a5d1461019f578063567e98f9146101d557806359328401146101f957600080fd5b806302bc726d146100ed57806315c6aee2146101025780631746bd1b1461013f575b600080fd5b6101006100fb366004611132565b610322565b005b34801561010e57600080fd5b5061012261011d3660046111f4565b610738565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561014b57600080fd5b506003546006546004546002546040516101369460ff8116946001600160a01b039081169493926101009092041690611237565b34801561018b57600080fd5b50600654610122906001600160a01b031681565b3480156101ab57600080fd5b506101226101ba366004611276565b6001602052600090815260409020546001600160a01b031681565b3480156101e157600080fd5b506101eb60045481565b604051908152602001610136565b34801561020557600080fd5b50610219610214366004611298565b610762565b60405161013696959493929190611317565b34801561023757600080fd5b506101eb6108d2565b34801561024c57600080fd5b50610100610a43565b34801561026157600080fd5b5060035461026f9060ff1681565b604051610136919061135d565b34801561028857600080fd5b506003546101229061010090046001600160a01b031681565b3480156102ad57600080fd5b506102c16102bc366004611298565b610c1d565b6040516101369796959493929190611371565b3480156102e057600080fd5b506102e9610cf2565b60405161013691906113c9565b34801561030257600080fd5b506101eb60055481565b34801561031857600080fd5b506101eb60075481565b600060035460ff16600281111561033b5761033b61120d565b146103845760405162461bcd60e51b815260206004820152601460248201527311d85b5948185b1c9958591e481cdd185c9d195960621b60448201526064015b60405180910390fd5b3360009081526020819052604090206005015460ff16156103e75760405162461bcd60e51b815260206004820152601960248201527f506c6179657220616c7265616479207265676973746572656400000000000000604482015260640161037b565b60006001818360038111156103fe576103fe61120d565b600381111561040f5761040f61120d565b81526020810191909152604001600020546001600160a01b03161461046c5760405162461bcd60e51b815260206004820152601360248201527221b7b637b91030b63932b0b23c903a30b5b2b760691b604482015260640161037b565b6002546004116104be5760405162461bcd60e51b815260206004820152601960248201527f4d6178696d756d203420706c617965727320616c6c6f77656400000000000000604482015260640161037b565b6005543410156105105760405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e74207374616b6520616d6f756e7400000000000000604482015260640161037b565b6040518060e00160405280336001600160a01b031681526020018381526020018260038111156105425761054261120d565b815260006020808301829052604080840183905260016060850181905234608090950194909452338352828252909120835181546001600160a01b0319166001600160a01b039091161781559083015190918201906105a190826114a1565b50604082015160028201805460ff191660018360038111156105c5576105c561120d565b0217905550606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c0820151816006015590505033600160008360038111156106225761062261120d565b60038111156106335761063361120d565b81526020810191909152604001600090812080546001600160a01b03939093166001600160a01b0319938416179055600280546001810182559082527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0180549092163317909155600480543492906106ad908490611577565b909155505060405133907fa4e3e83915a129a7a35c973747aa80620677687eaf3adda20fa7e0644d01f929906106e6908590859061158a565b60405180910390a260405134815233907fb539ca1e5c8d398ddf1c41c30166f33404941683be4683319b57669a93dad4ef9060200160405180910390a2600280541061073457610734610d54565b5050565b6002818154811061074857600080fd5b6000918252602090912001546001600160a01b0316905081565b6001600160a01b03808216600090815260208181526040808320815160e0810190925280549094168152600184018054606095859485948594859485949293840191906107ae90611416565b80601f01602080910402602001604051908101604052809291908181526020018280546107da90611416565b80156108275780601f106107fc57610100808354040283529160200191610827565b820191906000526020600020905b81548152906001019060200180831161080a57829003601f168201915b5050509183525050600282015460209091019060ff16600381111561084e5761084e61120d565b600381111561085f5761085f61120d565b815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16151515158152602001600682015481525050905080602001518160400151826060015183608001518460a001518560c001519650965096509650965096505091939550919395565b3360009081526020819052604081206005015460ff1661092c5760405162461bcd60e51b8152602060048201526015602482015274141b185e595c881b9bdd081c9959da5cdd195c9959605a1b604482015260640161037b565b600160035460ff1660028111156109455761094561120d565b146109895760405162461bcd60e51b815260206004820152601460248201527347616d65206e6f7420696e2070726f677265737360601b604482015260640161037b565b6006546001600160a01b031633146109d35760405162461bcd60e51b815260206004820152600d60248201526c2737ba103cb7bab9103a3ab93760991b604482015260640161037b565b600060066109df610e1e565b6109e991906115ac565b6109f4906001611577565b60405181815290915033907f1ef79941499983e5c21ea7f676dda47f58a2dd04d9b4bb110544a7b7ee7ff1239060200160405180910390a2610a363382610e7f565b610a3e610f26565b905090565b600260035460ff166002811115610a5c57610a5c61120d565b14610a9d5760405162461bcd60e51b815260206004820152601160248201527011d85b59481b9bdd08199a5b9a5cda1959607a1b604482015260640161037b565b60035461010090046001600160a01b03163314610af45760405162461bcd60e51b815260206004820152601560248201527413db9b1e481dda5b9b995c8818d85b881c995cd95d605a1b604482015260640161037b565b60005b600254811015610be457600060028281548110610b1657610b166115ce565b60009182526020808320909101546001600160a01b03168083529082905260408220600281015481546001600160a01b031916825591935060ff90911691610b616001830182611098565b5060028101805460ff1990811690915560006003808401829055600484018290556005840180549093169092556006909201829055600191908390811115610bab57610bab61120d565b6003811115610bbc57610bbc61120d565b8152602081019190915260400160002080546001600160a01b03191690555050600101610af7565b50610bf1600260006110d5565b600380546001600160a81b0319169055600680546001600160a01b031916905560006007819055600455565b600060208190529081526040902080546001820180546001600160a01b039092169291610c4990611416565b80601f0160208091040260200160405190810160405280929190818152602001828054610c7590611416565b8015610cc25780601f10610c9757610100808354040283529160200191610cc2565b820191906000526020600020905b815481529060010190602001808311610ca557829003601f168201915b505050506002830154600384015460048501546005860154600690960154949560ff938416959294509092169087565b60606002805480602002602001604051908101604052809291908181526020018280548015610d4a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d2c575b5050505050905090565b600280541015610da65760405162461bcd60e51b815260206004820152601760248201527f4e656564206174206c65617374203220706c6179657273000000000000000000604482015260640161037b565b6003805460ff1916600117905560028054600090610dc657610dc66115ce565b6000918252602082200154600680546001600160a01b0319166001600160a01b0390921691909117905560078190556040517f762f260439bb4be3ef6e4dc2786e2e7bd187d3d80b79057d7a424fe98563e3359190a1565b6000424433610e2e6001436115e4565b6040805160208101959095528401929092526bffffffffffffffffffffffff19606091821b16908301524060748201526094016040516020818303038152906040528051906020012060001c905090565b6001600160a01b03821660009081526020819052604081206004810154909190610eaa908490611577565b905060648110610ec057506064610ec084610f89565b80826004018190555082826003016000828254610edd9190611577565b90915550506040518181526001600160a01b038516907fe0a1b340a14d47a5482875f738abb6e2c70f533d80188606facc527b70cbd2129060200160405180910390a250505050565b600254600754610f37906001611577565b610f4191906115ac565b600781905550600260075481548110610f5c57610f5c6115ce565b600091825260209091200154600680546001600160a01b0319166001600160a01b03909216919091179055565b600380546001600160a01b038381166101009081026001600160a81b0319909316929092176002179283905560048054600091829055604051909491939091049091169083908381818185875af1925050503d8060008114611007576040519150601f19603f3d011682016040523d82523d6000602084013e61100c565b606091505b505090508061104d5760405162461bcd60e51b815260206004820152600d60248201526c14185e5bdd5d0819985a5b1959609a1b604482015260640161037b565b6003546040518381526101009091046001600160a01b0316907fd4ba6fec82d9b0e8ffe50b9fed9e4be3b25c984ce1e0e016405a5528726e8a2c9060200160405180910390a2505050565b5080546110a490611416565b6000825580601f106110b4575050565b601f0160209004906000526020600020908101906110d291906110ef565b50565b50805460008255906000526020600020908101906110d291905b5b8082111561110457600081556001016110f0565b5090565b634e487b7160e01b600052604160045260246000fd5b80356004811061112d57600080fd5b919050565b6000806040838503121561114557600080fd5b823567ffffffffffffffff8082111561115d57600080fd5b818501915085601f83011261117157600080fd5b81358181111561118357611183611108565b604051601f8201601f19908116603f011681019083821181831017156111ab576111ab611108565b816040528281528860208487010111156111c457600080fd5b8260208601602083013760006020848301015280965050505050506111eb6020840161111e565b90509250929050565b60006020828403121561120657600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b600381106112335761123361120d565b9052565b60a081016112458288611223565b6001600160a01b03958616602083015260408201949094526060810192909252909216608090920191909152919050565b60006020828403121561128857600080fd5b6112918261111e565b9392505050565b6000602082840312156112aa57600080fd5b81356001600160a01b038116811461129157600080fd5b6000815180845260005b818110156112e7576020818501810151868301820152016112cb565b506000602082860101526020601f19601f83011685010191505092915050565b600481106112335761123361120d565b60c08152600061132a60c08301896112c1565b90506113396020830188611307565b60408201959095526060810193909352901515608083015260a09091015292915050565b6020810161136b8284611223565b92915050565b6001600160a01b038816815260e060208201819052600090611395908301896112c1565b90506113a46040830188611307565b6060820195909552608081019390935290151560a083015260c0909101529392505050565b6020808252825182820181905260009190848201906040850190845b8181101561140a5783516001600160a01b0316835292840192918401916001016113e5565b50909695505050505050565b600181811c9082168061142a57607f821691505b60208210810361144a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561149c576000816000526020600020601f850160051c810160208610156114795750805b601f850160051c820191505b8181101561149857828155600101611485565b5050505b505050565b815167ffffffffffffffff8111156114bb576114bb611108565b6114cf816114c98454611416565b84611450565b602080601f83116001811461150457600084156114ec5750858301515b600019600386901b1c1916600185901b178555611498565b600085815260208120601f198616915b8281101561153357888601518255948401946001909101908401611514565b50858210156115515787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8082018082111561136b5761136b611561565b60408152600061159d60408301856112c1565b90506112916020830184611307565b6000826115c957634e487b7160e01b600052601260045260246000fd5b500690565b634e487b7160e01b600052603260045260246000fd5b8181038181111561136b5761136b61156156fea264697066735822122009d61fe837bc7f89de13387d1ea142e438751c0b8aad9c4e29f28202527abca564736f6c63430008180033";

type LudoGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LudoGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LudoGame__factory extends ContractFactory {
  constructor(...args: LudoGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _minStakeAmount: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_minStakeAmount, overrides || {});
  }
  override deploy(
    _minStakeAmount: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_minStakeAmount, overrides || {}) as Promise<
      LudoGame & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LudoGame__factory {
    return super.connect(runner) as LudoGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LudoGameInterface {
    return new Interface(_abi) as LudoGameInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LudoGame {
    return new Contract(address, _abi, runner) as unknown as LudoGame;
  }
}
