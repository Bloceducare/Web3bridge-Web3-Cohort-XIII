/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { LudoGame, LudoGameInterface } from "../LudoGame";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ColorTaken",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientStake",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxPlayersReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NoPlayers",
    type: "error",
  },
  {
    inputs: [],
    name: "NotRegistered",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "winner",
        type: "address",
      },
    ],
    name: "GameEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "GameStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "diceRoll",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newScore",
        type: "uint256",
      },
    ],
    name: "MoveMade",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "enum LudoGame.Color",
        name: "color",
        type: "uint8",
      },
    ],
    name: "PlayerRegistered",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_PLAYERS",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LudoGame.Color",
        name: "",
        type: "uint8",
      },
    ],
    name: "colorTaken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gameStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "getPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum LudoGame.Color",
            name: "color",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "score",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "tokensStaked",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "registered",
            type: "bool",
          },
        ],
        internalType: "struct LudoGame.Player",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "makeMove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "playerList",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum LudoGame.Color",
        name: "color",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tokensStaked",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "registered",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "enum LudoGame.Color",
        name: "_color",
        type: "uint8",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract ILudoToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052670de0b6b3a76400006004553480156200001d57600080fd5b5060405162001ce438038062001ce48339818101604052810190620000439190620000f4565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000126565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000bc826200008f565b9050919050565b620000ce81620000af565b8114620000da57600080fd5b50565b600081519050620000ee81620000c3565b92915050565b6000602082840312156200010d576200010c6200008a565b5b60006200011d84828501620000dd565b91505092915050565b611bae80620001366000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80639b6b0f32116100715780639b6b0f3214610140578063ae6d907314610170578063d65ab5f2146101a0578063dfbf53ae146101aa578063e2eb41ff146101c8578063fc0c546a146101fc576100a9565b806314f12354146100ae578063387a6d6f146100cc5780634411b3eb146100d65780635c12cd4b146100f4578063767b79ed14610124575b600080fd5b6100b661021a565b6040516100c39190610f13565b60405180910390f35b6100d4610220565b005b6100de6104d9565b6040516100eb9190610f13565b60405180910390f35b61010e60048036038101906101099190610fa0565b6104de565b60405161011b9190611174565b60405180910390f35b61013e600480360381019061013991906112f0565b610633565b005b61015a6004803603810190610155919061134c565b610961565b6040516101679190611388565b60405180910390f35b61018a600480360381019061018591906113cf565b610981565b604051610197919061140b565b60405180910390f35b6101a86109c0565b005b6101b2610d48565b6040516101bf919061140b565b60405180910390f35b6101e260048036038101906101dd9190610fa0565b610d6e565b6040516101f395949392919061147f565b60405180910390f35b610204610e46565b6040516102119190611538565b60405180910390f35b60045481565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff166102a6576040517faba4733900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006102b0610e6a565b905080600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546103049190611582565b925050819055507f0f8a6121c5adbaa2f4fbab7f7bd4e2d59392eee510151f145aa0ad300c97952a3382600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154604051610380939291906115b6565b60405180910390a16064600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154106104d65733600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f51b77d00d3c0b7e376e9ee146711ceb2c08e58a5dbe38055a618e52109f720c1600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051610464919061140b565b60405180910390a1600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050501580156104d4573d6000803e3d6000fd5b505b50565b600481565b6104e6610eb7565b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820180546105409061161c565b80601f016020809104026020016040519081016040528092919081815260200182805461056c9061161c565b80156105b95780601f1061058e576101008083540402835291602001916105b9565b820191906000526020600020905b81548152906001019060200180831161059c57829003601f168201915b505050505081526020016001820160009054906101000a900460ff1660038111156105e7576105e661105d565b5b60038111156105f9576105f861105d565b5b815260200160028201548152602001600382015481526020016004820160009054906101000a900460ff1615151515815250509050919050565b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff16156106ba576040517faba4733900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260008260038111156106d1576106d061105d565b5b60038111156106e3576106e261105d565b5b815260200190815260200160002060009054906101000a900460ff1615610736576040517f4d1e809400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600460038054905010610775576040517f94d0eef900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a001604052808381526020018260038111156107995761079861105d565b5b8152602001600081526020016000815260200160011515815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082015181600001908161080791906117ef565b5060208201518160010160006101000a81548160ff021916908360038111156108335761083261105d565b5b0217905550604082015181600201556060820151816003015560808201518160040160006101000a81548160ff0219169083151502179055509050506001600260008360038111156108885761088761105d565b5b600381111561089a5761089961105d565b5b815260200190815260200160002060006101000a81548160ff0219169083151502179055506003339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa4e3e83915a129a7a35c973747aa80620677687eaf3adda20fa7e0644d01f929338383604051610955939291906118c1565b60405180910390a15050565b60026020528060005260406000206000915054906101000a900460ff1681565b6003818154811061099157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600380549050036109ff576040517fdff55bfb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600380549050811015610d19576001600060038381548110610a2757610a266118ff565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160009054906101000a900460ff161580610b29575060006001600060038481548110610abe57610abd6118ff565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154145b15610b60576040517ff1bc94d200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd60038381548110610bb057610baf6118ff565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306004546040518463ffffffff1660e01b8152600401610bfd9392919061192e565b6020604051808303816000875af1158015610c1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c409190611991565b610c7f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7690611a0a565b60405180910390fd5b6004546001600060038481548110610c9a57610c996118ff565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055508080610d1190611a2a565b915050610a02565b507f762f260439bb4be3ef6e4dc2786e2e7bd187d3d80b79057d7a424fe98563e33560405160405180910390a1565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001602052806000526040600020600091509050806000018054610d919061161c565b80601f0160208091040260200160405190810160405280929190818152602001828054610dbd9061161c565b8015610e0a5780601f10610ddf57610100808354040283529160200191610e0a565b820191906000526020600020905b815481529060010190602001808311610ded57829003601f168201915b5050505050908060010160009054906101000a900460ff16908060020154908060030154908060040160009054906101000a900460ff16905085565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060016006424433604051602001610e8593929190611adb565b6040516020818303038152906040528051906020012060001c610ea89190611b47565b610eb29190611582565b905090565b6040518060a001604052806060815260200160006003811115610edd57610edc61105d565b5b815260200160008152602001600081526020016000151581525090565b6000819050919050565b610f0d81610efa565b82525050565b6000602082019050610f286000830184610f04565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f6d82610f42565b9050919050565b610f7d81610f62565b8114610f8857600080fd5b50565b600081359050610f9a81610f74565b92915050565b600060208284031215610fb657610fb5610f38565b5b6000610fc484828501610f8b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611007578082015181840152602081019050610fec565b60008484015250505050565b6000601f19601f8301169050919050565b600061102f82610fcd565b6110398185610fd8565b9350611049818560208601610fe9565b61105281611013565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6004811061109d5761109c61105d565b5b50565b60008190506110ae8261108c565b919050565b60006110be826110a0565b9050919050565b6110ce816110b3565b82525050565b6110dd81610efa565b82525050565b60008115159050919050565b6110f8816110e3565b82525050565b600060a083016000830151848203600086015261111b8282611024565b915050602083015161113060208601826110c5565b50604083015161114360408601826110d4565b50606083015161115660608601826110d4565b50608083015161116960808601826110ef565b508091505092915050565b6000602082019050818103600083015261118e81846110fe565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6111d882611013565b810181811067ffffffffffffffff821117156111f7576111f66111a0565b5b80604052505050565b600061120a610f2e565b905061121682826111cf565b919050565b600067ffffffffffffffff821115611236576112356111a0565b5b61123f82611013565b9050602081019050919050565b82818337600083830152505050565b600061126e6112698461121b565b611200565b90508281526020810184848401111561128a5761128961119b565b5b61129584828561124c565b509392505050565b600082601f8301126112b2576112b1611196565b5b81356112c284826020860161125b565b91505092915050565b600481106112d857600080fd5b50565b6000813590506112ea816112cb565b92915050565b6000806040838503121561130757611306610f38565b5b600083013567ffffffffffffffff81111561132557611324610f3d565b5b6113318582860161129d565b9250506020611342858286016112db565b9150509250929050565b60006020828403121561136257611361610f38565b5b6000611370848285016112db565b91505092915050565b611382816110e3565b82525050565b600060208201905061139d6000830184611379565b92915050565b6113ac81610efa565b81146113b757600080fd5b50565b6000813590506113c9816113a3565b92915050565b6000602082840312156113e5576113e4610f38565b5b60006113f3848285016113ba565b91505092915050565b61140581610f62565b82525050565b600060208201905061142060008301846113fc565b92915050565b600082825260208201905092915050565b600061144282610fcd565b61144c8185611426565b935061145c818560208601610fe9565b61146581611013565b840191505092915050565b611479816110b3565b82525050565b600060a08201905081810360008301526114998188611437565b90506114a86020830187611470565b6114b56040830186610f04565b6114c26060830185610f04565b6114cf6080830184611379565b9695505050505050565b6000819050919050565b60006114fe6114f96114f484610f42565b6114d9565b610f42565b9050919050565b6000611510826114e3565b9050919050565b600061152282611505565b9050919050565b61153281611517565b82525050565b600060208201905061154d6000830184611529565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061158d82610efa565b915061159883610efa565b92508282019050808211156115b0576115af611553565b5b92915050565b60006060820190506115cb60008301866113fc565b6115d86020830185610f04565b6115e56040830184610f04565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061163457607f821691505b602082108103611647576116466115ed565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026116af7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611672565b6116b98683611672565b95508019841693508086168417925050509392505050565b60006116ec6116e76116e284610efa565b6114d9565b610efa565b9050919050565b6000819050919050565b611706836116d1565b61171a611712826116f3565b84845461167f565b825550505050565b600090565b61172f611722565b61173a8184846116fd565b505050565b5b8181101561175e57611753600082611727565b600181019050611740565b5050565b601f8211156117a3576117748161164d565b61177d84611662565b8101602085101561178c578190505b6117a061179885611662565b83018261173f565b50505b505050565b600082821c905092915050565b60006117c6600019846008026117a8565b1980831691505092915050565b60006117df83836117b5565b9150826002028217905092915050565b6117f882610fcd565b67ffffffffffffffff811115611811576118106111a0565b5b61181b825461161c565b611826828285611762565b600060209050601f8311600181146118595760008415611847578287015190505b61185185826117d3565b8655506118b9565b601f1984166118678661164d565b60005b8281101561188f5784890151825560018201915060208501945060208101905061186a565b868310156118ac57848901516118a8601f8916826117b5565b8355505b6001600288020188555050505b505050505050565b60006060820190506118d660008301866113fc565b81810360208301526118e88185611437565b90506118f76040830184611470565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060608201905061194360008301866113fc565b61195060208301856113fc565b61195d6040830184610f04565b949350505050565b61196e816110e3565b811461197957600080fd5b50565b60008151905061198b81611965565b92915050565b6000602082840312156119a7576119a6610f38565b5b60006119b58482850161197c565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b60006119f4600f83611426565b91506119ff826119be565b602082019050919050565b60006020820190508181036000830152611a23816119e7565b9050919050565b6000611a3582610efa565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611a6757611a66611553565b5b600182019050919050565b6000819050919050565b611a8d611a8882610efa565b611a72565b82525050565b60008160601b9050919050565b6000611aab82611a93565b9050919050565b6000611abd82611aa0565b9050919050565b611ad5611ad082610f62565b611ab2565b82525050565b6000611ae78286611a7c565b602082019150611af78285611a7c565b602082019150611b078284611ac4565b601482019150819050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611b5282610efa565b9150611b5d83610efa565b925082611b6d57611b6c611b18565b5b82820690509291505056fea2646970667358221220d4895b352e01c5ca0948cec7e57ea4849e665e922af3c7175c686fbd89dfadab64736f6c63430008140033";

type LudoGameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LudoGameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LudoGame__factory extends ContractFactory {
  constructor(...args: LudoGameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_token, overrides || {});
  }
  override deploy(
    _token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_token, overrides || {}) as Promise<
      LudoGame & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LudoGame__factory {
    return super.connect(runner) as LudoGame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LudoGameInterface {
    return new Interface(_abi) as LudoGameInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LudoGame {
    return new Contract(address, _abi, runner) as unknown as LudoGame;
  }
}
