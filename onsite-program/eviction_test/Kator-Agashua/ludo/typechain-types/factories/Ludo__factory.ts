/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Ludo, LudoInterface } from "../Ludo";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "gameStarted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getPlayer",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "enum Ludo.Color",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "makeMove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "playerAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "playerCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
      {
        internalType: "enum Ludo.Color",
        name: "color",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "registered",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "enum Ludo.Color",
        name: "_color",
        type: "uint8",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollDice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startGame",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052670de0b6b3a7640000600155348015601b57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506119688061006b6000396000f3fe6080604052600436106100a75760003560e01c8063837e7cc611610064578063837e7cc6146101b15780638da5cb5b146101dc578063c76b45ec14610207578063d65ab5f214610232578063dfbf53ae14610249578063e2eb41ff14610274576100a7565b806315c6aee2146100ac578063302bcc57146100e9578063387a6d6f146101145780635c12cd4b1461012b5780635e123ce41461016a578063767b79ed14610195575b600080fd5b3480156100b857600080fd5b506100d360048036038101906100ce9190610ccb565b6102b4565b6040516100e09190610d39565b60405180910390f35b3480156100f557600080fd5b506100fe6102f3565b60405161010b9190610d63565b60405180910390f35b34801561012057600080fd5b506101296102f9565b005b34801561013757600080fd5b50610152600480360381019061014d9190610daa565b61054f565b60405161016193929190610ede565b60405180910390f35b34801561017657600080fd5b5061017f6106b1565b60405161018c9190610f37565b60405180910390f35b6101af60048036038101906101aa91906110ac565b6106c4565b005b3480156101bd57600080fd5b506101c6610995565b6040516101d39190610d63565b60405180910390f35b3480156101e857600080fd5b506101f1610a6f565b6040516101fe9190610d39565b60405180910390f35b34801561021357600080fd5b5061021c610a93565b6040516102299190610d63565b60405180910390f35b34801561023e57600080fd5b50610247610a99565b005b34801561025557600080fd5b5061025e610b89565b60405161026b9190610d39565b60405180910390f35b34801561028057600080fd5b5061029b60048036038101906102969190610daa565b610baf565b6040516102ab9493929190611108565b60405180910390f35b600481815481106102c457600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff16610388576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037f906111a0565b60405180910390fd5b600560009054906101000a900460ff166103d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ce9061120c565b60405180910390fd5b60006103e1610995565b905080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000828254610435919061125b565b925050819055506064600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101541061054c5733600560016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561052f573d6000803e3d6000fd5b506000600560006101000a81548160ff0219169083151502179055505b50565b60606000806000600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060800160405290816000820180546105b0906112be565b80601f01602080910402602001604051908101604052809291908181526020018280546105dc906112be565b80156106295780601f106105fe57610100808354040283529160200191610629565b820191906000526020600020905b81548152906001019060200180831161060c57829003601f168201915b50505050508152602001600182015481526020016002820160009054906101000a900460ff16600381111561066157610660610e67565b5b600381111561067357610672610e67565b5b81526020016002820160019054906101000a900460ff1615151515815250509050806000015181602001518260400151935093509350509193909250565b600560009054906101000a900460ff1681565b600560009054906101000a900460ff1615610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b9061133b565b60405180910390fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff16156107a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079b906113a7565b60405180910390fd5b6004600254106107e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e090611413565b60405180910390fd5b600154341461082d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108249061147f565b60405180910390fd5b60405180608001604052808381526020016000815260200182600381111561085857610857610e67565b5b815260200160011515815250600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000190816108b8919061164b565b506020820151816001015560408201518160020160006101000a81548160ff021916908360038111156108ee576108ed610e67565b5b021790555060608201518160020160016101000a81548160ff0219169083151502179055509050506004339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600081548092919061098c9061171d565b91905055505050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160019054906101000a900460ff16610a26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1d906111a0565b60405180910390fd5b600160064233604051602001610a3d9291906117ce565b6040516020818303038152906040528051906020012060001c610a609190611829565b610a6a919061125b565b905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1e906118a6565b60405180910390fd5b600460025414610b6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6390611912565b60405180910390fd5b6001600560006101000a81548160ff021916908315150217905550565b600560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6003602052806000526040600020600091509050806000018054610bd2906112be565b80601f0160208091040260200160405190810160405280929190818152602001828054610bfe906112be565b8015610c4b5780601f10610c2057610100808354040283529160200191610c4b565b820191906000526020600020905b815481529060010190602001808311610c2e57829003601f168201915b5050505050908060010154908060020160009054906101000a900460ff16908060020160019054906101000a900460ff16905084565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610ca881610c95565b8114610cb357600080fd5b50565b600081359050610cc581610c9f565b92915050565b600060208284031215610ce157610ce0610c8b565b5b6000610cef84828501610cb6565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d2382610cf8565b9050919050565b610d3381610d18565b82525050565b6000602082019050610d4e6000830184610d2a565b92915050565b610d5d81610c95565b82525050565b6000602082019050610d786000830184610d54565b92915050565b610d8781610d18565b8114610d9257600080fd5b50565b600081359050610da481610d7e565b92915050565b600060208284031215610dc057610dbf610c8b565b5b6000610dce84828501610d95565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610e11578082015181840152602081019050610df6565b60008484015250505050565b6000601f19601f8301169050919050565b6000610e3982610dd7565b610e438185610de2565b9350610e53818560208601610df3565b610e5c81610e1d565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110610ea757610ea6610e67565b5b50565b6000819050610eb882610e96565b919050565b6000610ec882610eaa565b9050919050565b610ed881610ebd565b82525050565b60006060820190508181036000830152610ef88186610e2e565b9050610f076020830185610d54565b610f146040830184610ecf565b949350505050565b60008115159050919050565b610f3181610f1c565b82525050565b6000602082019050610f4c6000830184610f28565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f9482610e1d565b810181811067ffffffffffffffff82111715610fb357610fb2610f5c565b5b80604052505050565b6000610fc6610c81565b9050610fd28282610f8b565b919050565b600067ffffffffffffffff821115610ff257610ff1610f5c565b5b610ffb82610e1d565b9050602081019050919050565b82818337600083830152505050565b600061102a61102584610fd7565b610fbc565b90508281526020810184848401111561104657611045610f57565b5b611051848285611008565b509392505050565b600082601f83011261106e5761106d610f52565b5b813561107e848260208601611017565b91505092915050565b6004811061109457600080fd5b50565b6000813590506110a681611087565b92915050565b600080604083850312156110c3576110c2610c8b565b5b600083013567ffffffffffffffff8111156110e1576110e0610c90565b5b6110ed85828601611059565b92505060206110fe85828601611097565b9150509250929050565b600060808201905081810360008301526111228187610e2e565b90506111316020830186610d54565b61113e6040830185610ecf565b61114b6060830184610f28565b95945050505050565b7f506c61796572206e6f7420726567697374657265640000000000000000000000600082015250565b600061118a601583610de2565b915061119582611154565b602082019050919050565b600060208201905081810360008301526111b98161117d565b9050919050565b7f47616d65206e6f74207374617274656400000000000000000000000000000000600082015250565b60006111f6601083610de2565b9150611201826111c0565b602082019050919050565b60006020820190508181036000830152611225816111e9565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061126682610c95565b915061127183610c95565b92508282019050808211156112895761128861122c565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806112d657607f821691505b6020821081036112e9576112e861128f565b5b50919050565b7f47616d6520616c72656164792073746172746564000000000000000000000000600082015250565b6000611325601483610de2565b9150611330826112ef565b602082019050919050565b6000602082019050818103600083015261135481611318565b9050919050565b7f416c726561647920726567697374657265640000000000000000000000000000600082015250565b6000611391601283610de2565b915061139c8261135b565b602082019050919050565b600060208201905081810360008301526113c081611384565b9050919050565b7f4d617820706c6179657273207265616368656400000000000000000000000000600082015250565b60006113fd601383610de2565b9150611408826113c7565b602082019050919050565b6000602082019050818103600083015261142c816113f0565b9050919050565b7f496e636f7272656374207374616b650000000000000000000000000000000000600082015250565b6000611469600f83610de2565b915061147482611433565b602082019050919050565b600060208201905081810360008301526114988161145c565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026115017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826114c4565b61150b86836114c4565b95508019841693508086168417925050509392505050565b6000819050919050565b600061154861154361153e84610c95565b611523565b610c95565b9050919050565b6000819050919050565b6115628361152d565b61157661156e8261154f565b8484546114d1565b825550505050565b600090565b61158b61157e565b611596818484611559565b505050565b5b818110156115ba576115af600082611583565b60018101905061159c565b5050565b601f8211156115ff576115d08161149f565b6115d9846114b4565b810160208510156115e8578190505b6115fc6115f4856114b4565b83018261159b565b50505b505050565b600082821c905092915050565b600061162260001984600802611604565b1980831691505092915050565b600061163b8383611611565b9150826002028217905092915050565b61165482610dd7565b67ffffffffffffffff81111561166d5761166c610f5c565b5b61167782546112be565b6116828282856115be565b600060209050601f8311600181146116b557600084156116a3578287015190505b6116ad858261162f565b865550611715565b601f1984166116c38661149f565b60005b828110156116eb578489015182556001820191506020850194506020810190506116c6565b868310156117085784890151611704601f891682611611565b8355505b6001600288020188555050505b505050505050565b600061172882610c95565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361175a5761175961122c565b5b600182019050919050565b6000819050919050565b61178061177b82610c95565b611765565b82525050565b60008160601b9050919050565b600061179e82611786565b9050919050565b60006117b082611793565b9050919050565b6117c86117c382610d18565b6117a5565b82525050565b60006117da828561176f565b6020820191506117ea82846117b7565b6014820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061183482610c95565b915061183f83610c95565b92508261184f5761184e6117fa565b5b828206905092915050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b6000611890600e83610de2565b915061189b8261185a565b602082019050919050565b600060208201905081810360008301526118bf81611883565b9050919050565b7f4e656564203420706c6179657273000000000000000000000000000000000000600082015250565b60006118fc600e83610de2565b9150611907826118c6565b602082019050919050565b6000602082019050818103600083015261192b816118ef565b905091905056fea26469706673582212209c252e509cee1963a8279b3c3c8985b91db573bd185c50eaae7633c5c33806d264736f6c634300081c0033";

type LudoConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LudoConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ludo__factory extends ContractFactory {
  constructor(...args: LudoConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Ludo & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Ludo__factory {
    return super.connect(runner) as Ludo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LudoInterface {
    return new Interface(_abi) as LudoInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Ludo {
    return new Contract(address, _abi, runner) as unknown as Ludo;
  }
}
